{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 矩阵取数游戏 题目描述 帅帅经常跟同学玩一个矩阵取数游戏：对于一个给定的 $n \\times m$ 的矩阵，矩阵中的每个元素 $a_{i,j}$ 均为非负整数。游戏规则如下： 1. 每次取数时须从每行各取走一个元素，共 n 个。经过 m 次后取完矩阵内所有元素； 2. 每次取走的各个元素只能是该元素所在行的行首或行尾； 3. 每次取数都有一个得分值，为每行取数的得分之和，每行取数的得分 = 被取走的元素值 $\\times 2^i$，其中 i 表示第 i 次取数（从 1 开始编号）； 4. 游戏结束总得分为 m 次取数得分之和。 帅帅想请你帮忙写一个程序，对于任意矩阵，可以求出取数后的最大得分。 输入输出格式 输入格式 输入文件包括 $n+1$ 行： 第一行为两个用空格隔开的整数 n 和 m。 第 $2\\sim n+1$ 行为 $n \\times m$ 矩阵，其中每行有 m 个用单个空格隔开的非负整数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 传纸条 题目描述 小渊和小轩是好朋友也是同班同学，他们在一起总有谈不完的话题。一次素质拓展活动中，班上同学安排坐成一个 m 行 n 列的矩阵，而小渊和小轩被安排在矩阵对角线的两端，因此，他们就无法直接交谈了。幸运的是，他们可以通过传纸条来进行交流。纸条要经由许多同学传到对方手里，小渊坐在矩阵的左上角，坐标 $(1,1)$，小轩坐在矩阵的右下角，坐标 $(m,n)$。从小渊传到小轩的纸条只可以向下或者向右传递，从小轩传给小渊的纸条只可以向上或者向左传递。 在活动进行中，小渊希望给小轩传递一张纸条，同时希望小轩给他回复。班里每个同学都可以帮他们传递，但只会帮他们一次，也就是说如果此人在小渊递给小轩纸条的时候帮忙，那么在小轩递给小渊的时候就不会再帮忙。反之亦然。 还有一件事情需要注意，全班每个同学愿意帮忙的好感度有高有低（注意：小渊和小轩的好心程度没有定义，输入时用 0 表示），可以用一个 $[0,100]$ 内的自然数来表示，数越大表示越好心。小渊和小轩希望尽可能找好心程度高的同学来帮忙传纸条，即找到来回两条传递路径，使得这两条路径上同学的好心程度之和最大。现在，请你帮助小渊和小轩找到这样的两条路径。 输入输出格式 输入格式 第一行有两个用空格隔开的整数 m 和 n，表示班里有 m 行 n 列。 接下来的 m 行是一个 $m \\times n$ 的矩阵，矩阵中第 i 行 j 列的整数表示坐在第 i 行 j 列的学生的好心程度。每行的 n 个整数之间用空格隔开。 输出格式 输出文件共一行一个整数，表示来回两条路上参与传递纸条的学生的好心程度之和的最大值。 输入输出样例 输入样例 #1 3 3 0 3 9 2 8 5 5 7 0 输出样例 #1 34 说明 **【数据范围】** 对于 $30\\%$ 的数据，满足 $1 \\le m,n \\le 10$。   对于 $100\\%$ 的数据，满足 $1 \\le m,n \\le 50$。 **【题目来源】** NOIP 2008 提高组第三题。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:战争已经进入到紧要时间。你是运输小队长，正在率领运输部队向前线运送物资。运输任务像做题一样的无聊。你希望找些刺激，于是命令你的士兵们到前方的一座独木桥上欣赏风景，而你留在桥下欣赏士兵们。士兵们十分愤怒，因为这座独木桥十分狭窄，只能容纳 $1$ 个人通过。假如有 $2$ 个人相向而行在桥上相遇，那么他们 $2$ 个人将无法绕过对方，只能有 $1$ 个人回头下桥，让另一个人先通过。但是，可以有多个人同时呆在同一个位置。 题目描述 突然，你收到从指挥部发来的信息，敌军的轰炸机正朝着你所在的独木桥飞来！为了安全，你的部队必须撤下独木桥。独木桥的长度为 L，士兵们只能呆在坐标为整数的地方。所有士兵的速度都为 1，但一个士兵某一时刻来到了坐标为 0 或 $L+1$ 的位置，他就离开了独木桥。 每个士兵都有一个初始面对的方向，他们会以匀速朝着这个方向行走，中途不会自己改变方向。但是，如果两个士兵面对面相遇，他们无法彼此通过对方，于是就分别转身，继续行走。转身不需要任何的时间。 由于先前的愤怒，你已不能控制你的士兵。甚至，你连每个士兵初始面对的方向都不知道。因此，你想要知道你的部队最少需要多少时间就可能全部撤离独木桥。另外，总部也在安排阻拦敌人的进攻，因此你还需要知道你的部队最多需要多少时间才能全部撤离独木桥。 输入输出格式 输入格式 第一行共一个整数 L，表示独木桥的长度。桥上的坐标为 $1, 2, \\cdots, L$。 第二行共一个整数 N，表示初始时留在桥上的士兵数目。 第三行共有 N 个整数，分别表示每个士兵的初始坐标。 输出格式 共一行，输出 2 个整数，分别表示部队撤离独木桥的最小时间和最大时间。2 个整数由一个空格符分开。 输入输出样例 输入样例 #1 4 2 1 3 输出样例 #1 2 4 说明 对于 $100\\%$ 的数据，满足初始时，没有两个士兵同在一个坐标，$1\\le  L\\le5\\times 10^3，0\\le N\\le5\\times10^3$，且数据保证 $N\\le L$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:本题为提交答案题，您可以写程序或手算在本机上算出答案后，直接提交答案文本，也可提交答案生成程序。 题目描述 将 $1, 2, \\ldots , 9$ 共 9 个数分成 3 组，分别组成 3 个三位数，且使这 3 个三位数构成 $1 : 2 : 3$ 的比例，试求出所有满足条件的 3 个三位数。 输入输出格式 输入格式 无 输出格式 若干行，每行 3 个数字。按照每行第 1 个数字升序排列。 输入输出样例 输入样例 #1 无 输出样例 #1 192 384 576 * * * ... * * * （剩余部分不予展示）"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 阶乘之和 题目描述 用高精度计算出 $S = 1! + 2! + 3! + \\cdots + n!（n \\le 50$）。 其中 `!` 表示阶乘，定义为 $n!=n\\times (n-1)\\times (n-2)\\times \\cdots \\times 1$。例如，$5! = 5 \\times 4 \\times 3 \\times 2 \\times 1=120$。 输入输出格式 输入格式 一个正整数 n。 输出格式 一个正整数 S，表示计算结果。 输入输出样例 输入样例 #1 3 输出样例 #1 9 说明 **【数据范围】** 对于 $100 \\%$ 的数据，$1 \\le n \\le 50$。 **【其他说明】** 注，《深入浅出基础篇》中使用本题作为例题，但是其数据范围只有 $n \\le 20$，使用书中的代码无法通过本题。 如果希望通过本题，请继续学习第八章高精度的知识。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 幂次方 题目描述 任何一个正整数都可以用 2 的幂次方表示。例如 $137=2^7+2^3+2^0 $。 同时约定方次用括号来表示，即 $a^b$ 可表示为 $a(b)$。 由此可知，$137$ 可表示为 $2(7)+2(3)+2(0)$ 进一步： $7= 2^2+2+2^0$  ( $2^1$ 用 2 表示)，并且 $3=2+2^0$。 所以最后 $137$ 可表示为 $2(2(2)+2+2(0))+2(2+2(0))+2(0)$。 又如 $1315=2^{10} +2^8 +2^5 +2+1$ 所以 $1315$ 最后可表示为 $2(2(2+2(0))+2)+2(2(2+2(0)))+2(2(2)+2(0))+2+2(0)$。 输入输出格式 输入格式 一行一个正整数 n。 输出格式 符合约定的 n 的 $0, 2$ 表示（在表示中不能有空格）。 输入输出样例 输入样例 #1 1315 输出样例 #1 2(2(2+2(0))+2)+2(2(2+2(0)))+2(2(2)+2(0))+2+2(0) 说明 **【数据范围】** 对于 $100\\%$ 的数据，$1 \\le n \\le 2 \\times {10}^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 车站 题目描述 火车从始发站（称为第 1 站）开出，在始发站上车的人数为 a，然后到达第 2 站，在第 2 站有人上、下车，但上、下车的人数相同，因此在第 2 站开出时（即在到达第 3 站之前）车上的人数保持为 a 人。从第 3 站起（包括第 3 站）上、下车的人数有一定规律：上车的人数都是前两站上车人数之和，而下车人数等于上一站上车人数，一直到终点站的前一站（第 $(n-1)$ 站），都满足此规律。现给出的条件是：共有 n 个车站，始发站上车的人数为 a ，最后一站下车的人数是 m（全部下车）。试问 x 站开出时车上的人数是多少？ 输入输出格式 输入格式 输入只有一行四个整数，分别表示始发站上车人数 a，车站数 n，终点站下车人数 m 和所求的站点编号 x。 输出格式 输出一行一个整数表示答案：从 x 站开出时车上的人数。 输入输出样例 输入样例 #1 5 7 32 4 输出样例 #1 13 说明 对于全部的测试点，保证 $1 \\leq a \\leq 20，1 \\leq x \\leq n \\leq 20，1 \\leq m \\leq 2 \\times 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 拼数 题目描述 设有 n 个正整数 $a_1 \\dots a_n$，将它们联接成一排，相邻数字首尾相接，组成一个最大的整数。 输入输出格式 输入格式 第一行有一个整数，表示数字个数 n。 第二行有 n 个整数，表示给出的 n 个整数 $a_i$。 输出格式 一个正整数，表示最大的整数 输入输出样例 输入样例 #1 3 13 312 343 输出样例 #1 34331213 输入样例 #2 4 7 13 4 246 输出样例 #2 7424613 说明 对于全部的测试点，保证 $1 \\leq n \\leq 20，1 \\leq a_i \\leq 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 进制位 题目描述 著名科学家卢斯为了检查学生对进位制的理解，他给出了如下的一张加法表，表中的字母代表数字。 例如： $$ \\def\\arraystretch{2} \\begin{array}{c|c|c|c|c} \\rm +  & \\kern{.5cm} \\rm \\mathclap{L} \\kern{.5cm}  &  \\kern{.5cm} \\rm \\mathclap{K} \\kern{.5cm} &  \\kern{.5cm} \\rm \\mathclap{V} \\kern{.5cm} & \\kern{.5cm} \\rm \\mathclap{E} \\kern{.5cm} \\\\ \\hline \\rm L  &  \\rm L  &  \\rm K  &  \\rm V  & \\rm E  \\\\ \\hline \\rm K  &  \\rm K  &  \\rm V  &  \\rm E  & \\rm \\mathclap{KL} \\\\ \\hline \\rm V  &  \\rm V  &  \\rm E  &  \\rm \\mathclap{KL} & \\rm \\mathclap{KK} \\\\ \\hline \\rm E  &  \\rm E  &  \\rm \\mathclap{KL} &  \\rm \\mathclap{KK} & \\rm \\mathclap{KV} \\\\ \\end{array}$$ 其含义为： $L+L=L，L+K=K，L+V=V，L+E=E$ $K+L=K，K+K=V，K+V=E，K+E=KL$     $\\cdots$ $E+E=KV$     根据这些规则可推导出：$L=0，K=1，V=2，E=3$。 同时可以确定该表表示的是 4 进制加法。 输入输出格式 输入格式 第一行一个整数 n （$3\\le n\\le9$）表示行数。 以下 n 行，每行包括 n 个字符串，每个字符串间用空格隔开。） 若记 $s_{i,j}$ 表示第 i 行第 j 个字符串，数据保证 $s_{1,1}=\\texttt +，s_{i,1}=s_{1,i}，|s_{i,1}|=1，s_{i,1}\\ne s_{j,1}$ （$i\\ne j$）。 保证至多有一组解。 输出格式 第一行输出各个字母表示什么数，格式如：`L=0 K=1` $\\cdots$ 按给出的字母顺序排序。不同字母必须代表不同数字。 第二行输出加法运算是几进制的。 若不可能组成加法表，则应输出 `ERROR!`。 输入输出样例 输入样例 #1 5 + L K V E L L K V E K K V E KL V V E KL KK E E KL KK KV 输出样例 #1 L=0 K=1 V=2 E=3 4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 回文数 题目描述 若一个数（首位不为零）从左向右读与从右向左读都一样，我们就将其称之为回文数。 例如：给定一个十进制数 $56$，将 $56$ 加 $65$（即把 $56$ 从右向左读），得到 $121$ 是一个回文数。 又如：对于十进制数 $87$： STEP1：$87+78=165$   STEP2：$165+561=726$   STEP3：$726+627=1353$    STEP4：$1353+3531=4884$   在这里的一步是指进行了一次 N 进制的加法，上例最少用了 4 步得到回文数 $4884$。 写一个程序，给定一个 N（$2 \\le N \\le 10$ 或 $N=16$）进制数 M（$100$ 位之内），求最少经过几步可以得到回文数。如果在 $30$ 步以内（包含 $30$ 步）不可能得到回文数，则输出 `Impossible!`。 输入输出格式 输入格式 两行，分别是 N，M。 输出格式 如果能在 $30$ 步以内得到回文数，输出格式形如 `STEP=ans`，其中 $\\text{ans}$ 为最少得到回文数的步数。 否则输出 `Impossible!`。 输入输出样例 输入样例 #1 10 87 输出样例 #1 STEP=4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 旅行家的预算 题目描述 一个旅行家想驾驶汽车以最少的费用从一个城市到另一个城市（假设出发时油箱是空的）。给定两个城市之间的距离 $D_1$、汽车油箱的容量 C（以升为单位）、每升汽油能行驶的距离 $D_2$、出发点每升汽油价格P和沿途油站数 N（N 可以为零），油站 i 离出发点的距离 $D_i$、每升汽油价格 $P_i（i=1,2,…,N$）。计算结果四舍五入至小数点后两位。如果无法到达目的地，则输出 `No Solution`。 输入输出格式 输入格式 第一行，$D_1，C，D_2，P，N$。 接下来有 N 行。 第 $i+1$ 行，两个数字，油站 i 离出发点的距离 $D_i$ 和每升汽油价格 $P_i$。 输出格式 所需最小费用，计算结果四舍五入至小数点后两位。如果无法到达目的地，则输出 `No Solution`。 输入输出样例 输入样例 #1 275.6 11.9 27.4 2.8 2 102.0 2.9 220.0 2.2 输出样例 #1 26.95 说明 $N \\le 6$，其余数字$ \\le 500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 进制转换 题目描述 我们可以用这样的方式来表示一个十进制数: 将每个阿拉伯数字乘以一个以该数字所处位置为指数,以 $10$ 为底数的幂之和的形式。例如 $123$ 可表示为 $1 \\times 10^2+2\\times 10^1+3\\times 10^0$ 这样的形式。 与之相似的，对二进制数来说，也可表示成每个二进制数码乘以一个以该数字所处位置为指数,以 2 为底数的幂之和的形式。   一般说来，任何一个正整数 R 或一个负整数 $-R$ 都可以被选来作为一个数制系统的基数。如果是以 R 或 $-R$ 为基数,则需要用到的数码为 $0,1,....R-1$。   例如当 $R=7$ 时,所需用到的数码是 $0,1,2,3,4,5,6$，这与其是 R 或 $-R$ 无关。如果作为基数的数绝对值超过 $10$,则为了表示这些数码，通常使用英文字母来表示那些大于 9 的数码。例如对 $16$ 进制数来说,用 A 表示 $10$,用 B 表示 $11$，用 C 表示 $12$，以此类推。 在负进制数中是用 $-R $ 作为基数，例如 $-15$（十进制）相当于 $(110001)_{-2}$ （$-2$进制），并且它可以被表示为 2 的幂级数的和数： $$(110001)_{-2}=1\\times (-2)^5+1\\times (-2)^4+0\\times (-2)^3+0\\times (-2)^2+0\\times (-2)^1 +1\\times (-2)^0$$ 设计一个程序,读入一个十进制数和一个负进制数的基数, 并将此十进制数转换为此负进制下的数。 输入输出格式 输入格式 输入的每行有两个输入数据。 第一个是十进制数 n。 第二个是负进制数的基数 $-R$。 输出格式 输出此负进制数及其基数，若此基数超过 $10$，则参照 $16$ 进制的方式处理。 输入输出样例 输入样例 #1 30000 -2 输出样例 #1 30000=11011010101110000(base-2) 输入样例 #2 -20000 -2 输出样例 #2 -20000=1111011000100000(base-2) 输入样例 #3 28800 -16 输出样例 #3 28800=19180(base-16) 输入样例 #4 -25000 -16 输出样例 #4 -25000=7FB8(base-16) 说明 【数据范围】   对于 $100\\%$ 的数据，$-20 \\le R \\le -2，|n| \\le 37336$。 NOIp2000提高组第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 乘积最大 题目描述 今年是国际数学联盟确定的“ 2000 ――世界数学年”，又恰逢我国著名数学家华罗庚先生诞辰 90 周年。在华罗庚先生的家乡江苏金坛，组织了一场别开生面的数学智力竞赛的活动，你的一个好朋友 XZ 也有幸得以参加。活动中，主持人给所有参加活动的选手出了这样一道题目："}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:注意：本题为上古 NOIP 原题，不保证存在靠谱的做法能通过该数据范围下的所有数据。 题目描述 单词接龙是一个与我们经常玩的成语接龙相类似的游戏，现在我们已知一组单词，且给定一个开头的字母，要求出以这个字母开头的最长的“龙”（每个单词都最多在“龙”中出现两次），在两个单词相连时，其重合部分合为一部分，例如 `beast` 和 `astonish`，如果接成一条龙则变为 `beastonish`，另外相邻的两部分不能存在包含关系，例如 `at` 和 `atide` 间不能相连。 输入输出格式 输入格式 输入的第一行为一个单独的整数 n 表示单词数，以下 n 行每行有一个单词，输入的最后一行为一个单个字符，表示“龙”开头的字母。你可以假定以此字母开头的“龙”一定存在。 输出格式 只需输出以此字母开头的最长的“龙”的长度。 输入输出样例 输入样例 #1 5 at touch cheat choose tact a 输出样例 #1 23 说明 样例解释：连成的“龙”为 `atoucheatactactouchoose`。 $n \\le 20$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 导弹拦截 题目描述 某国为了防御敌国的导弹袭击，发展出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发炮弹能够到达任意的高度，但是以后每一发炮弹都不能高于前一发的高度。某天，雷达捕捉到敌国的导弹来袭。由于该系统还在试用阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。     输入导弹依次飞来的高度，计算这套系统最多能拦截多少导弹，如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。 输入输出格式 输入格式 一行，若干个整数，中间由空格隔开。 输出格式 两行，每行一个整数，第一个数字表示这套系统最多能拦截多少导弹，第二个数字表示如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。 输入输出样例 输入样例 #1 389 207 155 300 299 170 158 65 输出样例 #1 6 2 说明 对于前 $50\\%$ 数据（NOIP 原题数据），满足导弹的个数不超过 $10^4$ 个。该部分数据总分共 $100$ 分。可使用$\\mathcal O(n^2)$ 做法通过。   对于后 $50\\%$ 的数据，满足导弹的个数不超过 $10^5$ 个。该部分数据总分也为 $100$ 分。请使用 $\\mathcal O(n\\log n)$ 做法通过。 对于全部数据，满足导弹的高度为正整数，且不超过 $5\\times 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 邮票面值设计 题目描述 给定一个信封，最多只允许粘贴 N 张邮票，计算在给定 K（$N+K \\le 15$）种邮票的情况下（假定所有的邮票数量都足够），如何设计邮票的面值，能得到最大值 $MAX$，使在 1 至 $MAX$ 之间的每一个邮资值都能得到。 例如，$N=3，K=2$，如果面值分别为 1 分、4 分，则在 $1\\sim 6$ 分之间的每一个邮资值都能得到（当然还有 8 分、9 分和 $12$ 分）；如果面值分别为 1 分、3 分，则在 $1\\sim 7$ 分之间的每一个邮资值都能得到。可以验证当 $N=3，K=2$ 时，7 分就是可以得到的连续的邮资最大值，所以 $MAX=7$，面值分别为 1 分、3 分。 输入输出格式 输入格式 2 个整数，代表 N，K。 输出格式 输出共 2 行。 第一行输出若干个数字，表示选择的面值，从小到大排序。 第二行，输出 `MAX=S`，S 表示最大的面值。 输入输出样例 输入样例 #1 3 2 输出样例 #1 1 3 MAX=7"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 为了很好的完成这个任务，ZL 先生首先研究了一些一元一次方程的实例： - $4+3x=8$。 - $6a-5+1=2-2a$。 - $-5+12y=0$。 ZL 先生被主管告之，在计算器上键入的一个一元一次方程中，只包含整数、小写字母及 `+`、`-`、`=` 这三个数学符号（当然，符号“`-`”既可作减号，也可作负号）。方程中并没有括号，也没有除号，方程中的字母表示未知数。 你可假设对键入的方程的正确性的判断是由另一个程序员在做，或者说可认为键入的一元一次方程均为合法的，且有唯一实数解。 输入输出格式 输入格式 一个一元一次方程。 输出格式 解方程的结果（精确至小数点后三位）。 输入输出样例 输入样例 #1 6a-5+1=2-2a 输出样例 #1 a=0.750"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 一元三次方程求解 题目描述 有形如：$a x^3 + b x^2 + c x + d = 0$  这样的一个一元三次方程。给出该方程中各项的系数（$a,b,c,d$ 均为实数），并约定该方程存在三个不同实根（根的范围在 $-100$ 至 $100$ 之间），且根与根之差的绝对值 $\\ge 1$。要求由小到大依次在同一行输出这三个实根(根与根之间留有空格)，并精确到小数点后 2 位。 提示：记方程 $f(x) = 0$，若存在 2 个数 $x_1$ 和 $x_2$，且 $x_1 < x_2，f(x_1) \\times f(x_2) < 0$，则在 $(x_1, x_2)$ 之间一定有一个根。 输入输出格式 输入格式 一行，4 个实数 $a, b, c, d$。 输出格式 一行，3 个实根，从小到大输出，并精确到小数点后 2 位。 输入输出样例 输入样例 #1 1 -5 -4 20 输出样例 #1 -2.00 2.00 5.00 说明 **【题目来源】** NOIP 2001 提高组第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 数的划分 题目描述 将整数 n 分成 k 份，且每份不能为空，任意两个方案不相同（不考虑顺序）。 例如：$n=7，k=3$，下面三种分法被认为是相同的。 $1,1,5$;    $1,5,1$;    $5,1,1$. 问有多少种不同的分法。 输入输出格式 输入格式 $n,k$ （$6<n \\le 200，2  \\le k  \\le  6$） 输出格式 1 个整数，即不同的分法。 输入输出样例 输入样例 #1 7 3 输出样例 #1 4 说明 四种分法为：   $1,1,5$;   $1,2,4$;   $1,3,3$;   $2,2,3$. **【题目来源】** NOIP 2001 提高组第二题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 统计单词个数 题目描述 给出一个长度不超过 $200$ 的由小写英文字母组成的字母串（该字串以每行 $20$ 个字母的方式输入，且保证每行一定为 $20$ 个）。要求将此字母串分成  k 份，且每份中包含的单词个数加起来总数最大。   每份中包含的单词可以部分重叠。当选用一个单词之后，其第一个字母不能再用。例如字符串 `this` 中可包含 `this` 和 `is`，选用 `this` 之后就不能包含  `th`。 单词在给出的一个不超过 6 个单词的字典中。 要求输出最大的个数。 输入输出格式 输入格式 每组的第一行有两个正整数 $p,k$。 p 表示字串的行数，k 表示分为 k 个部分。 接下来的 p 行，每行均有 $20$ 个字符。 再接下来有一个正整数 s，表示字典中单词个数。 接下来的 s 行，每行均有一个单词。 输出格式 1个整数，分别对应每组测试数据的相应结果。 输入输出样例 输入样例 #1 1 3 thisisabookyouareaoh 4 is a ok sab 输出样例 #1 7 说明 【数据范围】   对于 $100\\%$ 的数据，$2 \\le k \\le 40，1 \\le s \\le 6$。 【样例解释】 划分方案为 this / isabookyoua / reaoh **【题目来源】** NOIP 2001 提高组第三题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: Car 的旅行路线 题目描述 又到暑假了，住在城市 A 的 Car 想和朋友一起去城市旅游。   她知道每个城市都有 4 个飞机场，分别位于一个矩形的 4 个顶点上，同一个城市中两个机场之间有一条笔直的高速铁路，第 i 个城市中高速铁路了的单位里程价格为 $T_i$，任意两个不同城市的机场之间均有航线，所有航线单位里程的价格均为 t。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 最大公约数和最小公倍数问题 题目描述 输入两个正整数 $x_0, y_0$，求出满足下列条件的 $P, Q$ 的个数： 1. $P,Q$ 是正整数。 2. 要求 $P, Q$ 以 $x_0$ 为最大公约数，以 $y_0$ 为最小公倍数。 试求：满足条件的所有可能的 $P, Q$ 的个数。 输入输出格式 输入格式 一行两个正整数 $x_0, y_0$。 输出格式 一行一个数，表示求出满足条件的 $P, Q$ 的个数。 输入输出样例 输入样例 #1 3 60 输出样例 #1 4 说明 $P,Q$ 有 4 种： 1. $3, 60$。 2. $15, 12$。 3. $12, 15$。 4. $60, 3$。 对于 $100\\%$ 的数据，$2 \\le x_0, y_0 \\le {10}^5$。 **【题目来源】** NOIP 2001 普及组第二题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 求先序排列 题目描述 给出一棵二叉树的中序与后序排列。求出它的先序排列。（约定树结点用不同的大写字母表示，且二叉树的节点个数 $ \\le 8$）。 输入输出格式 输入格式 共两行，均为大写字母组成的字符串，表示一棵二叉树的中序与后序排列。 输出格式 共一行一个字符串，表示一棵二叉树的先序。 输入输出样例 输入样例 #1 BADC BDCA 输出样例 #1 ABCD 说明 **【题目来源】** NOIP 2001 普及组第三题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 均分纸牌 题目描述 有 N 堆纸牌，编号分别为 $1,2,\\ldots,N$。每堆上有若干张，但纸牌总数必为 N 的倍数。可以在任一堆上取若干张纸牌，然后移动。 移牌规则为：在编号为 1 堆上取的纸牌，只能移到编号为 2 的堆上；在编号为 N 的堆上取的纸牌，只能移到编号为 $N-1$ 的堆上；其他堆上取的纸牌，可以移到相邻左边或右边的堆上。 现在要求找出一种移动方法，用最少的移动次数使每堆上纸牌数都一样多。 例如 $N=4$ 时，4 堆纸牌数分别为 $9,8,17,6$。 移动 3 次可达到目的： - 从第三堆取 4 张牌放到第四堆，此时每堆纸牌数分别为 $9,8,13,10$。 - 从第三堆取 3 张牌放到第二堆，此时每堆纸牌数分别为 $9,11,10,10$。 - 从第二堆取 1 张牌放到第一堆，此时每堆纸牌数分别为  $10,10,10,10$。 输入输出格式 输入格式 第一行共一个整数 N，表示纸牌堆数。   第二行共 N 个整数 $A_1,A_2,\\ldots,A_N$，表示每堆纸牌初始时的纸牌数。 输出格式 共一行，即所有堆均达到相等时的最少移动次数。 输入输出样例 输入样例 #1 4 9 8 17 6 输出样例 #1 3 说明 对于 $100\\%$ 的数据，$1  \\le  N  \\le  100，1 \\le  A_i  \\le 10000$。 **【题目来源】** NOIP 2002 提高组第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:本题疑似错题，不保证存在靠谱的多项式复杂度的做法。测试数据非常的水，各种做法都可以通过，不代表算法正确。因此本题题目和数据仅供参考。 题目描述 已知有两个字串 $A,B$ 及一组字串变换的规则（至多 6 个规则），形如： - $A_1\\to B_1$。 - $A_2\\to B_2$。 规则的含义为：在 A 中的子串 $A_1$ 可以变换为 $ B_1，A_2$ 可以变换为 $B_2\\cdots$。 例如：$A=\\texttt{abcd}，B＝\\texttt{xyz}$， 变换规则为： - $\\texttt{abc}\\rightarrow\\texttt{xu}，\\texttt{ud}\\rightarrow\\texttt{y}，\\texttt{y}\\rightarrow\\texttt{yz}$。 则此时，A 可以经过一系列的变换变为 B，其变换的过程为： - $\\texttt{abcd}\\rightarrow\\texttt{xud}\\rightarrow\\texttt{xy}\\rightarrow\\texttt{xyz}$。 共进行了 3 次变换，使得 A 变换为 B。 输入输出格式 输入格式 第一行有两个字符串 $A,B$。 接下来若干行，每行有两个字符串 $A_i,B_i$，表示一条变换规则。 输出格式 若在 $10$ 步（包含 $10$ 步）以内能将 A 变换为 B，则输出最少的变换步数；否则输出 `NO ANSWER!`。 输入输出样例 输入样例 #1 abcd xyz abc xu ud y y yz 输出样例 #1 3 说明 对于 $100\\%$ 数据，保证所有字符串长度的上限为 $20$。 **【题目来源】** NOIP 2002 提高组第二题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 级数求和 题目描述 已知：$S_n= 1+\\dfrac{1}{2}+\\dfrac{1}{3}+…+\\dfrac{1}{n}$。显然对于任意一个整数 k，当 n 足够大的时候，$S_n>k$。 现给出一个整数 k，要求计算出一个最小的 n，使得 $S_n>k$。 输入输出格式 输入格式 一个正整数 k。 输出格式 一个正整数 n。 输入输出样例 输入样例 #1 1 输出样例 #1 2 说明 **【数据范围】** 对于 $100\\%$ 的数据，$1\\le k \\le 15$。 **【题目来源】** NOIP 2002 普及组第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 选数 题目描述 已知 n 个整数 $x_1,x_2,\\cdots,x_n$，以及 1 个整数 k（$k<n$）。从 n 个整数中任选 k 个整数相加，可分别得到一系列的和。例如当 $n=4，k=3，4$ 个整数分别为 $3,7,12,19$ 时，可得全部的组合与它们的和为： $3+7+12=22$ $3+7+19=29$ $7+12+19=38$ $3+12+19=34$ 现在，要求你计算出和为素数共有多少种。 例如上例，只有一种的和为素数：$3+7+19=29$。 输入输出格式 输入格式 第一行两个空格隔开的整数 $n,k（1 \\le n \\le 20，k<n$）。 第二行 n 个整数，分别为 $x_1,x_2,\\cdots,x_n（1 \\le x_i \\le 5\\times 10^6$）。 输出格式 输出一个整数，表示种类数。 输入输出样例 输入样例 #1 4 3 3 7 12 19 输出样例 #1 1 说明 **【题目来源】** NOIP 2002 普及组第二题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 产生数 题目描述 给出一个整数 n 和 k 个变换规则。 规则： - 一位数可变换成另一个一位数。 - 规则的右部不能为零。 例如：$n=234,k=2$。有以下两个规则： - $2\\longrightarrow 5$。   - $3\\longrightarrow 6$。  上面的整数 $234$ 经过变换后可能产生出的整数为（包括原数）: - $234$。 - $534$。 - $264$。 - $564$。 共 4 种不同的产生数。 现在给出一个整数 n 和 k 个规则。求出经过任意次的变换（0 次或多次），能产生出多少个不同整数。 仅要求输出个数。 输入输出格式 输入格式 第一行两个整数 $n,k$，含义如题面所示。 接下来 k 行，每行两个整数 $x_i,y_i$，表示每条规则。 输出格式 共一行，输出能生成的数字个数。 输入输出样例 输入样例 #1 234 2 2 5 3 6 输出样例 #1 4 说明 对于 $100\\%$ 数据，满足 $n \\lt 10^{30}，k \\le 15$。 **【题目来源】** NOIP 2002 普及组第三题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 侦探推理 题目描述 明明同学最近迷上了侦探漫画《柯南》并沉醉于推理游戏之中，于是他召集了一群同学玩推理游戏。游戏的内容是这样的，明明的同学们先商量好由其中的一个人充当罪犯（在明明不知情的情况下），明明的任务就是找出这个罪犯。接着，明明逐个询问每一个同学，被询问者可能会说： $$ \\def\\arraystretch{1.5} \\begin{array}{|l|l|}\\hline \\textbf{\\textsf{证词内容}} & \\textbf{\\textsf{证词含义}}\\\\\\hline \\text{I am guilty.} & \\text{我是罪犯。} \\\\\\hline \\text{I am not guilty.} & \\text{我不是罪犯。} \\\\\\hline \\text{{\\tt XXX} is guilty.} & \\text{{\\tt XXX} 是罪犯。其中 {\\tt XXX} 表示某个同学的名字。} \\\\\\hline \\text{{\\tt XXX} is not guilty.} & \\text{{\\tt XXX} 不是罪犯。} \\\\\\hline \\text{Today is {\\tt XXX}.} & \\begin{aligned} &\\text{今天是 {\\tt XXX}。其中 {\\tt XXX} 表示某个星期的单词。}\\\\ &\\text{星期只有可能是以下之一：}\\\\ &\\texttt{Monday}, \\texttt{Tuesday}, \\texttt{Wednesday}, \\texttt{Thursday}, \\\\ &\\texttt{Friday}, \\texttt{Saturday}, \\texttt{Sunday}。 \\end{aligned} \\\\\\hline \\end{array}$$ 证词中出现的其他话，都不列入逻辑推理的内容。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 加分二叉树 题目描述 设一个 n 个节点的二叉树 $\\text{tree}$ 的中序遍历为$(1,2,3,\\ldots,n)$，其中数字 $1,2,3,\\ldots,n$ 为节点编号。每个节点都有一个分数（均为正整数），记第 i 个节点的分数为 $d_i，\\text{tree}$ 及它的每个子树都有一个加分，任一棵子树 $\\text{subtree}$（也包含 $\\text{tree}$ 本身）的加分计算方法如下："}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:国际乒联现在主席沙拉拉自从上任以来就立志于推行一系列改革，以推动乒乓球运动在全球的普及。其中 $11$ 分制改革引起了很大的争议，有一部分球员因为无法适应新规则只能选择退役。华华就是其中一位，他退役之后走上了乒乓球研究工作，意图弄明白 $11$ 分制和 $21$ 分制对选手的不同影响。在开展他的研究之前，他首先需要对他多年比赛的统计数据进行一些分析，所以需要你的帮忙。 题目描述 华华通过以下方式进行分析，首先将比赛每个球的胜负列成一张表，然后分别计算在 $11$ 分制和 $21$ 分制下，双方的比赛结果（截至记录末尾）。 比如现在有这么一份记录，（其中 $\\texttt W$ 表示华华获得一分，$\\texttt L$ 表示华华对手获得一分）： $\\texttt{WWWWWWWWWWWWWWWWWWWWWWLW}$ 在 $11$ 分制下，此时比赛的结果是华华第一局 $11$ 比 0 获胜，第二局 $11$ 比 0 获胜，正在进行第三局，当前比分 1 比 1。而在 $21$ 分制下，此时比赛结果是华华第一局 $21$ 比 0 获胜，正在进行第二局，比分 2 比 1。如果一局比赛刚开始，则此时比分为 0 比 0。直到分差大于或者等于 2，才一局结束。 你的程序就是要对于一系列比赛信息的输入（$\\texttt{WL}$ 形式），输出正确的结果。 输入输出格式 输入格式 每个输入文件包含若干行字符串，字符串有大写的 $\\texttt W$ 、 $\\texttt L$ 和 $\\texttt E$ 组成。其中 $\\texttt E$ 表示比赛信息结束，程序应该忽略 $\\texttt E$ 之后的所有内容。 输出格式 输出由两部分组成，每部分有若干行，每一行对应一局比赛的比分（按比赛信息输入顺序）。其中第一部分是 $11$ 分制下的结果，第二部分是 $21$ 分制下的结果，两部分之间由一个空行分隔。 输入输出样例 输入样例 #1 WWWWWWWWWWWWWWWWWWWW WWLWE 输出样例 #1 11:0 11:0 1:1 21:0 2:1 说明 每行至多 $25$ 个字母，最多有 $2500$ 行。 （注：事实上有一个测试点有 $2501$ 行数据。） **【题目来源】** NOIP 2003 普及组第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 数字游戏 题目描述 丁丁最近沉迷于一个数字游戏之中。这个游戏看似简单，但丁丁在研究了许多天之后却发觉原来在简单的规则下想要赢得这个游戏并不那么容易。游戏是这样的，在你面前有一圈整数（一共 n 个），你要按顺序将其分为 m 个部分，各部分内的数字相加，相加所得的 m 个结果对 $10$ 取模后再相乘，最终得到一个数 k。游戏的要求是使你所得的 k 最大或者最小。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 麦森数 题目描述 形如 $2^{P}-1$ 的素数称为麦森数，这时 P 一定也是个素数。但反过来不一定，即如果 P 是个素数，$2^{P}-1$ 不一定也是素数。到 1998 年底，人们已找到了 37 个麦森数。最大的一个是 $P=3021377$，它有 909526 位。麦森数有许多重要应用，它与完全数密切相关。 任务：输入 $P(1000<P<3100000)$，计算 $2^{P}-1$ 的位数和最后 $500$ 位数字（用十进制高精度数表示） 输入输出格式 输入格式 文件中只包含一个整数 $P(1000<P<3100000)$ 输出格式 第一行：十进制高精度数 $2^{P}-1$ 的位数。 第 $2\\sim 11$ 行：十进制高精度数 $2^{P}-1$ 的最后 $500$ 位数字。（每行输出 $50$ 位，共输出 $10$ 行，不足 $500$ 位时高位补 0） 不必验证 $2^{P}-1$ 与 P 是否为素数。 输入输出样例 输入样例 #1 1279 输出样例 #1 386 00000000000000000000000000000000000000000000000000 00000000000000000000000000000000000000000000000000 00000000000000104079321946643990819252403273640855 38615262247266704805319112350403608059673360298012 23944173232418484242161395428100779138356624832346 49081399066056773207629241295093892203457731833496 61583550472959420547689811211693677147548478866962 50138443826029173234888531116082853841658502825560 46662248318909188018470682222031405210266984354887 32958028878050869736186900714720710555703168729087 说明 **【题目来源】** NOIP 2003 普及组第四题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 校门外的树 题目描述 某校大门外长度为 l 的马路上有一排树，每两棵相邻的树之间的间隔都是 1 米。我们可以把马路看成一个数轴，马路的一端在数轴 0 的位置，另一端在 l 的位置；数轴上的每个整数点，即 $0,1,2,\\dots,l$，都种有一棵树。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 采药 题目描述 辰辰是个天资聪颖的孩子，他的梦想是成为世界上最伟大的医师。为此，他想拜附近最有威望的医师为师。医师为了判断他的资质，给他出了一个难题。医师把他带到一个到处都是草药的山洞里对他说：“孩子，这个山洞里有一些不同的草药，采每一株都需要一些时间，每一株也有它自身的价值。我会给你一段时间，在这段时间里，你可以采到一些草药。如果你是一个聪明的孩子，你应该可以让采到的草药的总价值最大。”"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 谁拿了最多奖学金 题目描述 某校的惯例是在每学期的期末考试之后发放奖学金。发放的奖学金共有五种，获取的条件各自不同： 1. 院士奖学金，每人 $8000$ 元，期末平均成绩高于 $80$ 分（$>80$），并且在本学期内发表1篇或1篇以上论文的学生均可获得； 2. 五四奖学金，每人 $4000$ 元，期末平均成绩高于 $85$ 分（$>85$），并且班级评议成绩高于 $80$ 分（$>80$）的学生均可获得； 3. 成绩优秀奖，每人 $2000$ 元，期末平均成绩高于 $90$ 分（$>90$）的学生均可获得； 4. 西部奖学金，每人 $1000$ 元，期末平均成绩高于 $85$ 分（$>85$）的西部省份学生均可获得； 5. 班级贡献奖，每人 $850$ 元，班级评议成绩高于 $80$ 分（$>80$）的学生干部均可获得； 只要符合条件就可以得奖，每项奖学金的获奖人数没有限制，每名学生也可以同时获得多项奖学金。例如姚林的期末平均成绩是 $87$ 分，班级评议成绩 $82$ 分，同时他还是一位学生干部，那么他可以同时获得五四奖学金和班级贡献奖，奖金总数是 $4850$ 元。 现在给出若干学生的相关数据，请计算哪些同学获得的奖金总数最高（假设总有同学能满足获得奖学金的条件）。 输入输出格式 输入格式 第一行是1个整数 N，表示学生的总数。 接下来的 N 行每行是一位学生的数据，从左向右依次是姓名，期末平均成绩，班级评议成绩，是否是学生干部，是否是西部省份学生，以及发表的论文数。姓名是由大小写英文字母组成的长度不超过 $20$ 的字符串（不含空格）；期末平均成绩和班级评议成绩都是 0 到 $100$ 之间的整数（包括 0 和 $100$）；是否是学生干部和是否是西部省份学生分别用 1 个字符表示，$\\tt Y$ 表示是，$\\tt N$ 表示不是；发表的论文数是 0 到 $10$ 的整数（包括 0 和 $10$）。每两个相邻数据项之间用一个空格分隔。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 过河 题目描述 在河上有一座独木桥，一只青蛙想沿着独木桥从河的一侧跳到另一侧。在桥上有一些石子，青蛙很讨厌踩在这些石子上。由于桥的长度和青蛙一次跳过的距离都是正整数，我们可以把独木桥上青蛙可能到达的点看成数轴上的一串整点：$0,1,\\cdots,L$（其中 L 是桥的长度）。坐标为 0 的点表示桥的起点，坐标为 L 的点表示桥的终点。青蛙从桥的起点开始，不停的向终点方向跳跃。一次跳跃的距离是 S 到 T 之间的任意正整数（包括 $S,T$）。当青蛙跳到或跳过坐标为 L 的点时，就算青蛙已经跳出了独木桥。 题目给出独木桥的长度 L，青蛙跳跃的距离范围 $S,T$，桥上石子的位置。你的任务是确定青蛙要想过河，最少需要踩到的石子数。 输入输出格式 输入格式 输入共三行， - 第一行有 1 个正整数 L，表示独木桥的长度。 - 第二行有 3 个正整数 $S,T,M$，分别表示青蛙一次跳跃的最小距离，最大距离及桥上石子的个数。 - 第三行有 M 个不同的正整数分别表示这 M 个石子在数轴上的位置（数据保证桥的起点和终点处没有石子）。所有相邻的整数之间用一个空格隔开。 输出格式 一个整数，表示青蛙过河最少需要踩到的石子数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 篝火晚会 题目描述 佳佳刚进高中，在军训的时候，由于佳佳吃苦耐劳，很快得到了教官的赏识，成为了“小教官”。在军训结束的那天晚上，佳佳被命令组织同学们进行篝火晚会。一共有 n 个同学，编号从 1 到 n。一开始，同学们按照 $1,2,\\cdots ,n$ 的顺序坐成一圈，而实际上每个人都有两个最希望相邻的同学。如何下命令调整同学的次序，形成新的一个圈，使之符合同学们的意愿，成为摆在佳佳面前的一大难题。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 等价表达式 题目描述 明明进了中学之后，学到了代数表达式。有一天，他碰到一个很麻烦的选择题。这个题目的题干中首先给出了一个代数表达式，然后列出了若干选项，每个选项也是一个代数表达式，题目的要求是判断选项中哪些代数表达式是和题干中的表达式等价的。 这个题目手算很麻烦，因为明明对计算机编程很感兴趣，所以他想是不是可以用计算机来解决这个问题。假设你是明明，能完成这个任务吗？ 这个选择题中的每个表达式都满足下面的性质： 1. 表达式只可能包含一个变量 $\\tt a$。 2. 表达式中出现的数都是正整数，而且都小于 $10000$。 3. 表达式中可以包括四种运算 $\\verb!+!$（加），$\\verb!-!$（减），$\\verb!*!$（乘），$\\verb!^!$（乘幂），以及小括号 $\\verb!(!，\\verb!)!$。小括号的优先级最高，其次是 $\\verb!^!$，然后是 $\\verb!*!$，最后是 $\\verb!+!$ 和 $\\verb!-!。\\verb!+!$ 和 $\\verb!-!$ 的优先级是相同的。相同优先级的运算从左到右进行。（注意：运算符 $\\verb!+!，\\verb!-!，\\verb!*!，\\verb!^!$ 以及小括号$\\verb!(!，\\verb!)!$ 都是英文字符）   4. 幂指数只可能是 1 到 $10$ 之间的正整数（包括 1 和 $10$）。 5. 表达式内部，头部或者尾部都可能有一些多余的空格。 下面是一些合理的表达式的例子： `((a^1) ^ 2)^3`，`a*a+a-a`，`((a+a))`，`9999+(a-a)*a`，`1 + (a -1)^3`，`1^10^9`……… 输入输出格式 输入格式 第一行给出的是题干中的表达式。 第二行是一个整数 n，表示选项的个数。后面n行，每行包括一个选项中的表达式。这 n 个选项的标号分别是 $A,B,C,D\\cdots $"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: ISBN 号码 题目描述 每一本正式出版的图书都有一个 ISBN 号码与之对应，ISBN 码包括 9 位数字、1 位识别码和 3 位分隔符，其规定格式如 `x-xxx-xxxxx-x`，其中符号 `-` 就是分隔符（键盘上的减号），最后一位是识别码，例如 `0-670-82162-4`就是一个标准的 ISBN 码。ISBN 码的首位数字表示书籍的出版语言，例如 0 代表英语；第一个分隔符 `-` 之后的三位数字代表出版社，例如 $670$ 代表维京出版社；第二个分隔符后的五位数字代表该书在该出版社的编号；最后一位为识别码。 识别码的计算方法如下： 首位数字乘以 1 加上次位数字乘以 2 ……以此类推，用所得的结果 $ \\bmod 11$，所得的余数即为识别码，如果余数为 $10$，则识别码为大写字母 X。例如 ISBN 号码 `0-670-82162-4` 中的识别码 4 是这样得到的：对 `067082162` 这 9 个数字，从左至右，分别乘以 $1,2,\\dots,9$ 再求和，即 $0\\times 1+6\\times 2+……+2\\times 9=158$，然后取 $158 \\bmod 11$ 的结果 4 作为识别码。 你的任务是编写程序判断输入的 ISBN 号码中识别码是否正确，如果正确，则仅输出 `Right`；如果错误，则输出你认为是正确的 ISBN 号码。 输入输出格式 输入格式 一个字符序列，表示一本书的 ISBN 号码（保证输入符合 ISBN 号码的格式要求）。 输出格式 一行，假如输入的 ISBN 号码的识别码正确，那么输出 `Right`，否则，按照规定的格式，输出正确的 ISBN 号码（包括分隔符 `-`）。 输入输出样例 输入样例 #1 0-670-82162-4 输出样例 #1 Right 输入样例 #2 0-670-82162-0 输出样例 #2 0-670-82162-4 说明 2008 普及组第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 传球游戏 题目描述 上体育课的时候，小蛮的老师经常带着同学们一起做游戏。这次，老师带着同学们一起做传球游戏。 游戏规则是这样的：n 个同学站成一个圆圈，其中的一个同学手里拿着一个球，当老师吹哨子时开始传球，每个同学可以把球传给自己左右的两个同学中的一个（左右任意），当老师再次吹哨子时，传球停止，此时，拿着球没有传出去的那个同学就是败者，要给大家表演一个节目。 聪明的小蛮提出一个有趣的问题：有多少种不同的传球方法可以使得从小蛮手里开始传的球，传了 m 次以后，又回到小蛮手里。两种传球方法被视作不同的方法，当且仅当这两种方法中，接到球的同学按接球顺序组成的序列是不同的。比如有三个同学 1 号、2 号、3 号，并假设小蛮为 1 号，球传了 3 次回到小蛮手里的方式有 $1 \\rightarrow 2 \\rightarrow 3 \\rightarrow 1$ 和 $1 \\rightarrow 3 \\rightarrow 2 \\rightarrow 1$，共 2 种。 输入输出格式 输入格式 一行，有两个用空格隔开的整数 $n,m(3 \\le n \\le 30,1 \\le m \\le 30)$。 输出格式 1 个整数，表示符合题意的方法数。 输入输出样例 输入样例 #1 3 3 输出样例 #1 2 说明 ### 数据范围及约定 - 对于 $40\\%$ 的数据，满足：$3 \\le n \\le 30,1 \\le m \\le 20$； - 对于 $100\\%$ 的数据，满足：$3 \\le n \\le 30,1 \\le m \\le 30$。 2008普及组第三题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 立体图 题目描述 小渊是个聪明的孩子，他经常会给周围的小朋友们讲些自己认为有趣的内容。最近，他准备给小朋友们讲解立体图，请你帮他画出立体图。 小渊有一块面积为 $m \\times n$ 的矩形区域，上面有 $m \\times n$ 个边长为 1 的格子，每个格子上堆了一些同样大小的积木（积木的长宽高都是 1），小渊想请你打印出这些格子的立体图。我们定义每个积木为如下格式，并且不会做任何翻转旋转，只会严格以这一种形式摆放： $$ \\def\\arraystretch{1e-10} \\begin{aligned} &\\verb!  +---+!\\\\ &\\verb! /   /|!\\\\ &\\verb!+---+ |!\\quad\\textsf{高}\\\\ &\\verb!|   | +!\\\\ &\\verb!|   |/ !\\quad\\textsf{宽}\\\\ &\\verb!+---+  !\\\\ & \\quad\\textsf{长} \\end{aligned}$$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 明明的随机数 题目描述 明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了 N 个 1 到 $1000$ 之间的随机整数 $(N\\leq100)$，对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作。 输入输出格式 输入格式 输入有两行，第 1 行为 1 个正整数，表示所生成的随机数的个数 N。 第 2 行有 N 个用空格隔开的正整数，为所产生的随机数。 输出格式 输出也是两行，第 1 行为 1 个正整数 M，表示不相同的随机数的个数。 第 2 行为 M 个用空格隔开的正整数，为从小到大排好序的不相同的随机数。 输入输出样例 输入样例 #1 10 20 40 32 67 40 20 89 300 400 15 输出样例 #1 8 15 20 32 40 67 89 300 400 说明 NOIP 2006 普及组 第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 开心的金明 题目描述 金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间他自己专用的很宽敞的房间。更让他高兴的是，妈妈昨天对他说：“你的房间需要购买哪些物品，怎么布置，你说了算，只要不超过N元钱就行”。今天一早金明就开始做预算，但是他想买的东西太多了，肯定会超过妈妈限定的N元。于是，他把每件物品规定了一个重要度，分为5等：用整数$1-5$表示，第5等最重要。他还从因特网上查到了每件物品的价格（都是整数元）。他希望在不超过N元（可以等于N元）的前提下，使每件物品的价格与重要度的乘积的总和最大。 设第j件物品的价格为$v[j]$，重要度为$w[j]$，共选中了k件物品，编号依次为$j_1,j_2,…,j_k$，则所求的总和为： $v[j_1] \\times w[j_1]+v[j_2] \\times w[j_2]+ …+v[j_k] \\times w[j_k]$。 请你帮助金明设计一个满足要求的购物单。 输入输出格式 输入格式 第一行，为2个正整数，用一个空格隔开：$n,m$（其中$N(<30000)$表示总钱数，$m(<25)$为希望购买物品的个数。） 从第2行到第$m+1$行，第j行给出了编号为$j-1$的物品的基本数据，每行有2个非负整数$ v p$（其中v表示该物品的价格$(v \\le 10000)，p$表示该物品的重要度($1-5$) 输出格式 1个正整数，为不超过总钱数的物品的价格与重要度乘积的总和的最大值$(<100000000)$。 输入输出样例 输入样例 #1 1000 5 800 2 400 5 300 5 400 3 200 2 输出样例 #1 3900 说明 NOIP 2006 普及组 第二题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: Jam 的计数法 题目描述 Jam 是个喜欢标新立异的科学怪人。他不使用阿拉伯数字计数，而是使用小写英文字母计数，他觉得这样做，会使世界更加丰富多彩。 在他的计数法中，每个数字的位数都是相同的（使用相同个数的字母），英文字母按原先的顺序，排在前面的字母小于排在它后面的字母。我们把这样的“数字”称为 Jam 数字。在 Jam 数字中，每个字母互不相同，而且从左到右是严格递增的。每次，Jam 还指定使用字母的范围，例如，从 $2\\sim 10$，表示只能使用 ${b,c,d,e,f,g,h,i,j}$ 这些字母。如果再规定位数为 5，那么，紧接在 Jam 数字 $\\texttt{bdfij}$ 之后的数字应该是 $\\texttt{bdghi}$。（如果我们用 U 、 V 依次表示 Jam 数字 $\\texttt{bdfij}$ 与 $\\texttt{bdghi}$，则 $U<V$，且不存在 Jam 数字 P，使 $U<P<V$）。 你的任务是：对于从文件读入的一个 Jam 数字，按顺序输出紧接在后面的 5 个 Jam 数字，如果后面没有那么多 Jam 数字，那么有几个就输出几个。 输入输出格式 输入格式 共 2 行。 第 1 行为 3 个正整数 $s, t, w$，用一个空格隔开。 （其中 s 为所使用的最小的字母的序号，t 为所使用的最大的字母的序号。w 为数字的位数，这 3 个数满足：$1\\le s<T\\le 26,2\\le w\\le t-s$） 第 2 行为具有 w 个小写字母的字符串，为一个符合要求的 Jam 数字。 所给的数据都是正确的，不必验证。 输出格式 最多为 5 行，为紧接在输入的 Jam 数字后面的 5 个 Jam 数字，如果后面没有那么多 Jam 数字，那么有几个就输出几个。每行只输出一个 Jam 数字，是由 w 个小写字母组成的字符串，不要有多余的空格。 输入输出样例 输入样例 #1   2 10 5   bdfij 输出样例 #1 bdghi bdghj bdgij bdhij befgh 说明 NOIP 2006 普及组 第三题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 数列 题目描述 给定一个正整数 k（$3\\leq k\\leq 15$），把所有 k 的方幂及所有有限个互不相等的 k 的方幂之和构成一个递增的序列，例如，当 $k = 3$ 时，这个序列是： $1, 3, 4, 9, 10, 12, 13, \\ldots$ （该序列实际上就是：$3^0,3^1,3^0+3^1,3^2,3^0+3^2,3^1+3^2,3^0+3^1+3^2,…$） 请你求出这个序列的第 N 项的值，用 $10$ 进制数表示。 例如，对于 $k = 3，N = 100$，正确答案应该是 $981$。 输入输出格式 输入格式 两个由空格隔开的正整数 $k, N（3\\leq k\\leq 15，10\\leq N\\leq 1000$）。 输出格式 一个正整数。整数前不要有空格和其他符号。 输入输出样例 输入样例 #1 3 100 输出样例 #1 981 说明 NOIP 2006 普及组 第四题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 能量项链 题目描述 在 Mars 星球上，每个 Mars 人都随身佩带着一串能量项链。在项链上有 N 颗能量珠。能量珠是一颗有头标记与尾标记的珠子，这些标记对应着某个正整数。并且，对于相邻的两颗珠子，前一颗珠子的尾标记一定等于后一颗珠子的头标记。因为只有这样，通过吸盘（吸盘是 Mars 人吸收能量的一种器官）的作用，这两颗珠子才能聚合成一颗珠子，同时释放出可以被吸盘吸收的能量。如果前一颗能量珠的头标记为 m，尾标记为 r，后一颗能量珠的头标记为 r，尾标记为 n，则聚合后释放的能量为 $m \\times r \\times n$（Mars 单位），新产生的珠子的头标记为 m，尾标记为 n。 需要时，Mars 人就用吸盘夹住相邻的两颗珠子，通过聚合得到能量，直到项链上只剩下一颗珠子为止。显然，不同的聚合顺序得到的总能量是不同的，请你设计一个聚合顺序，使一串项链释放出的总能量最大。 例如：设 $N=4，4$ 颗珠子的头标记与尾标记依次为 $(2,3)(3,5)(5,10)(10,2)$。我们用记号 $\\oplus$ 表示两颗珠子的聚合操作，$(j \\oplus k)$ 表示第 $j,k$ 两颗珠子聚合后所释放的能量。则第 4，1 两颗珠子聚合后释放的能量为： $(4 \\oplus 1)=10 \\times 2 \\times 3=60$。 这一串项链可以得到最优值的一个聚合顺序所释放的总能量为： $(((4 \\oplus 1) \\oplus 2) \\oplus 3)=10 \\times 2 \\times 3+10 \\times 3 \\times 5+10 \\times 5 \\times 10=710$。 输入输出格式 输入格式 第一行是一个正整数 N（$4 \\le N \\le 100$），表示项链上珠子的个数。第二行是 N 个用空格隔开的正整数，所有的数均不超过 $1000$。第 i 个数为第 i 颗珠子的头标记（$1 \\le i \\le N$），当 $i<N$ 时，第 i 颗珠子的尾标记应该等于第 $i+1$ 颗珠子的头标记。第 N 颗珠子的尾标记应该等于第 1 颗珠子的头标记。 至于珠子的顺序，你可以这样确定：将项链放到桌面上，不要出现交叉，随意指定第一颗珠子，然后按顺时针方向确定其他珠子的顺序。 输出格式 一个正整数 E（$E\\le 2.1 \\times 10^9$），为一个最优聚合顺序所释放的总能量。 输入输出样例 输入样例 #1 4 2 3 5 10 输出样例 #1 710 说明 NOIP 2006 提高组 第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 金明的预算方案 题目描述 金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间金明自己专用的很宽敞的房间。更让他高兴的是，妈妈昨天对他说：“你的房间需要购买哪些物品，怎么布置，你说了算，只要不超过 n 元钱就行”。今天一早，金明就开始做预算了，他把想买的物品分为两类：主件与附件，附件是从属于某个主件的，下表就是一些主件与附件的例子： | 主件 | 附件 | | :----------: | :----------: | | 电脑 | 打印机，扫描仪 | | 书柜 | 图书 | | 书桌 | 台灯，文具 | | 工作椅 | 无 | 如果要买归类为附件的物品，必须先买该附件所属的主件。每个主件可以有 0 个、1 个或 2 个附件。每个附件对应一个主件，附件不再有从属于自己的附件。金明想买的东西很多，肯定会超过妈妈限定的 n 元。于是，他把每件物品规定了一个重要度，分为 5 等：用整数 $1 \\sim 5$ 表示，第 5 等最重要。他还从因特网上查到了每件物品的价格（都是 $10$ 元的整数倍）。他希望在不超过 n 元的前提下，使每件物品的价格与重要度的乘积的总和最大。 设第 j 件物品的价格为 $v_j$，重要度为$w_j$，共选中了 k 件物品，编号依次为 $j_1,j_2,\\dots,j_k$，则所求的总和为： $v_{j_1} \\times w_{j_1}+v_{j_2} \\times w_{j_2}+ \\dots +v_{j_k} \\times w_{j_k}$。 请你帮助金明设计一个满足要求的购物单。 输入输出格式 输入格式 第一行有两个整数，分别表示总钱数 n 和希望购买的物品个数 m。 第 2 到第 $(m + 1)$ 行，每行三个整数，第 $(i + 1)$ 行的整数 $v_i，p_i，q_i$ 分别表示第 i 件物品的价格、重要度以及它对应的的主件。如果 $q_i=0$，表示该物品本身是主件。 输出格式 输出一行一个整数表示答案。 输入输出样例 输入样例 #1 1000 5 800 2 0 400 5 1 300 5 1 400 3 0 500 2 0 输出样例 #1 2200 说明 #### 数据规模与约定 对于全部的测试点，保证 $1 \\leq n \\leq 3.2 \\times 10^4，1 \\leq m \\leq 60，0 \\leq v_i \\leq 10^4，1 \\leq p_i \\leq 5，0 \\leq q_i \\leq m$，答案不超过 $2 \\times 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 作业调度方案 题目描述 我们现在要利用 m 台机器加工 n 个工件，每个工件都有 m 道工序，每道工序都在不同的指定的机器上完成。每个工件的每道工序都有指定的加工时间。 每个工件的每个工序称为一个操作，我们用记号 `j-k` 表示一个操作，其中 j 为 1 到 n 中的某个数字，为工件号；k 为 1 到 m 中的某个数字，为工序号，例如 `2-4` 表示第 2 个工件第 4 道工序的这个操作。在本题中，我们还给定对于各操作的一个安排顺序。 例如，当 $n=3,m=2$ 时，`1-1,1-2,2-1,3-1,3-2,2-2` 就是一个给定的安排顺序，即先安排第 1 个工件的第 1 个工序，再安排第 1 个工件的第 2 个工序，然后再安排第 2 个工件的第 1 个工序，等等。 一方面，每个操作的安排都要满足以下的两个约束条件。 1. 对同一个工件，每道工序必须在它前面的工序完成后才能开始； 2. 同一时刻每一台机器至多只能加工一个工件。 另一方面，在安排后面的操作时，不能改动前面已安排的操作的工作状态。 由于同一工件都是按工序的顺序安排的，因此，只按原顺序给出工件号，仍可得到同样的安排顺序，于是，在输入数据中，我们将这个安排顺序简写为 `1 1 2 3 3 2`。 还要注意，“安排顺序”只要求按照给定的顺序安排每个操作。不一定是各机器上的实际操作顺序。在具体实施时，有可能排在后面的某个操作比前面的某个操作先完成。 例如，取 $n=3,m=2$，已知数据如下（机器号/加工时间）："}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 2^k进制数 题目描述 设 r 是个 $2^k$ 进制数，并满足以下条件： - r 至少是个 2 位的 $2^k$ 进制数。 - 作为 $2^k$ 进制数，除最后一位外，r 的每一位严格小于它右边相邻的那一位。 - 将 r 转换为二进制数 q 后，则 q 的总位数不超过 w。 在这里，正整数 $k,w$ 是事先给定的。 问：满足上述条件的不同的 r 共有多少个？ 我们再从另一角度作些解释：设 S 是长度为 w 的 $01$ 字符串（即字符串 S 由 w 个 0 或 1 组成），S 对应于上述条件三中的 q。将 S 从右起划分为若干个长度为 k 的段，每段对应一位 $2^k$ 进制的数，如果 S 至少可分成 2 段，则 S 所对应的二进制数又可以转换为上述的 $2^k$ 进制数 r。 例：设 $k=3,w=7$。则 r 是个八进制数（ $2^3=8$ ）。由于 $w=7$，长度为 7 的 $01$ 字符串按 3 位一段分，可分为 3 段（即 $1,3,3$，左边第一段只有一个二进制位），则满足条件的八进制数有： 2 位数：   高位为 1：6 个（即 $12,13,14,15,16,17$ ）,    高位为 2：5 个，   …，   高位为 6：1 个（即 $67$ ）。   共 $6+5+…+1=21$ 个。 3 位数：   高位只能是 1，   第 2 位为 2：5 个（即 $123,124,125,126,127$ ），   第 2 位为 3：4 个，   …，     第 2 位为 6：1 个（即 $167$ ）。   共 $5+4+…+1=15$ 个。 所以，满足要求的 r 共有 $36$ 个。 输入输出格式 输入格式 一行两个正整数 $k,w$ 用一个空格隔开： 输出格式 一行一个个正整数，为所求的计算结果。   即满足条件的不同的 r 的个数（用十进制数表示），要求不得有前导零，各数字之间不得插入数字以外的其他字符（例如空格、换行符、逗号等）。 （提示：作为结果的正整数可能很大，但不会超过 $200$ 位） 输入输出样例 输入样例 #1 3 7 输出样例 #1 36 说明 【数据范围】   $1\\le k \\le 9$     $1\\le w \\le 3\\times 10^4$ NOIP 2006 提高组 第四题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 多项式输出 题目描述 一元 n 次多项式可用如下的表达式表示： $$f(x)=a_nx^n+a_{n-1}x^{n-1}+\\cdots +a_1x+a_0,a_n\\ne 0$$ 其中，$a_ix^i$ 称为 i 次项，$a_i$ 称为 i 次项的系数。给出一个一元多项式各项的次数和系数，请按照如下规定的格式要求输出该多项式： 1. 多项式中自变量为 x，从左到右按照次数递减顺序给出多项式。 2. 多项式中只包含系数不为 0 的项。 3. 如果多项式 n 次项系数为正，则多项式开头不出 `+` 号，如果多项式 n 次项系数为负，则多项式以 `-` 号开头。 4. 对于不是最高次的项，以 `+` 号或者 `-` 号连接此项与前一项，分别表示此项系数为正或者系数为负。紧跟一个正整数，表示此项系数的绝对值（如果一个高于 0 次的项，其系数的绝对值为 1，则无需输出 1）。如果 x 的指数大于 1，则接下来紧跟的指数部分的形式为“$x^b$”，其中 b 为 x 的指数；如果 x 的指数为 1，则接下来紧跟的指数部分形式为 x；如果 x 的指数为 0，则仅需输出系数即可。 5. 多项式中，多项式的开头、结尾不含多余的空格。 输入输出格式 输入格式 输入共有 2 行 第一行 1 个整数，n，表示一元多项式的次数。 第二行有 $n+1$ 个整数，其中第 i 个整数表示第 $n-i+1$ 次项的系数，每两个整数之间用空格隔开。 输出格式 输出共 1 行，按题目所述格式输出多项式。 输入输出样例 输入样例 #1 5  100 -1 1 -3 0 10 输出样例 #1 100x^5-x^4+x^3-3x^2+10 输入样例 #2 3  -50 0 0 1  输出样例 #2 -50x^3+1  说明 NOIP 2009 普及组 第一题 对于100%数据，$0 \\le n \\le 100，-100 \\le $系数$ \\le 100$ --- $\\text{upd 2022.8.1}$：新增加一组 Hack 数据。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 分数线划定 题目描述 世博会志愿者的选拔工作正在 A 市如火如荼的进行。为了选拔最合适的人才，A 市对所有报名的选手进行了笔试，笔试分数达到面试分数线的选手方可进入面试。面试分数线根据计划录取人数的 $150\\%$ 划定，即如果计划录取 m 名志愿者，则面试分数线为排名第 $m \\times 150\\%$（向下取整）名的选手的分数，而最终进入面试的选手为笔试成绩不低于面试分数线的所有选手。 现在就请你编写程序划定面试分数线，并输出所有进入面试的选手的报名号和笔试成绩。 输入输出格式 输入格式   第一行，两个整数 $n,m(5 \\leq n \\leq 5000,3 \\leq m \\leq n)$，中间用一个空格隔开，其中 n 表示报名参加笔试的选手总数，m 表示计划录取的志愿者人数。输入数据保证 $m \\times 150\\%$ 向下取整后小于等于 n。 第二行到第 $n+1$ 行，每行包括两个整数，中间用一个空格隔开，分别是选手的报名号 $k(1000 \\leq k \\leq 9999)$和该选手的笔试成绩 $s(1 \\leq s \\leq 100)$。数据保证选手的报名号各不相同。 输出格式 第一行，有 2 个整数，用一个空格隔开，第一个整数表示面试分数线；第二个整数为进入面试的选手的实际人数。 从第二行开始，每行包含 2 个整数，中间用一个空格隔开，分别表示进入面试的选手的报名号和笔试成绩，按照笔试成绩从高到低输出，如果成绩相同，则按报名号由小到大的顺序输出。 输入输出样例 输入样例 #1 6 3  1000 90  3239 88  2390 95  7231 84  1005 95  1001 88 输出样例 #1 88 5  1005 95  2390 95  1000 90  1001 88  3239 88  说明 【样例说明】 $m \\times 150\\% = 3 \\times150\\% = 4.5$，向下取整后为 4。保证 4 个人进入面试的分数线为 $88$，但因为 $88$ 有重分，所以所有成绩大于等于 $88$ 的选手都可以进入面试，故最终有 5 个人进入面试。 NOIP 2009 普及组 第二题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 细胞分裂 题目描述 Hanks 博士是 BT（Bio-Tech，生物技术）领域的知名专家。现在，他正在为一个细胞实验做准备工作：培养细胞样本。 Hanks 博士手里现在有 N 种细胞，编号从 $1 \\sim N$，一个第 i 种细胞经过 1 秒钟可以分裂为 $S_i$ 个同种细胞（$S_i$ 为正整数）。现在他需要选取某种细胞的一个放进培养皿，让其自由分裂，进行培养。一段时间以后，再把培养皿中的所有细胞平均分入 M 个试管，形成 M 份样本，用于实验。Hanks 博士的试管数 M 很大，普通的计算机的基本数据类型无法存储这样大的 M 值，但万幸的是，M 总可以表示为 $m_1$ 的 $m_2$ 次方，即 $M = m_1^{m_2}$，其中 $m_1,m_2$ 均为基本数据类型可以存储的正整数。 注意，整个实验过程中不允许分割单个细胞，比如某个时刻若培养皿中有 4 个细胞，Hanks 博士可以把它们分入 2 个试管，每试管内 2 个，然后开始实验。但如果培养皿中有 5 个细胞，博士就无法将它们均分入 2 个试管。此时，博士就只能等待一段时间，让细胞们继续分裂，使得其个数可以均分，或是干脆改换另一种细胞培养。 为了能让实验尽早开始，Hanks 博士在选定一种细胞开始培养后，总是在得到的细胞“刚好可以平均分入 M 个试管”时停止细胞培养并开始实验。现在博士希望知道，选择哪种细胞培养，可以使得实验的开始时间最早。 输入输出格式 输入格式 第一行，有一个正整数 N，代表细胞种数。 第二行，有两个正整数 $m_1,m_2$，以一个空格隔开，即表示试管的总数 $M = m_1^{m_2}$。 第三行有 N 个正整数，第 i 个数 $S_i$ 表示第 i 种细胞经过 1 秒钟可以分裂成同种细胞的个数。 输出格式 一个整数，表示从开始培养细胞到实验能够开始所经过的最少时间（单位为秒）。 如果无论 Hanks 博士选择哪种细胞都不能满足要求，则输出整数 $-1$。 输入输出样例 输入样例 #1 1  2 1  3 输出样例 #1 -1 输入样例 #2 2 24 1 30 12 输出样例 #2 2 说明 【输入输出样例 \\#1 说明】 经过 1 秒钟，细胞分裂成 3 个，经过 2 秒钟，细胞分裂成 9个，……，可以看出无论怎么分裂，细胞的个数都是奇数，因此永远不能分入 2 个试管。 【输入输出样例 \\#2 说明】 第 1 种细胞最早在 3 秒后才能均分入 $24$ 个试管，而第 2 种最早在 2 秒后就可以均分（每试管 $144 / {24}^1 = 6$ 个）。故实验最早可以在 2 秒后开始。 【数据范围】 对于 $50 \\%$ 的数据，有 $m_1^{m_2} \\le 30000$。 对于所有的数据，有 $1 \\le N \\le 10000，1 \\le m_1 \\le 30000，1 \\le m_2 \\le 10000，1 \\le S_i \\le 2 \\times {10}^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 道路游戏 题目描述 小新正在玩一个简单的电脑游戏。 游戏中有一条环形马路，马路上有 n 个机器人工厂，两个相邻机器人工厂之间由一小段马路连接。小新以某个机器人工厂为起点，按顺时针顺序依次将这 n 个机器人工厂编号为 $1\\sim n$，因为马路是环形的，所以第 n 个机器人工厂和第 1 个机器人工厂是由一段马路连接在一起的。小新将连接机器人工厂的这 n 段马路也编号为 $1\\sim n$，并规定第 i 段马路连接第 i 个机器人工厂和第 $i+1$ 个机器人工厂（$1\\le i\\le n-1$），第 n 段马路连接第 n 个机器人工厂和第 1 个机器人工厂。 游戏过程中，每个单位时间内，每段马路上都会出现一些金币，金币的数量会随着时间发生变化，即不同单位时间内同一段马路上出现的金币数量可能是不同的。小新需要机器人的帮助才能收集到马路上的金币。所需的机器人必须在机器人工厂用一些金币来购买，机器人一旦被购买，便会沿着环形马路按顺时针方向一直行走，在每个单位时间内行走一次，即从当前所在的机器人工厂到达相邻的下一个机器人工厂，并将经过的马路上的所有金币收集给小新，例如，小新在 i（$1\\le i\\le n$）号机器人工厂购买了一个机器人，这个机器人会从 i 号机器人工厂开始，顺时针在马路上行走，第一次行走会经过 i 号马路，到达 $i+1$ 号机器人工厂（如果 $i=n$，机器人会到达第 1 个机器人工厂），并将 i 号马路上的所有金币收集给小新。游戏中，环形马路上不能同时存在 2 个或者 2 个以上的机器人，并且每个机器人最多能够在环形马路上行走 p 次。小新购买机器人的同时，需要给这个机器人设定行走次数，行走次数可以为 $1~p$ 之间的任意整数。当马路上的机器人行走完规定的次数之后会自动消失，小新必须立刻在任意一个机器人工厂中购买一个新的机器人，并给新的机器人设定新的行走次数。 以下是游戏的一些补充说明： 1. 游戏从小新第一次购买机器人开始计时。 2. 购买机器人和设定机器人的行走次数是瞬间完成的，不需要花费时间。 3. 购买机器人和机器人行走是两个独立的过程，机器人行走时不能购买机器人，购买完机器人并且设定机器人行走次数之后机器人才能行走。 4. 在同一个机器人工厂购买机器人的花费是相同的，但是在不同机器人工厂购买机器人的花费不一定相同。 5. 购买机器人花费的金币，在游戏结束时再从小新收集的金币中扣除，所以在游戏过程中小新不用担心因金币不足，无法购买机器人而导致游戏无法进行。也因为如此，游戏结束后，收集的金币数量可能为负。 现在已知每段马路上每个单位时间内出现的金币数量和在每个机器人工厂购买机器人需要的花费，请你告诉小新，经过 m 个单位时间后，扣除购买机器人的花费，小新最多能收集到多少金币。 输入输出格式 输入格式 第一行 3 个正整数 $n,m,p$，意义如题目所述。 接下来的 n 行，每行有 m 个正整数，每两个整数之间用一个空格隔开，其中第 i 行描述了 i 号马路上每个单位时间内出现的金币数量（$1\\le $ 金币数量 $\\le 100$），即第 i 行的第 j（$1\\le j\\le m$）个数表示第 j 个单位时间内 i 号马路上出现的金币数量。 最后一行，有 n 个整数，每两个整数之间用一个空格隔开，其中第 i 个数表示在 i 号机器人工厂购买机器人需要花费的金币数量（$1\\le $ 金币数量 $\\le 100$）。 输出格式 共一行，包含 1 个整数，表示在 m 个单位时间内，扣除购买机器人花费的金币之后，小新最多能收集到多少金币。 输入输出样例 输入样例 #1 2 3 2  1 2 3  2 3 4  1 2 输出样例 #1 5 说明 对于 $40\\%$ 的数据，$2\\le n\\le 40，1\\le m\\le 40$。 对于 $90\\%$ 的数据，$2\\le n\\le 200，1\\le m\\le 200$。 对于 $100\\%$ 的数据，$2\\le n\\le 1000，1\\le m\\le 1000，1\\le p\\le m$。 NOIP 2009 普及组 第四题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 潜伏者 题目描述 $R $国和$ S $国正陷入战火之中，双方都互派间谍，潜入对方内部，伺机行动。历尽艰险后，潜伏于$ S $国的$ R$ 国间谍小$ C $终于摸清了 S 国军用密码的编码规则： 1． $S $国军方内部欲发送的原信息经过加密后在网络上发送，原信息的内容与加密后所得的内容均由大写字母 $\\texttt{A}\\sim\\texttt{Z}$ 构成（无空格等其他字符）。 2． $S $国对于每个字母规定了对应的“密字”。加密的过程就是将原信息中的所有字母替换为其对应的“密字”。 3． 每个字母只对应一个唯一的“密字”，不同的字母对应不同的“密字”。“密字”可以和原字母相同。 例如，若规定 $\\tt A$ 的密字为 $\\tt A，\\tt B$ 的密字为 $\\tt C$（其他字母及密字略），则原信息 $\\tt ABA$ 被加密为 $\\tt ACA$。 现在，小 C 通过内线掌握了 S 国网络上发送的一条加密信息及其对应的原信息。小 C 希望能通过这条信息，破译 S 国的军用密码。小 C 的破译过程是这样的：扫描原信息，对于原信息中的字母 x（代表任一大写字母），找到其在加密信息中的对应大写字母 y，并认为在密码里 y 是 x 的密字。如此进行下去直到停止于如下的某个状态： 1． 所有信息扫描完毕，$\\texttt{A}\\sim\\texttt{Z}$ 所有 $26 $个字母在原信息中均出现过并获得了相应的“密字”。   2． 所有信息扫描完毕，但发现存在某个（或某些）字母在原信息中没有出现。   3． 扫描中发现掌握的信息里有明显的自相矛盾或错误（违反 S 国密码的编码规则）。例： 如某条信息 $\\tt XYZ$ 被翻译为 $\\tt ABA$ 就违反了“不同字母对应不同密字”的规则。 在小 C 忙得头昏脑涨之际，R 国司令部又发来电报，要求他翻译另外一条从 S 国刚刚截取到的加密信息。现在请你帮助小 C：通过内线掌握的信息，尝试破译密码。然后利用破译的密码，翻译电报中的加密信息。 输入输出格式 输入格式 共三行，每行为一个长度在 1 到 $100 $之间的字符串。 第一行为小 C 掌握的一条加密信息。 第二行为第一行的加密信息所对应的原信息。 第三行为 R 国司令部要求小 C 翻译的加密信息。 输入数据保证所有字符串仅由大写字母 $\\texttt{A}\\sim\\texttt{Z}$ 构成，且第一行长度与第二行相等。 输出格式 共一行。 若破译密码停止时出现 $2,3$ 两种情况，请你输出“$\\tt Failed$”（不含引号，注意首字母大写，其它小写）。 否则请输出利用密码翻译电报中加密信息后得到的原信息。 输入输出样例 输入样例 #1 AA  AB  EOWIE"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: Hankson 的趣味题 题目描述 Hanks 博士是 BT（Bio-Tech，生物技术) 领域的知名专家，他的儿子名叫 Hankson。现在，刚刚放学回家的 Hankson 正在思考一个有趣的问题。 今天在课堂上，老师讲解了如何求两个正整数 $c_1$ 和 $c_2$ 的最大公约数和最小公倍数。现在 Hankson 认为自己已经熟练地掌握了这些知识，他开始思考一个“求公约数”和“求公倍数”之类问题的“逆问题”，这个问题是这样的：已知正整数 $a_0,a_1,b_0,b_1$，设某未知正整数 x 满足： 1. x 和 $a_0$ 的最大公约数是 $a_1$； 2. x 和 $b_0$ 的最小公倍数是 $b_1$。 Hankson 的“逆问题”就是求出满足条件的正整数 x。但稍加思索之后，他发现这样的 x 并不唯一，甚至可能不存在。因此他转而开始考虑如何求解满足条件的 x 的个数。请你帮助他编程求解这个问题。 输入输出格式 输入格式 第一行为一个正整数 n，表示有 n 组输入数据。接下来的$ n$ 行每行一组输入数据，为四个正整数 $a_0,a_1,b_0,b_1$，每两个整数之间用一个空格隔开。输入数据保证 $a_0$ 能被 $a_1$ 整除，$b_1$ 能被 $b_0$ 整除。 输出格式 共 n 行。每组输入数据的输出结果占一行，为一个整数。 对于每组数据：若不存在这样的 x，请输出 0，若存在这样的 x，请输出满足条件的 x 的个数； 输入输出样例 输入样例 #1 2  41 1 96 288  95 1 37 1776  输出样例 #1 6  2 说明 **【样例解释】** 第一组输入数据，x 可以是 $9,18,36,72,144,288$，共有 6 个。 第二组输入数据，x 可以是 $48,1776$，共有 2 个。 **【数据范围】** - 对于 $50\\%$ 的数据，保证有 $1\\leq a_0,a_1,b_0,b_1 \\leq 10000$ 且 $n \\leq 100$。 - 对于 $100\\%$ 的数据，保证有 $1 \\leq a_0,a_1,b_0,b_1 \\leq 2 \\times 10^9$ 且 $n≤2000$。 NOIP 2009 提高组 第二题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 质因数分解 题目描述 已知正整数 n 是两个不同的质数的乘积，试求出两者中较大的那个质数。 输入输出格式 输入格式 输入一个正整数 n。 输出格式 输出一个正整数 p，即较大的那个质数。 输入输出样例 输入样例 #1 21 输出样例 #1 7 说明 $1 \\le n\\le 2\\times 10^9$ NOIP 2012 普及组 第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 寻宝 题目描述 传说很遥远的藏宝楼顶层藏着诱人的宝藏。小明历尽千辛万苦终于找到传说中的这个藏宝楼，藏宝楼的门口竖着一个木板，上面写有几个大字：寻宝说明书。说明书的内容如下： 藏宝楼共有$N+1$层，最上面一层是顶层，顶层有一个房间里面藏着宝藏。除了顶层外，藏宝楼另有N层，每层M个房间，这M个房间围成一圈并按逆时针方向依次编号为$0,…,M-1$。其中一些房间有通往上一层的楼梯，每层楼的楼梯设计可能不同。每个房间里有一个指示牌，指示牌上有一个数字x，表示从这个房间开始按逆时针方向选择第x个有楼梯的房间（假定该房间的编号为k），从该房间上楼，上楼后到达上一层的k号房间。比如当前房间的指示牌上写着2，则按逆时针方向开始尝试，找到第2个有楼梯的房间，从该房间上楼。如果当前房间本身就有楼梯通向上层，该房间作为第一个有楼梯的房间。 寻宝说明书的最后用红色大号字体写着：“寻宝须知：帮助你找到每层上楼房间的指示牌上的数字（即每层第一个进入的房间内指示牌上的数字）总和为打开宝箱的密钥”。 请帮助小明算出这个打开宝箱的密钥。 输入输出格式 输入格式 第一行2个整数N和M，之间用一个空格隔开。N表示除了顶层外藏宝楼共N层楼，M表示除顶层外每层楼有M个房间。 接下来$N \\times M$行，每行两个整数，之间用一个空格隔开，每行描述一个房间内的情况，其中第$(i-1) \\times M+j$行表示第i层$j-1$号房间的情况（$i=1,2,…, N；j=1,2,…,M$）。第一个整数表示该房间是否有楼梯通往上一层（0表示没有，1表示有），第二个整数表示指示牌上的数字。注意，从j号房间的楼梯爬到上一层到达的房间一定也是j号房间。 最后一行，一个整数，表示小明从藏宝楼底层的几号房间进入开始寻宝（注：房间编号从0开始）。 输出格式 一个整数，表示打开宝箱的密钥，这个数可能会很大，请输出对$20123$取模的结果即可。 输入输出样例 输入样例 #1 2 3 1 2 0 3 1 4 0 1 1 5 1 2 1 输出样例 #1 5 说明 【数据范围】 对于50%数据，有$0<N≤1000,0<x≤10000$；   对于100%数据，有$0<N≤10000,0<M≤100,0<x≤1,000,000$。 NOIP 2012 普及组 第二题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 摆花 题目描述 小明的花店新开张，为了吸引顾客，他想在花店的门口摆上一排花，共 m 盆。通过调查顾客的喜好，小明列出了顾客最喜欢的 n 种花，从 1 到 n 标号。为了在门口展出更多种花，规定第 i 种花不能超过 $a_i$ 盆，摆花时同一种花放在一起，且不同种类的花需按标号的从小到大的顺序依次摆列。 试编程计算，一共有多少种不同的摆花方案。 输入输出格式 输入格式 第一行包含两个正整数 n 和 m，中间用一个空格隔开。 第二行有 n 个整数，每两个整数之间用一个空格隔开，依次表示 $a_1,a_2, \\cdots ,a_n$。 输出格式 一个整数，表示有多少种方案。注意：因为方案数可能很多，请输出方案数对 $10^6+7$ 取模的结果。 输入输出样例 输入样例 #1 2 4 3 2 输出样例 #1 2 说明 【数据范围】 对于 $20\\%$ 数据，有 $0<n \\le 8,0<m \\le 8,0 \\le a_i \\le 8$。 对于 $50\\%$ 数据，有 $0<n \\le 20,0<m \\le 20,0 \\le a_i \\le 20$。 对于 $100\\%$ 数据，有 $0<n \\le 100,0<m \\le 100,0 \\le a_i \\le 100$。 NOIP 2012 普及组 第三题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:本题是错题，后来被证明没有靠谱的多项式复杂度的做法。测试数据非常的水，各种玄学做法都可以通过（比如反着扫），不代表算法正确。因此本题题目和数据仅供参考。 题目描述 有一位使者要游历各国，他每到一个国家，都能学到一种文化，但他不愿意学习任何一种文化超过一次（即如果他学习了某种文化，则他就不能到达其他有这种文化的国家）。不同的国家可能有相同的文化。不同文化的国家对其他文化的看法不同，有些文化会排斥外来文化（即如果他学习了某种文化，则他不能到达排斥这种文化的其他国家）。 现给定各个国家间的地理关系，各个国家的文化，每种文化对其他文化的看法，以及这位使者游历的起点和终点（在起点和终点也会学习当地的文化），国家间的道路距离，试求从起点到终点最少需走多少路。 输入输出格式 输入格式 第一行为五个整数 $N,K,M,S,T$，每两个整数之间用一个空格隔开，依次代表国家个数（国家编号为1 到 N），文化种数（文化编号为 1 到 K），道路的条数，以及起点和终点的编号（保证 S 不等于 T）； 第二行为 N个整数，每两个整数之间用一个空格隔开，其中第 i个数 $C_i$，表示国家 i的文化为 $C_i$。 接下来的 $K $行，每行 K 个整数，每两个整数之间用一个空格隔开，记第$ i$ 行的第 j 个数为 $a_{ij}，a_{ij}= 1$ 表示文化 i 排斥外来文化$ j（i$ 等于 j 时表示排斥相同文化的外来人），$a_{ij}= 0$ 表示不排斥（注意 i 排斥 j 并不保证 j 一定也排斥 i）。 接下来的 M 行，每行三个整数 $u,v,d$，每两个整数之间用一个空格隔开，表示国家 u与国家 $v $有一条距离为$ d $的可双向通行的道路（保证$ u $不等于 v，两个国家之间可能有多条道路）。 输出格式 一个整数，表示使者从起点国家到达终点国家最少需要走的距离数（如果无解则输出$-1$）。 输入输出样例 输入样例 #1 2 2 1 1 2  1 2  0 1  1 0  1 2 10  输出样例 #1 -1 输入样例 #2 2 2 1 1 2  1 2  0 1  0 0  1 2 10  输出样例 #2 10 说明 输入输出样例说明1 由于到国家 2 必须要经过国家$ 1$，而国家$ 2 $的文明却排斥国家 1 的文明，所以不可能到达国家 2。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: Vigenère 密码 题目描述 16 世纪法国外交家 Blaise de Vigenère 设计了一种多表密码加密算法 Vigenère 密码。Vigenère 密码的加密解密算法简单易用，且破译难度比较高，曾在美国南北战争中为南军所广泛使用。   在密码学中，我们称需要加密的信息为明文，用 M 表示；称加密后的信息为密文，用 C 表示；而密钥是一种参数，是将明文转换为密文或将密文转换为明文的算法中输入的数据，记为 k。在 Vigenère 密码中，密钥 k 是一个字母串，$k=k_1,k_2,…,k_n$。当明文 $M=m_1,m_2,…,m_n$ 时，得到的密文 $C=c_1,c_2,…,c_n$，其中 $c_i=m_i \\operatorname{\\circledR} k_i$，运算 $\\circledR$ 的规则如下表所示： $$\\begin{array}{c|cccccccccccccccccccccccccc} \\circledR &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt}  \\\\\\hline \\tt A &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt}  \\\\ \\tt B &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt}  \\\\ \\tt C &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt}  \\\\ \\tt D &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt}  \\\\ \\tt E &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt}  \\\\ \\tt F &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt}  \\\\ \\tt G &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt}  \\\\ \\tt H &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt}  \\\\ \\tt I &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt}  \\\\ \\tt J &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt}  \\\\ \\tt K &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt}  \\\\ \\tt L &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt}  \\\\ \\tt M &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt}  \\\\ \\tt N &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt}  \\\\ \\tt O &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt}  \\\\ \\tt P &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt}  \\\\ \\tt Q &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt}  \\\\ \\tt R &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt}  \\\\ \\tt S &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt}  \\\\ \\tt T &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt}  \\\\ \\tt U &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt}  \\\\ \\tt V &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt}  \\\\ \\tt W &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt}  \\\\ \\tt X &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt}  \\\\ \\tt Y &\\tt Y \\kern{-5pt} &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt}  \\\\ \\tt Z &\\tt Z \\kern{-5pt} &\\tt A \\kern{-5pt} &\\tt B \\kern{-5pt} &\\tt C \\kern{-5pt} &\\tt D \\kern{-5pt} &\\tt E \\kern{-5pt} &\\tt F \\kern{-5pt} &\\tt G \\kern{-5pt} &\\tt H \\kern{-5pt} &\\tt I \\kern{-5pt} &\\tt J \\kern{-5pt} &\\tt K \\kern{-5pt} &\\tt L \\kern{-5pt} &\\tt M \\kern{-5pt} &\\tt N \\kern{-5pt} &\\tt O \\kern{-5pt} &\\tt P \\kern{-5pt} &\\tt Q \\kern{-5pt} &\\tt R \\kern{-5pt} &\\tt S \\kern{-5pt} &\\tt T \\kern{-5pt} &\\tt U \\kern{-5pt} &\\tt V \\kern{-5pt} &\\tt W \\kern{-5pt} &\\tt X \\kern{-5pt} &\\tt Y \\kern{-5pt}  \\\\ \\end{array} $$ Vigenère 加密在操作时需要注意： 1. $\\circledR$ 运算忽略参与运算的字母的大小写，并保持字母在明文 M 中的大小写形式； 2. 当明文 M 的长度大于密钥 k 的长度时，将密钥 k 重复使用。 例如，明文 $M=\\texttt{Helloworld}$，密钥 $k=\\texttt{abc}$ 时，密文 $C=\\texttt{Hfnlpyosnd}$。 $$ \\def{\\arraystretch}{1.5} \\begin{array}{|c|c|c|c|c|c|c|c|c|c|c|} \\hline \\textsf{明文} & \\tt H & \\tt e & \\tt l & \\tt l & \\tt o & \\tt w & \\tt o & \\tt r & \\tt l & \\tt d \\\\  \\hline \\textsf{密钥} & \\tt a & \\tt b & \\tt c & \\tt a & \\tt b & \\tt c & \\tt a & \\tt b & \\tt c & \\tt a \\\\  \\hline \\textsf{密文} & \\tt H & \\tt f & \\tt n & \\tt l & \\tt p & \\tt y & \\tt o & \\tt s & \\tt n & \\tt d \\\\  \\hline \\end{array} $$ 输入输出格式 输入格式 共 2 行。 第一行为一个字符串，表示密钥 k，长度不超过 $100$，其中仅包含大小写字母。   第二行为一个字符串，表示经加密后的密文，长度不超过 $1000$，其中仅包含大小写字母。 输出格式 一个字符串，表示输入密钥和密文所对应的明文。 输入输出样例 输入样例 #1 CompleteVictory Yvqgpxaimmklongnzfwpvxmniytm 输出样例 #1 Wherethereisawillthereisaway 说明 对于 $100\\%$ 的数据，输入的密钥的长度不超过 $100$，输入的密文的长度不超过 $1000$，且都仅包含英文字母。 NOIP 2012 提高组 第一天 第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 国王游戏 题目描述 恰逢 H 国国庆，国王邀请 n 位大臣来玩一个有奖游戏。首先，他让每个大臣在左、右手上面分别写下一个整数，国王自己也在左、右手上各写一个整数。然后，让这 n 位大臣排成一排，国王站在队伍的最前面。排好队后，所有的大臣都会获得国王奖赏的若干金币，每位大臣获得的金币数分别是：排在该大臣前面的所有人的左手上的数的乘积除以他自己右手上的数，然后向下取整得到的结果。 国王不希望某一个大臣获得特别多的奖赏，所以他想请你帮他重新安排一下队伍的顺序，使得获得奖赏最多的大臣，所获奖赏尽可能的少。注意，国王的位置始终在队伍的最前面。 输入输出格式 输入格式 第一行包含一个整数 n，表示大臣的人数。 第二行包含两个整数 a 和 b，之间用一个空格隔开，分别表示国王左手和右手上的整数。 接下来 n 行，每行包含两个整数 a 和 b，之间用一个空格隔开，分别表示每个大臣左手和右手上的整数。 输出格式 一个整数，表示重新排列后的队伍中获奖赏最多的大臣所获得的金币数。 输入输出样例 输入样例 #1 3  1 1  2 3  7 4  4 6  输出样例 #1 2 说明 【输入输出样例说明】 按 1、2、3 这样排列队伍，获得奖赏最多的大臣所获得金币数为 2； 按 1、3、2 这样排列队伍，获得奖赏最多的大臣所获得金币数为 2； 按 2、1、3 这样排列队伍，获得奖赏最多的大臣所获得金币数为 2； 按$ 2、3、1 $这样排列队伍，获得奖赏最多的大臣所获得金币数为 9； 按 3、1、$2 $这样排列队伍，获得奖赏最多的大臣所获得金币数为 2；   按$ 3、2、1$ 这样排列队伍，获得奖赏最多的大臣所获得金币数为 9。 因此，奖赏最多的大臣最少获得 2 个金币，答案输出 2。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 同余方程 题目描述 求关于 $ x$ 的同余方程 $ a x \\equiv 1 \\pmod {b}$ 的最小正整数解。 输入输出格式 输入格式 一行，包含两个整数 $a,b$，用一个空格隔开。 输出格式 一个整数 $x_0$，即最小正整数解。输入数据保证一定有解。 输入输出样例 输入样例 #1 3 10 输出样例 #1 7 说明 ### 数据规模与约定 - 对于 $40\\%$ 的数据，$2 ≤b≤ 1,000$； - 对于 $60\\%$ 的数据，$2 ≤b≤ 50,000,000$； - 对于 $100\\%$ 的数据，$2 ≤a, b≤ 2,000,000,000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 借教室 题目描述 在大学期间，经常需要租借教室。大到院系举办活动，小到学习小组自习讨论，都需要向学校申请借教室。教室的大小功能不同，借教室人的身份不同，借教室的手续也不一样。 面对海量租借教室的信息，我们自然希望编程解决这个问题。 我们需要处理接下来 n 天的借教室信息，其中第 i 天学校有 $r_i$ 个教室可供租借。共有 m 份订单，每份订单用三个正整数描述，分别为 $d_j,s_j,t_j$，表示某租借者需要从第 $s_j$ 天到第 $t_j$ 天租借教室（包括第 $s_j$ 天和第 $t_j$ 天），每天需要租借 $d_j$ 个教室。 我们假定，租借者对教室的大小、地点没有要求。即对于每份订单，我们只需要每天提供 $d_j$ 个教室，而它们具体是哪些教室，每天是否是相同的教室则不用考虑。 借教室的原则是先到先得，也就是说我们要按照订单的先后顺序依次为每份订单分配教室。如果在分配的过程中遇到一份订单无法完全满足，则需要停止教室的分配，通知当前申请人修改订单。这里的无法满足指从第 $s_j$ 天到第 $t_j$ 天中有至少一天剩余的教室数量不足 $d_j$ 个。 现在我们需要知道，是否会有订单无法完全满足。如果有，需要通知哪一个申请人修改订单。 输入输出格式 输入格式 第一行包含两个正整数 $n,m$，表示天数和订单的数量。 第二行包含 n 个正整数，其中第 i 个数为 $r_i$，表示第 i 天可用于租借的教室数量。 接下来有 m 行，每行包含三个正整数 $d_j,s_j,t_j$，表示租借的数量，租借开始、结束分别在第几天。 每行相邻的两个数之间均用一个空格隔开。天数与订单均用从 1 开始的整数编号。 输出格式 如果所有订单均可满足，则输出只有一行，包含一个整数 0。否则（订单无法完全满足） 输出两行，第一行输出一个负整数 $-1$，第二行输出需要修改订单的申请人编号。 输入输出样例 输入样例 #1 4 3  2 5 4 3  2 1 3  3 2 4  4 2 4 输出样例 #1 -1  2 说明 【输入输出样例说明】 第 $1 $份订单满足后，$4 $天剩余的教室数分别为 $0,3,2,3$。第 2 份订单要求第 $2 $天到第 4 天每天提供$ 3 $个教室，而第 3 天剩余的教室数为$ 2$，因此无法满足。分配停止，通知第2 个申请人修改订单。 【数据范围】 对于10%的数据，有$1≤ n,m≤ 10$； 对于30%的数据，有$1≤ n,m≤1000$； 对于 70%的数据，有$1 ≤ n,m ≤ 10^5$； 对于 100%的数据，有$1 ≤ n,m ≤ 10^6,0 ≤ r_i,d_j≤ 10^9,1 ≤ s_j≤ t_j≤ n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 疫情控制 题目描述 H 国有 $n $ 个城市，这 n 个城市用 $ n-1 $ 条双向道路相互连通构成一棵树，$1 $ 号城市是首都，也是树中的根节点。 H 国的首都爆发了一种危害性极高的传染病。当局为了控制疫情，不让疫情扩散到边境城市（叶子节点所表示的城市），决定动用军队在一些城市建立检查点，使得从首都到边境城市的每一条路径上都至少有一个检查点，边境城市也可以建立检查点。但特别要注意的是，首都是不能建立检查点的。 现在，在 H 国的一些城市中已经驻扎有军队，且一个城市可以驻扎多个军队。一支军队可以在有道路连接的城市间移动，并在除首都以外的任意一个城市建立检查点，且只能在一个城市建立检查点。一支军队经过一条道路从一个城市移动到另一个城市所需要的时间等于道路的长度（单位：小时）。 请问最少需要多少个小时才能控制疫情。注意：不同的军队可以同时移动。 输入输出格式 输入格式 第一行一个整数 $ n$，表示城市个数。 接下来的 $n-1$ 行，每行 $ 3 $ 个整数，$u,v,w$，每两个整数之间用一个空格隔开，表示从城市 $u $ 到城市 $ v$ 有一条长为 w 的道路。数据保证输入的是一棵树，且根节点编号为 1。 接下来一行一个整数 m，表示军队个数。 接下来一行 $m $ 个整数，每两个整数之间用一个空格隔开，分别表示这 m 个军队所驻扎的城市的编号。 输出格式 一个整数，表示控制疫情所需要的最少时间。如果无法控制疫情则输出 $-1$。 输入输出样例 输入样例 #1 4  1 2 1  1 3 2  3 4 3  2  2 2 输出样例 #1 3 说明 【输入输出样例说明】 第一支军队在 2 号点设立检查点，第二支军队从 2 号点移动到$ 3$ 号点设立检查点，所需时间为 3 个小时。   【数据范围】 保证军队不会驻扎在首都。 - 对于 $20\\%$ 的数据，$2 \\le n\\le 10$； - 对于 $40\\%$ 的数据，$2 \\le n\\le 50，0<w <10^5$； - 对于 $60\\%$ 的数据，$2 \\le n\\le 1000，0<w <10^6$； - 对于 $80\\%$ 的数据，$2 \\le n\\le 10^4$； - 对于 $100\\%$ 的数据，$2\\le m\\le n≤5\\times 10^4，0<w <10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 不高兴的津津 题目描述 津津上初中了。妈妈认为津津应该更加用功学习，所以津津除了上学之外，还要参加妈妈为她报名的各科复习班。另外每周妈妈还会送她去学习朗诵、舞蹈和钢琴。但是津津如果一天上课超过八个小时就会不高兴，而且上得越久就会越不高兴。假设津津不会因为其它事不高兴，并且她的不高兴不会持续到第二天。请你帮忙检查一下津津下周的日程安排，看看下周她会不会不高兴；如果会的话，哪天最不高兴。 输入输出格式 输入格式 输入包括 7 行数据，分别表示周一到周日的日程安排。每行包括两个小于 $10$ 的非负整数，用空格隔开，分别表示津津在学校上课的时间和妈妈安排她上课的时间。 输出格式 一个数字。如果不会不高兴则输出 0，如果会则输出最不高兴的是周几（用 $1, 2, 3, 4, 5, 6, 7$ 分别表示周一，周二，周三，周四，周五，周六，周日）。如果有两天或两天以上不高兴的程度相当，则输出时间最靠前的一天。 输入输出样例 输入样例 #1 5 3 6 2 7 2 5 3 5 4 0 4 0 6 输出样例 #1 3 说明 NOIP2004 普及组第 1 题 - 2021-10-27：增加一组 hack 数据 - 2022-06-05：又增加一组 hack 数据"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: FBI 树 题目描述 我们可以把由 0 和 1 组成的字符串分为三类：全 0 串称为 B 串，全 1 串称为 I 串，既含 0 又含 1 的串则称为 F 串。 FBI 树是一种二叉树，它的结点类型也包括 F 结点，B 结点和 I 结点三种。由一个长度为 $2^N$ 的 01 串 S 可以构造出一棵 FBI 树 T，递归的构造方法如下： 1. T 的根结点为 R，其类型与串 S 的类型相同； 2. 若串 S 的长度大于 1，将串 S 从中间分开，分为等长的左右子串 $S_1$ 和 $S_2$；由左子串 $S_1$ 构造 R 的左子树 $T_1$，由右子串 $S_2$ 构造 R 的右子树 $T_2$。 现在给定一个长度为 $2^N$ 的 01 串，请用上述构造方法构造出一棵 FBI 树，并输出它的后序遍历序列。 输入输出格式 输入格式 第一行是一个整数 $N(0 \\le N \\le 10)$，   第二行是一个长度为 $2^N$ 的 01 串。 输出格式 一个字符串，即 FBI 树的后序遍历序列。 输入输出样例 输入样例 #1 3 10001011 输出样例 #1 IBFBBBFIBFIIIFF 说明 对于 $40\\%$ 的数据，$N \\le 2$； 对于全部的数据，$N \\le 10$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 火星人 题目描述 人类终于登上了火星的土地并且见到了神秘的火星人。人类和火星人都无法理解对方的语言，但是我们的科学家发明了一种用数字交流的方法。这种交流方法是这样的，首先，火星人把一个非常大的数字告诉人类科学家，科学家破解这个数字的含义后，再把一个很小的数字加到这个大数上面，把结果告诉火星人，作为人类的回答。 火星人用一种非常简单的方式来表示数字――掰手指。火星人只有一只手，但这只手上有成千上万的手指，这些手指排成一列，分别编号为 $1,2,3,\\cdots$。火星人的任意两根手指都能随意交换位置，他们就是通过这方法计数的。 一个火星人用一个人类的手演示了如何用手指计数。如果把五根手指――拇指、食指、中指、无名指和小指分别编号为 $1,2,3,4$ 和 5，当它们按正常顺序排列时，形成了 5 位数 $12345$，当你交换无名指和小指的位置时，会形成 5 位数 $12354$，当你把五个手指的顺序完全颠倒时，会形成 $54321$，在所有能够形成的 $120$ 个 5 位数中，$12345$ 最小，它表示 1；$12354$ 第二小，它表示 2；$54321$ 最大，它表示 $120$。下表展示了只有 3 根手指时能够形成的 6 个 3 位数和它们代表的数字："}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 津津的储蓄计划 题目描述 津津的零花钱一直都是自己管理。每个月的月初妈妈给津津 $300$ 元钱，津津会预算这个月的花销，并且总能做到实际花销和预算的相同。 为了让津津学习如何储蓄，妈妈提出，津津可以随时把整百的钱存在她那里，到了年末她会加上 $20\\%$ 还给津津。因此津津制定了一个储蓄计划：每个月的月初，在得到妈妈给的零花钱后，如果她预计到这个月的月末手中还会有多于 $100$ 元或恰好 $100$ 元，她就会把整百的钱存在妈妈那里，剩余的钱留在自己手中。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 合并果子 / [USACO06NOV] Fence Repair G 题目描述 在一个果园里，多多已经将所有的果子打了下来，而且按果子的不同种类分成了不同的堆。多多决定把所有的果子合成一堆。 每一次合并，多多可以把两堆果子合并到一起，消耗的体力等于两堆果子的重量之和。可以看出，所有的果子经过 $n-1$ 次合并之后， 就只剩下一堆了。多多在合并果子时总共消耗的体力等于每次合并所耗体力之和。 因为还要花大力气把这些果子搬回家，所以多多在合并果子时要尽可能地节省体力。假定每个果子重量都为 1 ，并且已知果子的种类 数和每种果子的数目，你的任务是设计出合并的次序方案，使多多耗费的体力最少，并输出这个最小的体力耗费值。 例如有 3 种果子，数目依次为 1 ， 2 ， 9 。可以先将 1 、 2 堆合并，新堆数目为 3 ，耗费体力为 3 。接着，将新堆与原先的第三堆合并，又得到新的堆，数目为 $12$ ，耗费体力为 $12$ 。所以多多总共耗费体力 $=3+12=15$ 。可以证明 $15$ 为最小的体力耗费值。 输入输出格式 输入格式 共两行。   第一行是一个整数 $n(1\\leq n\\leq 10000)$ ，表示果子的种类数。   第二行包含 n 个整数，用空格分隔，第 i 个整数 $a_i(1\\leq a_i\\leq 20000)$ 是第 i 种果子的数目。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 合唱队形 题目描述 n 位同学站成一排，音乐老师要请其中的 $n-k$ 位同学出列，使得剩下的 k 位同学排成合唱队形。 合唱队形是指这样的一种队形：设 k 位同学从左到右依次编号为 $1,2,$ … $,k$，他们的身高分别为 $t_1,t_2,$ … $,t_k$，则他们的身高满足 $t_1< \\cdots <t_i>t_{i+1}>$ … $>t_k(1\\le i\\le k)$。 你的任务是，已知所有 n 位同学的身高，计算最少需要几位同学出列，可以使得剩下的同学排成合唱队形。 输入输出格式 输入格式 共二行。 第一行是一个整数 n（$2\\le n\\le100$），表示同学的总数。 第二行有 n 个整数，用空格分隔，第 i 个整数 $t_i（130\\le t_i\\le230$）是第 i 位同学的身高（厘米）。 输出格式 一个整数，最少需要几位同学出列。 输入输出样例 输入样例 #1 8 186 186 150 200 160 130 197 220 输出样例 #1 4 说明 对于 $50\\%$ 的数据，保证有 $n \\le 20$。 对于全部的数据，保证有 $n \\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 虫食算 题目描述 所谓虫食算，就是原先的算式中有一部分被虫子啃掉了，需要我们根据剩下的数字来判定被啃掉的字母。来看一个简单的例子： $$\\begin{aligned}  \\verb!43#9865#045! \\\\ +\\qquad \\verb!8468#6633! \\\\[-1em]\\underline{\\kern{8em}} \\\\  \\verb!44445509678! \\\\ \\end{aligned}$$ 其中 `#` 号代表被虫子啃掉的数字。根据算式，我们很容易判断：第一行的两个数字分别是 5 和 3，第二行的数字是 5。 现在，我们对问题做两个限制： 首先，我们只考虑加法的虫食算。这里的加法是 n 进制加法，算式中三个数都有 n 位，允许有前导的 0。 其次，虫子把所有的数都啃光了，我们只知道哪些数字是相同的，我们将相同的数字用相同的字母表示，不同的数字用不同的字母表示。如果这个算式是 n 进制的，我们就取英文字母表的前 n 个大写字母来表示这个算式中的 0 到 $n - 1$ 这 n 个不同的数字：但是这 n 个字母并不一定顺序地代表 0 到 $n-1$。输入数据保证 n 个字母分别至少出现一次。 $$\\begin{aligned}  \\verb!BADC! \\\\ +\\quad \\verb!CBDA! \\\\[-1em]\\underline{\\kern{4em}} \\\\  \\verb!DCCC! \\\\ \\end{aligned}$$ 上面的算式是一个4进制的算式。很显然，我们只要让 $\\verb!ABCD!$ 分别代表 $0123$，便可以让这个式子成立了。你的任务是，对于给定的 n 进制加法算式，求出 n 个不同的字母分别代表的数字，使得该加法算式成立。输入数据保证有且仅有一组解。 输入输出格式 输入格式 输入的第一行是一个整数 n，代表进制数。 第二到第四行，每行有一个由大写字母组成的字符串，分别代表两个加数以及和。这 3 个字符串左右两端都没有空格，从左到右依次代表从高位到低位，并且恰好有 n 位。 输出格式 输出一行 n 个用空格隔开的整数，分别代表 $A,B, \\dots$ 代表的数字。 输入输出样例 输入样例 #1 5 ABCED BDACE EBBAA 输出样例 #1 1 0 3 4 2 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $n \\le 10$； - 对于 $50\\%$ 的数据，保证 $n \\le 15$； - 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 26$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 奖学金 题目描述 某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前 5 名学生发奖学金。期末，每个学生都有 3 门课的成绩:语文、数学、英语。先按总分从高到低排序，如果两个同学总分相同，再按语文成绩从高到低排序，如果两个同学总分和语文成绩都相同，那么规定学号小的同学 排在前面，这样，每个学生的排序是唯一确定的。 任务：先根据输入的 3 门课的成绩计算总分，然后按上述规则排序，最后按排名顺序输出前五名名学生的学号和总分。注意，在前 5 名同学中，每个人的奖学金都不相同，因此，你必须严格按上述规则排序。例如，在某个正确答案中，如果前两行的输出数据(每行输出两个数:学号、总分) 是: 7  $279$   5  $279$   这两行数据的含义是:总分最高的两个同学的学号依次是 7 号、5 号。这两名同学的总分都是 $279$ (总分等于输入的语文、数学、英语三科成绩之和) ，但学号为 7 的学生语文成绩更高一些。如果你的前两名的输出数据是: 5  $279$   7  $279$   则按输出错误处理，不能得分。 输入输出格式 输入格式 共 $n+1$行。 第 1 行为一个正整数$n ( \\le 300)$，表示该校参加评选的学生人数。 第 2 到 $n+1$ 行，每行有 3 个用空格隔开的数字，每个数字都在 0 到 $100$ 之间。第 j 行的 3 个数字依次表示学号为 $j-1$ 的学生的语文、数学、英语的成绩。每个学生的学号按照输入顺序编号为 $1\\sim n$（恰好是输入数据的行号减 1）。 所给的数据都是正确的，不必检验。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 纪念品分组 题目描述 元旦快到了，校学生会让乐乐负责新年晚会的纪念品发放工作。为使得参加晚会的同学所获得 的纪念品价值相对均衡，他要把购来的纪念品根据价格进行分组，但每组最多只能包括两件纪念品， 并且每组纪念品的价格之和不能超过一个给定的整数。为了保证在尽量短的时间内发完所有纪念品，乐乐希望分组的数目最少。 你的任务是写一个程序，找出所有分组方案中分组数最少的一种，输出最少的分组数目。 输入输出格式 输入格式 共 $n+2$ 行： 第一行包括一个整数 w，为每组纪念品价格之和的上限。 第二行为一个整数 n，表示购来的纪念品的总件数 G。 第 $3\\sim n+2$ 行每行包含一个正整数 $P_i$ 表示所对应纪念品的价格。 输出格式 一个整数，即最少的分组数目。 输入输出样例 输入样例 #1 100  9  90  20  20  30  50  60  70  80  90 输出样例 #1 6 说明 $50\\%$ 的数据满足：$1\\le n\\le15$。 $100\\%$ 的数据满足：$1\\le n\\le3\\times10^4，80\\le w\\le200，5 \\le  P_i  \\le  w$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:恶魔猎手尤迪安野心勃勃，他背叛了暗夜精灵，率领深藏在海底的娜迦族企图叛变。 题目描述 守望者在与尤迪安的交锋中遭遇了围杀，被困在一个荒芜的大岛上。 为了杀死守望者，尤迪安开始对这个荒岛施咒，这座岛很快就会沉下去。到那时，岛上的所有人都会遇难。 守望者的跑步速度为 $17m/s$，以这样的速度是无法逃离荒岛的。庆幸的是守望者拥有闪烁法术，可在 $1s$ 内移动 $60m$，不过每次使用闪烁法术都会消耗魔法值 $10$ 点。守望者的魔法值恢复的速度为 4 点每秒，只有处在原地休息状态时才能恢复。 现在已知守望者的魔法初值 M，他所在的初始位置与岛的出口之间的距离 S，岛沉没的时间 T。你的任务是写一个程序帮助守望者计算如何在最短的时间内逃离荒岛，若不能逃出，则输出守望者在剩下的时间内能走的最远距离。 注意：守望者跑步、闪烁或休息活动均以秒为单位，且每次活动的持续时间为整数秒。距离的单位为米。 输入输出格式 输入格式 输入数据共一行三个非负整数，分别表示 M，S，T。 输出格式 输出数据共两行。 第一行一个字符串 $\\texttt{Yes}$ 或 $\\texttt{No}$，即守望者是否能逃离荒岛。 第二行包含一个整数。第一行为 $\\texttt{Yes}$ 时表示守望者逃离荒岛的最短时间；第一行为 $\\texttt{No}$ 时表示守望者能走的最远距离。 输入输出样例 输入样例 #1 39 200 4 输出样例 #1 No 197 输入样例 #2 36 255 10 输出样例 #2 Yes 6 说明 对于 $30\\%$ 的数据，$1  \\le  T   \\le  10， 1   \\le   S   \\le  100$； 对于 $50\\%$ 的数据，$1   \\le  T   \\le   10^3， 1   \\le  S  \\le   10^4$； 对于 $100\\%$ 的数据，$1   \\le   T   \\le   3\\times  10^5，0   \\le   M   \\le   10^3， 1   \\le  S   \\le   10^8$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 某次科研调查时得到了 n 个自然数，每个数均不超过 $1.5 \\times 10^9$。已知不相同的数不超过 $10^4$ 个，现在需要统计这些自然数各自出现的次数，并按照自然数从小到大的顺序输出统计结果。 输入输出格式 输入格式 共 $n+1$ 行。 第一行是整数 n，表示自然数的个数； 第 2 至 $n+1$ 每行一个自然数。 输出格式 共 m 行（m 为 n 个自然数中不相同数的个数），按照自然数从小到大的顺序输出。   每行输出 2 个整数，分别是自然数和该数出现的次数，其间用一个空格隔开。 输入输出样例 输入样例 #1 8 2 4 2 4 5 100 2 100 输出样例 #1 2 3 4 2 5 1 100 2 说明 - $40\\%$ 的数据满足：$1  \\le  n  \\le  1000$； - $80\\%$ 的数据满足：$1  \\le  n  \\le  50000$； - $100\\%$ 的数据满足：$1  \\le  n  \\le  200000$，每个数均不超过 $1.5 \\times 10^9$。 NOIP 2007 提高第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 字符串的展开 题目描述 在初赛普及组的“阅读程序写结果”的问题中，我们曾给出一个字符串展开的例子：如果在输入的字符串中，含有类似于 `d-h` 或者 `4-8` 的字串，我们就把它当作一种简写，输出时，用连续递增的字母或数字串替代其中的减号，即，将上面两个子串分别输出为 `defgh` 和 `45678`。在本题中，我们通过增加一些参数的设置，使字符串的展开更为灵活。具体约定如下： (1) 遇到下面的情况需要做字符串的展开：在输入的字符串中，出现了减号 `-` ，减号两侧同为小写字母或同为数字，且按照 `ASCII` 码的顺序，减号右边的字符严格大于左边的字符。 (2) 参数 $p_1$：展开方式。$p_1=1$ 时，对于字母子串，填充小写字母；$p_1=2$ 时，对于字母子串，填充大写字母。这两种情况下数字子串的填充方式相同。$p_1=3$ 时，不论是字母子串还是数字字串，都用与要填充的字母个数相同的星号 `*` 来填充。 (3) 参数 $p_2$：填充字符的重复个数。$p_2=k$ 表示同一个字符要连续填充 k 个。例如，当 $p_2=3$ 时，子串`d-h` 应扩展为 `deeefffgggh`。减号两边的字符不变。 (4) 参数 $p_3$：是否改为逆序：$p_3=1$ 表示维持原来顺序，$p_3=2$ 表示采用逆序输出，注意这时候仍然不包括减号两端的字符。例如当 $p_1=1、p_2=2、p_3=2$ 时，子串 `d-h` 应扩展为 `dggffeeh`。 (5) 如果减号右边的字符恰好是左边字符的后继，只删除中间的减号，例如：`d-e` 应输出为 `de`，`3-4` 应输出为 `34`。如果减号右边的字符按照 `ASCII` 码的顺序小于或等于左边字符，输出时，要保留中间的减号，例如：`d-d` 应输出为 `d-d`，`3-1` 应输出为 `3-1`。 输入输出格式 输入格式 共两行。 第 1 行为用空格隔开的 3 个正整数，依次表示参数 $p_1,p_2,p_3$。 第 2 行为一行字符串，仅由数字、小写字母和减号 `-` 组成。行首和行末均无空格。 输出格式 共一行，为展开后的字符串。 输入输出样例 输入样例 #1 1 2 1 abcs-w1234-9s-4zz 输出样例 #1 abcsttuuvvw1234556677889s-4zz 输入样例 #2 2 3 2 a-d-d 输出样例 #2 aCCCBBBd-d 说明 $40\\%$ 的数据满足：字符串长度不超过 5。 $100\\%$ 的数据满足：$1  \\le  p_1  \\le  3,1  \\le  p_2  \\le  8,1  \\le  p_3  \\le  2$。字符串长度不超过 $100$。 NOIP 2007 提高第二题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:高低位交换 题目描述 给出一个小于 $2^{32}$ 的非负整数。这个数可以用一个 $32$ 位的二进制数表示（不足 $32$ 位用 0 补足）。我们称这个二进制数的前 $16$ 位为“高位”，后 $16$ 位为“低位”。将它的高低位交换，我们可以得到一个新的数。试问这个新的数是多少（用十进制表示）。 例如，数 $1314520$ 用二进制表示为 $0000\\,0000\\,0001\\,0100\\,0000\\,1110\\,1101\\,1000$（添加了 $11$ 个前导 0 补足为 $32$ 位），其中前 $16$ 位为高位，即 $0000\\,0000\\,0001\\,0100$；后 $16$ 位为低位，即 $0000\\,1110\\,1101\\,1000$。将它的高低位进行交换，我们得到了一个新的二进制数 $0000\\,1110\\,1101\\,1000\\,0000\\,0000\\,0001\\,0100$。它即是十进制的 $249036820$。 输入输出格式 输入格式 一个小于 $2^{32}$ 的非负整数 输出格式 将新的数输出 输入输出样例 输入样例 #1 1314520 输出样例 #1 249036820"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:单词方阵 题目描述 给一 $n \\times n$ 的字母方阵，内可能蕴含多个 `yizhong` 单词。单词在方阵中是沿着同一方向连续摆放的。摆放可沿着 8 个方向的任一方向，同一单词摆放时不再改变方向，单词与单词之间可以交叉，因此有可能共用字母。输出时，将不是单词的字母用 `*` 代替，以突出显示单词。 输入输出格式 输入格式 第一行输入一个数 n。$(7 \\le n \\le 100)$。 第二行开始输入 $n \\times n$ 的字母矩阵。 输出格式 突出显示单词的 $n \\times n$ 矩阵。 输入输出样例 输入样例 #1 7 aaaaaaa aaaaaaa aaaaaaa aaaaaaa aaaaaaa aaaaaaa aaaaaaa 输出样例 #1 ******* ******* ******* ******* ******* ******* ******* 输入样例 #2 8 qyizhong gydthkjy nwidghji orbzsfgz hhgrhwth zzzzzozo iwdfrgng yyyygggg 输出样例 #2 *yizhong gy****** n*i***** o**z**** h***h*** z****o** i*****n* y******g"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:相同的题目看多了也会有审美疲劳，于是我舍弃了大家所熟悉的 A+B Problem，改用 A-B 了哈哈！ 题目描述 给出一串正整数数列以及一个正整数 C，要求计算出所有满足 $A - B = C$ 的数对的个数（不同位置的数字一样的数对算不同的数对）。 输入输出格式 输入格式 输入共两行。 第一行，两个正整数 $N,C$。 第二行，N 个正整数，作为要求处理的那串数。 输出格式 一行，表示该串正整数中包含的满足 $A - B = C$ 的数对的个数。 输入输出样例 输入样例 #1 4 1 1 1 2 3 输出样例 #1 3 说明 对于 $75\\%$ 的数据，$1 \\leq N \\leq 2000$。 对于 $100\\%$ 的数据，$1 \\leq N \\leq 2 \\times 10^5，0 \\leq a_i <2^{30}，1 \\leq C < 2^{30}$。 2017/4/29 新添数据两组"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:书本整理 题目描述 `Frank`是一个非常喜爱整洁的人。他有一大堆书和一个书架，想要把书放在书架上。书架可以放下所有的书，所以`Frank`首先将书按高度顺序排列在书架上。但是`Frank`发现，由于很多书的宽度不同，所以书看起来还是非常不整齐。于是他决定从中拿掉k本书，使得书架可以看起来整齐一点。 书架的不整齐度是这样定义的：每两本书宽度的差的绝对值的和。例如有4本书： $1 \\times 2$   $5 \\times 3$   $2 \\times 4$   $3 \\times 1$     那么`Frank`将其排列整齐后是： $1 \\times 2$   $2 \\times 4$   $3 \\times 1$   $5 \\times 3$   不整齐度就是$2+3+2=7$ 已知每本书的高度都不一样，请你求出去掉k本书后的最小的不整齐度。 输入输出格式 输入格式 第一行两个数字n和k，代表书有几本，从中去掉几本。($1 \\le n \\le 100, 1  \\le k<n$) 下面的n行，每行两个数字表示一本书的高度和宽度，均小于$200$。 保证高度不重复 输出格式 一行一个整数，表示书架的最小不整齐度。 输入输出样例 输入样例 #1 4 1 1 2 2 4 3 1 5 3 输出样例 #1 3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:生日 题目描述 cjf 君想调查学校 OI 组每个同学的生日，并按照年龄从大到小的顺序排序。但 cjf 君最近作业很多，没有时间，所以请你帮她排序。 输入输出格式 输入格式 输入共有 $n + 1$ 行， 第 1 行为 OI 组总人数 n； 第 2 行至第 $n+1$ 行分别是每人的姓名 s、出生年 y、月 m、日 d。 输出格式 输出共有 n 行， 即 n 个生日从大到小同学的姓名。（如果有两个同学生日相同，输入靠后的同学先输出） 输入输出样例 输入样例 #1 3 Yangchu 1992 4 23 Qiujingya 1993 10 13 Luowen 1991 8 1 输出样例 #1 Luowen Yangchu Qiujingya 说明 数据保证，$1<n<100，1\\leq |s|<20$。保证年月日实际存在，且年份 $\\in [1960,2020]$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:删数问题 题目描述 键盘输入一个高精度的正整数 N（不超过 $250$ 位），去掉其中任意 k 个数字后剩下的数字按原左右次序将组成一个新的非负整数。编程对给定的 N 和 k，寻找一种方案使得剩下的数字组成的新数最小。 输入输出格式 输入格式 输入两行正整数。 第一行输入一个高精度的正整数 n。 第二行输入一个正整数 k，表示需要删除的数字个数。 输出格式 输出一个整数，最后剩下的最小数。 输入输出样例 输入样例 #1 175438  4 输出样例 #1 13"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:低价购买 题目描述 “低价购买”这条建议是在奶牛股票市场取得成功的一半规则。要想被认为是伟大的投资者，你必须遵循以下的问题建议:“低价购买；再低价购买”。每次你购买一支股票,你必须用低于你上次购买它的价格购买它。买的次数越多越好!你的目标是在遵循以上建议的前提下，求你最多能购买股票的次数。你将被给出一段时间内一支股票每天的出售价，你可以选择在哪些天购买这支股票。每次购买都必须遵循“低价购买；再低价购买”的原则。写一个程序计算最大购买次数。 这里是某支股票的价格清单： $$ \\def\\arraystretch{1.5} \\begin{array}{|c|c|c|c|c|c|c|c|c|c|c|c|c|}\\hline \\textsf{日期} & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 \\cr\\hline \\textsf{价格} & 68 & 69 & 54 & 64 & 68 & 64 & 70 & 67 & 78 & 62& 98 & 87 \\cr\\hline \\end{array}$$ 最优秀的投资者可以购买最多 4 次股票，可行方案中的一种是： $$ \\def\\arraystretch{1.5} \\begin{array}{|c|c|c|c|c|}\\hline \\textsf{日期} & 2 & 5 & 6 & 10 \\cr\\hline \\textsf{价格} & 69 & 68 & 64 & 62 \\cr\\hline \\end{array} $$ 输入输出格式 输入格式 第一行共一个整数 $N\\ (1  \\le  N  \\le 5000)$，股票发行天数 第二行一行 N 个整数，是每天的股票价格。保证是大小不超过 $2^{16}$ 的正整数。 输出格式 输出共一行两个整数，分别为最大购买次数和拥有最大购买次数的方案数（数据保证 $ \\le 2^{31}$）当二种方案“看起来一样”时（就是说它们构成的价格队列一样的时候）,这 2 种方案被认为是相同的。 输入输出样例 输入样例 #1 12 68 69 54 64 68 64 70 67 78 62 98 87 输出样例 #1 4 2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:学生分组 题目描述 有 n 组学生，给出初始时每组中的学生个数，再给出每组学生人数的上界 R 和下界 $L\\ (L \\le R)$，每次你可以在某组中选出一个学生把他安排到另外一组中，问最少要多少次才可以使 N 组学生的人数都在 $[L,R]$ 中。 输入输出格式 输入格式 第一行一个整数 n，表示学生组数； 第二行 n 个整数，表示每组的学生个数； 第三行两个整数 $L,R$，表示下界和上界。 输出格式 一个数，表示最少的交换次数，如果不能满足题目条件输出 $-1$。 输入输出样例 输入样例 #1 2 10 20 10 15 输出样例 #1 5 说明 ### 数据范围及约定 对于全部数据，保证 $1\\le n \\le 50$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[ZJOI2007] 报表统计 题目描述 小 Q 的妈妈是一个出纳，经常需要做一些统计报表的工作。今天是妈妈的生日，小 Q 希望可以帮妈妈分担一些工作，作为她的生日礼物之一。 经过仔细观察，小 Q 发现统计一张报表实际上是维护一个非负整数数列，并且进行一些查询操作。 在最开始的时候，有一个长度为 n 的整数序列 a，并且有以下三种操作：          - `INSERT i k`：在原数列的第 i 个元素后面添加一个新元素 k；如果原数列的第 i 个元素已经添加了若干元素，则添加在这些元素的最后（见样例说明）。 - `MIN_GAP`：查询相邻两个元素的之间差值（绝对值）的最小值。 - `MIN_SORT_GAP`：查询所有元素中最接近的两个元素的差值（绝对值）。 于是小 Q 写了一个程序，使得程序可以自动完成这些操作，但是他发现对于一些大的报表他的程序运行得很慢，你能帮助他改进程序么？ 输入输出格式 输入格式 第一行包含两个整数，分别表示原数列的长度 n 以及操作的次数 m。 第二行为 n 个整数，为初始序列，第 i 个整数表示 $a_i$。 接下来的 m 行，每行一个操作，即`INSERT i k`，`MIN_GAP`，`MIN_SORT_GAP` 中的一种（无多余空格或者空行）。 输出格式 对于每一个 `MIN_GAP` 和 `MIN_SORT_GAP` 命令，输出一行答案即可。 输入输出样例 输入样例 #1 3 5 5 3 1 INSERT 2 9 MIN_SORT_GAP INSERT 2 6 MIN_GAP MIN_SORT_GAP 输出样例 #1 2 2 1 说明 #### 样例输入输出 1 解释 一开始的序列为 $\\{5,3,1\\}$。 执行操作 `INSERT 2  9` 将得到 $\\{5,3,9,1\\}$，此时 `MIN_GAP` 为 2，`MIN_SORT_GAP` 为 2。 再执行操作 `INSERT 2  6` 将得到：$\\{5,3, 9, 6, 1\\}$。 注意这个时候原序列的第 2 个元素后面已经添加了一个 9，此时添加的 6 应加在 9 的后面。这个时候 `MIN_GAP` 为 2，`MIN_SORT_GAP` 为 1。 ---"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:A 地区在地震过后，连接所有村庄的公路都造成了损坏而无法通车。政府派人修复这些公路。 题目描述 给出 A 地区的村庄数 N，和公路数 M，公路是双向的。并告诉你每条公路的连着哪两个村庄，并告诉你什么时候能修完这条公路。问最早什么时候任意两个村庄能够通车，即最早什么时候任意两条村庄都存在至少一条修复完成的道路（可以由多条公路连成一条道路）。 输入输出格式 输入格式 第 1 行两个正整数 $N,M$。 下面 M 行，每行 3 个正整数 $x,y,t$，告诉你这条公路连着 $x,y$ 两个村庄，在时间t时能修复完成这条公路。 输出格式 如果全部公路修复完毕仍然存在两个村庄无法通车，则输出 $-1$，否则输出最早什么时候任意两个村庄能够通车。 输入输出样例 输入样例 #1 4 4 1 2 6 1 3 4 1 4 5 4 2 3 输出样例 #1 5 说明 $1\\leq x, y\\leq N \\le 10 ^ 3，1\\leq M, t \\le 10 ^ 5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:波浪数 题目描述 波浪数是在一对数字之间交替转换的数，如$1212121$，双重波浪数则是指在两种进制下都是波浪数的数，如十进制数 $191919$ 是一个十进制下的波浪数，它对应的十一进制数 $121212$ 也是一个波浪数，所以十进制数 $191919$ 是一个双重波浪数。 类似的可以定义三重波浪数，三重波浪数在三种不同的进制中都是波浪数，甚至还有四重波浪数，如 $300_{(10)}=606_{(7)}=363_{(9)}=454_{(8)}=1\\mathtt{A}1_{(13)}$，下标表示采用的进制。你的任务就是在指定范围内找出双重、三重、四重波浪数。 输入输出格式 输入格式 单独一行包含五个用空格隔开的十进制整数 $l, r, L, R, k。[l, r]$ 表示应当考虑的进制的范围，$[L,R]$ 表示应当考虑的数字的范围，k 表示你应该找的波浪数的重数。 输出格式 从小到大以十进制形式输出指定范围内的指定重数的波浪数。一行输出一个数。 输入输出样例 输入样例 #1 10 11 190000 960000 2 输出样例 #1 191919 383838 575757 767676 959595 说明 ### 数据范围及约定 对于全部数据，保证 $2\\le l\\le r\\le 32，1\\le L\\le R\\le 10^7，k\\in \\{2, 3, 4\\}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:杂务 题目描述 John 的农场在给奶牛挤奶前有很多杂务要完成，每一项杂务都需要一定的时间来完成它。比如：他们要将奶牛集合起来，将他们赶进牛棚，为奶牛清洗乳房以及一些其它工作。尽早将所有杂务完成是必要的，因为这样才有更多时间挤出更多的牛奶。 当然，有些杂务必须在另一些杂务完成的情况下才能进行。比如：只有将奶牛赶进牛棚才能开始为它清洗乳房，还有在未给奶牛清洗乳房之前不能挤奶。我们把这些工作称为完成本项工作的准备工作。至少有一项杂务不要求有准备工作，这个可以最早着手完成的工作，标记为杂务 1。 John 有需要完成的 n 个杂务的清单，并且这份清单是有一定顺序的，杂务 $k\\ (k>1)$ 的准备工作只可能在杂务 1 至 $k-1$ 中。 写一个程序依次读入每个杂务的工作说明。计算出所有杂务都被完成的最短时间。当然互相没有关系的杂务可以同时工作，并且，你可以假定 John 的农场有足够多的工人来同时完成任意多项任务。 输入输出格式 输入格式 第1行：一个整数 $n\\ (3 \\le n \\le 10{,}000)$，必须完成的杂务的数目； 第 2 至 $n+1$ 行，每行有一些用空格隔开的整数，分别表示： - 工作序号（保证在输入文件中是从 1 到 n 有序递增的）； - 完成工作所需要的时间 $len\\ (1 \\le len \\le 100)$； - 一些必须完成的准备工作，总数不超过 $100$ 个，由一个数字 0 结束。有些杂务没有需要准备的工作只描述一个单独的 0。 保证整个输入文件中不会出现多余的空格。 输出格式 一个整数，表示完成所有杂务所需的最短时间。 输入输出样例 输入样例 #1 7 1 5 0 2 2 1 0 3 3 2 0 4 6 1 0 5 1 2 4 0 6 8 2 4 0 7 4 3 5 6 0 输出样例 #1 23"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:“非常男女”计划 题目描述 近来，初一年的 `XXX` 小朋友致力于研究班上同学的配对问题（别想太多，仅是舞伴），通过各种推理和实验，他掌握了大量的实战经验。例如，据他观察，身高相近的人似乎比较合得来。 万圣节来临之际，`XXX` 准备在学校策划一次大型的 “非常男女” 配对活动。对于这次活动的参与者，`XXX` 有自己独特的选择方式。他希望能选择男女人数相等且身高都很接近的一些人。这种选择方式实现起来很简单。他让学校的所有人按照身高排成一排，然后从中选出连续的若干个人，使得这些人中男女人数相等。为了使活动更热闹，`XXX` 当然希望他能选出的人越多越好。请编写程序告诉他，他最多可以选出多少人来。 输入输出格式 输入格式 第一行有一个正整数 $n\\ (1\\le n \\le 10^5)$，代表学校的人数。 第二行有 n 个用空格隔开的数，这些数只能是 0 或 1，其中，0 代表是一个女生，1 代表是一个男生。 输出格式 输出一个非负整数。这个数表示在输入数据中最长的一段男女人数相等的子序列长度。 如果不存在男女人数相等的子序列，请输出 0。 输入输出样例 输入样例 #1 9 0 1 0 0 0 1 1 0 0 输出样例 #1 6"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最大子段和 题目描述 给出一个长度为 n 的序列 a，选出其中连续且非空的一段使得这段和最大。 输入输出格式 输入格式 第一行是一个整数，表示序列的长度 n。 第二行有 n 个整数，第 i 个整数表示序列的第 i 个数字 $a_i$。 输出格式 输出一行一个整数表示答案。 输入输出样例 输入样例 #1 7 2 -4 3 -1 2 -4 3 输出样例 #1 4 说明 #### 样例 1 解释 选取 $[3, 5]$ 子段 $\\{3, -1, 2\\}$，其和为 4。 #### 数据规模与约定 - 对于 $40\\%$ 的数据，保证 $n \\leq 2 \\times 10^3$。 - 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 2 \\times 10^5，-10^4 \\leq a_i \\leq 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:车厢重组 题目描述 在一个旧式的火车站旁边有一座桥，其桥面可以绕河中心的桥墩水平旋转。一个车站的职工发现桥的长度最多能容纳两节车厢，如果将桥旋转 $180$ 度，则可以把相邻两节车厢的位置交换，用这种方法可以重新排列车厢的顺序。于是他就负责用这座桥将进站的车厢按车厢号从小到大排列。他退休后，火车站决定将这一工作自动化，其中一项重要的工作是编一个程序，输入初始的车厢顺序，计算最少用多少步就能将车厢排序。 输入输出格式 输入格式 共两行。   第一行是车厢总数 $N( \\le 10000)$。    第二行是 N 个不同的数表示初始的车厢顺序。 输出格式 一个整数，最少的旋转次数。 输入输出样例 输入样例 #1 4 4 3 2 1  输出样例 #1 6"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2016] 优秀的拆分 题目描述 如果一个字符串可以被拆分为 $\\text{AABB}$ 的形式，其中 $\\text{A}$ 和 $\\text{B}$ 是任意**非空**字符串，则我们称该字符串的这种拆分是优秀的。   例如，对于字符串 $ \\texttt{aabaabaa} $ ，如果令 $\\text{A}=\\texttt{aab}，\\text{B}=\\texttt{a}$，我们就找到了这个字符串拆分成 $\\text{AABB}$ 的一种方式。 一个字符串可能没有优秀的拆分，也可能存在不止一种优秀的拆分。   比如我们令 $\\text{A}=\\texttt{a}，\\text{B}=\\texttt{baa}$，也可以用 $\\text{AABB}$ 表示出上述字符串；但是，字符串 $\\texttt{abaabaa}$ 就没有优秀的拆分。 现在给出一个长度为 n 的字符串 S，我们需要求出，在它所有子串的所有拆分方式中，优秀拆分的总个数。这里的子串是指字符串中连续的一段。 以下事项需要注意： 1. 出现在不同位置的相同子串，我们认为是不同的子串，它们的优秀拆分均会被记入答案。 2. 在一个拆分中，允许出现 $\\text{A}=\\text{B}$。例如 $\\texttt{cccc}$ 存在拆分 $\\text{A}=\\text{B}=\\texttt{c}$。 3. 字符串本身也是它的一个子串。 输入输出格式 输入格式 每个输入文件包含多组数据。 输入文件的第一行只有一个整数 T，表示数据的组数。 接下来 T 行，每行包含一个仅由英文小写字母构成的字符串 S，意义如题所述。 输出格式 输出 T 行，每行包含一个整数，表示字符串 S 所有子串的所有拆分中，总共有多少个是优秀的拆分。 输入输出样例 输入样例 #1 4 aabbbb cccccc aabaabaabaa bbaabaababaaba 输出样例 #1 3 5 4 7 说明 ### 样例解释 我们用 $S[i, j]$ 表示字符串 S 第 i 个字符到第 j 个字符的子串（从 1 开始计数）。 第一组数据中，共有三个子串存在优秀的拆分：   $S[1,4]=\\texttt{aabb}$，优秀的拆分为 $\\text{A}=\\texttt{a}，\\text{B}=\\texttt{b}$；   $S[3,6]=\\texttt{bbbb}$，优秀的拆分为 $\\text{A}=\\texttt{b}，\\text{B}=\\texttt{b}$；   $S[1,6]=\\texttt{aabbbb}$，优秀的拆分为 $\\text{A}=\\texttt{a}，\\text{B}=\\texttt{bb}$。   而剩下的子串不存在优秀的拆分，所以第一组数据的答案是 3。 第二组数据中，有两类，总共四个子串存在优秀的拆分：   对于子串 $S[1,4]=S[2,5]=S[3,6]=\\texttt{cccc}$，它们优秀的拆分相同，均为 $\\text{A}=\\texttt{c}，\\text{B}=\\texttt{c}$，但由于这些子串位置不同，因此要计算三次；   对于子串 $S[1,6]=\\texttt{cccccc}$，它优秀的拆分有两种：$\\text{A}=\\texttt{c}，\\text{B}=\\texttt{cc}$ 和 $\\text{A}=\\texttt{cc}，\\text{B}=\\texttt{c}$，它们是相同子串的不同拆分，也都要计入答案。   所以第二组数据的答案是 $3+2=5$。 第三组数据中，$S[1,8]$ 和 $S[4,11]$ 各有两种优秀的拆分，其中 $S[1,8]$ 是问题描述中的例子，所以答案是 $2+2=4$。 第四组数据中，$S[1,4]，S[6,11]，S[7,12]，S[2,11]，S[1,8]$ 各有一种优秀的拆分，$S[3,14]$ 有两种优秀的拆分，所以答案是 $5+2=7$。 ### 数据范围 对于全部的测试点，保证 $1 \\leq T \\leq 10$。以下对数据的限制均是对于单组输入数据而言的，也就是说同一个测试点下的 T 组数据均满足限制条件。 我们假定 n 为字符串 S 的长度，每个测试点的详细数据范围见下表： | 测试点编号   | $n \\leq$  | 特殊性质           | | ------------ | --------- | ------------------ | | $1 \\sim 2$   | $300$     | S 中所有字符相同 | | $3 \\sim 4$   | $2\\,000$  | S 中所有字符相同 | | $5 \\sim 6$   | $10$      |                    | | $7 \\sim 8$   | $20$      |                    | | $9 \\sim 10$  | $30$      |                    | | $11 \\sim 12$ | $50$      |                    | | $13 \\sim 14$ | $100$     |                    | | $15$         | $200$     |                    | | $16$         | $300$     |                    | | $17$         | $500$     |                    | | $18$         | $1\\,000$  |                    | | $19$         | $2\\,000$  |                    | | $20$         | $30\\,000$ |                    |"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:我们称序列 $a=\\lang a_1,a_2,\\cdots,a_n\\rang$ 的字典序小于序列 $b=\\lang b_1,b_2,\\cdots,b_n\\rang$ 的字典序，当且仅当存在一个位置 $p$，满足 $a_1=b_1,a_2=b_2,\\cdots,a_{p-1}=b_{p-1},a_p<b_p$。 题目描述 `FJ` and his cows enjoy playing a mental game. They write down the numbers from 1 to$ N(1 \\le N  \\le 10)$ in a certain order and then sum adjacent numbers to produce a new list with one fewer number.  They repeat this until only a single number is left.  For example, one instance of the game (when $N=4$) might go like this: ```cpp     3   1   2   4       4   3   6         7   9          16 ``` Behind `FJ`'s back, the cows have started playing a more difficult game, in which they try to determine the starting sequence from only the final total and the number N.  Unfortunately, the game is a bit above `FJ`'s mental arithmetic capabilities."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 给出 B 地区的村庄数 N，村庄编号从 0 到 $N-1$，和所有 M 条公路的长度，公路是双向的。并给出第 i 个村庄重建完成的时间 $t_i$，你可以认为是同时开始重建并在第 $t_i$ 天重建完成，并且在当天即可通车。若 $t_i$ 为 0 则说明地震未对此地区造成损坏，一开始就可以通车。之后有 Q 个询问 $(x,y,t)$，对于每个询问你要回答在第 t 天，从村庄 x 到村庄 y 的最短路径长度为多少。如果无法找到从 x 村庄到 y 村庄的路径，经过若干个已重建完成的村庄，或者村庄 x 或村庄 y 在第 t 天仍未重建完成，则需要输出 $-1$。 输入输出格式 输入格式 第一行包含两个正整数 $N,M$，表示了村庄的数目与公路的数量。 第二行包含 N 个非负整数 $t_0,t_1,\\cdots,t_{N-1}$，表示了每个村庄重建完成的时间，数据保证了 $t_0 \\le t_1 \\le \\cdots \\le t_{N-1}$。 接下来 M 行，每行 3 个非负整数 $i,j,w，w$ 为不超过 $10000$ 的正整数，表示了有一条连接村庄 i 与村庄 j 的道路，长度为 w，保证 $i\\neq j$，且对于任意一对村庄只会存在一条道路。 接下来一行也就是 $M+3$ 行包含一个正整数 Q，表示 Q 个询问。 接下来 Q 行，每行 3 个非负整数 $x,y,t$，询问在第 t 天，从村庄 x 到村庄 y 的最短路径长度为多少，数据保证了 t 是不下降的。 输出格式 共 Q 行，对每一个询问 $(x,y,t)$ 输出对应的答案，即在第 t 天，从村庄 x 到村庄 y 的最短路径长度为多少。如果在第 t 天无法找到从 x 村庄到 y 村庄的路径，经过若干个已重建完成的村庄，或者村庄 x 或村庄 y 在第 t 天仍未修复完成，则输出 $-1$。 输入输出样例 输入样例 #1 4 5 1 2 3 4 0 2 1 2 3 1 3 1 2 2 1 4 0 3 5 4 2 0 2 0 1 2 0 1 3 0 1 4 输出样例 #1 -1 -1 5 4 说明 - 对于 $30\\%$ 的数据，有 $N\\le 50$； - 对于 $30\\%$ 的数据，有 $t_i=0$，其中有 $20\\%$ 的数据有 $t_i=0$ 且 $N>50$； - 对于 $50\\%$ 的数据，有 $Q\\le 100$； - 对于 $100\\%$ 的数据，有 $1\\le N\\le 200，0\\le M\\le \\dfrac{N\\times(N-1)}{2}，1\\le Q\\le 50000$，所有输入数据涉及整数均不超过 $10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小木棍 题目描述 乔治有一些同样长的小木棍，他把这些木棍随意砍成几段，直到每段的长都不超过 $50$。 现在，他想把小木棍拼接成原来的样子，但是却忘记了自己开始时有多少根木棍和它们的长度。 给出每段小木棍的长度，编程帮他找出原始木棍的最小可能长度。 输入输出格式 输入格式 第一行是一个整数 n，表示小木棍的个数。   第二行有 n 个整数，表示各个木棍的长度 $a_i$。 输出格式 输出一行一个整数表示答案。 输入输出样例 输入样例 #1 9 5 2 1 5 2 1 5 2 1 输出样例 #1 6 说明 对于全部测试点，$1 \\leq n \\leq 65，1 \\leq a_i \\leq 50$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:环状最大两段子段和 题目描述 给出一段长度为 n 的环状序列 a，即认为 $a_1$ 和 $a_n$ 是相邻的，选出其中连续不重叠且非空的两段使得这两段和最大。 输入输出格式 输入格式 第一行是一个整数 n，表示序列的长度。 第二行有 n 个整数，描述序列 a，第 i 个数字表示  $a_i$。 输出格式 一行一个整数，为最大的两段子段和是多少。 输入输出样例 输入样例 #1 7 2 -4 3 -1 2 -4 3 输出样例 #1 9 说明 #### 数据规模与约定 对于全部的测试点，保证 $2 \\leq n \\leq 2 \\times 10^5，-10^4 \\leq a_i \\leq 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最大子树和 题目描述 小明对数学饱有兴趣，并且是个勤奋好学的学生，总是在课后留在教室向老师请教一些问题。一天他早晨骑车去上课，路上见到一个老伯正在修剪花花草草，顿时想到了一个有关修剪花卉的问题。于是当日课后，小明就向老师提出了这个问题： 一株奇怪的花卉，上面共连有 N 朵花，共有 $N-1$ 条枝干将花儿连在一起，并且未修剪时每朵花都不是孤立的。每朵花都有一个“美丽指数”，该数越大说明这朵花越漂亮，也有“美丽指数”为负数的，说明这朵花看着都让人恶心。所谓“修剪”，意为：去掉其中的一条枝条，这样一株花就成了两株，扔掉其中一株。经过一系列“修剪“之后，还剩下最后一株花（也可能是一朵）。老师的任务就是：通过一系列“修剪”（也可以什么“修剪”都不进行），使剩下的那株（那朵）花卉上所有花朵的“美丽指数”之和最大。 老师想了一会儿，给出了正解。小明见问题被轻易攻破，相当不爽，于是又拿来问你。 输入输出格式 输入格式 第一行一个整数 $n\\ (1\\le N\\le 16000)$。表示原始的那株花卉上共 n 朵花。 第二行有 n 个整数，第 i 个整数表示第 i 朵花的美丽指数。 接下来 $n-1$ 行每行两个整数 $a,b$，表示存在一条连接第 a 朵花和第 b 朵花的枝条。 输出格式 一个数，表示一系列“修剪”之后所能得到的“美丽指数”之和的最大值。保证绝对值不超过 $2147483647$。 输入输出样例 输入样例 #1 7 -1 -1 -1 1 1 1 0 1 4 2 5 3 6 4 7 5 7 6 7 输出样例 #1 3 说明 ### 数据范围及约定 - 对于 $60\\%$ 的数据，有 $1\\le N\\le 1000$； - 对于 $100\\%$ 的数据，有 $1\\le N\\le 16000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:取数游戏 题目描述 一个 $N\\times M$ 的由非负整数构成的数字矩阵，你需要在其中取出若干个数字，使得取出的任意两个数字不相邻（若一个数字在另外一个数字相邻 8 个格子中的一个即认为这两个数字相邻），求取出数字和最大是多少。 输入输出格式 输入格式 第一行有一个正整数 T，表示了有 T 组数据。 对于每一组数据，第一行有两个正整数 N 和 M，表示了数字矩阵为 N 行 M 列。 接下来 N 行，每行 M 个非负整数，描述了这个数字矩阵。 输出格式 共 T 行，每行一个非负整数，输出所求得的答案。 输入输出样例 输入样例 #1 3 4 4 67 75 63 10 29 29 92 14 21 68 71 56 8 67 91 25 2 3 87 70 85 10 3 17 3 3 1 1 1 1 99 1 1 1 1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 该算法具体如下：对一个长度为 n 的字符串 S，首先根据它构造 n 个字符串，其中第 i 个字符串由将 S 的前 $i-1$ 个字符置于末尾得到。然后把这 n 个字符串按照首字符从小到大排序，如果两个字符串的首字符相等，则按照它们**在 S 中的位置**从小到大排序。排序后的字符串的尾字符可以组成一个新的字符串 $S'$ ，它的长度也是 n，并且包含了 S 中的每一个字符。最后输出 $S'$ 以及 S 的首字符在 $S'$ 中的位置 p。 举例：S 是 `example` 1. 构造 n 个字符串。 ```plain example xamplee ampleex mpleexa pleexam leexamp eexampl ``` 2. 将字符串排序。 ```plain ampleex example eexampl leexamp mpleexa pleexam xamplee ``` 3. 压缩结果。 $S' = \\texttt{xelpame}，p = 7$ 由于英语单词构造的特殊性，某些字母对出现的频率很高，因此在 $S'$ 中相同的字母有很大几率排在一起，从而提高 $S'$ 的压缩率。虽然这种算法利用了英语单词的特性，然而在实践的过程中，人们发现它几乎适用于所有的文件压缩。 请你编一个程序，读入 $S'$ 和 p，输出字符串 S。 保证 S 仅含小写字母（所以输入的 $S'$ 也仅含小写字母）。 输入输出格式 输入格式 共三行。 第一行是一个整数 n（$1 \\le n \\le 10000$），代表 $S'$ 的长度。 第二行是字符串 $S'$。 第三行是整数 p。 输出格式 一行，S。 输入输出样例 输入样例 #1 7 xelpame 7 输出样例 #1 example"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 笨小猴 题目描述 笨小猴的词汇量很小，所以每次做英语选择题的时候都很头疼。但是他找到了一种方法，经试验证明，用这种方法去选择选项的时候选对的几率非常大！ 这种方法的具体描述如下：假设 $\\text{maxn}$ 是单词中出现次数最多的字母的出现次数，$\\text{minn}$ 是单词中出现次数最少的字母的出现次数，如果 $\\text{maxn}-\\text{minn}$ 是一个质数，那么笨小猴就认为这是个 Lucky Word，这样的单词很可能就是正确的答案。 输入输出格式 输入格式 一个单词，其中只可能出现小写字母，并且长度小于 $100$。 输出格式 共两行，第一行是一个字符串，假设输入的的单词是 Lucky Word，那么输出 `Lucky Word`，否则输出 `No Answer`； 第二行是一个整数，如果输入单词是 `Lucky Word`，输出 $\\text{maxn}-\\text{minn}$ 的值，否则输出 0。 输入输出样例 输入样例 #1 error 输出样例 #1 Lucky Word 2 输入样例 #2 olympic 输出样例 #2 No Answer 0 说明 【输入输出样例 1 解释】 单词 `error` 中出现最多的字母 $\\texttt r$ 出现了 3 次，出现次数最少的字母出现了 1 次，$3-1=2，2$ 是质数。 【输入输出样例 2 解释】 单词 `olympic` 中出现最多的字母 $\\texttt i$ 出现了 1 次，出现次数最少的字母出现了 1 次，$1-1=0，0$ 不是质数。 （本处原题面错误已经修正） noip2008 提高第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:词链 题目描述 如果单词 X 的末字母与单词 Y 的首字母相同，则 X 与 Y 可以相连成 $X.Y$。（注意：X、Y 之间是英文的句号 `.`）。例如，单词 `dog` 与单词 `gopher`，则 `dog` 与 `gopher` 可以相连成 `dog.gopher`。 另外还有一些例子： - `dog.gopher` - `gopher.rat` - `rat.tiger` - `aloha.aloha` - `arachnid.dog` 连接成的词可以与其他单词相连，组成更长的词链，例如： `aloha.arachnid.dog.gopher.rat.tiger` 注意到，`.` 两边的字母一定是相同的。 现在给你一些单词，请你找到字典序最小的词链，使得每个单词在词链中出现且仅出现一次。注意，相同的单词若出现了 k 次就需要输出 k 次。 输入输出格式 输入格式 第一行是一个正整数 n（$1 \\le n \\le 1000$），代表单词数量。 接下来共有 n 行，每行是一个由 1 到 $20$ 个小写字母组成的单词。 输出格式 只有一行，表示组成字典序最小的词链，若不存在则只输出三个星号 `***`。 输入输出样例 输入样例 #1 6 aloha arachnid dog gopher rat tiger 输出样例 #1 aloha.arachnid.dog.gopher.rat.tiger 说明 - 对于 $40\\%$ 的数据，有 $n \\leq 10$； - 对于 $100\\%$ 的数据，有 $n \\leq 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[HNOI2001] 求正整数 题目描述 对于任意输入的正整数 n，请求出具有 n 个不同因子的最小正整数 m。 例如：$n=4$，则 $m=6$，因为 6 有 4 个不同整数因子 $1,2,3,6$；而且是最小的有 4 个因子的整数。 输入输出格式 输入格式 输入有且仅有一行一个整数，代表 n。 输出格式 输出一行一个整数，代表符合条件的最小正整数 m。 输入输出样例 输入样例 #1  4 输出样例 #1 6 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 5 \\times 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[ZJOI2007] 矩阵游戏 题目描述 小 Q 是一个非常聪明的孩子，除了国际象棋，他还很喜欢玩一个电脑益智游戏――矩阵游戏。矩阵游戏在一个 $n \\times n$ 黑白方阵进行（如同国际象棋一般，只是颜色是随意的）。每次可以对该矩阵进行两种操作： - 行交换操作：选择矩阵的任意两行，交换这两行（即交换对应格子的颜色）。 - 列交换操作：选择矩阵的任意两列，交换这两列（即交换对应格子的颜色）。 游戏的目标，即通过若干次操作，使得方阵的主对角线(左上角到右下角的连线)上的格子均为黑色。 对于某些关卡，小 Q 百思不得其解，以致他开始怀疑这些关卡是不是根本就是无解的！于是小 Q 决定写一个程序来判断这些关卡是否有解。 输入输出格式 输入格式 **本题单测试点内有多组数据**。 第一行包含一个整数 T，表示数据的组数，对于每组数据，输入格式如下： 第一行为一个整数，代表方阵的大小 n。 接下来 n 行，每行 n 个非零即一的整数，代表该方阵。其中 0 表示白色，1 表示黑色。 输出格式 对于每组数据，输出一行一个字符串，若关卡有解则输出 `Yes`，否则输出 `No`。 输入输出样例 输入样例 #1 2 2 0 0 0 1 3 0 0 1 0 1 0 1 0 0 输出样例 #1 No Yes 说明 #### 数据规模与约定 - 对于 $20\\%$ 的数据，保证 $n \\leq 7$。 - 对于 $50\\%$ 的数据，保证 $n \\leq 50$。 - 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 200，1 \\leq T \\leq 20$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:红牌 题目描述 某地临时居民想获得长期居住权就必须申请拿到红牌。获得红牌的过程是相当复杂 ，一共包括 N 个步骤。每一步骤都由政府的某个工作人员负责检查你所提交的材料是否符合条件。为了加快进程，每一步政府都派了 M 个工作人员来检查材料。不幸的是，并不是每一个工作人员效率都很高。尽管如此，为了体现“公开政府”的政策，政府部门把每一个工作人员的处理一个申请所花天数都对外界公开。 为了防止所有申请人都到效率高的工作人员去申请。这 $M \\times N$ 个工作人员被分成 M 个小组。每一组在每一步都有一个工作人员。申请人可以选择任意一个小组也可以更换小组。但是更换小组是很严格的，一定要相邻两个步骤之间来更换，而不能在某一步骤已经开始但还没结束的时候提出更换，并且也只能从原来的小组 I 更换到小组 $I+1$，当然从小组 M 可以更换到小组 1。对更换小组的次数没有限制。 例如：下面是 3 个小组，每个小组 4 个步骤工作天数： - 小组 1： $2, 6 ,1 ,8$； - 小组 2：$3,6, 2, 6$； - 小组 3：$ 4, 2 ,3 ,6$。 例子中，可以选择小组 1 来完成整个过程一共花了$2+6+1+8=17$ 天，也可以从小组 2 开始第一步，然后第二步更换到小组 3，第三步到小组 1，第四步再到小组 2，这样一共花了 $3+2+1+6=12$ 天。你可以发现没有比这样效率更高的选择。 你的任务是求出完成申请所花最少天数。 输入输出格式 输入格式 第一行是两个正整数 N 和 M，表示步数和小组数。 接下来有 M 行，每行有 N 个非负整数，第 $i+1(1 \\le i  \\le M)$ 行的第 j 个数表示小组 i 完成第 j 步所花的天数，天数都不超过 $1000000$。 输出格式 一个正整数，为完成所有步所需最少天数。 输入输出样例 输入样例 #1 4 3  2 6 1 8 3 6 2 6 4 2 3 6 输出样例 #1 12 说明 对于 $100\\%$ 的数据，$1\\le N,M \\le 2000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[ZJOI2007] 时态同步 题目描述 小 Q 在电子工艺实习课上学习焊接电路板。一块电路板由若干个元件组成，我们不妨称之为节点，并将其用数字 $1,2,3\\cdots$ 进行标号。电路板的各个节点由若干不相交的导线相连接，且对于电路板的任何两个节点，都存在且仅存在一条通路（通路指连接两个元件的导线序列）。 在电路板上存在一个特殊的元件称为“激发器”。当激发器工作后，产生一个激励电流，通过导线传向每一个它所连接的节点。而中间节点接收到激励电流后，得到信息，并将该激励电流传向与它连接并且尚未接收到激励电流的节点。最终，激烈电流将到达一些“终止节点”――接收激励电流之后不再转发的节点。 激励电流在导线上的传播是需要花费时间的，对于每条边 e，激励电流通过它需要的时间为 $t_e$，而节点接收到激励电流后的转发可以认为是在瞬间完成的。现在这块电路板要求每一个“终止节点”同时得到激励电路――即保持时态同步。由于当前的构造并不符合时态同步的要求，故需要通过改变连接线的构造。目前小 Q 有一个道具，使用一次该道具，可以使得激励电流通过某条连接导线的时间增加一个单位。请问小 Q 最少使用多少次道具才可使得所有的“终止节点”时态同步？ 输入输出格式 输入格式 第一行包含一个正整数 N，表示电路板中节点的个数。 第二行包含一个整数 S，为该电路板的激发器的编号。 接下来 $N-1$ 行，每行三个整数 $a,b,t$。表示该条导线连接节点 a 与节点 b，且激励电流通过这条导线需要 t 个单位时间。 输出格式 仅包含一个整数 V，为小 Q 最少使用的道具次数。 输入输出样例 输入样例 #1 3 1 1 2 1 1 3 3 输出样例 #1 2 说明 - 对于 $40\\%$ 的数据，$1\\le N\\le 1000$。 - 对于 $100\\%$ 的数据，$1\\le N\\le 5\\times 10^5$。 对于所有的数据，$1\\le t_e\\le 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数字生成游戏 题目描述 小明完成了这样一个数字生成游戏，对于一个不包含0的数字s来说，有以下3种生成新的数的规则： 1.    将s的任意两位对换生成新的数字，例如$143$可以生成$314,413,134$； 2.    将s的任意一位删除生成新的数字，例如$143$可以生成$14,13,43$ 3.    在s的相邻两位之间$s_i,s_{i + 1}$之间插入一个数字x，x需要满足$s_i<x<s_{i + 1}$。例如$143$可以生成$1243,1343$，但是不能生成$1143,1543$等。 现在小明想知道，在这个生成法则下，从s开始，每次生成一个数，可以用然后用新生成的数生成另外一个数，不断生成直到生成t至少需要多少次生成操作。 另外，小明给规则3又加了一个限制，即生成数的位数不能超过初始数s的位数。若s是$143$，那么$1243与1343$都是无法生成的；若s为$1443$，那么可以将s删除变为$143$，再生成$1243或1343$。 输入输出格式 输入格式 第一行包含1个正整数，为初始数字s。 第二行包含一个正整数m，为询问个数。   接下来m行，每行一个整数t（t不包含0），表示询问从s开始不断生成数字到t最少要进行多少次操作。任两个询问独立，即上一个询问生成过的数到下一个询问都不存在，只剩下初始数字s。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:教主的花园 题目描述 教主有着一个环形的花园，他想在花园周围均匀地种上 n 棵树，但是教主花园的土壤很特别，每个位置适合种的树都不一样，一些树可能会因为不适合这个位置的土壤而损失观赏价值。 教主最喜欢 3 种树，这 3 种树的高度分别为 $10,20,30$。教主希望这一圈树种得有层次感，所以任何一个位置的树要比它相邻的两棵树的高度都高或者都低，并且在此条件下，教主想要你设计出一套方案，使得观赏价值之和最高。 输入输出格式 输入格式 第一行为一个正整数 n，表示需要种的树的棵树。 接下来 n 行，每行 3 个不超过 $10000$ 的正整数 $a_i,b_i,c_i$，按顺时针顺序表示了第 i 个位置种高度为 $10,20,30$ 的树能获得的观赏价值。 第 i 个位置的树与第 $i+1$ 个位置的树相邻，特别地，第 1 个位置的树与第 n 个位置的树相邻。 输出格式 一个正整数，为最大的观赏价值和。 输入输出样例 输入样例 #1 4  1 3 2  3 1 2  3 1 2  3 1 2 输出样例 #1 11 说明 【样例说明】。 第 1 至 n 个位置分别种上高度为 $20,10,30,10$ 的树，价值最高。 【数据规模与约定】。 - 对于 $20\\%$ 的数据，有 $n\\le 10$； - 对于 $40\\%$ 的数据，有 $n\\le 100$；  - 对于 $60\\%$ 的数据，有 $n\\le 1000$； - 对于 $100\\%$ 的数据，有 $4\\le n\\le 10^5$，并保证 n 一定为偶数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO3.2] 阶乘问题 题目描述 也许你早就知道阶乘的含义，N 阶乘是由 1 到 N 相乘而产生，如： $$12!=1\\times 2\\times 3\\times 4\\times 5\\times 6\\times 7\\times 8\\times 9\\times 10\\times 11\\times  12=479{,}001{,}600$$ $12$ 的阶乘最右边的非零位为 6。 写一个程序，计算 $N\\ (1\\le N\\le5\\times 10^7)$ 阶乘的最右边的非零位的值。 **注意**：$10{,}000{,}000!$ 的末尾有 $2499999$ 个零。 输入输出格式 输入格式 仅一行包含一个正整数 N。 输出格式 一个整数，表示最右边的非零位的值。 输入输出样例 输入样例 #1 12 输出样例 #1 6 说明 USACO Training Section 3.2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:奇怪的电梯 题目描述 呵呵，有一天我做了一个梦，梦见了一种很奇怪的电梯。大楼的每一层楼都可以停电梯，而且第 i 层楼（$1 \\le i \\le N$）上有一个数字 $K_i（0 \\le K_i \\le N$）。电梯只有四个按钮：开，关，上，下。上下的层数等于当前楼层上的那个数字。当然，如果不能满足要求，相应的按钮就会失灵。例如： $3, 3, 1, 2, 5$ 代表了 $K_i（K_1=3，K_2=3$，……），从 1 楼开始。在 1 楼，按“上”可以到 4 楼，按“下”是不起作用的，因为没有 $-2$ 楼。那么，从 A 楼到 B 楼至少要按几次按钮呢？ 输入输出格式 输入格式 共二行。   第一行为三个用空格隔开的正整数，表示 $N, A, B（1 \\le N \\le 200，1 \\le A, B \\le N$）。 第二行为 N 个用空格隔开的非负整数，表示 $K_i$。 输出格式 一行，即最少按键次数，若无法到达，则输出 `-1`。 输入输出样例 输入样例 #1 5 1 5 3 3 1 2 5 输出样例 #1 3 说明 对于 $100 \\%$ 的数据，$1 \\le N \\le 200，1 \\le A, B \\le N，0 \\le K_i \\le N$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:迎接仪式 题目描述 LHX 教主要来 X 市指导 OI 学习工作了。为了迎接教主，在一条道路旁，一群“Orz 教主 er”穿着文化衫站在道路两旁迎接教主，每件文化衫上都印着大字。一旁的 Orzer 依次摆出“欢迎欢迎欢迎欢迎……”的大字，但是领队突然发现，另一旁穿着“教”和“主”字文化衫的 Orzer 却不太和谐。 为了简单描述这个不和谐的队列，我们用 `j` 替代“教”，`z` 替代“主”。而一个 `j` 与 `z` 组成的序列则可以描述当前的队列。为了让教主看得尽量舒服，你必须调整队列，使得 `jz` 子串尽量多。每次调整你可以交换任意位置上的两个人，也就是序列中任意位置上的两个字母。而因为教主马上就来了，时间仅够最多做 K 次调整（当然可以调整不满 K 次），所以这个问题交给了你。 输入输出格式 输入格式 第一行，两个正整数 $N, K$，分别表示序列长度与最多交换次数。 第二行，一个长度为 N 的字符串，字符串仅由字母 `j` 与字母 `z` 组成，描述了这个序列。 输出格式 一个非负整数，为调整最多 K 次后最后最多能出现多少个 `jz` 子串。 输入输出样例 输入样例 #1 5 2  zzzjj 输出样例 #1 2 说明 **【样例说明】** 第 1 次交换位置 1 上的 `z` 和位置 4 上的 `j`，变为 `jzzzj`； 第 2 次交换位置 4 上的 `z` 和位置 5 上的 `j`，变为 `jzzjz`。 最后的串有 2 个 `jz` 子串。 **【数据规模与约定】** 对于 $10 \\%$ 的数据，有 $N \\le 10$；   对于 $30 \\%$ 的数据，有 $K \\le 10$；   对于 $40 \\%$ 的数据，有 $N \\le 50$；   对于 $100 \\%$ 的数据，有 $1 \\le N \\le 500，1 \\le K \\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:旅行计划 题目描述 小明要去一个国家旅游。这个国家有 N 个城市，编号为 1 至 N，并且有 M 条道路连接着，小明准备从其中一个城市出发，并只往东走到城市 i 停止。 所以他就需要选择最先到达的城市，并制定一条路线以城市 i 为终点，使得线路上除了第一个城市，每个城市都在路线前一个城市东面，并且满足这个前提下还希望游览的城市尽量多。 现在，你只知道每一条道路所连接的两个城市的相对位置关系，但并不知道所有城市具体的位置。现在对于所有的 i，都需要你为小明制定一条路线，并求出以城市 i 为终点最多能够游览多少个城市。 输入输出格式 输入格式 第一行为两个正整数 $N, M$。 接下来 M 行，每行两个正整数 $x, y$，表示了有一条连接城市 x 与城市 y 的道路，保证了城市 x 在城市 y 西面。 输出格式 N 行，第 i 行包含一个正整数，表示以第 i 个城市为终点最多能游览多少个城市。 输入输出样例 输入样例 #1 5 6 1 2 1 3 2 3 2 4 3 4 2 5 输出样例 #1 1 2 3 4 3 说明 均选择从城市 1 出发可以得到以上答案。 - 对于 $20\\%$ 的数据，$1\\le N ≤ 100$； - 对于 $60\\%$ 的数据，$1\\le N ≤ 1000$； - 对于 $100\\%$ 的数据，$1\\le N ≤ 100000，1\\le M ≤ 200000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:第 k 小整数 题目描述 现有 n 个正整数，要求出这 n 个正整数中的第 k 个最小整数（相同大小的整数只计算一次）。 输入输出格式 输入格式 第一行为 n 和 k; 第二行开始为 n 个正整数的值，整数间用空格隔开。 输出格式 第k个最小整数的值；若无解，则输出 `NO RESULT`。 输入输出样例 输入样例 #1 10 3 1 3 3 7 2 5 1 2 4 6 输出样例 #1 3 说明 $n \\leq 10000，k \\leq 1000$，正整数均小于 $30000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:在一个人类基因工作组的任务中，生物学家研究的是：两个基因的相似程度。因为这个研究对疾病的治疗有着非同寻常的作用。 题目描述 两个基因的相似度的计算方法如下： 对于两个已知基因，例如 `AGTGATG` 和 `GTTAG`，将它们的碱基互相对应。当然，中间可以加入一些空碱基 `-`，例如： $$ \\def\\arraystretch{1.5} \\begin{array}{|c|c|c|c|c|c|c|c|} \\hline \\tt A & \\tt G & \\tt T & \\tt G & \\tt A & \\tt T & \\texttt - & \\tt G \\\\ \\hline \\texttt - & \\tt G & \\tt T & \\texttt - & \\texttt - & \\tt T & \\texttt A & \\tt G \\\\ \\hline \\end{array} $$ 这样，两个基因之间的相似度就可以用碱基之间相似度的总和来描述，碱基之间的相似度如下表所示： $$ \\def\\arraystretch{1.5} \\begin{array}{ |c|c|c|c|c|c|} \\hline & \\tt A & \\tt C & \\tt G & \\tt T & \\texttt - \\\\ \\hline \\tt A & 5 & -1 & -2 & -1 & -3\\\\ \\hline \\tt C & -1 & 5 & -3 & -2 & -4 \\\\\\hline \\tt G & -2 & -3 & 5 & -2 & -2 \\\\\\hline \\tt T & -1 & -2 & -2 & 5 & -1 \\\\\\hline \\texttt - & -3 & -4 & -2 & -1 & * \\\\\\hline \\end{array} $$  那么相似度就是：$(-3)+5+5+(-2)+(-3)+5+(-3)+5=9$。因为两个基因的对应方法不唯一，例如又有： $$ \\def\\arraystretch{1.5} \\begin{array}{|c|c|c|c|c|c|c|} \\hline \\tt A & \\tt G & \\tt T & \\tt G & \\tt A & \\tt T & \\tt G \\\\ \\hline \\texttt - & \\tt G & \\tt T & \\texttt T & \\texttt A & \\texttt - & \\tt G \\\\ \\hline \\end{array} $$ 相似度为：$(-3)+5+5+(-2)+5+(-1)+5=14$。规定两个基因的相似度为所有对应方法中，相似度最大的那个。 输入输出格式 输入格式 共两行。每行首先是一个整数 n，表示基因序列的长度；隔一个空格后是一个基因序列，序列中只含 $\\verb!A!,\\verb!C!,\\verb!G!,\\verb!T!$ 四种字母。$1 \\le n\\le 100$。 输出格式 仅一行，即输入基因的相似度。 输入输出样例 输入样例 #1 7 AGTGATG 5 GTTAG 输出样例 #1 14"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:01迷宫 题目描述 有一个仅由数字 0 与 1 组成的 $n \\times n$ 格迷宫。若你位于一格 0 上，那么你可以移动到相邻 4 格中的某一格 1 上，同样若你位于一格 1 上，那么你可以移动到相邻 4 格中的某一格 0 上。 你的任务是：对于给定的迷宫，询问从某一格开始能移动到多少个格子（包含自身）。 输入输出格式 输入格式 第一行为两个正整数 $n,m$。 下面 n 行，每行 n 个字符，字符只可能是 0 或者 1，字符之间没有空格。 接下来 m 行，每行两个用空格分隔的正整数 $i,j$，对应了迷宫中第 i 行第 j 列的一个格子，询问从这一格开始能移动到多少格。 输出格式 m 行，对于每个询问输出相应答案。 输入输出样例 输入样例 #1 2 2 01 10 1 1 2 2 输出样例 #1 4 4 说明 所有格子互相可达。 - 对于 $20\\%$ 的数据，$n \\leq 10$； - 对于 $40\\%$ 的数据，$n \\leq 50$； - 对于 $50\\%$ 的数据，$m \\leq 5$； - 对于 $60\\%$ 的数据，$n,m \\leq 100$； - 对于 $100\\%$ 的数据，$1\\le n \\leq 1000，1\\le m \\leq 100000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:轰炸 题目描述 “我该怎么办？”飞行员 klux 向你求助。 事实上，klux 面对的是一个很简单的问题，但是他实在太菜了。 klux 要想轰炸某个区域内的一些地方，它们是位于平面上的一些点，但是（显然地）klux 遇到了抵抗，所以 klux 只能飞一次，而且由于飞机比较破，一点起飞就只能沿直线飞行，无法转弯。现在他想一次轰炸最多的地方。 输入输出格式 输入格式 第一行一个整数 n。 接下来 n 行，每行有一对整数，表示一个点的坐标。没有一个点会出现两次。 输出格式 一个整数，表示一条直线能覆盖的最多的点数。 输入输出样例 输入样例 #1 5 1 1 2 2 3 3 9 10 10 11 输出样例 #1 3 说明 ### 数据范围 对于全部数据，保证 $1\\le n\\le 700$。 本题翻译并改编自 uva270，数据及解答由 uva 提供。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:进制转换 题目描述 请你编一程序实现两种不同进制之间的数据转换。 输入输出格式 输入格式 共三行，第一行是一个正整数，表示需要转换的数的进制 $n\\ (2\\le n\\le 16)$，第二行是一个 n 进制数，若 $n>10$ 则用大写字母 $\\verb!A!\\sim \\verb!F!$ 表示数码 $10\\sim 15$，并且该 n 进制数对应的十进制的值不超过 $10^9$，第三行也是一个正整数，表示转换之后的数的进制 $m\\ (2\\le m\\le 16)$。 输出格式 一个正整数，表示转换之后的 m 进制数。 输入输出样例 输入样例 #1 16 FF 2 输出样例 #1 11111111"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最短路计数 题目描述 给出一个 N 个顶点 M 条边的无向无权图，顶点编号为 $1\\sim N$。问从顶点 1 开始，到其他每个点的最短路有几条。 输入输出格式 输入格式 第一行包含 2 个正整数 $N,M$，为图的顶点数与边数。 接下来 M 行，每行 2 个正整数 $x,y$，表示有一条由顶点 x 连向顶点 y 的边，请注意可能有自环与重边。 输出格式 共 N 行，每行一个非负整数，第 i 行输出从顶点 1 到顶点 i 有多少条不同的最短路，由于答案有可能会很大，你只需要输出 $ ans \\bmod 100003$ 后的结果即可。如果无法到达顶点 i 则输出 0。 输入输出样例 输入样例 #1 5 7 1 2 1 3 2 4 3 4 2 3 4 5 4 5 输出样例 #1 1 1 1 2 4 说明 1 到 5 的最短路有 4 条，分别为 2 条 $1\\to 2\\to 4\\to 5$ 和 2 条 $1\\to 3\\to 4\\to 5$（由于 $4\\to 5$ 的边有 2 条）。 对于 $20\\%$ 的数据，$1\\le N \\le 100$；   对于 $60\\%$ 的数据，$1\\le N \\le 10^3$；   对于 $100\\%$ 的数据，$1\\le N\\le10^6，1\\le M\\le 2\\times 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:约瑟夫 题目描述 n 个人站成一圈，从某个人开始数数，每次数到 m 的人就被杀掉，然后下一个人重新开始数，直到最后只剩一个人。现在有一圈人，k 个好人站在一起，k 个坏人站在一起。从第一个好人开始数数。你要确定一个最小的 m，使得在第一个好人被杀死前，k 个坏人先被杀死。 输入输出格式 输入格式 一行一个整数 k。 输出格式 一行一个整数 m。 输入输出样例 输入样例 #1 3 输出样例 #1 5 输入样例 #2 4 输出样例 #2 30 说明 $0\\lt k\\lt 14$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:硬币翻转 题目描述 在桌面上有一排硬币，共 N 枚，每一枚硬币均为正面朝上。现在要把所有的硬币翻转成反面朝上，规则是每次可翻转任意 $N-1$ 枚硬币（正面向上的被翻转为反面向上，反之亦然）。求一个最短的操作序列（将每次翻转 $N-1$ 枚硬币成为一次操作）。 输入输出格式 输入格式 一个自然数 N（N 为不大于 $100$ 的偶数）。 输出格式 第一行包含一个整数 S，表示最少需要的操作次数。 接下来的 S 行每行分别表示每次操作后桌上硬币的状态（一行包含 N 个整数 0 或 1，表示每个硬币的状态，0 表示正面向上，1 表示反面向上。不允许输出多余空格。 对于有多种操作方案的情况，则只需**操作的字典序**最小输出一种。 操作的字典序是指，对于一次操作中的每个位置，1 表示翻转，0 表示不反转。 但是需要你输出的是每一次操作完的状态，0 表示正面朝上，1 表示反面朝上。 输入输出样例 输入样例 #1 4 输出样例 #1 4 0111 1100 0001 1111"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:连续自然数和 题目描述 对一个给定的正整数 M，求出所有的连续的正整数段（每一段至少有两个数），这些连续的自然数段中的全部数之和为 M。 例子：$1998+1999+2000+2001+2002 = 10000$，所以从 $1998$ 到 $2002$ 的一个自然数段为 $M=10000$ 的一个解。 输入输出格式 输入格式 包含一个整数的单独一行给出 M 的值（$10 \\le M \\le 2,000,000$）。 输出格式 每行两个正整数，给出一个满足条件的连续正整数段中的第一个数和最后一个数，两数之间用一个空格隔开，所有输出行的第一个按从小到大的升序排列，对于给定的输入数据，保证至少有一个解。 输入输出样例 输入样例 #1 10000 输出样例 #1 18 142  297 328  388 412  1998 2002"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:拱猪计分 题目描述 「拱猪」是一种很有趣的扑克牌游戏。即使你不知道它的玩法，你也可以由它的计分方式来了解它的趣味性。假设在此我们仅考虑四个人的拱猪牌局，本题要求你根据下面的计分规则，在牌局结束时计算四位玩家所得分数。 1. 我们分别以 $\\texttt S, \\texttt H, \\texttt D, \\texttt C$ 来代表黑桃、红心、方块及梅花，并以数字 1 至 $13$ 来代表 $\\texttt A, \\texttt 2, \\dots, \\texttt Q, \\texttt K$ 等牌点，例如：$H_1$ 为红心 $\\texttt A，S_{13}$ 为黑桃 $\\texttt K$； 2. 牌局结束时，由各玩家持有的有关计分的牌（计分牌）仅有「猪」$S_{12}$，所有红心牌，「羊」$D_{10}$ 及「加倍」$C_{10}$ 等 $16$ 张牌，其它牌均弃置不计，若一位玩家未持有这 $16$ 张牌中任意一张，则以得零分计算； 3. 若持有 $C_{10}$ 牌的玩家只有该张牌而没有任何其它牌则得 $+50$ 分，否则将其它计分牌所得分数加倍计算； 4. 若红心牌不在同一家，则 $H_1$ 至 $H_{13}$ 等 $13$ 张牌均以负分计，其数值依次为 $-50, -2, -3, -4, -5, -6, -7, -8, -9, -10, -20, -30, -40$，且 $S_{12}$ 与 $D_{11}$ 的分值分别以 $-100$ 及 $+100$ 分计算； 5. 若红心牌 $H_1$ 至 $H_{13}$ 均在同一家，则有下列情形： + 所有红心牌以 $+200$ 分计算。 + 若 $S_{12}, D_{11}$ 皆在吃下所有红心牌之一家，则此玩家得 $+500$ 分。 + $C_{10}$ 牌依旧以前文所述原则计算。 例一：若各玩家持有计分牌如下： 1. `S12 H3 H5 H13` 2. `D11 H8 H9` 3. `C10 H1 H2 H4 H6 H7` 4. `H10 H11 H12` 则各家之得分依序为：$-148, +83, -138$ 及 $-60$。 例二：若各玩家持有计分牌如下： 1. `H1 H2 H3 H4 H5 H6 H7 H8 H9 H10 H11 H12 H13` 2. `S12 C10` 3. `D11` 4. 无 则各家之得分依序为：$+200, -200, +100$ 及 0。 例三：若有一玩家持有所有 $16$ 张计分牌，则得 $+1000$ 分，其余三家均得零分。 输入输出格式 输入格式 **每个输入文件包含多组数据。** 每组数据有四行，分别描述一个玩家。 每一行，第一个数为该玩家所持有计分牌总数，随后若干个符合题意的字符串描述其所持有之所有计分牌，牌数与各计分牌均以一个以上的空格分开。 相邻两组测试数据之间不包含空白行。若四家持牌数均为 0，表示输入文件的结束。 输出格式 每一行表示一组数据对应的结果，依次输出各家所得分数，共 4 个整数，若非 0 则包含正负号；相邻两个整数之间以一个空格分开。 符号和数字间不带空格。每组数据的输出间不带空白行。 输入输出样例 输入样例 #1 4  S12  H3  H5  H13 3  D11  H8  H9 6  C10  H1  H2  H4  H6  H7 3  H10  H11 H12 13 H1  H2  H3  H4  H5  H6  H7  H8  H9  H10  H11  H12  H13   2  S12  C10 1  D11 0 0 0 0 0 输出样例 #1 -148 +83 -138 -60 +200 -200 +100 0"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:**温馨提醒：吸烟有害健康，请勿尝试吸烟！** 题目描述 Peter 有 n 根烟，他每吸完一根烟就把烟蒂保存起来，k（$k>1$）个烟蒂可以换一个新的烟，那么 Peter 最终能吸到多少根烟呢？ 与某些脑筋急转弯不同的是，Peter 并不能从异次元借到烟蒂，抽完后再还回去。 输入输出格式 输入格式 每组测试数据一行包括两个整数 $n, k（1 < n, k \\le 10^8$）。 输出格式 对于每组测试数据，输出一行包括一个整数表示最终烟的根数。 输入输出样例 输入样例 #1 4 3 输出样例 #1 5 输入样例 #2 10 3 输出样例 #2 14 说明 对于 $100\\%$ 的数据，$1<n, k \\le 10^8$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:子数整数 题目描述 对于一个五位数$a_1a_2a_3a_4a_5$，可将其拆分为三个子数： $sub_1=a_1a_2a_3$ $sub_2=a_2a_3a_4$ $sub_3=a_3a_4a_5$ 例如，五位数$20207$可以拆分成 $sub_1=202$ $sub_2=020(=20)$ $sub_3=207$ 现在给定一个正整数K，要求你编程求出$10000到30000$之间所有满足下述条件的五位数，条件是这些五位数的三个子数$sub_1,sub_2,sub_3$都可被K整除。 输入输出格式 输入格式 一个正整数K 输出格式 每一行为一个满足条件的五位数，要求从小到大输出。不得重复输出或遗漏。如果无解，则输出“No”。 输入输出样例 输入样例 #1 15 输出样例 #1 22555 25555 28555 30000 说明 $0<K<1000$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:欢乐的跳 题目描述 一个 n 个元素的整数数组，如果数组两个连续元素之间差的绝对值包括了 $[1,n-1]$ 之间的所有整数，则称之符合“欢乐的跳”，如数组 $\\{1,4,2,3\\}$ 符合“欢乐的跳”，因为差的绝对值分别为：$3,2,1$。 给定一个数组，你的任务是判断该数组是否符合“欢乐的跳”。 输入输出格式 输入格式 每组测试数据第一行以一个整数 $n(1 \\le n \\le 1000)$ 开始，接下来 n 个空格隔开的在 $[-10^8,10^8]$ 之间的整数。 输出格式 对于每组测试数据，输出一行若该数组符合“欢乐的跳”则输出 `Jolly`，否则输出 `Not jolly`。 输入输出样例 输入样例 #1 4 1 4 2 3 输出样例 #1 Jolly 输入样例 #2 5 1 4 2 -1 6 输出样例 #2 Not jolly 说明 $1 \\le n \\le 1000$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:点和线 题目描述 平面上有一些点，你可以用直线将两点连接起来。那么有多少种方法可以把这些点连续地连起来，使得任何两个线都不交叉。 显然，三个点只有一种方法。四个点最多只有3种方法。写一个程序计算方法总数。 输入输出格式 输入格式 每一行是一个点的坐标，坐标值是整数，中间用一个空格隔开。最后一个坐标是原点。任意三点不在一条直线上。最多只有$10$个点。 输出格式 输出，方案总数。 输入输出样例 输入样例 #1 100 -10 -200 0 45 7 0 0 输出样例 #1 3 说明 - 必须从一个点出发，途径所有点回到起点的路径才会被统计。 - 两个方案不相同当且仅当围成的简单多边形不同。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:奶牛分厩 题目描述 农夫约翰有$N(1 \\le N \\le 5000)$头奶牛，每头奶牛都有一个唯一的不同于其它奶牛的编号$s_i$，所有的奶牛都睡在一个有K个厩的谷仓中，厩的编号为0到$K-1$。每头奶牛都知道自己该睡在哪一个厩中，因为约翰教会了它们做除法，$S_i  \\bmod  K$的值就是第i头奶年所睡的厩的编号。 给出一组奶牛的编号，确定最小的Ｋ使得没有二头或二头以上的奶牛睡在同一厩中。 输入输出格式 输入格式 第一行一个正整数N，第2到$N+1$行每行一个整数表示一头奶牛的编号。 输出格式 一个整数，表示要求的最小的K，对所有的测试数据这样的K是一定存在的。 输入输出样例 输入样例 #1 5  4  6  9  10  13  输出样例 #1 8 说明 $S_i(1\\le S_i \\le 1000000)$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:垃圾陷阱 题目描述 卡门――农夫约翰极其珍视的一条 `Holsteins` 奶牛――已经落了到 “垃圾井” 中。“垃圾井” 是农夫们扔垃圾的地方，它的深度为 D（$2 \\le D \\le 100$）英尺。 卡门想把垃圾堆起来，等到堆得高度大于等于井的深度时，她就能逃出井外了。另外，卡门可以通过吃一些垃圾来维持自己的生命。 每个垃圾都可以用来吃或堆放，并且堆放垃圾不用花费卡门的时间。 假设卡门预先知道了每个垃圾扔下的时间 t（$1 \\le t \\le 1000$），以及每个垃圾堆放的高度 h（$1 \\le h \\le 25$）和吃进该垃圾能维持生命的时间 f（$1 \\le f \\le 30$），要求出卡门最早能逃出井外的时间，假设卡门当前体内有足够持续 $10$ 小时的能量，如果卡门 $10$ 小时内（不含 $10$ 小时，维持生命的时间同）没有进食，卡门就将饿死。 输入输出格式 输入格式 第一行为两个整数，D 和 G（$1 \\le G \\le 100$），G 为被投入井的垃圾的数量。 第二到第 $G+1$ 行每行包括三个整数：T（$1 \\le T \\le 1000$），表示垃圾被投进井中的时间；F（$1 \\le F \\le 30$），表示该垃圾能维持卡门生命的时间；和 H（$1 \\le H \\le 25$），该垃圾能垫高的高度。 输出格式 如果卡门可以爬出陷阱，输出一个整数，表示最早什么时候可以爬出；否则输出卡门最长可以存活多长时间。 输入输出样例 输入样例 #1 20 4 5 4 9 9 3 2 12 6 10 13 1 1 输出样例 #1 13 说明 **【样例说明】** 卡门堆放她收到的第一个垃圾：$\\mathrm{height}=9$； 卡门吃掉她收到的第 2 个垃圾，使她的生命从 $10$ 小时延伸到 $13$ 小时； 卡门堆放第 3 个垃圾，$\\mathrm{height}=19$； 卡门堆放第 4 个垃圾，$\\mathrm{height}=20$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:组合的输出 题目描述 排列与组合是常用的数学方法，其中组合就是从 n 个元素中抽出 r 个元素（不分顺序且 $r \\le n$），我们可以简单地将 n 个元素理解为自然数 $1,2,\\dots,n$，从中任取 r 个数。 现要求你输出所有组合。 例如 $n=5,r=3$，所有组合为： $123,124,125,134,135,145,234,235,245,345$。 输入输出格式 输入格式 一行两个自然数 $n,r(1<n<21,0 \\le r \\le n)$。 输出格式 所有的组合，每一个组合占一行且其中的元素按由小到大的顺序排列，每个元素占三个字符的位置，所有的组合也按字典顺序。 **注意哦！输出时，每个数字需要 3 个场宽。以 C++ 为例，你可以使用下列代码：** ```cpp cout << setw(3) << x; ``` 输出占 3 个场宽的数 x。注意你需要头文件 `iomanip`。 输入输出样例 输入样例 #1 5 3  输出样例 #1   1  2  3   1  2  4   1  2  5   1  3  4   1  3  5   1  4  5   2  3  4   2  3  5   2  4  5   3  4  5"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:排行榜 题目描述 小迈克尔住在一个小镇上，他喜欢看每周日下午发布的音乐电视评比。它每周都根据选票介绍相同的歌曲，列出这些歌曲的流行排行榜。 有一个星期日迈克尔和他的朋友在一起玩得太久了以致于未能看到新的流行榜。他非常失望，但是不久他就发现下周至少可以部分地建立出流行榜。除了每首歌曲的位置，排行榜还根据这些歌曲上周的排行列出了它们排行变动的信息，更精确地说，从这周起，不管那首歌是继续排在原位，还是排名上升或排名下降，都会给出一点说明。 编写程序，根据给定的流行榜帮助迈克尔推断出上周可能的排行榜。 输入输出格式 输入格式 第一行是一个整数$N(1≤N≤100)$，表示排行榜上歌曲的总数。 接下来的N块列出了排行信息。每块有两行组成，第i块第一行是第i首歌曲的名称，歌名包括最多不超过$100$个英文大写字母，第二行包含下列三个单词中的一个：$UP$(歌曲在排行榜上的位置上升)，$DOWN$(歌曲在排行榜上的位置下滑)或$SAME$(排行不变)，表示与上周排行榜相比，排行榜所发生的变动。 输出格式 N行输出一个上周可能的排行榜。 每一行包含一首歌名，即第i行包含排行榜上第i首歌的歌名。 注意：解不必是唯一的，但对于每一个测试数据都至少有一个解。 输入输出样例 输入样例 #1 5 HIGHHOPES UP LOWFEELINGS UP UPANDDOWN DOWN IAMSTILLSTANDING DOWN FOOLINGAROUND DOWN 输出样例 #1 UPANDDOWN IAMSTILLSTANDING FOOLINGAROUND HIGHHOPES LOWFEELINGS"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:队列安排 题目描述 一个学校里老师要将班上 N 个同学排成一列，同学被编号为 $1\\sim N$，他采取如下的方法： 1. 先将 1 号同学安排进队列，这时队列中只有他一个人； 2. $2\\sim N$ 号同学依次入列，编号为 i 的同学入列方式为：老师指定编号为 i 的同学站在编号为 $1\\sim(i-1)$ 中某位同学（即之前已经入列的同学）的左边或右边； 3. 从队列中去掉 M 个同学，其他同学位置顺序不变。 在所有同学按照上述方法队列排列完毕后，老师想知道从左到右所有同学的编号。 输入输出格式 输入格式 第一行一个整数 N，表示了有 N 个同学。 第 $2\\sim N$ 行，第 i 行包含两个整数 $k,p$，其中 k 为小于 i 的正整数，p 为 0 或者 1。若 p 为 0，则表示将 i 号同学插入到 k 号同学的左边，p 为 1 则表示插入到右边。 第 $N+1$ 行为一个整数 M，表示去掉的同学数目。 接下来 M 行，每行一个正整数 x，表示将 x 号同学从队列中移去，如果 x 号同学已经不在队列中则忽略这一条指令。 输出格式 一行，包含最多 N 个空格隔开的整数，表示了队列从左到右所有同学的编号。 输入输出样例 输入样例 #1 4 1 0 2 1 1 0 2 3 3 输出样例 #1 2 4 1 说明 **【样例解释】** 将同学 2 插入至同学 1 左边，此时队列为： `2 1` 将同学 3 插入至同学 2 右边，此时队列为： `2 3 1`   将同学 4 插入至同学 1 左边，此时队列为： `2 3 4 1`   将同学 3 从队列中移出，此时队列为： `2 4 1`   同学 3 已经不在队列中，忽略最后一条指令 最终队列： `2 4 1`   **【数据范围】** 对于 $20\\%$ 的数据，$1\\leq N\\leq 10$。 对于 $40\\%$ 的数据，$1\\leq N\\leq 1000$。 对于 $100\\%$ 的数据，$1<M\\leq N\\leq 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:开灯 题目描述 在一条无限长的路上，有一排无限长的路灯，编号为 $1,2,3,4,\\dots$。 每一盏灯只有两种可能的状态，开或者关。如果按一下某一盏灯的开关，那么这盏灯的状态将发生改变。如果原来是开，将变成关。如果原来是关，将变成开。 在刚开始的时候，所有的灯都是关的。小明每次可以进行如下的操作： 指定两个数，$a,t（a$ 为实数，t 为正整数）。将编号为 $\\lfloor a\\rfloor,\\lfloor 2 \\times a\\rfloor,\\lfloor3 \\times a\\rfloor,\\dots,\\lfloor t  \\times a\\rfloor$ 的灯的开关各按一次。其中 $\\lfloor k \\rfloor$ 表示实数 k 的整数部分。 在小明进行了 n 次操作后，小明突然发现，这个时候只有一盏灯是开的，小明很想知道这盏灯的编号，可是这盏灯离小明太远了，小明看不清编号是多少。 幸好，小明还记得之前的 n 次操作。于是小明找到了你，你能帮他计算出这盏开着的灯的编号吗？ 输入输出格式 输入格式 第一行一个正整数 n，表示 n 次操作。 接下来有 n 行，每行两个数，$a_i,t_i$。其中 $a_i$ 是实数，小数点后一定有 6 位，$t_i$ 是正整数。 输出格式 仅一个正整数，那盏开着的灯的编号。 输入输出样例 输入样例 #1 3 1.618034 13 2.618034 7 1.000000 21 输出样例 #1 20 说明 记 $T=\\sum \\limits_{i=1}^n t_i = t_1+t_2+t_3+\\dots+t_n$。 - 对于 $30\\%$ 的数据，满足 $T \\le 1000$； - 对于 $80\\%$ 的数据，满足 $T \\le 200000$； - 对于 $100\\%$ 的数据，满足 $T \\le 2000000$； - 对于 $100\\%$ 的数据，满足 $n \\le 5000，1 \\le a_i<1000，1 \\le t_i \\le T$。 数据保证，在经过 n 次操作后，有且只有一盏灯是开的，不必判错。而且对于所有的 i 来说，$t_i\\times a_i$ 的最大值不超过 $2000000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:填涂颜色 题目描述 由数字 0 组成的方阵中，有一任意形状闭合圈，闭合圈由数字 1 构成，围圈时只走上下左右 4 个方向。现要求把闭合圈内的所有空间都填写成 2。例如：$6\\times 6$ 的方阵（$n=6$），涂色前和涂色后的方阵如下： ```plain 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 ``` ```plain 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 2 2 1 1 1 2 2 2 1 1 2 2 2 2 1 1 1 1 1 1 1 ``` 输入输出格式 输入格式 每组测试数据第一行一个整数 $n(1 \\le n \\le 30)$。 接下来 n 行，由 0 和 1 组成的 $n \\times n$ 的方阵。 方阵内只有一个闭合圈，圈内至少有一个 0。 输出格式 已经填好数字 2 的完整方阵。 输入输出样例 输入样例 #1 6 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 输出样例 #1 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 2 2 1 1 1 2 2 2 1 1 2 2 2 2 1 1 1 1 1 1 1 说明 对于 $100\\%$ 的数据，$1 \\le n \\le 30$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:银行贷款 题目描述 当一个人从银行贷款后，在一段时间内他（她）将不得不每月偿还固定的分期付款。这个问题要求计算出贷款者向银行支付的利率。假设利率按月累计。 输入输出格式 输入格式 三个用空格隔开的正整数。 第一个整数表示贷款的原值 $w_0$，第二个整数表示每月支付的分期付款金额 w，第三个整数表示分期付款还清贷款所需的总月数 m。 输出格式 一个实数，表示该贷款的月利率（用百分数表示），四舍五入精确到 $0.1\\%$。 输入输出样例 输入样例 #1 1000 100 12 输出样例 #1 2.9 说明 数据保证，$1 \\leq w_0, w\\leq 2^{31}-1，1 \\leq m\\leq 3000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 不过 uim 由于买了一些书，口袋里只剩 M 元 $(M \\le 10000)$。 餐馆虽低端，但是菜品种类不少，有 N 种 $(N \\le 100)$，第 i 种卖 $a_i$ 元 $(a_i \\le 1000)$。由于是很低端的餐馆，所以每种菜只有一份。 小 A 奉行“不把钱吃光不罢休”，所以他点单一定刚好把 uim 身上所有钱花完。他想知道有多少种点菜方法。 由于小 A 肚子太饿，所以最多只能等待 1 秒。 输入输出格式 输入格式 第一行是两个数字，表示 N 和 M。 第二行起 N 个正数 $a_i$（可以有相同的数字，每个数字均在 $1000$ 以内）。 输出格式 一个正整数，表示点菜方案数，保证答案的范围在 int 之内。 输入输出样例 输入样例 #1 4 4 1 1 2 2 输出样例 #1 3 说明 2020.8.29，增添一组 hack 数据 by @yummy"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:日志分析 题目描述 M 海运公司最近要对旗下仓库的货物进出情况进行统计。目前他们所拥有的唯一记录就是一个记录集装箱进出情况的日志。该日志记录了两类操作：第一类操作为集装箱入库操作，以及该次入库的集装箱重量；第二类操作为集装箱的出库操作。这些记录都严格按时间顺序排列。集装箱入库和出库的规则为先进后出，即每次出库操作出库的集装箱为当前在仓库里所有集装箱中最晚入库的集装箱。 出于分析目的，分析人员在日志中随机插入了若干第三类操作――查询操作。分析日志时，每遇到一次查询操作，都要报告出当前仓库中最大集装箱的重量。 输入输出格式 输入格式 包含 $N+1$ 行： 第一行为一个正整数 N，对应于日志内所含操作的总数。 接下来的 N 行，分别属于以下三种格式之一： - 格式 1：`0 X`，表示一次集装箱入库操作，正整数 X 表示该次入库的集装箱的重量。 - 格式 2：`1`，表示一次集装箱出库操作，（就当时而言）最后入库的集装箱出库。 - 格式 3：`2`，表示一次查询操作，要求分析程序输出当前仓库内最大集装箱的重量。 当仓库为空时你应该忽略出库操作，当仓库为空查询时你应该输出 0。 输出格式 输出行数等于日志中查询操作的次数。每行为一个整数，表示查询结果。 输入输出样例 输入样例 #1 13 0 1 0 2 2 0 4 0 2 2 1 2 1 1 2 1 2 输出样例 #1 2 4 4 1 0 说明 ### 数据范围及约定 - 对于 $20\\%$ 的数据，有 $N \\le 10$； - 对于 $40\\%$ 的数据，有 $N \\le 1000$； - 对于 $100\\%$ 的数据，有 $1 \\le N \\le 200000，1 \\le X \\le 10^8$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:打保龄球 题目描述 打保龄球是用一个滚球去打击十个站立的柱，将柱击倒。一局分十轮，每轮可滚球一次或多次，以击倒的柱数为依据计分。一局得分为十轮得分之和，而每轮的得分不仅与本轮滚球情况有关，还可能与后续一两轮的滚球情况有关。即某轮某次滚球击倒的柱数不仅要计入本轮得分，还可能会计入前一两轮得分。具体的滚球击柱规则和计分方法如下： （1）若某一轮的第一次滚球就击倒全部十个柱，则本轮不再滚球（若是第十轮则还需另加两次滚球，不妨称其为第十一轮和第十二轮，并不是所有的情况都需要滚第十一轮和第十二轮球）。该轮得分为本次击倒柱数10与以后两次滚球所击倒柱数之和。 （2）若某一轮的第一次滚球未击倒十个柱，则可对剩下未倒的柱再滚球一次。如果这两次滚球击倒全部十个柱，则本轮不再滚球（若是第十轮则还需另加一次滚球），该轮得分为这两次共击倒柱数$10$与以后一次滚球所击倒柱数之和。 （3）若某一轮两次滚球未击倒全部十个柱，则本轮不再继续滚球，该轮得分为这两次滚球击倒的柱数之和。    总之，若―轮中一次滚球或两次滚球击倒十个柱，则本轮得分是本轮首次滚球开始的连续三次滚球击倒柱数之和（其中有一次或两次不是本轮滚球）。若一轮内二次滚球击倒柱数不足十个，则本轮得分即为这两次击倒柱数之和。下面以实例说明如下(字符“/”表示击倒当前球道上的全部的柱)： 轮          1    2   3    4    5    6    7    8    9   10   11   12 击球情况    /    /    /    72   9/   81   8/    /    9/    /    8/ 各轮得分   30   27   19   9   18    9   20   20   20   20 累计总分   30   57  76   85  103   112  132  152  172  192 现在请你编写一个保龄球实时计分程序，用来计算和显示某轮结束后的得分情况。若某轮的得分暂时无法算出，则该轮得分不显示。 输入输出格式 输入格式 仅有一行，为前若干轮滚球的情况，每轮滚球用一到两个字符表示，每一个字符表示一次击球，字符“/”表示击倒当前球道上的全部的柱，否则用一个数字字符表示本次滚球击倒的当前球道上的柱的数目，两轮滚球之间用一个空格字符隔开。 如上例对应的输入文件内容为：/  /  /  72  9/  81  8/  /  9/  /  8/ 输出格式 共两行，第一行为每轮得分，第二行为到当前轮为止的总得分。每个得分之间用一个空格隔开。 输入输出样例 输入样例 #1 /    /    /   72    9/   81   8/    /    9/    /   8/ 输出样例 #1 30   27  19    9   18    9   20   20   20   20  30   57  76   85  103  112  132  152  172  192"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:刷题 题目描述 NOIP 临近了，小 A 却发现他已经不会写题了。好在现在离竞赛还有一段时间，小 A 决定从现在开始夜以继日地刷题。也就是说小 A 废寝忘食，一天二十四小时地刷题。 今天的日期（时间）是 yyyy 年 mm 月 dd 日 hh 时 min 分，考试的时间是 yyyy2 年 mm2 月 dd2 日 hh2 时 min2 分。这之间的所有时间小 A 都用来刷题了，那么考试之前他最多能刷多少题呢？注意哦，考虑闰年。 时间紧张小 A 只管数量不管质量。当然有的题目容易一些，有的题目难一些。根据小 A 的经验，他能一眼看出写出某一个题目需要的时间，以分钟记。 现在给出洛谷 Online Judge 的题目列表，请你挑出最多的题目使小A能在竞赛前写出来。 我们假设从远古到未来，历法的表示与现在一样。 输入输出格式 输入格式 第一行一个整数N，表示洛谷Online Judge的题目数，$N≤5000$。 接下来N行，每行一个整数表示刷该题需要用的时间，以分钟记($ \\le 10000$)。（这个题本身是什么并不重要，不是么？`小A`已经写过题目数为 0 个）。 接下来两行依次是当前时间和竞赛时间。时间给出的格式是：`yyyy-mm-dd-hh:min`，例如：`2007-06-23-02:00`，采用$24$ 小时制，每天从 00:00 到 23:59 ，年份从 $0000$ 到 $9999$。 输出格式 一行，一个整数，NOIP 前最多刷的题目数。 输入输出样例 输入样例 #1 2 1 1 2007-06-23-11:59 2007-06-23-12:00 输出样例 #1 1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:中位数 题目描述 给定一个长度为 N 的非负整数序列 A，对于前奇数项求中位数。 输入输出格式 输入格式 第一行一个正整数 N。 第二行 N 个正整数 $A_{1\\dots N}$。 输出格式 共 $\\lfloor \\frac{N + 1}2\\rfloor$ 行，第 i 行为 $A_{1\\dots 2i - 1}$ 的中位数。 输入输出样例 输入样例 #1 7 1 3 5 7 9 11 6 输出样例 #1 1 3 5 6 说明 对于 $20\\%$ 的数据，$N \\le 100$； 对于 $40\\%$ 的数据，$N \\le 3000$； 对于 $100\\%$ 的数据，$1 \\le N ≤ 100000，0 \\le A_i \\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[ZJOI2007] 棋盘制作 题目描述 国际象棋是世界上最古老的博弈游戏之一，和中国的围棋、象棋以及日本的将棋同享盛名。据说国际象棋起源于易经的思想，棋盘是一个$8 \\times 8$大小的黑白相间的方阵，对应八八六十四卦，黑白对应阴阳。 而我们的主人公`小Q`，正是国际象棋的狂热爱好者。作为一个顶尖高手，他已不满足于普通的棋盘与规则，于是他跟他的好朋友`小W`决定将棋盘扩大以适应他们的新规则。 `小Q`找到了一张由$N \\times M$个正方形的格子组成的矩形纸片，每个格子被涂有黑白两种颜色之一。`小Q`想在这种纸中裁减一部分作为新棋盘，当然，他希望这个棋盘尽可能的大。 不过`小Q`还没有决定是找一个正方形的棋盘还是一个矩形的棋盘（当然，不管哪种，棋盘必须都黑白相间，即相邻的格子不同色），所以他希望可以找到最大的正方形棋盘面积和最大的矩形棋盘面积，从而决定哪个更好一些。 于是`小Q`找到了即将参加全国信息学竞赛的你，你能帮助他么？ 输入输出格式 输入格式 包含两个整数N和M，分别表示矩形纸片的长和宽。接下来的N行包含一个$N \\ \\times M的01$矩阵，表示这张矩形纸片的颜色（0表示白色，1表示黑色）。 输出格式 包含两行，每行包含一个整数。第一行为可以找到的最大正方形棋盘的面积，第二行为可以找到的最大矩形棋盘的面积（注意正方形和矩形是可以相交或者包含的）。 输入输出样例 输入样例 #1 3 3 1 0 1 0 1 0 1 0 0 输出样例 #1 4 6 说明 对于$20\\%$的数据，$N, M ≤ 80$ 对于$40\\%$的数据，$N, M ≤ 400$ 对于$100\\%$的数据，$N, M ≤ 2000$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:兔八哥与猎人 题目描述 兔八哥躲藏在树林旁边的果园里。果园有 $M  \\times  N$ 棵树，组成一个 M 行 N 列的矩阵，水平或垂直相邻的两棵树的距离为 1。兔八哥在一棵果树下。 猎人背着猎枪走进了果园，他爬上一棵果树，准备杀死兔八哥。 如果猎人与兔八哥之间没有其它的果树，猎人就可以看到兔八哥。 现己知猎人和兔八哥的位置，编写程序判断兔子所在的位置是否安全. 输入输出格式 输入格式 第一行为 n，表示有 n 组数据，每组数据的第一行为两个正整数 $a_x$ 和 $a_y$，表示猎人的位置，第二行为两个正整数 $b_x$ 和 $b_y$，表示兔八哥的位置。 输出格式 共有 n 行，每行为 `yes` 或 `no` 表示兔八哥的位置是否安全。 输入输出样例 输入样例 #1 1 1 1 1 2 输出样例 #1 no 说明 $1\\le n \\le 10^5，1 \\le  a_x, a_y, b_x, b_y \\le  10^8$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 某乡有n个村庄($1<n \\le 20$)，有一个售货员，他要到各个村庄去售货，各村庄之间的路程$s(0<s<1000)$是已知的，且A村到B村与B村到A村的路大多不同。为了提高效率，他从商店出发到每个村庄一次，然后返回商店所在的村，假设商店所在的村庄为1，他不知道选择什么样的路线才能使所走的路程最短。请你帮他选择一条最短的路。 输入输出格式 输入格式 村庄数n和各村之间的路程(均是整数)。 输出格式 最短的路程。 输入输出样例 输入样例 #1 3 0 2 1 1 0 2 2 1 0 输出样例 #1 3 说明 输入解释 3    {村庄数} $0 2 1 $   {村庄1到各村的路程} $1 0 2$    {村庄2到各村的路程} $2 1 0 $   {村庄3到各村的路程}"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:安全逃离 题目描述 农夫`john`最近在研究如果发生重大事故，如何让农场里的奶牛逃离问题。他想要确信在紧急情况下，所有的奶牛都有一个安全逃离方案。因为在紧急情况下，奶牛们都会失去观察和判断能力，所以最近`john`一直在教奶牛们逃离的方法，他的方法很简单，就是任何时候都只向北方或东方逃离，北方是行坐标减1的方向，东方是列坐标加1的方向。奶牛们虽笨，不过这一点事关自己的生命，所以他们牢记在心，而且也一定会这么做。 当然也会出问题，奶牛们在逃离的方向上会横冲直撞，为了阻止奶牛之间互相冲撞造成伤害，`john`要求任何一个奶牛的逃离路线不能经过其它奶牛的初始位置。一个逃离方案是安全的如果它能够满足上面的要求，反之它就是不安全的。 奶牛们所在的土地（农场）被划分成了r行和c列的一个矩形地图。奶牛们都待在这个矩形中的某一个位置。 请帮助`john`确定给定的一个地图上是否存在一个安全的逃离方案。 比如，下面的两个图： 左边的例子表示了一个能够安全逃离的地图，因为没有任何一个奶牛的逃离路线上包括其他奶牛。右边的例子表示了一个不安全的地图，因为位于$(4,1)$的奶牛不论是向东逃离还是向北逃离，它的路线上都会有别的奶牛，从这个图中拿掉任意一头奶牛，这个地图都会变成安全的。 ```plain   安全     不安全 - ||||C--  C..... - ||||C--  ^..... - |C||C--  |..... - CC++---  C-->C. - ..CCC--  ...... ``` `C` 表示奶牛，直线表示逃离路线。 输入输出格式 输入格式 第1行：两个整数$r,c$，用1个空格隔开，表示矩形的行数和列数（均 $\\le 50$）。 第2行：一个整数n，表示奶牛的个数（$ \\le 100$）。 第3到$n+2$行：共n行，每行有2个整数，之间用1个空格隔开，分别表示这头奶牛所在的行和列。 输出格式 如果这块土地是安全的，输出0。 如果移走任意一头奶牛这块土地还是不安全，输出$-1$。否则输出1，并且在下一行输出移走的那头奶牛的编号，如果有多个奶牛满足要求，输出输入序列中编号最小一个。 输入输出样例 输入样例 #1 5 5 5 1 1 2 4 3 1 2 2 2 1 输出样例 #1 1 1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:表达式的转换 题目描述 平常我们书写的表达式称为中缀表达式，因为它将运算符放在两个操作数中间，许多情况下为了确定运算顺序，括号是不可少的，而后缀表达式就不必用括号了。 后缀标记法：书写表达式时采用运算紧跟在两个操作数之后，从而实现了无括号处理和优先级处理，使计算机的处理规则简化为：从左到右顺序完成计算，并用结果取而代之。 例如：`8-(3+2*6)/5+4` 可以写为：`8 3 2 6 * + 5 / - 4 +` 其计算步骤为： ``` 8 3 2 6 * + 5 / - 4 + 8 3 12 + 5 / - 4 + 8 15 5 / - 4 + 8 3 - 4 + 5 4 + 9 ``` 编写一个程序，完成这个转换，要求输出的每一个数据间都留一个空格。 输入输出格式 输入格式 就一行，是一个中缀表达式。输入的符号中只有这些基本符号 `0123456789+-*/^()`，并且不会出现形如 `2*-3` 的格式。 表达式中的基本数字也都是一位的，不会出现形如 `12` 形式的数字。 所输入的字符串不要判错。 输出格式 若干个后缀表达式，第 $i + 1$ 行比第 i 行少一个运算符和一个操作数，最后一行只有一个数字，表示运算结果。 输入输出样例 输入样例 #1 8-(3+2*6)/5+4 输出样例 #1 8 3 2 6 * + 5 / - 4 +  8 3 12 + 5 / - 4 +  8 15 5 / - 4 +  8 3 - 4 +  5 4 +  9 输入样例 #2 2^2^3 输出样例 #2 2 2 3 ^ ^ 2 8 ^ 256 说明 运算的结果可能为负数，`/` 以整除运算。并且中间每一步都不会超过 $2^{31}$。字符串长度不超过 $100$。 注意乘方运算 `^` 是从右向左结合的，即 `2 ^ 2 ^ 3` 为 `2 ^ (2 ^ 3)`，后缀表达式为 `2 2 3 ^ ^`。 其他同优先级的运算是从左向右结合的，即 `4 / 2 / 2 * 2` 为 `((4 / 2) / 2) * 2`，后缀表达式为 `4 2 / 2 / 2 *`。 保证不会出现计算乘方时幂次为负数的情况，故保证一切中间结果为整数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:路径计数2 题目描述 一个$N \\times N$的网格，你一开始在$(1,1)$，即左上角。每次只能移动到下方相邻的格子或者右方相邻的格子，问到达$(N,N)$，即右下角有多少种方法。 但是这个问题太简单了，所以现在有M个格子上有障碍，即不能走到这M个格子上。 输入输出格式 输入格式 输入文件第1行包含两个非负整数$N,M$，表示了网格的边长与障碍数。 接下来M行，每行两个不大于N的正整数$x, y$。表示坐标$(x, y)$上有障碍不能通过，且有$1≤x, y≤n$，且$x, y$至少有一个大于1，并请注意障碍坐标有可能相同。 输出格式 一个非负整数，为答案$  \\bmod 100003$后的结果。 输入输出样例 输入样例 #1 3 1 3 1 输出样例 #1 5 说明 对于$20\\%$的数据，有$N≤3$； 对于$40\\%$的数据，有$N≤100$； 对于$40\\%$的数据，有$M=0$； 对于$100\\%$的数据，有$N≤1000,M≤100000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:【模板】排序 题目描述 将读入的 N 个数从小到大排序后输出。 输入输出格式 输入格式 第一行为一个正整数 N。 第二行包含 N 个空格隔开的正整数 $a_i$，为你需要进行排序的数。 输出格式 将给定的 N 个数从小到大输出，数之间空格隔开，行末换行且无空格。 输入输出样例 输入样例 #1 5 4 2 4 5 1 输出样例 #1 1 2 4 4 5 说明 对于 $20\\%$ 的数据，有 $1 \\leq N \\leq 10^3$； 对于 $100\\%$ 的数据，有 $1 \\leq N \\leq 10^5，1 \\le a_i \\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:到天宫做客 题目描述 有一天，我做了个梦，梦见我很荣幸的接到了猪八戒的邀请，到天宫陪他吃酒。我犹豫了。天上一日，人间一年啊！当然，我是个闲人，一年之中也没有多少时日是必须在人间的，因此，我希望选一个最长的空闲时间段，使我在天上待的时间尽量长。记住，今年是 $4000$ 年。天上一天也是 $24$ 小时，每小时 $60$ 分，每分 $60$ 秒。 输入输出格式 输入格式 第一行是一个非负整数 N，表示 $4000$ 年中必须呆在人间的天数。   以下共 N 行，每行两个用空格隔开的正整数，即日期（月,日），输入文件保证无错误，日期无重复。 输出格式 一个非负整数，即在天上的时间(四舍五入精确到 1 秒)。 输入输出样例 输入样例 #1 2 3 8 12 2 输出样例 #1 63266"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 数字统计 题目描述 请统计某个给定范围 $[L, R]$ 的所有整数中，数字 2 出现的次数。 比如给定范围 $[2, 22]$，数字 2 在数 2 中出现了 1 次，在数 $12$ 中出现 1 次，在数 $20$ 中出现 1 次，在数 $21$ 中出现 1 次，在数 $22$ 中出现 2 次，所以数字 2 在该范围内一共出现了 6 次。 输入输出格式 输入格式 2 个正整数 L 和 R，之间用一个空格隔开。 输出格式 数字 2 出现的次数。 输入输出样例 输入样例 #1 2 22 输出样例 #1 6 输入样例 #2 2 100 输出样例 #2 20 说明 $1 ≤ L ≤R≤ 100000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:驾车旅游 题目描述 如今许多普通百姓家有了私家车，一些人喜爱自己驾车从一个城市到另一个城市旅游。自己驾车旅游时总会碰到加油和吃饭的问题，在出发之前，驾车人总要想方设法得到从一个城市到另一个城市路线上的加油站的列表，列表中包括了所有加油站的位置及其每升的油价（如 $3.25$ 元/L）。驾车者一般都有以下的习惯： 1. 除非汽车无法用油箱里的汽油达到下一个加油站或目的地，在油箱里还有不少于最大容量一半的汽油时，驾驶员从不在加油站停下来； 2. 在第一个停下的加油站总是将油箱加满； 3. 在加油站加油的同时，买快餐等吃的东西花去 $20$ 元。 4. 从起始城市出发时油箱总是满的。 5. 加油站付钱总是精确到 $0.1$ 元（四舍五入）。 6. 驾车者都知道自己的汽车每升汽油能够行驶的里程数。 现在要你帮忙做的就是编写一个程序，计算出驾车从一个城市到另一个城市的旅游在加油和吃饭方面最少的费用。 输入输出格式 输入格式 第一行是一个实数，是从出发地到目的地的距离（单位：km）。 第二行是三个实数和一个整数，其中第一个实数是汽车油箱的最大容量（单位：L)；第二个实数是汽车每升油能行驶的公里数；第三个实数是汽车在出发地加满油箱时的费用（单位：元）；一个整数是 1 到 $50$ 间的数，表示从出发地到目的地线路上加油站的数目。 接下来 n 行都是两个实数，第一个数表示从出发地到某一个加油站的距离（单位：km）；第二个实数表示该加油站汽油的价格(单位：元)。 数据项中的每个数据都是正确的，不需判错。一条线路上的加油站根据其到出发地的距离递增排列并且都不会大于从出发地到目的地的距离。 输出格式 输出一个实数，即精确到 $0.1$ 元的最小的加油和吃饭费用。 输入输出样例 输入样例 #1 600 40  8.5  128  3 200  3.52 350  3.45 500  365 输出样例 #1 13133.2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数列分段 Section I 题目描述 对于给定的一个长度为 N 的正整数数列 $A_i$，现要将其分成**连续**的若干段，并且每段和不超过 M（可以等于M），问最少能将其分成多少段使得满足要求。 输入输出格式 输入格式 第1行包含两个正整数 $N,M$，表示了数列 $A_i$ 的长度与每段和的最大值，第 2 行包含 N 个空格隔开的非负整数 $A_i$，如题目所述。 输出格式 一个正整数，输出最少划分的段数。 输入输出样例 输入样例 #1 5 6 4 2 4 5 1 输出样例 #1 3 说明 对于$20\\%$的数据，有$N≤10$； 对于$40\\%$的数据，有$N≤1000$； 对于$100\\%$的数据，有$N≤100000,M≤10^9，M$大于所有数的最大值，$A_i$之和不超过$10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数列分段 Section II 题目描述 对于给定的一个长度为N的正整数数列 $A_{1\\sim N}$，现要将其分成 M（$M\\leq N$）段，并要求每段连续，且每段和的最大值最小。 关于最大值最小： 例如一数列 $4\\ 2\\ 4\\ 5\\ 1$ 要分成 3 段。 将其如下分段： $$[4\\ 2][4\\ 5][1]$$ 第一段和为 6，第 2 段和为 9，第 3 段和为 1，和最大值为 9。 将其如下分段： $$[4][2\\ 4][5\\ 1]$$ 第一段和为 4，第 2 段和为 6，第 3 段和为 6，和最大值为 6。 并且无论如何分段，最大值不会小于 6。 所以可以得到要将数列 $4\\ 2\\ 4\\ 5\\ 1$ 要分成 3 段，每段和的最大值最小为 6。 输入输出格式 输入格式 第 1 行包含两个正整数 $N,M$。   第 2 行包含 N 个空格隔开的非负整数 $A_i$，含义如题目所述。 输出格式 一个正整数，即每段和最大值最小为多少。 输入输出样例 输入样例 #1 5 3 4 2 4 5 1 输出样例 #1 6 说明 对于 $20\\%$ 的数据，$N\\leq 10$。 对于 $40\\%$ 的数据，$N\\leq 1000$。 对于 $100\\%$ 的数据，$1\\leq N\\leq 10^5，M\\leq N，A_i < 10^8$， 答案不超过 $10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:多边形的面积 题目描述 给出一个没有缺口的简单多边形，它的边是垂直或者水平的，要求计算多边形的面积。 多边形被放置在一个 $x-y$ 的笛卡尔平面上，它所有的边都平行于两条坐标轴之一。然后按逆时针方向给出各顶点的坐标值。所有的坐标值都是整数，因此多边形的面积也为整数。 输入输出格式 输入格式 第一行给出多边形的顶点数 n 。 接下来 n 行，每行给出多边形一个顶点的坐标值 x 和 y，用空格隔开。 顶点按逆时针方向逐个给出。多边形最后是靠从最后一个顶点到第一个顶点画一条边来封闭的。 输出格式 一行，一个整数，表示多边形的面积。 输入输出样例 输入样例 #1 10 0 0 4 0 4 1 3 1 3 3 2 3 2 2 1 2 1 3 0 3 输出样例 #1 9 说明 对于 $100\\%$ 的数据，$1 \\le n \\le 100，-200 \\le x,y \\le 200$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 高手列出了一个详尽的日程表，这次他要追求的则是一个心灵纯洁的小萝莉。他和她都是要上课的，但是也会有时间空闲，于是高手决定无时无刻都要跟着她。为了她，高手决定转学到一年级。现在高手已经花重金买下了她的日程表，每一天都会有她的行踪。现在列出了高手方便去的地方，以及不方便去的地方。其中方便去的地方可以去无限次，不方便去的地方不能去，一共有 n 个方便去的地点， m 天。高手想知道他在这 m 天中，最多能和她在一起多久。不方便去的地方是不会列出的。 输入输出格式 输入格式 第一行两个整数 $n,m$。   接下来 n 行，每行一个地名，高手方便去的地方。   接下来 m 行，每行一个地名，她这一天在的地方。 **地名中可能有空格。** 输出格式 一个整数，他们在同一个地方的天数。 输入输出样例 输入样例 #1 1 2 WC CLASS WC 输出样例 #1 1 说明 $1 \\leq m \\leq 1000000，1 \\leq n \\leq 20$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:绘制二叉树 题目描述 二叉树是一种基本的数据结构，它要么为空，要么由根节点，左子树和右子树组成，同时左子树和右子树也分别是二叉树。 当一颗二叉树高度为$m-1$时，则共有m层。除m层外，其他各层的结点数都达到最大，且结点节点都在第m层时，这就是一个满二叉树。 现在，需要你用程序来绘制一棵二叉树，它由一颗满二叉树去掉若干结点而成。对于一颗满二叉树，我们需要按照以下要求绘制： 1、结点用小写字母“o”表示，对于一个父亲结点，用“/”连接左子树，同样用“\\”连接右子树。 2、定义$[i,j$]为位于第i行第j列的某个字符。若$[i,j]$为“/”，那么$[i-1,j+1]与[i+1,j-1]$要么为“o”，要么为“/”。若$[i,j]$为“\\”，那么$[i-1,j-1]与[i+1,j+1]$要么为“o”，要么为“\\”。同样，若$[i,j]$为第$1-m$层的某个节点（即“o”），那么$[i+1,j-1]$为“/”，$[i+1,j+1]$为“\\”。 3、对于第m层节点也就是叶子结点，若两个属于同一个父亲，那么它们之间$由3$个空格隔开，若两个结点相邻但不属于同一个父亲，那么它们之间由1个空格隔开。第m层左数第1个节点之前没有空格。 最后需要在一颗绘制好的满二叉树上删除n个结点（包括它的左右子树，以及与父亲的连接），原有的字符用空格替换（`ASCII 32`，请注意空格与`ASCII 0`的区别(若用记事本打开看起来是一样的，但是评测时会被算作错误答案！)）。 输入输出格式 输入格式 第1行包含2个正整数m和n，为需要绘制的二叉树层数已经从m层满二叉树中删除的结点数。 接下来n行，每行两个正整数，表示第i层第j个结点需要被删除（$1<i≤M,j≤2_{i-1}$）。 输出格式 按照题目要求绘制的二叉树。 输入输出样例 输入样例 #1 2 0 输出样例 #1   o    / \\  o   o 输入样例 #2 4 0 输出样例 #2            o                      / \\                    /   \\                  /     \\                /       \\              /         \\            o           o          / \\         / \\        /   \\       /   \\      o     o     o     o    / \\   / \\   / \\   / \\  o   o o   o o   o o   o 输入样例 #3 4 3 3 2 4 1 3 4 输出样例 #3            o                      / \\                    /   \\                  /     \\                /       \\              /         \\            o           o          /           /          /           /          o           o            \\         / \\            o       o   o       说明 $30\\%$的数据满足：$n=0$； $50\\%$的数据满足：$2≤m≤5$； $100\\%$的数据满足：$2≤m≤10,0≤n≤10$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:玛丽卡 题目描述 麦克找了个新女朋友，玛丽卡对他非常恼火并伺机报复。 因为她和他们不住在同一个城市，因此她开始准备她的长途旅行。 在这个国家中每两个城市之间最多只有一条路相通，并且我们知道从一个城市到另一个城市路上所需花费的时间。 麦克在车中无意中听到有一条路正在维修，并且那儿正堵车，但没听清楚到底是哪一条路。无论哪一条路正在维修，从玛丽卡所在的城市都能到达麦克所在的城市。 玛丽卡将只从不堵车的路上通过，并且她将按最短路线行车。麦克希望知道在最糟糕的情况下玛丽卡到达他所在的城市需要多长时间，这样他就能保证他的女朋友离开该城市足够远。 编写程序，帮助麦克找出玛丽卡按最短路线通过不堵车道路到达他所在城市所需的最长时间（用分钟表示）。 输入输出格式 输入格式 第一行有两个用空格隔开的数 N 和 M，分别表示城市的数量以及城市间道路的数量。$1 \\le N \\le 1000，1 \\le M \\le N \\times (N - 1)/2$。城市用数字 $1 \\sim N$ 标识，麦克在城市 1 中，玛丽卡在城市 N 中。   接下来的 M 行中每行包含三个用空格隔开的数 $A,B,V$。其中 $1 \\le A, B \\le N，1 \\le V \\le 1000$。这些数字表示在 A 和城市 B 中间有一条双行道，并且在 V 分钟内就能通过。 输出格式 一行，写出用分钟表示的最长时间，在这段时间中，无论哪条路在堵车，玛丽卡应该能够到达麦克处，如果少于这个时间的话，则必定存在一条路，该条路一旦堵车，玛丽卡就不能够赶到麦克处。 输入输出样例 输入样例 #1 5 7 1 2 8 1 4 10 2 3 9 2 4 10 2 5 1 3 4 7 3 5 10 输出样例 #1 27 说明 感谢 Imakf 提供的三组 hack 数据。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:PASTE 题目描述 我们用文本处理器来处理一个特殊的文本文件，该文本文件共有N行文本，每一行文本仅包含一个自然数，第一行为1、第二行为2，以此类推至N行为自然数N。 假设对该文本文件执行一次“剪切和粘贴”操作含义如下：首先选定连续的若干行文本，“剪切”操作将选定的文本从文件中剪下，而“粘贴”操作将剪切下来的文本插入到文件中的其他地方。 编写一个程序求出在进行了连续若干次“剪切和粘贴”操作后，文本文件中前十行的内容。 输入输出格式 输入格式 第一行包含两个用空格隔开的自然数N和K，N表示文件的总行数$(10≤N≤100,000)$，K表示“剪切和粘贴”的总次数$(1≤k≤1000)$。 下面K行每一行包含一次“剪切和粘贴”操作的执行信息，每行包含三个用空格隔开自然数$A,B,C$，其中$1≤A≤B≤N,0≤C≤N-(B-A+1)。A和B$表示选定文本的第一行和最后一行，C表示被剪切下来的文本待插入处的前一行，如果C等于0则被剪切下来的的文本将被插入到文件的开头。 输出格式 由十行组成，其中包含所有的操作都完成后的文本文件中前十行所包含的数字。 输入输出样例 输入样例 #1 13 3 6 12 1 2 9 0 10 13 8 输出样例 #1 6 7 8 9 10 11 12 2 3 4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:SEARCH 题目描述 年轻的拉尔夫开玩笑地从一个小镇上偷走了一辆车，但他没想到的是那辆车属于警察局，并且车上装有用于发射车子移动路线的装置。 那个装置太旧了，以至于只能发射关于那辆车的移动路线的方向信息。 编写程序，通过使用一张小镇的地图帮助警察局找到那辆车。程序必须能表示出该车最终所有可能的位置。 小镇的地图是矩形的，上面的符号用来标明哪儿可以行车哪儿不行。$\\verb!.!$ 表示小镇上那块地方是可以行车的，而符号 $\\verb!X!$ 表示此处不能行车。拉尔夫所开小车的初始位置用字符的 $\\verb!*!$ 表示，且汽车能从初始位置通过。 汽车能向四个方向移动：向北（向上），向南（向下），向西（向左），向东（向右）。 拉尔夫所开小车的行动路线是通过一组给定的方向来描述的。在每个给定的方向，拉尔夫驾驶小车通过小镇上一个或更多的可行车地点。 输入输出格式 输入格式 输入文件的第一行包含两个用空格隔开的自然数 R 和 C，$1\\le R\\le 50，1\\le C\\le 50$，分别表示小镇地图中的行数和列数。 以下的 R 行中每行都包含一组 C 个符号（$\\verb!.!$ 或 $\\verb!X!$ 或 $\\verb!*!$）用来描述地图上相应的部位。 接下来的第 $R+2$ 行包含一个自然数 N，$1\\le N\\le 1000$，表示一组方向的长度。 接下来的 N 行幅行包含下述单词中的任一个：`NORTH`（北）、`SOUTH`（南）、`WEST`（西）和 `EAST`（东），表示汽车移动的方向，任何两个连续的方向都不相同。 输出格式 用 R 行表示的小镇的地图（像输入文件中一样），字符 $\\verb!*!$ 应该仅用来表示汽车最终可能出现的位置。 输入输出样例 输入样例 #1 4 5 ..... .X... ...*X X.X.. 3 NORTH WEST SOUTH 输出样例 #1 ..... *X*.. *.*.X X.X.."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 接水问题 题目描述 学校里有一个水房，水房里一共装有 m 个龙头可供同学们打开水，每个龙头每秒钟的供水量相等，均为 1。 现在有 n 名同学准备接水，他们的初始接水顺序已经确定。将这些同学按接水顺序从 1 到 n 编号，i 号同学的接水量为 $w_i$。接水开始时，1 到 m 号同学各占一个水龙头，并同时打开水龙头接水。当其中某名同学 j 完成其接水量要求 $w_j$ 后，下一名排队等候接水的同学 k 马上接替 j 同学的位置开始接水。这个换人的过程是瞬间完成的，且没有任何水的浪费。即 j 同学第 x 秒结束时完成接水，则 k 同学第 $x+1$ 秒立刻开始接水。若当前接水人数 $n'$ 不足 m，则只有 $n'$ 个龙头供水，其它 $m - n'$ 个龙头关闭。 现在给出 n 名同学的接水量，按照上述接水规则，问所有同学都接完水需要多少秒。 输入输出格式 输入格式 第一行两个整数 n 和 m，用一个空格隔开，分别表示接水人数和龙头个数。 第二行 n 个整数 $w_1,w_2,\\ldots,w_n$，每两个整数之间用一个空格隔开，$w_i$ 表示 i 号同学的接水量。 输出格式 一个整数，表示接水所需的总时间。 输入输出样例 输入样例 #1 5 3 4 4 1 2 1 输出样例 #1 4 输入样例 #2 8 4 23 71 87 32 70 93 80 76 输出样例 #2 163 说明 【输入输出样例 \\#1 说明】 第 1 秒，3 人接水。第 1 秒结束时，$1,2,3$ 号同学每人的已接水量为 $1,3$ 号同学接完水，4 号同学接替 3 号同学开始接水。 第 2 秒，3 人接水。第 2 秒结束时，$1,2$ 号同学每人的已接水量为 $2,4$ 号同学的已接水量为 1。 第 3 秒，3 人接水。第 3 秒结束时，$1,2$ 号同学每人的已接水量为 $3,4$ 号同学的已接水量为 2。4 号同学接完水，5 号同学接替 4 号同学开始接水。 第 4 秒，3 人接水。第 4 秒结束时，$1,2$ 号同学每人的已接水量为 $4,5$ 号同学的已接水量为 1。$1,2,5$ 号同学接完水，即所有人完成接水的总接水时间为 4 秒。 【数据范围】 $1 \\le n \\le {10}^4，1 \\le m \\le 100，m \\le n$； $1 \\le w_i \\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:矩形 题目描述 给出一个 $n \\times n$ 的矩阵，矩阵中，有些格子被染成白色，有些格子被染成黑色，现要求矩阵中白色**矩形**的数量。 输入输出格式 输入格式 第一行，一个整数 n，表示矩形的大小。 接下来 n 行，每行 n 个字符，这些字符为 $\\verb!W!$ 或 $\\verb!B!$。其中 $\\verb!W!$ 表示白格，$\\verb!B!$ 表示黑格。 输出格式 一个正整数，为白色矩形数量。 输入输出样例 输入样例 #1 4 WWBW BBWB WBWW WBWB 输出样例 #1 15 说明 对于$30\\%$的数据，$n ≤ 50$； 对于$100\\%$的数据，$n ≤ 150$；"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:台阶问题 题目描述 有 N 级台阶，你一开始在底部，每次可以向上迈 $1\\sim K$ 级台阶，问到达第 N 级台阶有多少种不同方式。 输入输出格式 输入格式 两个正整数 $N,K$。 输出格式 一个正整数 $ans\\pmod{100003}$，为到达第 N 级台阶的不同方式数。 输入输出样例 输入样例 #1 5 2 输出样例 #1 8 说明 - 对于 $20\\%$ 的数据，$1\\leq N\\leq10，1\\leq K\\leq3$； - 对于 $40\\%$ 的数据，$1\\leq N\\leq1000$； - 对于 $100\\%$ 的数据，$1\\leq N\\leq100000，1\\leq K\\leq100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 XX 中学的两位信息组的教练正在为学校信息组是否应当将洛谷作为主要的训练工具而争论不休，最后决定采取一个量化的办法来决定是否迁移。 该中学的原来训练方法是，在机房的教师机里面用 cena 装载好测试数据，装载数据所需要 $T_a$ 时间，每一道题目都要装载。学生写好代码后，可以跑到教师机上收取程序并进行评测。但由于需要往返的路程，因此每跑一次就要浪费 $T_b$ 时间。所以也允许学生在自己的机子上装载好测试数据，可以根据自己的需要选择装载的题目，这需要花费和在教师机装载数据一样的时间 $T_a$，但是每次评测花费的时间就减少为 $T_c$。此外，该中学可能会用 Excel 记录各位同学的训练情况，如果某位同学的某道题的得分高于表格里的记录，那就会花费 $T_d$ 时间将这个成绩更新，否则就不必费那个事了，如果之前没有提交过这道题视为表格记录的程序为 0 分。 而在洛谷中，只需要将题目和测试数据上传到洛谷，花费 $T_a$ 时间。每次评测学生只需花费 $T_c$ 时间即可。记录成绩？那是洛谷的事儿，一提交完就帮你整理好了表格根本不费时间。 看起来可以省下不少时间吧。。然而，支持传统训练方法的教练认为，洛谷并非 $100 \\%$ 的稳定，在有的情况会无法提供服务，因此首先要将洛谷的耗时除以它的可用度（一个小于 $100\\%$ 的数字 $A\\%$）并去掉小数点。又因为传统观念不易纠正，总是有不信任将题目数据交给洛谷这样的想法（kkksc03：怪我咯？），因此使用洛谷的耗时还要再加上一个罚时 H 以做公平比较。 现在给出该中学的训练情况，希望你帮两位教练分析一下到底该如何选择。 输入输出格式 输入格式 第一行，两个整数 $N, M$，代表题目数量与学生数量。 第二行，N 个整数 $P_1, P_2, \\ldots, P_N$，为涉及的题目编号。 第三行，M 个整数 $S_1, S_2, \\ldots, S_M$，为学生的学号。 第四行，七个整数 $T_a, T_b, T_c, T_d, A, H, E$，前六个数字的意义见题目描述，E 如果是 1 那么在 Excel 中记录成绩，如果是 0 则不记录。 第五行，一个整数 R，代表评测数量。 接下来 R 行，评测记录，每行是 $\\mathit{Pr}_i, \\mathit{Sr}_i, \\mathit{Sc}_i$，分别为该次评测的题目号、学号以及成绩。 输出格式 三行。 第一行为传统方法的的耗时。 第二行为使用洛谷包括罚时在内的耗时。 第三行是结论，如果使用洛谷的时间小于传统方法的时间，那么输出 `Use Luogu!`。否则输出 `Forget it...`。 输入输出样例 输入样例 #1 4 4 501 502 503 504 2 3 5 7 50 30 10 5 93 50 1 10 501 2 10 501 2 80 501 2 70 502 3 0 502 3 0 504 5 100 503 7 0 503 7 0 503 7 0 503 7 10 输出样例 #1 480 372 Use Luogu! 输入样例 #2 2 3 101 102 1 2 3 70 60 50 1 80 100 0 6 101 1 100 101 2 100 101 3 100 102 1 100 102 2 100 102 3 100 输出样例 #2 500 650 Forget it... 说明 **【样例解释 #1】** 使用传统方法的话，装载 4 道题目需要 $4 \\times 50=200，2$ 号同学和 7 号同学用教师机需要时分别 $30 \\times 3=90、30 \\times 4 = 120$，但是明显自己装载 cena 只需要 $50+10 \\times 3=80、50+10 \\times 4=90$ 更优。而 $3,5$ 同学则使用教师机就好，耗时 $60,30。2$ 号同学的前两次评测单调递增，所以额外花费 $2 \\times 5=10$ 时间记录，3 号同学太弱了都是 0 分所以没必要记录了，5 与 7 各耗费 5 时间。所以这种情况总时间耗时为 $200+80+90+60+30+10+5+5=480$。 使用洛谷的话，装载题目耗费 $200，10$ 次评测共耗费 $10 \\times10=100$，考虑稳定性时间为 $(200+100) / 93\\% = 322$，所以最后总耗时为 $322+50=372$，所以决定使用洛谷。 **【数据范围】** 其中 $50\\%$ 数据中，不需要进行成绩的 Excel 记录。 其中 $50\\%$ 数据中，题目编号和学号均大于等于 0，小于等于 $1000$。 （这两种情况，可能会重叠） 对于 $100\\%$ 的数据，保证 $1 \\le n,m \\le 1000，1 \\le T_a, T_b, T_c,T_d,H \\le 10000，1 \\le R < 100000，0 \\le \\mathit{Sc}_i \\le 100，1 \\le A \\le 100$，学号和题目号在 ${10}^8$ 之内。 实际上，根据超级监控颁发的证书，洛谷 2015 年第一季度可靠性（SLA）为 $99.36 \\%$。同时观念也是可以改变的。 洛谷的优点很多都是不能量化的，其精华在于社区。和全国的 OIer 一起学习交流，不很好吗？ 最后插一句，去年的【榨取 kkksc03】的布告依然有效，详情。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:买礼物 题目描述 又到了一年一度的明明生日了，明明想要买 B 样东西，巧的是，这 B 样东西价格都是 A 元。 但是，商店老板说最近有促销活动，也就是： 如果你买了第 I 样东西，再买第 J 样，那么就可以只花 $K_{I,J}$ 元，更巧的是，$K_{I,J}$ 竟然等于 $K_{J,I}$。 现在明明想知道，他最少要花多少钱。 输入输出格式 输入格式 第一行两个整数，$A,B$。 接下来 B 行，每行 B 个数，第 I 行第 J 个为 $K_{I,J}$。 我们保证 $K_{I,J}=K_{J,I}$ 并且 $K_{I,I}=0$。 特别的，如果 $K_{I,J}=0$，那么表示这两样东西之间不会导致优惠。 输出格式 一个整数，为最小要花的钱数。 输入输出样例 输入样例 #1 1 1 0"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 给你云朵的个数 N，再给你 M 个关系，表示哪些云朵可以连在一起。 现在小杉要把所有云朵连成 K 个棉花糖，一个棉花糖最少要用掉一朵云，小杉想知道他怎么连，花费的代价最小。 输入输出格式 输入格式 第一行有三个数 $N,M,K$。 接下来 M 行每行三个数 $X,Y,L$，表示 X 云和 Y 云可以通过 L 的代价连在一起。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[JSOI2008] 星球大战 题目描述 很久以前，在一个遥远的星系，一个黑暗的帝国靠着它的超级武器统治着整个星系。 某一天，凭着一个偶然的机遇，一支反抗军摧毁了帝国的超级武器，并攻下了星系中几乎所有的星球。这些星球通过特殊的以太隧道互相直接或间接地连接。 但好景不长，很快帝国又重新造出了他的超级武器。凭借这超级武器的力量，帝国开始有计划地摧毁反抗军占领的星球。由于星球的不断被摧毁，两个星球之间的通讯通道也开始不可靠起来。 现在，反抗军首领交给你一个任务：给出原来两个星球之间的以太隧道连通情况以及帝国打击的星球顺序，以尽量快的速度求出每一次打击之后反抗军占据的星球的连通块的个数。（如果两个星球可以通过现存的以太通道直接或间接地连通，则这两个星球在同一个连通块中）。 输入输出格式 输入格式 输入文件第一行包含两个整数，$n,m$，分别表示星球的数目和以太隧道的数目。星球用 $0 \\sim n-1$ 的整数编号。 接下来的 m 行，每行包括两个整数 $x,y$，表示星球 x 和星球 y 之间有 “以太” 隧道，可以直接通讯。 接下来的一行为一个整数 k ，表示将遭受攻击的星球的数目。 接下来的 k 行，每行有一个整数，按照顺序列出了帝国军的攻击目标。这 k 个数互不相同，且都在 0 到 $n-1$ 的范围内。 输出格式 第一行是开始时星球的连通块个数。接下来的 k 行，每行一个整数，表示经过该次打击后现存星球的连通块个数。 输入输出样例 输入样例 #1 8 13 0 1 1 6 6 5 5 0 0 6 1 2 2 3 3 4 4 5 7 1 7 2 7 6 3 6 5 1 6 3 5 7 输出样例 #1 1 1 1 2 3 3 说明 【数据范围】   对于 $100\\%$ 的数据，$1\\le m \\le 2\\times 10^5，1\\le n \\le 2m，x \\neq y$。 [JSOI2008]"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[JSOI2008] 最大数 题目描述 现在请求你维护一个数列，要求提供以下两种操作： 1、    查询操作。 语法：`Q L` 功能：查询当前数列中末尾L个数中的最大的数，并输出这个数的值。 限制：L不超过当前数列的长度。$(L > 0)$ 2、    插入操作。 语法：`A n` 功能：将n加上t，其中t是最近一次查询操作的答案（如果还未执行过查询操作，则$t=0$)，并将所得结果对一个固定的常数D取模，将所得答案插入到数列的末尾。 限制：n是整数（可能为负数）并且在长整范围内。 注意：初始时数列是空的，没有一个数。 输入输出格式 输入格式 第一行两个整数，M 和 D，其中 M 表示操作的个数，D 如上文中所述。 接下来的 M 行，每行一个字符串，描述一个具体的操作。语法如上文所述。 输出格式 对于每一个查询操作，你应该按照顺序依次输出结果，每个结果占一行。 输入输出样例 输入样例 #1 5 100 A 96 Q 1 A 97 Q 1 Q 2 输出样例 #1 96 93 96 说明 #### 数据规模与约定 对于全部的测试点，保证 $1 \\leq M \\leq 2 \\times 10^5，1 \\leq D \\leq 2 \\times 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.1] 你的飞碟在这儿 Your Ride Is Here 题目描述 众所周知，在每一个彗星后都有一只 UFO。这些 UFO 时常来收集地球上的忠诚支持者。不幸的是，他们的飞碟每次出行都只能带上一组支持者。因此，他们要用一种聪明的方案让这些小组提前知道谁会被彗星带走。他们为每个彗星起了一个名字，通过这些名字来决定这个小组是不是被带走的那个特定的小组（你认为是谁给这些彗星取的名字呢？）。关于如何搭配的细节会在下面告诉你；你的任务是写一个程序，通过小组名和彗星名来决定这个小组是否能被那颗彗星后面的 UFO 带走。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.1] 贪婪的送礼者Greedy Gift Givers 题目描述 对于一群 n 个要互送礼物的朋友，GY 要确定每个人送出的钱比收到的多多少。在这一个问题中，每个人都准备了一些钱来送礼物，而这些钱将会被平均分给那些将收到他的礼物的人。   然而，在任何一群朋友中，有些人将送出较多的礼物(可能是因为有较多的朋友)，有些人有准备了较多的钱。   给出一群朋友，没有人的名字会长于 $14$ 字符，给出每个人将花在送礼上的钱，和将收到他的礼物的人的列表，请确定每个人收到的比送出的钱多的数目。 输入输出格式 输入格式 第一行一个正整数 n，表示人数。 接下来 n 行，每行一个字符串表示人名。 接下来有 n 段内容，对于每一段： 第一行是将会送出礼物人的名字。   第二行包含二个非负整数，第一个是原有的钱的数目 ( $\\in [0,2000]$ )，第二个 $g_i$ 是将收到这个人礼物的人的个数 如果 $g_i \\neq 0$, 在下面 $g_i$ 行列出礼物的接受者的名字，一个名字一行。 输出格式 输出共 n 行，每行输出一个人的名字和该人收到的钱比送出的钱多的数目。名字的顺序应该与输入第 $ 2 $ 行至 $ n+1 $ 行的顺序相同。 送出的钱永远是整数，即假设送礼人一次向 $ m $ 人送出 $ n $ 元，每个人应该得到 $ \\lfloor n/m  \\rfloor $ 元。剩余未送出的钱应返还给送礼者。 输入输出样例 输入样例 #1 5 dave laura owen vick amr dave 200 3 laura owen vick owen 500 1 dave amr 150 2 vick owen laura 0 2 amr vick vick 0 0 输出样例 #1 dave 302 laura 66 owen -359 vick 141 amr -150 说明 【数据范围】   $1\\le n \\le 10$ 题目翻译来自NOCOW。 USACO Training Section 1.1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.1] 黑色星期五Friday the Thirteenth 题目描述 $13$ 号又是一个星期五，那么 $13$号在星期五比在其他日子少吗？   为了回答这个问题，写一个程序，要求计算每个月的十三号落在周一到周日的次数。给出 n 年的一个周期，要求计算 $1900$ 年 1 月 1 日至 $1900+n-1$ 年 $12$ 月 $31$ 日中十三号落在周一到周日的次数。 这里有一些你要知道的: 1. $1900$ 年 1 月 1 日是星期一。 2. $4,6,11$ 和 9 月有 $30$ 天，其他月份除了 2 月都有 $31$ 天，闰年 2 月有 $29$ 天，平年 2 月有 $28$ 天。 3. 年份可以被 4 整除的为闰年（$1992=4\\times 498$ 所以 $1992$ 年是闰年，但是 $1990$ 年不是闰年）。 4. 以上规则不适合于世纪年。可以被 $400$ 整除的世纪年为闰年，否则为平年。所以，$1700,1800,1900,2100$ 年是平年，而 $2000$ 年是闰年。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.2] 挤牛奶Milking Cows 题目描述 三个农民每天清晨 5 点起床，然后去牛棚给三头牛挤奶。 第一个农民在 $300$ 秒 (从 5 点开始计时) 给他的牛挤奶，一直到 $1000$ 秒。第二个农民在 $700$ 秒开始，在 $1200$ 秒结束。第三个农民在 $1500$ 秒开始，$2100$ 秒结束。   期间最长的至少有一个农民在挤奶的连续时间为 $900$ 秒 (从 $300$ 秒到 $1200$ 秒)，而最长的无人挤奶的连续时间(从挤奶开始一直到挤奶结束)为 $300$ 秒 (从 $1200$ 秒到 $1500$ 秒)。 **** 你的任务是编一个程序，读入一个有 n 个农民挤 n 头牛的工作时间列表，计算以下两点(均以秒为单位): 最长至少有一人在挤奶的时间段。 最长的无人挤奶的时间段。（从有人挤奶开始算起） 输入输出格式 输入格式 第一行一个正整数 n 接下来 n 行，每行两个非负整数 $l,r$，表示一个农民的开始时刻与结束时刻。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.2] 方块转换 Transformations 题目描述 一块 $n \\times n$ 正方形的黑白瓦片的图案要被转换成新的正方形图案。写一个程序来找出将原始图案按照以下列转换方法转换成新图案的最小方式： - 转 $90\\degree$：图案按顺时针转 $90\\degree$。 - 转 $180\\degree$：图案按顺时针转 $180\\degree$。 - 转 $270\\degree$：图案按顺时针转 $270\\degree$。 - 反射：图案在水平方向翻转（以中央铅垂线为中心形成原图案的镜像）。 - 组合：图案在水平方向翻转，然后再按照 $1 \\sim 3$ 之间的一种再次转换。 - 不改变：原图案不改变。 - 无效转换：无法用以上方法得到新图案。 如果有多种可用的转换方法，请选择序号最小的那个。 只使用上述 7 个中的一个步骤来完成这次转换。 输入输出格式 输入格式 第一行一个正整数 n。    然后 n 行，每行 n 个字符，全部为 `@` 或 `-`，表示初始的正方形。 接下来 n 行，每行 n 个字符，全部为 `@` 或 `-`，表示最终的正方形。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.2] 回文平方数 Palindromic Squares 题目描述 回文数是指从左向右念和从右向左念都一样的数。如 $12321$ 就是一个典型的回文数。 给定一个用十进制表示的正整数 B，输出所有 $[1,300]$ 中，它的平方用 B 进制表示时是回文数的数。 输入输出格式 输入格式 共一行，一个单独的正整数 B。 输出格式 每行两个 B 进制的符合要求的数字，第二个数是第一个数的平方，且第二个数是回文数。 注意大于 9 的数，用字母表示。如用 `A` 表示 $10$，`B` 表示 $11$，用第 n 个大写字母表示 $n+9$。 输入输出样例 输入样例 #1 10 输出样例 #1 1 1 2 4 3 9 11 121 22 484 26 676 101 10201 111 12321 121 14641 202 40804 212 44944 264 69696 说明 【数据范围】   对于 $100\\%$ 的数据，$2 \\le B \\le 20$ 题目翻译来自NOCOW。 USACO Training Section 1.2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:事实上，有一些数（如 $21$ ），在十进制时不是回文数，但在其它进制（如二进制时为 $10101$ ）时就是回文数。 题目描述 给定两个十进制数 $n,s$，然后找出前 n 个满足大于 s 且在不少于两种进制（二进制至十进制）上是回文数的十进制数，输出到文件上。 本问题的解决方案不需要使用大于 $32$ 位的整型数"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.3] 混合牛奶 Mixing Milk 题目描述 由于乳制品产业利润很低，所以降低原材料（牛奶）价格就变得十分重要。帮助 Marry 乳业找到最优的牛奶采购方案。 Marry 乳业从一些奶农手中采购牛奶，并且每一位奶农为乳制品加工企业提供的价格可能相同。此外，就像每头奶牛每天只能挤出固定数量的奶，每位奶农每天能提供的牛奶数量是一定的。每天 Marry 乳业可以从奶农手中采购到小于或者等于奶农最大产量的整数数量的牛奶。 给出 Marry 乳业每天对牛奶的需求量，还有每位奶农提供的牛奶单价和产量。计算采购足够数量的牛奶所需的最小花费。 注：每天所有奶农的总产量大于 Marry 乳业的需求量。 输入输出格式 输入格式 第一行二个整数 $n,m$，表示需要牛奶的总量，和提供牛奶的农民个数。 接下来 m 行，每行两个整数 $p_i,a_i$，表示第 i 个农民牛奶的单价，和农民 i 一天最多能卖出的牛奶量。 输出格式 单独的一行包含单独的一个整数，表示 Marry 的牛奶制造公司拿到所需的牛奶所要的最小费用。 输入输出样例 输入样例 #1 100 5 5 20 9 40 3 10 8 80 6 30 输出样例 #1 630 说明 【数据范围】   对于 $100\\%$ 的数据：   $0 \\le n,a_i \\le 2 \\times 10^6，0\\le m \\le 5000，0 \\le p_i \\le 1000$ 题目翻译来自 NOCOW。 USACO Training Section 1.3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.3] 修理牛棚 Barn Repair 题目描述 在一个月黑风高的暴风雨夜，Farmer John 的牛棚的屋顶、门被吹飞了 好在许多牛正在度假，所以牛棚没有住满。    牛棚一个紧挨着另一个被排成一行，牛就住在里面过夜。有些牛棚里有牛，有些没有。 所有的牛棚有相同的宽度。    自门遗失以后，Farmer John 必须尽快在牛棚之前竖立起新的木板。他的新木材供应商将会供应他任何他想要的长度，但是吝啬的供应商只能提供有限数目的木板。 Farmer John 想将他购买的木板总长度减到最少。 给出 $m,s,c$，表示木板最大的数目、牛棚的总数、牛的总数；以及每头牛所在牛棚的编号，请算出拦住所有有牛的牛棚所需木板的最小总长度。 输入输出格式 输入格式 一行三个整数 $m,s,c$，意义如题目描述。    接下来 c 行，每行包含一个整数，表示牛所占的牛棚的编号。 输出格式 输出一行一个整数，表示所需木板的最小总长度。 输入输出样例 输入样例 #1 4 50 18 3  4  6  8  14 15  16  17  21 25  26  27  30  31  40  41  42  43 输出样例 #1 25 说明 【数据范围】   对于 $100\\%$ 的数据，$1\\le m \\le 50，1\\le c \\le s \\le 200$。  USACO Training Section 1.3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.3] 最长的回文 Calf Flac 题目描述 据说如果你给无限只母牛和无限台巨型便携式电脑（有非常大的键盘 ), 那么母牛们会制造出世上最棒的回文。你的工作就是去寻找这些牛制造的奇观（最棒的回文）。 在寻找回文时不用理睬那些标点符号、空格（但应该保留下来以便做为答案输出）, 只用考虑字母 ${\\tt A}\\sim {\\tt Z}$ 和 ${\\tt a}\\sim {\\tt z}$。要你寻找的最长的回文的文章是一个不超过 $20{,}000$ 个字符的字符串。我们将保证最长的回文不会超过 $2{,}000$ 个字符（在除去标点符号、空格之前）。 输入输出格式 输入格式 输入文件不会超过 $20,000$ 字符。这个文件可能一行或多行，但是每行都不超过 $80$ 个字符（不包括最后的换行符）。 输出格式 输出的第一行应该包括找到的最长的回文的长度。 下一行或几行应该包括这个回文的原文（没有除去标点符号、空格），把这个回文输出到一行或多行（如果回文中包括换行符）。 如果有多个回文长度都等于最大值，输出最前面出现的那一个。 输入输出样例 输入样例 #1 Confucius say: Madam, I'm Adam.  输出样例 #1 11 Madam, I'm Adam 说明 题目翻译来自NOCOW。 USACO Training Section 1.3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.3] 牛式 Prime Cryptarithm 题目描述 下面是一个乘法竖式，如果用我们给定的那 n 个数字来取代 `*`，可以使式子成立的话，我们就叫这个式子为牛式。 ```cpp           ***     x      **    ----------          ***         ***    ----------         **** ``` 数字只能取代 `*`，当然第一位不能为 0，况且给定的数字里不包括 0。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.4] [IOI1994]时钟 The Clocks 题目描述 考虑将如此安排在一个 $3 \\times 3$ 行列中的九个时钟: ```plain |-------|   |-------|   |-------| |       |   |       |   |   |   | |---o   |   |---o   |   |   o   | |       |   |       |   |       | |-------|   |-------|   |-------|     A           B           C |-------|   |-------|   |-------| |       |   |       |   |       | |   o   |   |   o   |   |   o   | |   |   |   |   |   |   |   |   | |-------|   |-------|   |-------|     D           E           F |-------|   |-------|   |-------| |       |   |       |   |       | |   o   |   |   o---|   |   o   | |   |   |   |       |   |   |   | |-------|   |-------|   |-------|     G           H           I ``` 目标要找一个最小的移动顺序将所有的指针指向 $12$ 点。下面原表格列出了 9 种不同的旋转指针的方法，每一种方法都叫一次移动。   选择 $1 \\sim 9$ 号移动方法，将会使在表格中对应的时钟的指针顺时针旋转   $90$ 度。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.4] 等差数列 Arithmetic Progressions 题目描述 一个等差数列是一个能表示成 $a, a+b, a+2b, \\dots ,a+nb\\space (n \\in \\mathbb N)$ 的数列。 在这个问题中 a 是一个非负的整数，b 是正整数。   写一个程序来找出在双平方数集合：   $$\\{ x | x = p^2 + q^2 \\wedge p,q \\in \\mathbb N \\cap [0,m]\\}$$ 中长度为 n 的等差数列。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.4] 母亲的牛奶 Mother's Milk 题目描述 农民约翰有三个容量分别是 $a,b,c$ 升的桶。   最初，$a,b$ 桶都是空的，而 c 桶是装满牛奶的。有时，农民把牛奶从一个桶倒到另一个桶中，直到被灌桶装满或原桶空了。   当然每一次灌注都是完全的。由于节约，牛奶不会有丢失。 写一个程序去帮助农民找出当 a 桶是空的时候，c 桶中牛奶所剩量的所有可能性。 输入输出格式 输入格式 单独的一行包括三个整数 $a,b,c$。 输出格式 只有一行，升序地列出当 a 桶是空的时候，c 桶牛奶所剩量的所有可能性。 输入输出样例 输入样例 #1 8 9 10 输出样例 #1 1 2 8 9 10 输入样例 #2 2 5 10 输出样例 #2 5 6 7 8 9 10 说明 【数据范围】   对于 $100\\%$ 的数据，$1\\le a,b,c \\le 20$。 题目翻译来自NOCOW。 USACO Training Section 1.4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.5] 回文质数 Prime Palindromes 题目描述 因为 $151$ 既是一个质数又是一个回文数（从左到右和从右到左是看一样的），所以 $151$ 是回文质数。 写一个程序来找出范围 $[a,b] (5 \\le a < b \\le 100,000,000)$（一亿）间的所有回文质数。 输入输出格式 输入格式 第一行输入两个正整数 a 和 b。 输出格式 输出一个回文质数的列表，一行一个。 输入输出样例 输入样例 #1 5 500 输出样例 #1 5 7 11 101 131 151 181 191 313 353 373 383 说明 Hint 1: Generate the palindromes and see if they are prime. 提示 1: 找出所有的回文数再判断它们是不是质数（素数）."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.5] 特殊的质数肋骨 Superprime Rib 题目描述 农民约翰的母牛总是产生最好的肋骨。你能通过农民约翰和美国农业部标记在每根肋骨上的数字认出它们。  农民约翰确定他卖给买方的是真正的质数肋骨，是因为从右边开始切下肋骨，每次还剩下的肋骨上的数字都组成一个质数。   举例来说：$7\\ 3\\ 3\\ 1$ 全部肋骨上的数字 $7331$ 是质数；三根肋骨 $733$ 是质数；二根肋骨 $73$ 是质数；当然,最后一根肋骨 7 也是质数。$7331$ 被叫做长度 4 的特殊质数。   写一个程序对给定的肋骨的数目 n，求出所有的特殊质数。1 不是质数。 输入输出格式 输入格式 一行一个正整数 n。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:关路灯 题目描述 某一村庄在一条路线上安装了 n 盏路灯，每盏灯的功率有大有小（即同一段时间内消耗的电量有多有少）。老张就住在这条路中间某一路灯旁，他有一项工作就是每天早上天亮时一盏一盏地关掉这些路灯。 为了给村里节省电费，老张记录下了每盏路灯的位置和功率，他每次关灯时也都是尽快地去关，但是老张不知道怎样去关灯才能够最节省电。他每天都是在天亮时首先关掉自己所处位置的路灯，然后可以向左也可以向右去关灯。开始他以为先算一下左边路灯的总功率再算一下右边路灯的总功率，然后选择先关掉功率大的一边，再回过头来关掉另一边的路灯，而事实并非如此，因为在关的过程中适当地调头有可能会更省一些。 现在已知老张走的速度为 $1m/s$，每个路灯的位置（是一个整数，即距路线起点的距离，单位：m）、功率（W），老张关灯所用的时间很短而可以忽略不计。 请你为老张编一程序来安排关灯的顺序，使从老张开始关灯时刻算起所有灯消耗电最少（灯关掉后便不再消耗电了）。 输入输出格式 输入格式 第一行是两个数字 n（表示路灯的总数）和 c（老张所处位置的路灯号）； 接下来 n 行，每行两个数据，表示第 1 盏到第 n 盏路灯的位置和功率。数据保证路灯位置单调递增。 输出格式 一个数据，即最少的功耗（单位：J，$1J=1W\\times s$）。 输入输出样例 输入样例 #1 5 3 2 10 3 20 5 20 6 30 8 10 输出样例 #1 270   说明 ### 样例解释 此时关灯顺序为 `3 4 2 1 5`。 ### 数据范围 $1\\le n\\le50，1\\le c\\le n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最多因子数 题目描述 数学家们喜欢各种类型的有奇怪特性的数。例如，他们认为 $945$ 是一个有趣的数，因为它是第一个所有约数之和大于本身的奇数。 为了帮助他们寻找有趣的数，你将写一个程序扫描一定范围内的数，并确定在此范围内约数个数最多的那个数。不幸的是，这个数和给定的范围的都比较大，用简单的方法寻找可能需要较多的运行时间。所以请确定你的算法能在几秒内完成最大范围内的扫描。 输入输出格式 输入格式 只有一行，给出扫描的范围，由下界 L 和上界 U 确定。满足 $2\\le L\\le U\\le10^9$。 输出格式 对于给定的范围，输出该范围内约数个数 D 最多的数 P。若有多个，则输出最小的那个。请输出 $\\texttt{Between }L\\texttt{ and }U\\texttt{, }P\\texttt{ has a maximum of }D\\texttt{ divisors.}$，其中 $L,U,P,D$ 的含义同前面所述。 输入输出样例 输入样例 #1 1000 2000 输出样例 #1 Between 1000 and 2000, 1680 has a maximum of 40 divisors."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:排队接水 题目描述 有 n 个人在一个水龙头前排队接水，假如每个人接水的时间为 $T_i$，请编程找出这 n 个人排队的一种顺序，使得 n 个人的平均等待时间最小。 输入输出格式 输入格式 第一行为一个整数 n。 第二行 n 个整数，第 i 个整数 $T_i$ 表示第 i 个人的等待时间 $T_i$。 输出格式 输出文件有两行，第一行为一种平均时间最短的排队顺序；第二行为这种排列方案下的平均等待时间（输出结果精确到小数点后两位）。 输入输出样例 输入样例 #1 10  56 12 1 99 1000 234 33 55 99 812 输出样例 #1 3 2 7 8 1 4 9 6 10 5 291.90 说明 $1\\le n \\leq 1000，1\\le t_i \\leq 10^6$，不保证 $t_i$ 不重复。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2013] 向量内积 题目描述 两个 d 维向量 $A=[a_1,a_2,\\ldots,a_d]$ 与 $B=[b_1,b_2,\\ldots,b_d]$ 的内积为其相对应维度的权值的乘积和，即： $$(A,B)=\\sum_{i=1}^d a_ib_i=a_1b_1+a_2b_2+\\ldots+a_db_d$$ 现有 n 个 d 维向量 $x_1,\\ldots,x_n$ ，小喵喵想知道是否存在两个向量的内积为 k 的倍数。请帮助她解决这个问题。 输入输出格式 输入格式 第一行包含 3 个正整数 $n,d,k$，分别表示向量的个数，维数以及待检测的倍数。 接下来 n 行每行有 d 个非负整数，其中第 i 行的第 j 个整数表示向量 $x_i$ 的第 j 维权值 $x_{i,j}$。 输出格式 包含两个整数，用空格隔开。 如果存在两个向量 $x_p,x_q$ 的内积为 k 的整数倍，则输出两个向量的编号 p 与 q（要求 $p<q$）。如果存在多组这样的向量组合，输出其中任意一组即可。 若不存在这样的向量组合，则输出两个 $-1$。 输入输出样例 输入样例 #1 3 5 2  1 0 1 0 1  1 1 0 1 0  0 1 0 1 1 输出样例 #1 2 3 说明 ### 数据范围 | 测试点编号 | n | d | k | $x_{i,j}$ | | :----------: | :----------: | :----------: | :----------: | :----------: | | 1 | 2 | $20$ | 2 | $\\leq 10$ | | 2 | 5 | $20$ | 2 | $\\leq 10$ | | 3 | $10$ | $20$ | 3 | $\\leq 10$ | | 4 | $20$ | $20$ | 2 | $\\leq 100$ | | 5 | $50$ | $20$ | 3 | $\\leq 100$ | | 6 | $50$ | $50$ | 2 | $\\leq 10^3$ | | 7 | $50$ | $50$ | 3 | $\\leq 3\\times 10^6 $ | | 8 | $80$ | $80$ | 2 | $\\leq 2\\times 10^6 $ | | 9 | $100$ | $100$ | 3 | $\\leq 3\\times 10^6 $ | | $10$ | $500$ | $100$ | 3 | $\\leq 3\\times 10^6$ | | $11$ | $10^3$ | $100$ | 2 | $\\leq 2\\times 10^6$ | | $12$ | $10^3$ | $100$ | 3 | $\\leq 3\\times 10^6$ | | $13$ | $10^4$ | $100$ | 2 | $<10$ | | $14$ | $10^4$ | $100$ | 3 | $<10$ | | $15$ | $1.5\\times 10^4$ | $100$ | 2 | $<10$ | | $16$ | $1.8\\times 10^4$ | $100$ | 2 | $<10$ | | $17$ | $2\\times 10^4$ | $100$ | 2 | $<10$ | | $18$ | $5\\times 10^4$ | $30$ | 3 | $<10$ | | $19$ | $8\\times 10^4$ | $30$ | 3 | $<10$ | | $20$ | $10^5$ | $30$ | 3 | $<10$ |"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:黑白棋游戏 题目描述 黑白棋游戏的棋盘由 $4 \\times 4$ 方格阵列构成。棋盘的每一方格中放有 1 枚棋子，共有 8 枚白棋子和 8 枚黑棋子。这 $16$ 枚棋子的每一种放置方案都构成一个游戏状态。在棋盘上拥有 1 条公共边的 2 个方格称为相邻方格。一个方格最多可有 4 个相邻方格。在玩黑白棋游戏时，每一步可将任何 2 个相邻方格中棋子互换位置。对于给定的初始游戏状态和目标游戏状态，编程计算从初始游戏状态变化到目标游戏状态的最短着棋序列。 输入输出格式 输入格式 输入文件共有 8 行。前四行是初始游戏状态，后四行是目标游戏状态。每行 4 个数分别表示该行放置的棋子颜色。“ 0 ”表示白棋；“ 1 ”表示黑棋。 输出格式 输出文件的第一行是着棋步数 n。接下来 n 行，每行 4 个数分别表示该步交换棋子的两个相邻方格的位置。例如，abcd 表示将棋盘上 $(a,b)$ 处的棋子与 $(c,d)$ 处的棋子换位。 输入输出样例 输入样例 #1 1111 0000 1110 0010 1010 0101 1010 0101 输出样例 #1 4 1222 1424 3242 4344 说明 由 @zhouyonglong 提供 SPJ"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:【模板】快速幂 | 取余运算 题目描述 给你三个整数 $a,b,p$，求 $a^b \\bmod p$。 输入输出格式 输入格式 输入只有一行三个整数，分别代表 $a,b,p$。 输出格式 输出一行一个字符串 `a^b mod p=s`，其中 $a,b,p$ 分别为题目给定的值， s 为运算结果。 输入输出样例 输入样例 #1 2 10 9 输出样例 #1 2^10 mod 9=7 说明 **样例解释** $2^{10} = 1024，1024 \\bmod 9 = 7$。 **数据规模与约定** 对于 $100\\%$ 的数据，保证 $0\\le a,b < 2^{31}，a+b>0，2 \\leq p \\lt 2^{31}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:智力大冲浪 题目描述 小伟报名参加中央电视台的智力大冲浪节目。本次挑战赛吸引了众多参赛者，主持人为了表彰大家的勇气，先奖励每个参赛者 m 元。先不要太高兴，因为这些钱还不一定都是你的。接下来主持人宣布了比赛规则： 首先，比赛时间分为 n 个时段，它又给出了很多小游戏，每个小游戏都必须在规定期限 $t_i$ 前完成。如果一个游戏没能在规定期限前完成，则要从奖励费 m 元中扣去一部分钱 $w_i，w_i$ 为自然数，不同的游戏扣去的钱是不一样的。当然，每个游戏本身都很简单，保证每个参赛者都能在一个时段内完成，而且都必须从整时段开始。主持人只是想考考每个参赛者如何安排组织自己做游戏的顺序。作为参赛者，小伟很想赢得冠军，当然更想赢取最多的钱！注意：比赛绝对不会让参赛者赔钱! 输入输出格式 输入格式 第一行为 m，表示一开始奖励给每位参赛者的钱； 第二行为 n，表示有 n 个小游戏； 第三行有 n 个数，分别表示游戏 1 到 n 的规定完成期限； 第四行有 n 个数，分别表示游戏 1 到 n 不能在规定期限前完成的扣款数。 输出格式 输出仅一行，表示小伟能赢取最多的钱。 输入输出样例 输入样例 #1 10000 7 4 2 4 3 1 4 6 70 60 50 40 30 20 10 输出样例 #1 9950 说明 对于 $100\\%$ 的数据，$1 \\le n \\le 500，1 \\le m \\le 5 \\times 10^5，1 \\le t_i \\le n，1 \\le w_i \\le 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 蒟蒻 HansBug 在一本语文书里面发现了一本答案，然而他却明明记得这书应该还包含一份练习题。然而出现在他眼前的书多得数不胜数，其中有书，有答案，有练习册。已知一个完整的书册均应该包含且仅包含一本书、一本练习册和一份答案，然而现在全都乱做了一团。许多书上面的字迹都已经模糊了，然而 HansBug 还是可以大致判断这是一本书还是练习册或答案，并且能够大致知道一本书和答案以及一本书和练习册的对应关系（即仅仅知道某书和某答案、某书和某练习册有可能相对应，除此以外的均不可能对应）。既然如此，HansBug 想知道在这样的情况下，最多可能同时组合成多少个完整的书册。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:木棍加工 题目描述 一堆木头棍子共有 n 根，每根棍子的长度和宽度都是已知的。棍子可以被一台机器一个接一个地加工。机器处理一根棍子之前需要准备时间。准备时间是这样定义的： - 第一根棍子的准备时间为 1 分钟。 - 如果刚处理完长度为 l，宽度为 w 的棍子，那么如果下一个棍子长度为 $l_i$，宽度为 $w_i$，并且满足 $l\\ge l_i、w\\ge w_i$，这个棍子就不需要准备时间，否则需要 1 分钟的准备时间。 计算处理完 n 根棍子所需要的最短准备时间。比如，你有 5 根棍子，长度和宽度分别为 $(4,9),(5,2),(2,1),(3,5),(1,4)$，最短准备时间为 2（按 $(4,9),(3,5),(1,4),(5,2),(2,1)$ 的次序进行加工）。 输入输出格式 输入格式 第一行是一个整数 n（$n\\le5000$）。 第二行是 $2n$ 个整数，分别是 $l_1,w_1,l_2,w_2,\\ldots,l_n,w_n。l$ 和 w 的值均不超过 $10000$，相邻两数之间用空格分开。 输出格式 仅一行，一个整数，所需要的最短准备时间。 输入输出样例 输入样例 #1 5 4 9 5 2 2 1 3 5 1 4 输出样例 #1 2 说明 对于 $100 \\%$ 的数据，$1 \\le n \\le 5000，1 \\le l_i, w_i \\le {10}^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小 A 的口头禅 题目描述 小 A 最近有了一个口头禅 “呵呵”，于是他给出了一个矩形，让你求出里面有几个 “$\\verb!hehe!$”（方向无所谓）。 输入输出格式 输入格式 第一行两个数 $n, m$，表示这个矩形的大小。 接下来 n 行，每行 m 个字符，表示这个矩形。 输出格式 一行一个数，表示有几个 “$\\verb!hehe!$”。 输入输出样例 输入样例 #1 5 5 heheh heheh heheh heheh heheh 输出样例 #1 10 说明 $1 \\leq n,m \\leq1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:血缘关系 题目描述 我们正在研究妖怪家族的血缘关系。每个妖怪都有相同数量的基因，但是不同的妖怪的基因可能是不同的。我们希望知道任意给定的两个妖怪之间究竟有多少相同的基因。由于基因数量相当庞大，直接检测是行不通的。但是，我们知道妖怪家族的家谱，所以我们可以根据家谱来估算两个妖怪之间相同基因的数量。 妖怪之间的基因继承关系相当简单：如果妖怪 C 是妖怪 A 和 B 的孩子，则 C 的任意一个基因只能是继承 A 或 B 的基因，继承 A 或 B 的概率各占 $50\\%$。所有基因可认为是相互独立的，每个基因的继承关系不受别的基因影响。 现在，我们来定义两个妖怪 X 和 Y 的基因相似程度。例如，有一个家族，这个家族中有两个毫无关系（没有相同基因）的妖怪 A 和 B，及它们的孩子 C 和 D。那么 C 和 D 相似程度是多少呢？因为 C 和 D 的基因都来自 A 和 B，从概率来说，各占 $50\\%$。所以，依概率计算 C 和 D 平均有 $50\\%$ 的相同基因，C 和 D 的基因相似程度为 $50\\%$。需要注意的是，如果 A 和 B 之间存在相同基因的话，C 和 D 的基因相似程度就不再是 $50\\%$ 了。 你的任务是写一个程序，对于给定的家谱以及成对出现的妖怪，计算它们之间的基因相似程度。 输入输出格式 输入格式 第一行两个整数 $n\\ (2 \\le n \\le 300)$ 和 k。表示家族中成员数，它们分别用 $1,2,\\cdots,n$ 来表示。$k\\ (0 \\le k \\le n-2)$ 表示这个家族中有父母的妖怪数量（其他的妖怪没有父母，它们之间可以认为毫无关系，即没有任何相同基因）。 接下来的 k 行，每行三个整数 $a,b,c$，表示妖怪 a 是妖怪 b 的孩子。 然后是一行一个整数 m（$1 \\le m \\le n_2$），表示需要计算基因相似程度的妖怪对数。 接下来的 m 行，每行两个整数，表示需要计算基因相似程度的两个妖怪。 你可以认为这里给出的家谱总是合法的。具体来说就是，没有任何的妖怪会成为自己的祖先，并且你也不必担心会存在性别错乱问题。 输出格式 共 m 行。可 k 行表示第 k 对妖怪之间的基因相似程度。你必须按百分比输出，有多少精度就输出多少，而且必须准确，但不允许出现多余的 0（注意，$0.001$ 的情况应输出 $\\verb!0.1%!$，而不是 $\\verb!.1%!$）。具体格式参见样例。 输入输出样例 输入样例 #1 7 4                                                      4 1 2                                            5 2 3                                            6 4 5                                            7 5 6  4  1 2  2 6  7 5  3 3  输出样例 #1 0%  50%  81.25%  100%"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:算24点 题目描述 几十年前全世界就流行一种数字游戏，至今仍有人乐此不疲．在中国我们把这种游戏称为“算 $24$ 点”。您作为游戏者将得到 4 个 $1 \\sim 9$ 之间的自然数作为操作数，而您的任务是对这 4 个操作数进行适当的算术运算，要求运算结果等于 $24$。 您可以使用的运算只有：$\\verb!+!,\\verb!-!,\\verb!*!,\\verb!/!$，您还可以使用 $\\verb!()!$ 来改变运算顺序。注意：所有的中间结果须是整数，所以一些除法运算是不允许的（例如，$(2\\ \\times 2)/4$ 是合法的，$2\\times (2/4)$ 是不合法的）。下面我们给出一个游戏的具体例子： 若给出的 4 个操作数是：1 、 2 、 3 、 7，则一种可能的解答是 $1+2+3\\ \\times 7=24$。 输入输出格式 输入格式 只有一行，四个1到9之间的自然数。 输出格式 如果有解的话，只要输出一个解。输出的是三行数据，分别表示运算的步骤。 - 其中第一行是输入的两个数和一个运算符和运算后的结果； - 第二行是第一行的结果和一个输入的数据、运算符、运算后的结果，或者是另外两个数的输出结果； - 第三行是前面的结果第二行的结果或者剩下的一个数字、运算符和 $\\verb!=24!$。如果两个操作数有大小的话则先输出大的。 如果没有解则输出 `No answer!`。 如果有多重合法解，输出任意一种即可。 注：所有运算结果均为正整数。 输入输出样例 输入样例 #1 1 2 3 7 输出样例 #1 2+1=3 7*3=21 21+3=24 说明 感谢 chenyy 提供 special judge --- $\\text{upd 2022.8.1}$：新增加一组 Hack 数据。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:冗余依赖 题目描述 在设计关系数据库的表格时，术语“函数依赖”（FD）被用来表示不同域之间的关系。函数依赖是描述一个集合中的域的值与另一个集合中的域的值之间的关系。记号 $X \\to Y$ 被用来表示当集合 X 中的域被赋值后，集合 Y 的域就可以确定相应的值。例如，一个数据表格包含“社会治安编号”（S）、“姓名”（N）、“地址”（A）、“电话”（P）的域，并且每个人都与某个特定的互不相同的 S 值相对应，根据域 S 就可以确定域 N 、 A 、 P 的值。这就记作 $S \\to \\{N,A,P\\}$。 写一个程序以找出一组依赖中所有的冗余依赖。一个依赖是冗余的是指它可以通过组里的其他依赖得到。例如，如果组里包括依赖 $A \\to B$ 、 $B \\to C$ 和 $A \\to C$，那么第三个依赖是冗余的，因为域 C 可以用前两个依赖得到（域 A 确定了域 B 的值，同样域 B 确定了域 C 的值）。在 $A \\to B$ 、 $B \\to C$ 、 $C \\to A$ 、 $A \\to C$ 、 $C \\to B$ 和 $B \\to A$ 中，所有的依赖都是冗余的。 现在要求你编写一个程序，从给定的依赖关系中找出冗余的。 输入输出格式 输入格式 第一行是一个不超过 $100$ 的整数 n，它表示文件中函数依赖的个数。 从第二行起每一行是一个函数依赖且互不重复，每行包含用字符 $\\verb!-!$ 和 $\\verb!>!$ 隔开的非空域列表。列表月包含大写的字母，函数依赖的数据行中不包括空格和制表符，不会出现“平凡”冗余依赖（如 $A \\to A$）。虽然文件中没有对函数依赖编号，但其顺序就是编号 1 到 n。 输出格式 每一行输出一个冗余依赖，以及其他依赖的一个序列以说明该依赖是冗余的。格式为 $\\texttt{FD}\\ x\\ \\texttt{is redundant using FDs:}\\ p_1\\ p_2 \\cdots p_k$。其中 x 是冗余的依赖的编号，$p_1,p_2,\\cdots,p_k$ 是用来证明 x 是冗余依赖的依赖序列。 如果许多函数依赖的序列都能被用来说明一个依赖是冗余的，则输出其中最短的证明序列。 如果这些函数依赖中不包含冗余依赖，则输出 `No redundant FDs`。 输入输出样例 输入样例 #1 3 A->BD BD->C A->C 输出样例 #1 FD 3 is redundant using FDs: 1 2 输入样例 #2 6 P->RST VRT->SQP PS->T Q->TR QS->P SR->V 输出样例 #2 FD 3 is redundant using FDs: 1 FD 5 is redundant using FDs: 4 6 2 说明 ### 样例 1 解释 依赖关系 3 是冗余的。因为 $A\\to C$ 可以使用前两个依赖关系 $A\\to \\{B,D\\}$ 和 $\\{B, D\\}\\to C$ 得到。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:走迷宫 题目描述 有一个 $m\\times n$ 格的迷宫(表示有 m 行、n 列)，其中有可走的也有不可走的，如果用 1 表示可以走，0 表示不可以走，文件读入这 $m\\times n$ 个数据和起始点、结束点（起始点和结束点都是用两个数据来描述的，分别表示这个点的行号和列号）。现在要你编程找出所有可行的道路，要求所走的路中没有重复的点，走时只能是上下左右四个方向。如果一条路都不可行，则输出相应信息（用 $-1$ 表示无路）。 优先顺序：左上右下。**数据保证随机生成。** 输入输出格式 输入格式 第一行是两个数 $m,n(1<m,n<15)$，接下来是 m 行 n 列由 1 和 0 组成的数据，最后两行是起始点和结束点。 输出格式 所有可行的路径，描述一个点时用 $(x,y)$ 的形式，除开始点外，其他的都要用 `->` 表示方向。 如果没有一条可行的路则输出 $-1$。 输入输出样例 输入样例 #1 5 6 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 5 6 输出样例 #1 (1,1)->(2,1)->(2,2)->(2,3)->(2,4)->(2,5)->(3,5)->(3,4)->(3,3)->(4,3)->(4,4)->(4,5)->(5,5)->(5,6) (1,1)->(2,1)->(2,2)->(2,3)->(2,4)->(2,5)->(3,5)->(3,4)->(4,4)->(4,5)->(5,5)->(5,6) (1,1)->(2,1)->(2,2)->(2,3)->(2,4)->(2,5)->(3,5)->(4,5)->(5,5)->(5,6) (1,1)->(2,1)->(2,2)->(2,3)->(2,4)->(3,4)->(3,3)->(4,3)->(4,4)->(4,5)->(5,5)->(5,6) (1,1)->(2,1)->(2,2)->(2,3)->(2,4)->(3,4)->(3,5)->(4,5)->(5,5)->(5,6) (1,1)->(2,1)->(2,2)->(2,3)->(2,4)->(3,4)->(4,4)->(4,5)->(5,5)->(5,6) (1,1)->(2,1)->(2,2)->(2,3)->(3,3)->(3,4)->(2,4)->(2,5)->(3,5)->(4,5)->(5,5)->(5,6) (1,1)->(2,1)->(2,2)->(2,3)->(3,3)->(3,4)->(3,5)->(4,5)->(5,5)->(5,6) (1,1)->(2,1)->(2,2)->(2,3)->(3,3)->(3,4)->(4,4)->(4,5)->(5,5)->(5,6) (1,1)->(2,1)->(2,2)->(2,3)->(3,3)->(4,3)->(4,4)->(3,4)->(2,4)->(2,5)->(3,5)->(4,5)->(5,5)->(5,6) (1,1)->(2,1)->(2,2)->(2,3)->(3,3)->(4,3)->(4,4)->(3,4)->(3,5)->(4,5)->(5,5)->(5,6) (1,1)->(2,1)->(2,2)->(2,3)->(3,3)->(4,3)->(4,4)->(4,5)->(5,5)->(5,6) 说明 数据保证随机生成。事实上，如果 $n=m=14$ 且每个位置都是 1 的话，有 $69450664761521361664274701548907358996488$ 种路径。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:计数器 题目描述 一本书的页数为 n，页码从 1 开始编起，请你求出全部页码中，用了多少个 $0,1,2\\cdots 9$。每个页码不含前导 0，如 $n=1234$ 时第 5 页不是 $0005$，只是 5。 输入输出格式 输入格式 一个正整数 n，表示总的页码。 输出格式 输出共十行，其中第 k 行为数字 $k-1$ 的个数。 输入输出样例 输入样例 #1 11 输出样例 #1 1 4 1 1 1 1 1 1 1 1 说明 对于 $100\\%$ 数据，满足 $1\\le n\\le 10^9$。 --- $2022.7.4$：新添加三组 $\\text{Hack}$ 数据。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:括号序列 题目描述 定义如下规则： 1. 空串是「平衡括号序列」 2. 若字符串 S 是「平衡括号序列」，那么 $\\texttt{[}S\\texttt]$ 和 $\\texttt{(}S\\texttt)$ 也都是「平衡括号序列」 3. 若字符串 A 和 B 都是「平衡括号序列」，那么 $AB$（两字符串拼接起来）也是「平衡括号序列」。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:新汉诺塔 题目描述 设有 n 个大小不等的中空圆盘，按从小到大的顺序从 1 到 n 编号。将这 n 个圆盘任意的迭套在三根立柱上，立柱的编号分别为 $A,B,C$，这个状态称为初始状态。 现在要求找到一种步数最少的移动方案，使得从初始状态转变为目标状态。 移动时有如下要求： - 一次只能移一个盘； - 不允许把大盘移到小盘上面。 输入输出格式 输入格式"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:排序集合 题目描述 对于集合 $N=\\{1,2,\\cdots,n\\}$ 的子集，定义一个称之为“小于”的关系： 设 $S1=\\{X_1,X_2,\\cdots,X_i\\}，(X_1<X_2<\\cdots<X_i)，S2=\\{Y_1,Y_2,\\cdots,Y_j\\}，(Y_1<Y_2<\\cdots<Y_j)$，如果存在一个 k，$(0\\leq k\\leq\\min(i,j))$，使得 $X_1=Y_1,\\cdots,X_k=Y_k$，且 $k=i$ 或 $X_{k+1}<Y_{k+1}$，则称 $S1$ “小于” $S2$。 你的任务是，对于任意的 $n(n\\leq31)$ 及 $k(k<2^n)$，求出第 k 小的子集。 输入输出格式 输入格式 输入文件仅一行，包含两个用空格隔开的自然数，n 和 k。 输出格式 输出文件仅一行，使该子集的元素，由小到大排列。空集输出 0。 输入输出样例 输入样例 #1 3 4 输出样例 #1 1 2 3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:电话号码 题目描述 电话机上每一个数字下面都写了若干个英文字母。分布如下： - $1\\leftrightarrow \\verb!a!,\\verb!b!,\\verb!c!$； - $2\\leftrightarrow \\verb!d!,\\verb!e!,\\verb!f!$； - $3\\leftrightarrow \\verb!g!,\\verb!h!,\\verb!i!$； - $4\\leftrightarrow \\verb!j!,\\verb!k!,\\verb!l!$； - $5\\leftrightarrow \\verb!m!,\\verb!n!$； - $6\\leftrightarrow \\verb!o!,\\verb!p!,\\verb!q!$； - $7\\leftrightarrow \\verb!r!,\\verb!s!,\\verb!t!$； - $8\\leftrightarrow \\verb!u!,\\verb!v!,\\verb!w!$； - $9\\leftrightarrow \\verb!x!,\\verb!y!,\\verb!z!$。 现在给定一个单词表和一串数字密码，请你用单词表中的单词翻译这个密码。 输入输出格式 输入格式 第一行为一个正整数 N 表示单词表中单词的个数 $(N≤100)$； 第二行为一个长度不超过 $100$ 的数字串，表示密码； 接下来的 N 行，每行一个长度不超过 $20$ 的单词，表示单词表。 输出格式 仅一行，表示翻译后的原文，如果密码无法翻译，则输出 `No Solutions!`，如果密码有多种翻译方式，则输出任意一种即可。 输入输出样例 输入样例 #1 8 73373711664 thi shs this is b a boo k 输出样例 #1 thi shs b boo k 说明 由 @zhouyonglong 提供SPJ"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:编码 题目描述 编码工作常被运用于密文或压缩传输。这里我们用一种最简单的编码方式进行编码：把一些有规律的单词编成数字。 字母表中共有 $26$ 个字母 $\\mathtt{a,b,c,\\cdots,z}$，这些特殊的单词长度不超过 6 且字母按升序排列。把所有这样的单词放在一起，按字典顺序排列，一个单词的编码就对应着它在字典中的位置。 例如： - $\\verb!a! \\to 1$； - $\\verb!b! \\to 2$； - $\\verb!z! \\to 26$； - $\\verb!ab! \\to 27$； - $\\verb!ac! \\to 28$。 你的任务就是对于所给的单词，求出它的编码。 输入输出格式 输入格式 仅一行，被编码的单词。 输出格式 仅一行，对应的编码。如果单词不在字母表中，输出 0。 输入输出样例 输入样例 #1 ab  输出样例 #1 27"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:取火柴游戏 题目描述 输入 k 及 k 个整数 $n_1,n_2,\\cdots,n_k$，表示有 k 堆火柴棒，第 i 堆火柴棒的根数为 $n_i$；接着便是你和计算机取火柴棒的对弈游戏。取的规则如下：每次可以从一堆中取走若干根火柴，也可以一堆全部取走，但不允许跨堆取，也不允许不取。 谁取走最后一根火柴为胜利者。 例如：$k=2，n_1=n_2=2$，A 代表你，P 代表计算机，若决定 A 先取： - A：$(2,2) \\rightarrow (1,2)$，即从第一堆中取一根。 - P：$(1,2) \\rightarrow (1,1)$，即从第二堆中取一根。 - A：$(1,1) \\rightarrow (1,0)$。 - P：$(1,0) \\rightarrow (0,0)$。P 胜利。 如果决定 A 后取： - P：$(2,2) \\rightarrow (2,0)$。 - A：$(2,0) \\rightarrow (0,0)$。A 胜利。 又如 $k=3，n_1=1，n_2=2，n_3=3，A$ 决定后取： - P：$(1,2,3) \\rightarrow (0,2,3)$。 - A：$(0,2,3) \\rightarrow (0,2,2)$。 - A 已将游戏归结为 $(2,2)$ 的情况，不管 P 如何取 A 都必胜。 编一个程序，在给出初始状态之后，判断是先取必胜还是先取必败，如果是先取必胜，请输出第一次该如何取。如果是先取必败，则输出 `lose`。 输入输出格式 输入格式 第一行，一个正整数 k。 第二行，k 个整数 $n_1,n_2,\\cdots,n_k$。 输出格式 如果是先取必胜，请在第一行输出两个整数 $a,b$，表示第一次从第 b 堆取出 a 个。第二行为第一次取火柴后的状态。如果有多种答案，则输出 $\\lang b,a\\rang$ 字典序最小的答案（ 即 b 最小的前提下，使 a 最小）。 如果是先取必败，则输出 `lose`。 输入输出样例 输入样例 #1 3 3 6 9 输出样例 #1 4 3 3 6 5 输入样例 #2 4 15 22 19 10 输出样例 #2 lose 说明 ### 数据范围及约定 对于全部数据，$k \\le 500000，n_i \\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:加工生产调度 题目描述 某工厂收到了 n 个产品的订单，这 n 个产品分别在 A、B 两个车间加工，并且必须先在 A 车间加工后才可以到 B 车间加工。 某个产品 i 在 A、B 两车间加工的时间分别为 $A_i,B_i$。怎样安排这 n 个产品的加工顺序，才能使总的加工时间最短。 这里所说的加工时间是指：从开始加工第一个产品到最后所有的产品都已在 A、B 两车间加工完毕的时间。 输入输出格式 输入格式 第一行仅—个整数 n，表示产品的数量。 接下来一行 n 个整数是表示这 n 个产品在 A 车间加工各自所要的时间。 最后的 n 个整数是表示这 n 个产品在 B 车间加工各自所要的时间。 输出格式 第一行一个整数，表示最少的加工时间。 第二行是一种最小加工时间的加工顺序。 输入输出样例 输入样例 #1 5 3 5 8 7 10 6 2 1 4 9 输出样例 #1 34 1 5 4 2 3 说明 $1\\leq n\\leq 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最大乘积 题目描述 一个正整数一般可以分为几个互不相同的自然数的和，如 $3=1+2，4=1+3，5＝1+4=2+3，6=1+5＝2+4$。 现在你的任务是将指定的正整数 n 分解成若干个互不相同的自然数的和，且使这些自然数的乘积最大。 输入输出格式 输入格式 只一个正整数 n，（$3 \\leq n \\leq 10000$）。 输出格式 第一行是分解方案，相邻的数之间用一个空格分开，并且按由小到大的顺序。 第二行是最大的乘积。 输入输出样例 输入样例 #1 10 输出样例 #1 2 3 5 30"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:一条街的一边有几座房子，因为环保原因居民想要在路边种些树。 题目描述 路边的地区被分割成块，并被编号成 $1, 2, \\ldots,n$。每个部分为一个单位尺寸大小并最多可种一棵树。 每个居民都想在门前种些树，并指定了三个号码 b，e，t。这三个数表示该居民想在地区 b 和 e 之间（包括 b 和 e）种至少 t 棵树。 居民们想种树的各自区域可以交叉。你的任务是求出能满足所有要求的最少的树的数量。 输入输出格式 输入格式 输入的第一行是一个整数，代表区域的个数 n。 输入的第二行是一个整数，代表房子个数 h。 第 3 到第 $(h + 2)$ 行，每行三个整数，第 $(i + 2)$ 行的整数依次为 $b_i, e_i, t_i$，代表第 i 个居民想在 $b_i$ 和 $e_i$ 之间种至少 $t_i$ 棵树。 输出格式 输出一行一个整数，代表最少的树木个数。 输入输出样例 输入样例 #1 9 4 1 4 2 4 6 2 8 9 2 3 5 2 输出样例 #1 5 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，保证： - $1 \\leq n \\leq 3 \\times 10^4，1 \\leq h \\leq 5 \\times 10^3$。 - $1 \\leq b_i \\leq e_i \\leq n，1 \\leq t_i \\leq e_i - b_i + 1$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:餐巾计划问题 题目描述 一个餐厅在相继的 N 天里,每天需用的餐巾数不尽相同。假设第 i 天需要 $r_i$块餐巾( i=1,2,...,N)。餐厅可以购买新的餐巾,每块餐巾的费用为 p 分;或者把旧餐巾送到快洗部,洗一块需 m 天,其费用为 f 分;或者送到慢洗部,洗一块需 n 天($n>m$),其费用为 s 分($s<f$)。 每天结束时,餐厅必须决定将多少块脏的餐巾送到快洗部,多少块餐巾送到慢洗部,以及多少块保存起来延期送洗。但是每天洗好的餐巾和购买的新餐巾数之和,要满足当天的需求量。 试设计一个算法为餐厅合理地安排好 N 天中餐巾使用计划,使总的花费最小。编程找出一个最佳餐巾使用计划。 输入输出格式 输入格式 由标准输入提供输入数据。文件第 1 行有 1 个正整数 N，代表要安排餐巾使用计划的天数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:马拉松接力赛 题目描述 某城市冬季举办环城 $25\\rm km$ 马拉松接力赛，每个代表队有 5 人参加比赛，比赛要求每个的每名参赛选手只能跑一次，一次至少跑 $1\\rm km$ 、最多只能跑 $10\\rm km$，而且每个选手所跑的公里数必须为整数，即接力的地方在整公里处。 刘老师作为学校代表队的教练，精心选择了 5 名长跑能手，进行了训练和测试，得到了这 5 名选手尽力连续跑 $1\\rm km、2\\rm km$、…、$10\\rm km$ 的所用时间。现在他要进行一个合理的安排，让每个选手跑合适的公里数，使学校代表队跑完 $25\\rm km$ 所用的时间最短。根据队员的情况，这个最短的时间是惟一的，但安排方案可能并不惟一。 根据测试情况及一般运动员的情况得知，连续跑 $1\\rm km$ 要比连续跑 $2\\rm km$ 速度快，连续跑 $2\\rm km$ 又要比连续跑 $3\\rm km$ 速度快……也就是说连续跑的路程越长，速度越慢，当然也有特殊的，就是速度不会变慢，但是绝不可能变快。 输入输出格式 输入格式 5 行数据，分别是 1 到 5 号队员的测试数据，每行的 $10$ 个整数，表示某一个运动员尽力连续跑 $1\\rm km$ 、 $2\\rm km$、…、$10\\rm km$ 所用的时间。 输出格式 两行，第一行是最短的时间，第二行是五个数据，分别是1到5号队员各自连续跑的公里数。 输入输出样例 输入样例 #1 333 700 1200 1710 2240 2770 3345 3956 4778 5899  300 610 960 1370 1800 2712 3734 4834 5998 7682 298 612 990 1540 2109 2896 3790 4747 5996 7654 289 577 890 1381 1976 2734 3876 5378 6890 9876 312 633 995 1407 1845 2634 3636 4812 5999 8123 输出样例 #1 9905 6 5 5 4 5 说明 @Jomoo 提供了修正后的数据"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:扶苏的问题 题目描述 给定一个长度为 n 的序列 a，要求支持如下三个操作： 1. 给定区间 $[l, r]$，将区间内每个数都修改为 x。 2. 给定区间 $[l, r]$，将区间内每个数都加上 x。 3. 给定区间 $[l, r]$，求区间内的最大值。 输入输出格式 输入格式 第一行是两个整数，依次表示序列的长度 n 和操作的个数 q。   第二行有 n 个整数，第 i 个整数表示序列中的第 i 个数 $a_i$。   接下来 q 行，每行表示一个操作。每行首先有一个整数 $op$，表示操作的类型。 - 若 $op = 1$，则接下来有三个整数 $l, r, x$，表示将区间 $[l, r]$ 内的每个数都修改为 x。 - 若 $op = 2$，则接下来有三个整数 $l, r, x$，表示将区间 $[l, r]$ 内的每个数都加上 x。 - 若 $op = 3$，则接下来有两个整数 $l, r$，表示查询区间 $[l, r]$ 内的最大值。 输出格式 对于每个 $op = 3$ 的操作，输出一行一个整数表示答案。 输入输出样例 输入样例 #1 6 6 1 1 4 5 1 4 1 1 2 6 2 3 4 2 3 1 4 3 2 3 1 1 6 -1 3 1 6 输出样例 #1 7 6 -1 输入样例 #2 4 4 10 4 -3 -7 1 1 3 0 2 3 4 -4 1 2 4 -9 3 1 4 输出样例 #2 0 说明 ### 数据规模与约定 - 对于 $10\\%$ 的数据，$n = q = 1$。 - 对于 $40\\%$ 的数据，$n, q \\leq 10^3$。 - 对于 $50\\%$ 的数据，$0 \\leq a_i, x \\leq 10^4$。 - 对于 $60\\%$ 的数据，$op \\neq 1$。 - 对于 $90\\%$ 的数据，$n, q \\leq 10^5$。 - 对于 $100\\%$ 的数据，$1 \\leq n, q \\leq 10^6，1 \\leq l, r \\leq n，op \\in \\{1, 2, 3\\}，|a_i|, |x| \\leq 10^9$。 ### 提示 请注意大量数据读入对程序效率造成的影响。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:扇区填数 题目描述 有一个圆，当输入一个整数  $n\\ (1≤n≤8)$ 后，它被分成 n 个扇区，请你为每一扇区选择一个正整数。 向各个扇区放入数之后，你可以从单个扇区中选出—个数，也可以从相邻的两个或多个扇区中各选一个数，相加后形成一个新的数，请使用这些整数形成一个连续的整数序列：$1,2,3,\\cdots,i$，你的任务是使 i 尽可能地大。 输入输出格式 输入格式 共一行一个整数 $n\\ (1\\le n \\le 8)$。 输出格式 第一行是最大的 i，接下来的几行是所有能达到最大 i 的填法。 由于圆里不分顺序，所以同一种填法可以有多种输出。为了减少这种情况，这里规定从 1，开始输出（因为连续数里要有 1，所以所填的数中肯定有 1）。 输入输出样例 输入样例 #1 1 输出样例 #1 1 1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数楼梯 题目描述 楼梯有 N 阶，上楼可以一步上一阶，也可以一步上二阶。 编一个程序，计算共有多少种不同的走法。 输入输出格式 输入格式 一个数字，楼梯数。 输出格式 输出走的方式总数。 输入输出样例 输入样例 #1 4 输出样例 #1 5 说明 - 对于 $60\\%$ 的数据，$N \\leq 50$；    - 对于 $100\\%$ 的数据，$1 \\le N \\leq 5000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:平面上的最接近点对 题目描述 给定平面上 n 个点，找出其中的一对点的距离，使得在这 n 个点的所有点对中，该距离为所有点对中最小的。 输入输出格式 输入格式 第一行一个整数 n，表示点的个数。 接下来 n 行，每行两个整数 $x,y$ ，表示一个点的行坐标和列坐标。 输出格式 仅一行，一个实数，表示最短距离，四舍五入保留 4 位小数。 输入输出样例 输入样例 #1 3 1 1 1 2 2 2 输出样例 #1 1.0000 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 10^4，0 \\leq x, y \\leq 10^9$，小数点后的数字个数不超过 6。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小车问题 题目描述 甲、乙两人同时从 A 地出发要尽快同时赶到 B 地。出发时 A 地有一辆小车，可是这辆小车除了驾驶员外只能带一人。已知甲、乙两人的步行速度一样，且小于车的速度。问：怎样利用小车才能使两人尽快同时到达。 输入输出格式 输入格式 仅一行，三个实数，分别表示 AB 两地的距离 s，人的步行速度 a，车的速度 b。 输出格式 两人同时到达 B 地需要的最短时间，保留 6 位小数。 输入输出样例 输入样例 #1 120 5 25 输出样例 #1 9.600000 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $0 \\leq s, a, b \\leq 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:工程规划 题目描述 造一幢大楼是一项艰巨的工程，它是由 n 个子任务构成的，给它们分别编号 $1,2,\\cdots,n\\ (5≤n≤1000)$。由于对一些任务的起始条件有着严格的限制，所以每个任务的起始时间 $T_1,T_2,\\cdots,T_n$ 并不是很容易确定的(但这些起始时间都是非负整数，因为它们必须在整个工程开始后启动)。例如：挖掘完成后，紧接着就要打地基；但是混凝土浇筑完成后，却要等待一段时间再去掉模板。 这种要求就可以用 $m\\ (5≤m≤5000)$ 个不等式表示，不等式形如 $T_i-T_j≤b$ 代表 i 和 j 的起始时间必须满足的条件。每个不等式的右边都是一个常数 b，这些常数可能不相同，但是它们都在区间 $(-100,100)$ 内。 你的任务就是写一个程序，给定像上面那样的不等式，找出一种可能的起始时间序列 $T_1,T_2,\\cdots,T_n$，或者判断问题无解。对于有解的情况，要使最早进行的那个任务和整个工程的起始时间相同，也就是说，$T_1,T_2,\\cdots,T_n$ 中至少有一个为 0。 输入输出格式 输入格式 第一行是用空格隔开的两个正整数 n 和 m，下面的 m 行每行有三个用空格隔开的整数 $i,j,b$ 对应着不等式 $T_i-T_j≤b$。 输出格式 如果有可行的方案，那么输出 n 行，每行都有一个非负整数且至少有一个为 0，按顺序表示每个任务的起始时间。如果没有可行的方案，就输出信息 `NO SOLUTION`。 输入输出样例 输入样例 #1 5 8 1 2 0 1 5 -1 2 5 1 3 1 5 4 1 4 4 3 -1 5 3 -1 5 4 -3 输出样例 #1 0 2 5 4 1 输入样例 #2 5 5 1 2 -3 1 5 -1 2 5 -1 5 1 -5 4 1 4 输出样例 #2 NO SOLUTION 说明 由@zhouyonglong提供SPJ"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:服务器储存信息问题 题目描述 Byteland 王国准备在各服务器间建立大型网络并提供多种服务。 网络由 n 台服务器组成，用双向的线连接。两台服务器之间最多只能有一条线直接连接，同时，每台服务器最多只能和 $10$ 台服务器直接连接，但是任意两台服务器间必然存在一条路径将它们连接在一起。 每条传输线都有一个固定传输的速度。$\\delta(v,w)$ 表示服务器 v 和 w 之间的最短路径长度，且对任意的 v 有 $\\delta(v,v)=0$。 有些服务器比别的服务器提供更多的服务，它们的重要程度要高一些。我们用 $r(v)$ 表示服务器 v 的重要程度 $\\texttt{rank}。\\texttt{rank}$ 越高的服务器越重要。 每台服务器都会存储它附近的服务器的信息。当然，不是所有服务器的信息都存，只有感兴趣的服务器信息才会被存储。服务器 v 对服务器 w 感兴趣是指，不存在服务器 u 满足，$r(u)>r(w)$ 且 $\\delta(v,u)\\le\\delta(v, w)$。 举个例子来说，所有具有最高 $\\texttt{rank}$ 的服务器都会被别的服务器感兴趣。如果 v 是一台具有最高 $\\texttt{rank}$ 的服务器，由于 $\\delta(v,v)=0$，所以 v 只对具有最高 $\\texttt{rank}$ 的服务器感兴趣。 我们定义 $B(v)$ 为 **v 感兴趣**的服务器的集合。我们希望计算所有服务器储存的信息量，即所有服务器的 $|B(v)|$ 之和。Byteland 王国并不希望存储大量的数据，所以所有服务器存储的数据量 （$|B(v)|$ 之和）不会超过 $30n$。 你的任务是写一个程序，读入 Byteland 王国的网络分布，计算所有服务器存储的数据量。 输入输出格式 输入格式 第一行两个整数 n 和 m。n 表示服务器的数量，m 表示传输线的数量。 接下来 n 行，每行一个整数，第 i 行的整数为 $r(i)$，表示第 i 台服务器的 $\\texttt{rank}$。 接下来 m 行，每行表示各条传输线的信息，包含三个整数 $a,b,t$ 。a 和 b 是传榆线所连接的两台服务器的编号，t 是传输线的长度。 输出格式 一个整数，表示所有服务器存储的数据总量，即 $|B(v)|$ 之和。 输入输出样例 输入样例 #1 4 3 2 3 1 1 1 4 30 2 3 20 3 4 20 输出样例 #1 9 说明 #### 输出解释 $B(1)=\\{1,2\\},B(2)=\\{2\\},B(3)=\\{2,3\\},B(4)=\\{1,2,3,4\\}$。 #### 数据规模 $1\\le n\\le30000,1\\le m\\le5n$ $1\\le r(i)\\le 10$ $1\\le t\\le 1000,1\\le a,b\\le n,a\\neq b$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:间谍网络 题目描述 由于外国间谍的大量渗入，国家安全正处于高度的危机之中。如果 A 间谍手中掌握着关于 B 间谍的犯罪证据，则称 A 可以揭发 B。有些间谍收受贿赂，只要给他们一定数量的美元，他们就愿意交出手中掌握的全部情报。所以，如果我们能够收买一些间谍的话，我们就可能控制间谍网中的每一分子。因为一旦我们逮捕了一个间谍，他手中掌握的情报都将归我们所有，这样就有可能逮捕新的间谍，掌握新的情报。 我们的反间谍机关提供了一份资料，包括所有已知的受贿的间谍，以及他们愿意收受的具体数额。同时我们还知道哪些间谍手中具体掌握了哪些间谍的资料。假设总共有 n 个间谍（n 不超过 $3000$），每个间谍分别用 1 到 $3000$ 的整数来标识。 请根据这份资料，判断我们是否有可能控制全部的间谍，如果可以，求出我们所需要支付的最少资金。否则，输出不能被控制的一个间谍。 输入输出格式 输入格式 第一行只有一个整数 n。 第二行是整数 p。表示愿意被收买的人数，$1\\le p\\le n$。 接下来的 p 行，每行有两个整数，第一个数是一个愿意被收买的间谍的编号，第二个数表示他将会被收买的数额。这个数额不超过 $20000$。 紧跟着一行只有一个整数 r，$1\\le r\\le8000$。然后 r 行，每行两个正整数，表示数对 $(A, B)，A$ 间谍掌握 B 间谍的证据。 输出格式 如果可以控制所有间谍，第一行输出 `YES`，并在第二行输出所需要支付的贿金最小值。否则输出 `NO`，并在第二行输出不能控制的间谍中，编号最小的间谍编号。 输入输出样例 输入样例 #1 3 2 1 10 2 100 2 1 3 2 3 输出样例 #1 YES 110 输入样例 #2 4 2 1 100 4 200 2 1 2 3 4 输出样例 #2 NO 3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:K-联赛 题目描述 K-联赛职业足球俱乐部的球迷们都是有组织的训练有素的啦啦队员，就像红魔啦啦队一样（2002 年韩日世界杯上韩国队的啦啦队）。 这个赛季，经过很多场比赛以后，球迷们希望知道他们支持的球队是否还有机会赢得最后的联赛冠军。换句话说，球队是否可以通过某种特定的比赛结果最终取得最高的积分（获胜场次最多），允许出现多支队并列第一的情况。 现在，有 n 支球队，每支队伍已经胜负的场次分别是 $w_i$ 和 $d_i$。同时还有些比赛没有进行，第 i 支球队和第 j 支球队之间还剩 $a_{ij}$ 场比赛要进行。 你需要找出所有可能获得冠军的球队。 所有队参加的比赛数是相同的，并且为了简化问题，你可以认为不存在平局，即比赛结果只有胜或负两种。 输入输出格式 输入格式 第一行一个正整数 n，表示球队数。 第二行 $2n$ 个正整数，分别表示 $w_1,d_1,w_2,d_2,\\cdots,w_n,d_n$。 第三行 $n^2$ 个正整数，分别表示 $a_{11},a_{12},\\cdots,a_{1n},a_{21},\\cdots,a_{2n},\\cdots,a_{n1},\\cdots,a_{nn}$。 输出格式 仅一行，输出所有可能获得冠军的球队，按其编号升序输出，中间用空格分隔。 输入输出样例 输入样例 #1 3 2 0 1 1 0 2 0 2 2 2 0 2 2 2 0 输出样例 #1 1 2 3 输入样例 #2 3 4 0 2 2 0 4 0 1 1 1 0 1 1 1 0 输出样例 #2 1 2 输入样例 #3 4 0 3 3 1 1 3 3 0 0 0 0 2 0 0 1 0 0 1 0 0 2 0 0 0 输出样例 #3 2 4 说明 对于 $100\\%$ 的数据满足，$n\\le 25，w_i,d_i\\le 100，a_{ij}\\le 10，a_{ij}=a_{ji}，a_{ii}=0$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:速度限制 题目描述 在这个繁忙的社会中，我们往往不再去选择最短的道路，而是选择最快的路线。开车时每条道路的限速成为最关键的问题。不幸的是，有一些限速的标志丢失了，因此你无法得知应该开多快。一种可以辩解的解决方案是，按照原来的速度行驶。你的任务是计算两地间的最快路线。 你将获得一份现代化城市的道路交通信息。为了使问题简化，地图只包括路口和道路。每条道路是有向的，只连接了两条道路，并且最多只有一块限速标志，位于路的起点。两地 A 和 B，最多只有一条道路从 A 连接到 B。你可以假设加速能够在瞬间完成并且不会有交通堵塞等情况影响你。当然，你的车速不能超过当前的速度限制。 输入输出格式 输入格式 第一行是 3 个整数 N，M 和 D ($2\\leq N\\leq 150$)，表示道路的数目，用 $0 ~ N-1$ 标记。M 是道路的总数，D 表示你的目的地。 接下来的 M 行，每行描述一条道路，每行有 4 个整数 A ($0\\leq A<N$)，B ($0\\leq B<N$)，V ($0\\leq V\\leq 500$) 和 L ($1\\leq L\\leq 500$)，这条路是从 A 到 B 的，速度限制是 V，长度为 L。如果 V 是 0，表示这条路的限速未知。 如果 V 不为 0，则经过该路的时间 $T=\\frac{L}{V}$。否则 $T=\\frac{L}{\\text{Vold}}，\\text{Vold}$ 是你到达该路口前的速度。开始时你位于 0 点，并且速度为 $70$。 输出格式 输出文件仅一行整数，表示从 0 到 D 经过的城市。 输出的顺序必须按照你经过这些城市的顺序，以 0 开始，以 D 结束。仅有一条最快路线。 输入输出样例 输入样例 #1 6 15 1 0 1 25 68 0 2 30 50 0 5 0 101 1 2 70 77 1 3 35 42 2 0 0 22 2 1 40 86 2 3 0 23 2 4 45 40 3 1 64 14 3 5 0 23 4 1 95 8 5 1 0 84 5 2 90 64 5 3 36 40 输出样例 #1 0 5 2 3 1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:【深基9.例1】选举学生会 题目描述 学校正在选举学生会成员，有 n（$n\\le 999$）名候选人，每名候选人编号分别从 1 到 n，现在收集到了 m（$m \\le 2000000$）张选票，每张选票都写了一个候选人编号。现在想把这些堆积如山的选票按照投票数字从小到大排序。 输入输出格式 输入格式 输入 n 和 m 以及 m 个选票上的数字。 输出格式 求出排序后的选票编号。 输入输出样例 输入样例 #1 5 10 2 5 2 2 5 2 2 2 1 2 输出样例 #1 1 2 2 2 2 2 2 2 5 5"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:重建道路 题目描述 一场可怕的地震后，人们用 N 个牲口棚（编号 $1\\sim N$）重建了农夫 John 的牧场。由于人们没有时间建设多余的道路，所以现在从一个牲口棚到另一个牲口棚的道路是惟一的。因此，牧场运输系统可以被构建成一棵树。 John 想要知道另一次地震会造成多严重的破坏。有些道路一旦被毁坏，就会使一棵含有 P 个牲口棚的子树和剩余的牲口棚分离，John 想知道这些道路的最小数目。 输入输出格式 输入格式 第一行两个整数，N 和 P。 第二行到第 n 行，每行两个整数 I 和 J，表示节点 I 是节点 J 的父节点。牧场运输系统可以被构建成一棵以 1 号节点为根的树 输出格式 单独一行，包含一旦被破坏将分离出恰含 P 个节点的子树的道路的最小数目。 输入输出样例 输入样例 #1 11 6 1 2 1 3 1 4 1 5 2 6 2 7 2 8 4 9 4 10 4 11 输出样例 #1 2 说明 ### 样例解释 如果道路 $1-4$ 和 $1-5$ 被破坏，含有节点（$1,2,3,6,7,8$）的子树将被分离出来。 ### 限制与约定 $1\\le N\\le 150，1\\le P\\le N$，保证给出的是一棵树。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:魔术数字游戏 题目描述 填数字方格的游戏有很多种变化，如下图所示的 $4 \\times 4$ 方格中，我们要选择从数字 1 到 $16$ 来填满这十六个格子($A_{i,j}$ ，其中 $i=1 \\cdots 4$ ，$j=1 \\cdots 4$)。为了让游戏更有挑战性，我们要求下列六项中的每一项所指定的四个格子，其数字累加的和必须为 $34$ ： | $A_{1,1}$ | $A_{1,2}$ | $A_{1,3}$ |  $A_{1,4}$| | :----------- | :----------- | :----------- | :----------- | | $A_{2,1}$ | $A_{2,2}$ | $A_{2,3}$ | $A_{2,4}$ | | $A_{3,1}$ | $A_{3,2}$ | $A_{3,3}$ | $A_{3,4}$ | | $A_{4,1}$ | $A_{4,2}$ | $A_{4,3}$ | $A_{4,4}$ | - 四个角落上的数字，即 $A_{1,1}+A_{1,4}+A_{4,1}+A_{4,4}=34$ 。 - 每个角落上的 $2 \\times 2$ 方格中的数字，例如左上角 $A_{1,1}+A_{1,2}+A_{2,1}+A_{2,2}=34$ 。 - 最中间的 $2 \\times 2$ 方格中的数字，即 $A_{2,2}+A_{2,3}+A_{3,2}+A_{3,3}=34$ 。 - 每条水平线上四个格子中的数字，即 $A_{i,1}+A_{i,2}+A_{i,3}+A_{i,4}=34$，其中 $i=1 \\cdots 4$ 。 - 每条垂直线上四个格子中的数字，即 $A_{1,j}+A_{2,j}+A_{3,j}+A_{4,j}=34$，其中 $j=1 \\cdots 4$ 。 - 两条对角线上四个格子中的数字，例如左上角到右下角 $A_{1,1}+A_{2,2}+A_{3,3}+A_{4,4}=34$ 。 - 右上角到左下角：$A_{1,4}+A_{2,3}+A_{3,2}+A_{4,1}=34$ 。 特别的，我们会指定把数字 1 先固定在某一格内。 输入输出格式 输入格式 输入只有一行包含两个正数据 i 和 j ，表示第 i 行和第 j 列的格子放数字 1。剩下的十五个格子，请按照前述六项条件用数字 2 到 $16$ 来填满。 输出格式 输出四行，每行四个数，相邻两数之间用一个空格隔开，并且依序排好。排序的方式，是先从第一行的数字开始比较，每一行数字，由最左边的数字开始比，数字较小的解答必须先输出到文件中。 输入输出样例 输入样例 #1 1 1 输出样例 #1 1 4 13 16 14 15 2 3 8 5 12 9 11 10 7 6 1 4 13 16 14 15 2 3 12 9 8 5 7 6 11 10 说明 #### 数据规模与约定  对于全部的测试点，保证 $1 \\leq i, j \\leq 4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:魔板 题目描述 有这样一种魔板：它是一个长方形的面板，被划分成 n 行 m 列的 $n \\times m$ 个方格。每个方格内有一个小灯泡，灯泡的状态有两种（亮或暗）。我们可以通过若干操作使魔板从一个状态改变为另一个状态。操作的方式有两种： 1. 任选一行，改变该行中所有灯泡的状态，即亮的变暗、暗的变亮； 2. 任选两列，交换其位置。 当然并不是任意的两种状态都可以通过若干操作来实现互相转化的。 你的任务就是根据给定两个魔板状态，判断两个状态能否互相转化。 输入输出格式 输入格式 文件中包含多组数据。第一行一个整数 k，表示有 k 组数据。 每组数据的第一行两个整数 n 和 m（$0 < n,m \\leq 100$）。 以下的 n 行描述第一个魔板。每行有 m 个数字（0 或 1），中间用空格分隔。若第 x 行的第 y个数字为 0，则表示魔板的第 x 行 y 列的灯泡为“亮”；否则为“暗”。 然后的 n 行描述第二个魔板。数据格式同上。 任意两组数据间没有空行。 输出格式 共 k 行，依次描述每一组数据的结果。 若两个魔板可以相互转化，则输出 $\\texttt{YES}$，否则输出 $\\texttt{NO}$。(注意：请使用大写字母) 输入输出样例 输入样例 #1 2  3 4  0 1 0 1  1 0 0 1  0 0 0 0  0 1 0 1  1 1 0 0  0 0 0 0  2 2  0 0  0 1  1 1  1 1 输出样例 #1 YES  NO"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:校门外的树（增强版） 题目描述 校门外马路上本来从编号 0 到 L，每一编号的位置都有一棵树。有砍树者每次从编号 A 到 B 处连续砍掉每一棵树，就连树苗也不放过（记 `0 A B`，含 A 和 B）；幸运的是还有植树者每次从编号 C 到 D 中凡是空穴（树被砍且还没种上树苗或树苗又被砍掉）的地方都补种上树苗（记 `1 C D`，含 C 和 D）；问最终校门外留下的树苗多少棵？植树者种上又被砍掉的树苗有多少棵？ 输入输出格式 输入格式 第一行，两个正整数 L 和 N，表示校园外原来有 $L + 1$ 棵树，并有 N 次砍树或种树的操作。 以下 N 行，每行三个整数，表示砍树或植树的标记和范围。 输出格式 共两行。第一行校门外留下的树苗数目，第二行种上又被拔掉的树苗数目。 输入输出样例 输入样例 #1 10 3 0 2 6 1 1 8 0 5 7 输出样例 #1 3 2 说明 对于 $100 \\%$ 的数据，$1 \\le L \\le 10000，1 \\le N \\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:拼字游戏 题目描述 有一个未知的 $4 \\times 4$ 的拼盘 M，它的每个元素都是正整数。给出 4 行元素的总和，4 列元素的总和以及两条对角线元素总和。另外还给出了拼盘中任意 4 个位置的元素值，它们的位置在输入文件中给定。 编写一个程序求出拼盘中另外 $12$ 个位置的正整数的值，要求这些元素的行之和，列之和以及对角线之和与输入文件中给定的值相一致。 输入输出格式 输入格式 输入文件包含用空格隔开的 $22$ 个正整数。 前四个数字分别表示四行中每一行元素的总和，接下来的 4 个数字分别表示 4 列中每列元素的总和。接下来的数字表示主对角线元素的总和，即 $M(0, 0)+M(1,1)+M(2, 2)+M(3, 3)$。然后的数字（第 $10$ 个数字）表示逆对角线上元数之和，即 $M(0, 3)+M(1, 2)+M(2, 1)+M(3, 0)$ 。剩下的部分还包含 $12$ 个数字，被分成三个一组的形式 $i,j,k$。表示 $M(i,j)=k$。 你可以假设任何行对角线或列之和不会超过 $300$。另外还可假设对于给定的输入文件总是存在解决方案。 输出格式 输出文件应包含按 $4 \\times 4$ 的形式输出的 $16$ 个数字，同一行的四个数字用一个空个隔开。注意：对于给定的输入文件，可能有一个以上可能的解决方案。任何一个方案都是可接受的。 输入输出样例 输入样例 #1 130 120 172 140 157 93 144 168 66 195 0 1 15 1 3 49 2 2 16 3 0 33 输出样例 #1 22 15 28 65 49 1 21 49 53 76 16 27 33 1 79 27 说明 - 对于 $10\\%$ 的数据，任何行，列或对角线之和不会超过 $20$； - 对于 $30\\%$ 的数据，任何行，列或对角线之和不会超过 $80$； - 对于 $60\\%$ 的数据，任何行，列或对角线之和不会超过 $200$； - 对于 $100\\%$ 的数据，任何行，列或对角线之和不会超过 $300$。 感谢 @Jomoo 的贡献。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:单词游戏 题目描述 Io 和 Ao 在玩一个单词游戏。 他们轮流说出一个仅包含元音字母的单词，并且后一个单词的第一个字母必须与前一个单词的最后一个字母一致。 游戏可以从任何一个单词开始。 任何单词禁止说两遍，游戏中只能使用给定词典中含有的单词。 游戏的复杂度定义为游戏中所使用的单词长度总和。 编写程序，求出使用一本给定的词典来玩这个游戏所能达到的游戏最大可能复杂度。 输入输出格式 输入格式 输入文件的第一行，表示一个自然数 $N(1 \\le N \\le 16)，N$ 表示一本字典中包含的单词数量以下的每一行包含字典中的一个单词，每一个单词是由字母 `A`、`E`、`I`、`O` 和 `U` 组成的一个字符串，每个单词的长度将小于等于 $100$，所有的单词是不一样的。 输出格式 输出文件仅有一行，表示该游戏的最大可能复杂度。 输入输出样例 输入样例 #1 5  IOO  IUUO  AI  OIOOI  AOOI 输出样例 #1 16"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:字串距离 题目描述 设有字符串 X，我们称在 X 的头尾及中间插入任意多个空格后构成的新字符串为 X 的扩展串，如字符串 X 为$\\verb!abcbcd!$，则字符串 $\\verb!abcb␣cd!，\\verb!␣a␣bcbcd␣!$ 和 $\\verb!abcb␣cd␣!$ 都是 X 的扩展串，这里 $\\verb!␣!$ 代表空格字符。 如果 $A_1$ 是字符串 A 的扩展串，$B_1$ 是字符串 B 的扩展串，$A_1$ 与 $B_1$ 具有相同的长度，那么我们定义字符串 $A_1$ 与 $B_1$ 的距离为相应位置上的字符的距离总和，而两个非空格字符的距离定义为它们的 ASCII 码的差的绝对值，而空格字符与其他任意字符之间的距离为已知的定值K，空格字符与空格字符的距离为 0。在字符串 A、B 的所有扩展串中，必定存在两个等长的扩展串 $A_1，B_1$，使得 $A_1$ 与 $B_1$ 之间的距离达到最小，我们将这一距离定义为字符串 A，B 的距离。 请你写一个程序，求出字符串 A，B 的距离。 输入输出格式 输入格式 输入文件第一行为字符串 A ，第二行为字符串 B。A，B 均由小写字母组成且长度均不超过 $2000$。第三行为一个整数 $K(1\\leq K\\leq 100)$，表示空格与其他字符的距离。 输出格式 输出文件仅一行包含一个整数，表示所求得字符串 $A,B$ 的距离。 输入输出样例 输入样例 #1 cmc  snmn  2  输出样例 #1 10"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:尼克的任务 题目描述 尼克每天上班之前都连接上英特网，接收他的上司发来的邮件，这些邮件包含了尼克主管的部门当天要完成的全部任务，每个任务由一个开始时刻与一个持续时间构成。 尼克的一个工作日为 n 分钟，从第 1 分钟开始到第 n 分钟结束。当尼克到达单位后他就开始干活，公司一共有 k 个任务需要完成。如果在同一时刻有多个任务需要完成，尼克可以任选其中的一个来做，而其余的则由他的同事完成，反之如果只有一个任务，则该任务必需由尼克去完成，假如某些任务开始时刻尼克正在工作，则这些任务也由尼克的同事完成。如果某任务于第 p 分钟开始，持续时间为 t 分钟，则该任务将在第 $(p+t-1)$ 分钟结束。 写一个程序计算尼克应该如何选取任务，才能获得最大的空暇时间。 输入输出格式 输入格式 输入数据第一行含两个用空格隔开的整数 n 和 k。 接下来共有 k 行，每一行有两个用空格隔开的整数 p 和 t，表示该任务从第 p 分钟开始，持续时间为 t 分钟。 输出格式 输出文件仅一行，包含一个整数，表示尼克可能获得的最大空暇时间。 输入输出样例 输入样例 #1 15 6 1 2 1 6 4 11 8 5 8 1 11 5 输出样例 #1 4 说明 #### 数据规模与约定 - 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 10^4,1 \\leq k \\leq 10^4,1 \\leq p \\leq n,1 \\leq p+t-1 \\leq n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:不过，已经修改数据，保证每个人都有活可干。 题目描述 现在要把 m 本有顺序的书分给 k 个人复制（抄写），每一个人的抄写速度都一样，一本书不允许给两个（或以上）的人抄写，分给每一个人的书，必须是连续的，比如不能把第一、第三、第四本书给同一个人抄写。 现在请你设计一种方案，使得复制时间最短。复制时间为抄写页数最多的人用去的时间。 输入输出格式 输入格式 第一行两个整数 $m,k$。 第二行 m 个整数，第 i 个整数表示第 i 本书的页数。 输出格式 共 k 行，每行两个整数，第 i 行表示第 i 个人抄写的书的起始编号和终止编号。 k 行的起始编号应该从小到大排列，如果有多解，则尽可能让前面的人少抄写。 输入输出样例 输入样例 #1 9 3 1 2 3 4 5 6 7 8 9 输出样例 #1 1 5 6 7 8 9 说明 $1\\le k \\le m \\le 500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:三角形牧场 题目描述 和所有人一样，奶牛喜欢变化。它们正在设想新造型的牧场。奶牛建筑师 Hei 想建造围有漂亮白色栅栏的三角形牧场。她拥有 n 块木板，每块的长度 $l_i$ 都是整数，她想用所有的木板围成一个三角形使得牧场面积最大。 请帮助 Hei 小姐构造这样的牧场，并计算出这个最大牧场的面积。 输入输出格式 输入格式 第 1 行：一个整数 n； 第 2 到第 $(n + 1)$ 行，每行一个整数，第 $(i + 1)$ 行的整数 $l_i$ 表示第 i 块木板的长度。 输出格式 仅一个整数：最大牧场面积乘以 $100$ 然后舍尾的结果。如果无法构建，输出 $-1$。 输入输出样例 输入样例 #1 5 1 1 3 3 4 输出样例 #1 692 说明 #### 样例输入输出 1 解释 $692=\\text{舍尾后的}(100\\times\\text{三角形面积})$，此三角形为等边三角形，边长为 4。 #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $3\\le n\\le40，1\\le l_i\\le40$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:队员分组 题目描述 有 n 个人从 1 至 n 编号，相互之间有一些认识关系，你的任务是把一些人分成两组，使得： - 每个人都被分到其中一组。 - 每个组都至少有一个人。 - 一组中的每个人都认识其他同组成员。 在满足上述条件的基础上，要求两组成员的人数之差（绝对值）尽可能小。请构造一种可行的方案。 请注意，x 认识 y 不一定说明 y 认识 x；x 认识 y 且 y 认识 z 不一定说明 x 认识 z。即认识关系是单向且不可传递的。 输入输出格式 输入格式 输入的第一行是一个整数，代表总人数 n。 第 2 到第 $(n + 1)$ 行，每行有若干个互不相同的整数，以 0 结尾，第 $(i + 1)$ 行的第 j 个整数 $a_{i, j}（0$ 除外）代表第 i 个人认识 $a_{i, j}$。 输出格式 **本题存在 Special Judge**。 如果无解，请输出一行一个字符串 `No solution`。 如果有解，请输出两行整数，分别代表两组的成员。每行的第一个整数是该组的人数，后面**以升序**若干个整数代表该组的成员编号，数字间用空格隔开。 输入输出样例 输入样例 #1 5 2 3 5 0 1 4 5 3 0 1 2 5 0 1 2 3 0 4 3 2 1 0 输出样例 #1 3 1 3 5 2 2 4 说明 #### 数据规模与约定 对于全部的测试点，保证 $2 \\leq n \\leq 100，1 \\leq a_{i, j} \\leq n$。 #### 说明 由 @zhouyonglong 提供 SPJ。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:两数之和 题目描述 我们知道从 n 个非负整数中任取两个相加共有 $\\frac{n(n-1)}{2}$ 个和，现在已知这 $\\frac{n(n-1)}{2}$ 个和值，要求 n 个非负整数。 输入输出格式 输入格式 输入文件有若干行，每行一组数据，包含 $\\frac{n(n-1)}{2}+1$ 个空格隔开的非负整数，其中第一个数表示 n（$2<n<10$），其余 $\\frac{n(n-1)}{2}$ 个数表示和值，每个数不超过 $100000$。文件末以 `EOF` 结尾。 输出格式 输出文件若干行，对应每一个输入，该行按从小到大的次序依次输出一组满足要求的 n 个非负整数，相邻两个整数之间用一个空格隔开；若问题无解则输出 `Impossible`。 输入输出样例 输入样例 #1 3 1269 1160 1663 输出样例 #1 383 777 886"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:盒子与球 题目描述 现有 r 个互不相同的盒子和 n 个互不相同的球，要将这 n 个球放入 r 个盒子中，且不允许有空盒子。请求出有多少种不同的放法。 两种放法不同当且仅当存在一个球使得该球在两种放法中放入了不同的盒子。 输入输出格式 输入格式 输入只有一行两个整数，分别代表 n 和 r。 输出格式 输出一行一个整数代表答案。 输入输出样例 输入样例 #1 3 2 输出样例 #1 6 说明 #### 样例输入输出 1 解释 有两个盒子（编号为 $1, 2$）和三个球（编号为 $1, 2, 3$），共有六种方案，分别如下： | 盒子编号 |   方案 1    |   方案 2    |   方案 3    |   方案 4    |   方案 5    |   方案 6    | | :------: | :---------: | :---------: | :---------: | :---------: | :---------: | :---------: | | 盒子 1 |  小球 1   |  小球 2   |  小球 3   | 小球 $2, 3$ | 小球 $1, 3$ | 小球 $1, 2$ | | 盒子 2 | 小球 $2, 3$ | 小球 $1, 3$ | 小球 $1, 2$ |  小球 1   |  小球 2   |  小球 3   | #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $0 \\leq r \\leq n \\leq 10$，且答案小于 $2^{31}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:磁盘碎片整理 题目描述 出于最高安全性考虑，司令部采用了特殊的安全操作系统，该系统采用一个特殊的文件系统。在这个文件系统中所有磁盘空间都被分成了相同尺寸的 N 块，用整数 1 到 N 标识。每个文件占用磁盘上任意区域的一块或多块存储区，未被文件占用的存储块被认为是可是用的。如果文件存储在磁盘上自然连续的存储块中，则能被以最快的速度读出。 因为磁盘是匀速转动的，所以存取上面不同的存储块需要的时间也不同。读取磁盘开头处的存储块比读取磁盘尾处的存储块快。根据以上现象，我们事先将文件按其存取频率的大小用整数 1 到 K 标识。按文件在磁盘上的最佳存储方法，1 号文件将占用 $1,2,\\cdots,S_1$ 的存储块，2 号文件将占用 $S_1+1,S_1+2,\\cdots, S_1+S_2$ 的存储块，以此类推（$S_i$ 是被第 i 个文件占用的存储块的个数）。为了将文件以最佳形式存储在磁盘上，需要执行存储块移动操作。一个存储块移动操作包括从磁盘上读取一个被占用的存储块至内存并将它写入其他空的存储块，然后宣称前一个存储块被释放，后一个存储块被占用。 本程序的目的是通过执行最少次数的存储块移动操作，将文件按最佳方式存储到磁盘上，注意同一个文件的存储块在移动之后其相对次序不可改变。 输入输出格式 输入格式 每个磁盘说明的第一行包含两个用空格隔开的整数 N 和 $K(1 \\le K \\le N \\le 10^5)$，接下来的 K 行每行说明一个文件，对第 i 个文件的说明是这样的：首先以整数 $S_i$ 开头，表示第 i 个文件的存储块数量，$1 \\le S_i \\le N-K$，然后跟 $S_i$ 个整数，每个整数之间用空格隔开，表示该文件按自然顺序在磁盘上占用的存储块的标识。所有这些数都介于 1 和 N 之间，包括 1 和 N。一个磁盘说明中所有存储块的标识都是不同的，并且该盘至少有一个空的存储块。 输出格式 对于每一个磁盘说明，只需输出一行句子 $\\text{``\\texttt{We need \\textrm{\\textit{M}} move operations.}''}，M$ 表示将文件按最佳方式存储到磁盘上所需进行的最少存储块移动操作次数。如果文件已按最佳方式存储，仅需输出 $\\text{``\\texttt{No optimization needed.}''}$。 输入输出样例 输入样例 #1 20 3 4 2 3 11 12 1 7 3 18 5 10 输出样例 #1 We need 9 move operations."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:欧几里德的游戏 题目描述 欧几里德的两个后代 Stan 和 Ollie 正在玩一种数字游戏，这个游戏是他们的祖先欧几里德发明的。给定两个正整数 M 和 N，从 Stan 开始，从其中较大的一个数，减去较小的数的正整数倍，当然，得到的数不能小于 0。然后是 Ollie，对刚才得到的数，和 $M,N$ 中较小的那个数，再进行同样的操作……直到一个人得到了 0，他就取得了胜利。下面是他们用 $(25,7)$ 两个数游戏的过程： - 初始：$(25,7)$； - Stan：$(11,7)$； - Ollie：$(4,7)$； - Stan：$(4,3)$； - Ollie：$(1,3)$； - Stan：$(1,0)$。 Stan 赢得了游戏的胜利。 现在，假设他们完美地操作，谁会取得胜利呢？ 输入输出格式 输入格式 **本题有多组测试数据。** 第一行为测试数据的组数 C。 下面 C 行，每行为一组数据，包含两个正整数 $M,N(M,N<2^{31})$。 输出格式 对每组输入数据输出一行，如果 Stan 胜利，则输出 `Stan wins`；否则输出 `Ollie wins`。 输入输出样例 输入样例 #1 2 25 7 24 15 输出样例 #1 Stan wins Ollie wins 说明 $1 \\leq C \\leq 6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:“……在 2002 年 6 月之前购买的百事任何饮料的瓶盖上都会有一个百事球星的名字。只要凑齐所有百事球星的名字，就可参加百事世界杯之旅的抽奖活动，获得球星背包，随声听，更可赴日韩观看世界杯。还不赶快行动！” 题目描述 你关上电视，心想：假设有 n 个不同的球星名字，每个名字出现的概率相同，平均需要买几瓶饮料才能凑齐所有的名字呢？ 输入输出格式 输入格式 输入只有一行一个整数，表示不同球星名字的个数 n。 输出格式 输出凑齐所有的名字平均需要买的饮料瓶数。如果是一个整数，则直接输出，否则应该直接按照分数格式输出，例如五又二十分之三应该输出为： ```plain  3 5--  20 ``` 第一行是分数部分的分子，第二行首先是整数部分，然后是由减号组成的分数线，第三行是分母。减号的个数应等于分母的位数。分子和分母的首位都与第一个减号对齐。 分数必须是不可约的。 输入输出样例 输入样例 #1 2 输出样例 #1 3 输入样例 #2 17 输出样例 #2   340463 58------   720720 说明 ### 数据规模与约定 对于全部的测试点，保证 $2 \\leq n \\leq 33$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:倒酒 题目描述 Winy是一家酒吧的老板，他的酒吧提供两种体积的啤酒，a ml 和 b ml，分别使用容积为 a ml 和 b ml 的酒杯来装载。 酒吧的生意并不好。Winy 发现酒鬼们都非常穷。有时，他们会因为负担不起 a ml 或者 b ml 啤酒的消费，而不得不离去。因此，Winy 决定出售第三种体积的啤酒（较小体积的啤酒）。 Winy 只有两种杯子，容积分别为 a ml 和 b ml，而且啤酒杯是没有刻度的。他只能通过两种杯子和酒桶间的互相倾倒来得到新的体积的酒。 为了简化倒酒的步骤，Winy 规定： 1.  $a≥b$； 2.  酒桶容积无限大，酒桶中酒的体积也是无限大（但远小于桶的容积）； 3. 只包含三种可能的倒酒操作：      1. 将酒桶中的酒倒入容积为 b ml 的酒杯中；      2. 将容积为 a ml 的酒杯中的酒倒入酒桶；      3. 将容积为 b ml 的酒杯中的酒倒入容积为 a ml 的酒杯中。 4. 每次倒酒必须把杯子倒满或把被倾倒的杯子倒空。 Winy希望通过若干次倾倒得到容积为 a ml 酒杯中剩下的酒的体积尽可能小，他请求你帮助他设计倾倒的方案。 输入输出格式 输入格式 输入共一行两个整数 a 和 b，满足 $0<b≤a≤10^9$。 输出格式 第一行一个整数 c，表示可以得到的酒的最小体积。 第二行两个整数 $P_a$ 和 $P_b$（中间用一个空格分隔），分别表示从体积为 a ml 的酒杯中倒出酒的次数和将酒倒入体积为 b ml 的酒杯中的次数。 若有多种可能的 $P_a,P_b$ 满足要求，那么请输出 $P_a$ 最小的一个。若在 $P_a$ 最小的情况下，有多个 $P_b$ 满足要求，请输出 $P_b$ 最小的一个。 输入输出样例 输入样例 #1 5 3  输出样例 #1 1  1 2  说明 ### 样例解释 倾倒的方案为： 1. 桶 $\\to$ B 杯； 2. B 杯 $\\to$ A 杯； 3. 桶 $\\to$ B 杯； 4. B 杯 $\\to$ A 杯； 5. A 杯 $\\to$ 桶;  6. B 杯 $\\to$ A 杯。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:班级聚会 题目描述 毕业25年以后，我们的主人公开始准备同学聚会。打了无数电话后他终于搞到了所有同学的地址。他们有些人仍在本城市，但大多数人分散在其他的城市。不过，他发现一个巧合，所有地址都恰好分散在一条铁路线上。他准备出发邀请但无法决定应该在哪个地方举行宴会。最后他决定选择一个地点，使大家旅行的花费和最小。 不幸的是，我们的主人公既不擅长数学，也不擅长计算机。他请你帮忙写一个程序，根据他同学的地址，选择聚会的最佳地点。花费相同时优先取靠近莫斯科的城市。 输入输出格式 输入格式 输入数据的每一行描述一个城市的信息。对于每个城市， 首先是城市里同学的个数，紧跟着是这个城市到 Moscow（起点站）的距离（单位 $\\rm km$），最后是城市的名称。最后一行描述的总是 Moscow，它在铁路线的一端，距离为 0。 输出格式 聚会地点城市名称和旅行费用（单程），两者之间用一空格隔开。每 $\\rm km$ 花费一个卢布。 输入输出样例 输入样例 #1 7 9289 Vladivostok 5 8523 Chabarovsk 3 5184 Irkutsk 8 2213 Yalutorovsk 10 0 Moscow 输出样例 #1 Yalutorovsk 112125 说明 ### 数据范围及约定 对于全部数据，保证城市数量 $ \\le 150$，距离 $ \\le 10000$，同学个数 $ \\le 50$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 鳌头山上有 n 个观景点，观景点两两之间有游步道共 m 条。高手的那个它，不喜欢太刺激的过程，因此那些没有路的观景点高手是不会选择去的。另外，她也不喜欢去同一个观景点一次以上。而高手想让他们在一起的路程最长（观景时它不会理高手），已知高手的穿梭机可以让他们在任意一个观景点出发，也在任意一个观景点结束。 输入输出格式 输入格式 第一行，两个用空格隔开的整数 n 、 $m.$ 之后 m 行，为每条游步道的信息：两端观景点编号、长度。 输出格式 一个整数，表示他们最长相伴的路程。 输入输出样例 输入样例 #1 4 6 1 2 10 2 3 20 3 4 30 4 1 40 1 3 50 2 4 60 输出样例 #1 150 说明 对于 $100\\%$ 的数据：$n \\le 20，m \\le 50$，保证观景点两两之间不会有多条游步道连接。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:书架背靠墙摆放，宽度就是指书架在垂直于墙面的方向上占据的距离。 题目描述 现按一定顺序给出所有要放置于书架上的书，共有 n 本，第 i 本书有一个长度 $h_i$。 书架有若干层，层与层之间的宽度不一定相等，但是一层的宽度不能小于其上所摆放的任何一本书的长度。同时，每层上的书的长度之和不能超过一个给定的参数 m，且任何层上的书必须是给出的书的序列中连续的几本。 书架的宽度是所有层的宽度之和，求书架的最小宽度。 输入输出格式 输入格式 输入的第一行包含两个整数 n 和 m。 第 2 到第 $(n + 1)$ 行，每行一个整数，第 $(i + 1)$ 行的整数代表第 i 本书的长度 $h_i$。 输出格式 输出一行一个整数表示答案。 输入输出样例 输入样例 #1 4 6 1 3 3 1 输出样例 #1 5 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $ n \\leq 10^3$。 - 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 10^5，1 \\leq h_i \\leq 10^9，\\max\\limits_{i = 1}^{n} h_i \\leq m \\leq 10^9$。 #### 提示 由于原题题意严重模糊不清，现给出简化版题意： 给出一个长度为 n 的序列 h，请将 h 分成若干段，满足每段数字之和都不超过 m，最小化每段的最大值之和。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:奶牛的耳语 题目描述 在你的养牛场，所有的奶牛都养在一排呈直线的牛栏中。一共有 n 头奶牛，其中第 i 头牛在直线上所处的位置可以用一个整数坐标 $p_i(0\\le p_i \\le 10^8)$ 来表示。在无聊的日子里，奶牛们常常在自己的牛栏里与其它奶牛交流一些八卦新闻。每头奶牛发出的声音响度是一样的，而由于声波的能量衰减，某头奶牛发出的声音只能被与它距离不超过 $d(0 \\le d \\le 10^4)$ 的奶牛所听到，这样这对奶牛就称为可以相互交流的。现在给出所有奶牛的位置和声音所能传播的最远距离 d ，请你编个程序来计算你的养牛场里究竟有多少对可以相互交流的奶牛。 输入输出格式 输入格式 第一行包含两个整数 $n,d$。 第二行包含 n 个整数，每个整数都是一个坐标 $p_i$，描述一头奶牛在直线上的位置。 输出格式 一个数，表示养牛场中可以相互交流奶牛的对数。 输入输出样例 输入样例 #1 5 10 10 12 16 37 40 输出样例 #1 4 说明 数据规模 对于 $40\\%$ 的数据，$1 \\leq n \\leq 10^3$。 对于 $100\\%$ 的数据，$1 \\leq n \\leq 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[国家集训队] 单选错位 题目描述 gx 和 lc 去参加 noip 初赛，其中有一种题型叫单项选择题，顾名思义，只有一个选项是正确答案。 试卷上共有 n 道单选题，第 i 道单选题有 $a_i$ 个选项，这 $a_i$ 个选项编号是 $1,2,3,\\ldots,a_i$，每个选项成为正确答案的概率都是相等的。 lc 采取的策略是每道题目随机写上 $1 \\sim a_i$ 的某个数作为答案选项，他用不了多少时间就能期望做对 $\\sum_{i=1}^n \\frac{1}{a_i}$ 道题目。gx 则是认认真真地做完了这 n 道题目，可是等他做完的时候时间也所剩无几了，于是他匆忙地把答案抄到答题纸上，没想到抄错位了：第 i 道题目的答案抄到了答题纸上的第 $i+1$ 道题目的位置上，特别地，第 n 道题目的答案抄到了第 1 道题目的位置上。 现在 gx 已经走出考场没法改了，不过他还是想知道自己期望能做对几道题目，这样他就知道会不会被 lc 鄙视了。 我们假设 gx 没有做错任何题目，只是答案抄错位置了。 输入输出格式 输入格式 n 很大，为了避免读入耗时太多，输入文件只有 5 个整数参数 $n, A, B, C, a_1$，由上交的程序产生数列 a。下面给出 pascal/C/C++ 的读入语句和产生序列的语句（默认从标准输入读入）： ```cpp // for pascal readln(n,A,B,C,q[1]); for i:=2 to n do q[i] := (int64(q[i-1]) * A + B) mod 100000001; for i:=1 to n do q[i] := q[i] mod C + 1;"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最接近的分数 题目描述 给出一个正小数，找出分子（分子 $ \\ge 0$）不超过 M，分母不超过 N 的最简分数或整数，使其最接近给出的小数。“最接近”是指在数轴上该分数距离给出的小数最近，如果这个分数不唯一，输出 ``TOO MANY``。 输入输出格式 输入格式 输入共有 2 行，第一行包含两个用空格隔开的正整数 M 和 N，表示要求的分数其分子不超过 M，分母不超过 N；第二行为小数 $R(R>0)，R$ 的整数部分为一个阿拉伯数字，小数部分最多有十位。 输出格式 输出仅 1 行，若解唯一则输出 `分子/分母`（整数 K 写成 $\\dfrac{K}{1}$），否则输出 ``TOO MANY``。 输入输出样例 输入样例 #1 360 120 3.1415926536 输出样例 #1 355/113 说明 ### 数据范围及约定 对于全部数据，保证 $1\\le M,N\\le 10^7$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:城市街道交通费系统 题目描述 城市街道交费系统最近创立了。一辆汽车左转一次需付费 1 ，右转一次需付费 5 。只有当前进、左转、右转都无路可走的时候，调头才是允许的，调头每次付费 $10$ 。 给出一张城市地图，要求你求出从起始点到达终止点的花费最少的路径。幸运的是，所有的道路都是正北、正南、正西或正东方向的。 输入输出格式 输入格式 输入格式如下： 1. 第一行有两个整数，地图高度 h 和宽度 w。 2. 其后 h 行，每行 w 个字符，将是以下字符中的一个： - `.` 表示障碍区。 - `#` 表示道路。 - `E` 表示起始点且汽车面朝东。 - `W` 表示起始点且汽车面朝西。 - `N` 表示起始点且汽车面朝北。 - `S` 表示起始点且汽车面朝南。 - `F` 表示终点。 输出格式 仅包含一个整数，即为最便宜路径的费用。 输入输出样例 输入样例 #1 8 11 ........... ....#####.. ....#...#.. ....#...#.. .#E######.. ....#...... .##F#...... ........... 输出样例 #1 8 输入样例 #2 17 21 ..................... .#######............. .#.....#.......#..... .###...#.......#..... ...#...#.......#..... .###...#.......#..... .#.....#.......#..... .############F#####.. .......#..........#.. .......#..........#.. ...#...#...#####..#.. ...#...#...#.#.#..#.. ..#S########.#.#..#.. ...#.......#.###..#.. ...#.......#......#.. ...........########.. ..................... 输出样例 #2 7 说明 样例一解释： 直走，然后左转 3 次，最后右转到终止点 `F`。如果先直走然后右转 2 次，花费将是 $10$ 。 --- 样例二解释： 最便宜的路径花费 7 ：立刻左转，直走，在第一个岔路口左转，随后右转。 --- 对于 $100\\%$ 的数据：$4 \\leq h,w \\leq 30$。 数据保证地图中只有一个起点，一个终点，他们之间存在着可通达的路径。同时保证地图最外层一圈都是障碍。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:可见矩形 题目描述 给定平面上 n 个互不相交（指公共面积为零）的正方形，它们的顶点坐标均为整数。设坐标原点为 $O(0,0)$。对于任一正方形 R，如果可以找到 R 的边上 2 个不同的点 A 和 B，使 $\\triangle OAB$ 的内部与其他正方形无公共点，则称正方形 R 是从 O 点可见的正方形。 对于给定的 n 个互不相交的正方形，计算从坐标原点 O 可见的正方形个数。 输入输出格式 输入格式 输入文件的第一行是正方形个数 n（$1\\le n\\le 1000$）。 接下来 n 行中，每行有三个表示正方形的整数 $X,Y,L$。其中，X 和 Y 表示正方形的左下角顶点坐标，L 表示边长，$1\\le X,Y,Z\\le 10000$。 输出格式 输出文件仅有一行包含一个整数，表示从坐标原点 O 可见的正方形个数。 输入输出样例 输入样例 #1 3  2 6 4  1 4 1  2 4 1  输出样例 #1 3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:A*B Problem 题目描述 给出两个非负整数，求它们的乘积。 输入输出格式 输入格式 输入共两行，每行一个非负整数。 输出格式 输出一个非负整数表示乘积。 输入输出样例 输入样例 #1 1  2 输出样例 #1 2 说明 每个非负整数不超过 $10^{2000}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:哥德巴赫猜想 题目描述 输入一个偶数 N，验证 $4\\sim N$ 所有偶数是否符合哥德巴赫猜想：任一大于 2 的偶数都可写成两个质数之和。如果一个数不止一种分法，则输出第一个加数相比其他分法最小的方案。例如 $10，10=3+7=5+5$，则 $10=5+5$ 是错误答案。 输入输出格式 输入格式 第一行输入一个正偶数 N 输出格式 输出 $\\dfrac{N-2}{2}$ 行。对于第 i 行： 首先先输出正偶数 $2i+2$，然后输出等号，再输出加和为 $2i+2$ 且第一个加数最小的两个质数，以加号隔开。 输入输出样例 输入样例 #1 10 输出样例 #1 4=2+2 6=3+3 8=3+5 10=3+7 说明 数据保证，$ 4 \\leq N\\leq10000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:新二叉树 题目描述 输入一串二叉树，输出其前序遍历。 输入输出格式 输入格式 第一行为二叉树的节点数 n。($1 \\leq n \\leq 26$) 后面 n 行，每一个字母为节点，后两个字母分别为其左右儿子。特别地，数据保证第一行读入的节点必为根节点。 空节点用 `*` 表示 输出格式 二叉树的前序遍历。 输入输出样例 输入样例 #1 6 abc bdi cj* d** i** j** 输出样例 #1 abdicj"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:斐波那契公约数 题目描述 对于 Fibonacci 数列： $$ f_i = \\begin{cases}   [i = 1]               & i \\leq 1 \\\\   f_{i - 1} + f_{i - 2} & i \\gt 1 \\end{cases}$$ 请求出 $f_n$ 与 $f_m$ 的最大公约数，即 $\\gcd(f_n, f_m)$。 输入输出格式 输入格式 一行两个正整数 n 和 m 。 输出格式 输出一行一个整数，代表 $f_n$ 和 $f_m$ 的最大公约数。答案请对 $10^8$ 取模。 输入输出样例 输入样例 #1 4 7 输出样例 #1 1 说明 #### 数据规模与约定 - 对于 $100\\%$ 的数据，保证 $1 \\leq n, m \\leq 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 数字反转 题目描述 给定一个整数 N，请将该数各个位上数字反转得到一个新数。新数也应满足整数的常见形式，即除非给定的原数为零，否则反转后得到的新数的最高位数字不应为零（参见样例 2）。 输入输出格式 输入格式 一个整数 N。 输出格式 一个整数，表示反转后的新数。 输入输出样例 输入样例 #1 123 输出样例 #1 321 输入样例 #2 -380 输出样例 #2 -83 说明 **【数据范围】** $-1,000,000,000\\leq N\\leq 1,000,000,000 $。 noip2011 普及组第一题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 统计单词数 题目描述 一般的文本编辑器都有查找单词的功能，该功能可以快速定位特定单词在文章中的位置，有的还能统计出特定单词在文章中出现的次数。 现在，请你编程实现这一功能，具体要求是：给定一个单词，请你输出它在给定的文章中出现的次数和第一次出现的位置。注意：匹配单词时，不区分大小写，但要求完全匹配，即给定单词必须与文章中的某一独立单词在不区分大小写的情况下完全相同（参见样例 1），如果给定单词仅是文章中某一单词的一部分则不算匹配（参见样例 2）。 输入输出格式 输入格式 共 2 行。 第 1 行为一个字符串，其中只含字母，表示给定单词； 第 2 行为一个字符串，其中只可能包含字母和空格，表示给定的文章。 输出格式 一行，如果在文章中找到给定单词则输出两个整数，两个整数之间用一个空格隔开，分别是单词在文章中出现的次数和第一次出现的位置（即在文章中第一次出现时，单词首字母在文章中的位置，位置从 0 开始）；如果单词在文章中没有出现，则直接输出一个整数 $-1$。 输入输出样例 输入样例 #1 To to be or not to be is a question 输出样例 #1 2 0"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 计算系数 题目描述 给定一个多项式 $(by+ax)^k$，请求出多项式展开后 $x^n\\times y^m$ 项的系数。 输入输出格式 输入格式 输入共一行，包含 5 个整数，分别为 $a,b,k,n,m$，每两个整数之间用一个空格隔开。 输出格式 输出共一行，包含一个整数，表示所求的系数。 这个系数可能很大，输出对 $10007$ 取模后的结果。 输入输出样例 输入样例 #1 1 1 3 1 2 输出样例 #1 3 说明 【数据范围】 对于 $30\\%$ 的数据，有 $ 0\\le k\\le 10$。 对于 $50\\%$ 的数据，有 $ a=1，b=1$。 对于 $100\\%$ 的数据，有 $0\\le k\\le 1000，0\\le n,m\\le k，n+m=k，0\\le a,b\\le 10^6$。 noip2011 提高组 day2 第 1 题。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 聪明的质监员 题目描述 `小T` 是一名质量监督员，最近负责检验一批矿产的质量。这批矿产共有 n 个矿石，从 1 到 n 逐一编号，每个矿石都有自己的重量 $w_i$ 以及价值 $v_i$ 。检验矿产的流程是： 1 、给定$ m$ 个区间 $[l_i,r_i]$； 2 、选出一个参数 W； 3 、对于一个区间 $[l_i,r_i]$，计算矿石在这个区间上的检验值 $y_i$： $$y_i=\\sum\\limits_{j=l_i}^{r_i}[w_j \\ge W] \\times \\sum\\limits_{j=l_i}^{r_i}[w_j \\ge W]v_j$$   其中 j 为矿石编号。 这批矿产的检验结果 y 为各个区间的检验值之和。即：$\\sum\\limits_{i=1}^m y_i$   若这批矿产的检验结果与所给标准值 s 相差太多，就需要再去检验另一批矿产。`小T` 不想费时间去检验另一批矿产，所以他想通过调整参数 W 的值，让检验结果尽可能的靠近标准值 s，即使得 $|s-y|$ 最小。请你帮忙求出这个最小值。 输入输出格式 输入格式 第一行包含三个整数 $n,m,s$，分别表示矿石的个数、区间的个数和标准值。 接下来的 n 行，每行两个整数，中间用空格隔开，第 $i+1$ 行表示 i 号矿石的重量 $w_i$ 和价值 $v_i$。 接下来的 m 行，表示区间，每行两个整数，中间用空格隔开，第 $i+n+1$ 行表示区间 $[l_i,r_i]$ 的两个端点 $l_i$ 和 $r_i$。注意：不同区间可能重合或相互重叠。 输出格式 一个整数，表示所求的最小值。 输入输出样例 输入样例 #1 5 3 15  1 5  2 5  3 5  4 5  5 5  1 5  2 4  3 3  输出样例 #1 10 说明 【输入输出样例说明】 当 W 选 4 的时候，三个区间上检验值分别为 $20,5 ,0$ ，这批矿产的检验结果为 $25$，此时与标准值 S 相差最小为 $10$。 【数据范围】 对于 $10\\% $ 的数据，有 $1 ≤n ,m≤10$； 对于 $30\\% $的数据，有 $1 ≤n ,m≤500$ ； 对于 $50\\% $ 的数据，有 $ 1 ≤n ,m≤5,000$；   对于 $70\\%$ 的数据，有 $1 ≤n ,m≤10,000$ ； 对于 $100\\%$ 的数据，有 $ 1 ≤n ,m≤200,000，0 < w_i,v_i≤10^6，0 < s≤10^{12}，1 ≤l_i ≤r_i ≤n$ 。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:感谢 @Transhumanist 提供的一组 Hack 数据 题目描述 风景迷人的小城 Y 市，拥有 n 个美丽的景点。由于慕名而来的游客越来越多，Y 市特意安排了一辆观光公交车，为游客提供更便捷的交通服务。观光公交车在第 0 分钟出现在 1 号景点，随后依次前往 $2,3,4,\\cdots,n$ 号景点。从第 i 号景点开到第 $i+1$ 号景点需要 $D_i$ 分钟。任意时刻，公交车只能往前开，或在景点处等待。 设共有 m 个游客，每位游客需要乘车 1 次从一个景点到达另一个景点，第 i 位游客在 $T_i$ 分钟来到景点 $A_i$，希望乘车前往景点 $B_i（A_i<B_i$）。为了使所有乘客都能顺利到达目的地，公交车在每站都必须等待需要从该景点出发的所有乘客都上车后才能出发开往下一景点。 假设乘客上下车不需要时间。一个乘客的旅行时间，等于他到达目的地的时刻减去他来到出发地的时刻。因为只有一辆观光车，有时候还要停下来等其他乘客，乘客们纷纷抱怨旅行时间太长了。于是聪明的司机 ZZ 给公交车安装了 k 个氮气加速器，每使用一个加速器，可以使其中一个 $D_i-1$。对于同一个 $D_i$ 可以重复使用加速器，但是必须保证使用后 $D_i\\ge0$。 那么 ZZ 该如何安排使用加速器，才能使所有乘客的旅行时间总和最小？ 输入输出格式 输入格式 第 1 行是 3 个整数 $n,m,k$，每两个整数之间用一个空格隔开。分别表示景点数、乘客数和氮气加速器个数。 第 2 行是 $n-1$ 个整数，每两个整数之间用一个空格隔开，第 i 个数表示从第 i 个景点开往第 $i+1$ 个景点所需要的时间，即 $D_i$。 第 3 行至 $m+2$ 行每行 3 个整数 $T_i,A_i,B_i$，每两个整数之间用一个空格隔开。第 $i+2$ 行表示第 i 位乘客来到出发景点的时刻，出发的景点编号和到达的景点编号。 输出格式 一个整数，表示最小的总旅行时间。 输入输出样例 输入样例 #1 3 3 2 1 4 0 1 3 1 1 2 5 2 3 输出样例 #1 10 说明 **【输入输出样例说明】** 对 $D_2$ 使用 2 个加速器，从 2 号景点到 3 号景点时间变为 2 分钟。 公交车在第 1 分钟从 1 号景点出发，第 2 分钟到达 2 号景点，第 5 分钟从 2 号景点出发，第 7 分钟到达 3 号景点。 第 1 个旅客旅行时间 $7-0=7$ 分钟。 第 2 个旅客旅行时间 $2-1=1$ 分钟。 第 3 个旅客旅行时间 $7-5=2$ 分钟。 总时间 $7+1+2=10$ 分钟。 **【数据范围】** 对于 $10\\%$ 的数据，$k=0$。 对于 $20\\%$ 的数据，$k=1$。 对于 $40\\%$ 的数据，$2 \\le n \\le 50，1 \\le m \\le 10^3，0 \\le k \\le 20，0 \\le D_i \\le 10，0 \\le T_i \\le 500$。 对于 $60\\%$ 的数据，$1 \\le n \\le 100，1 \\le m \\le 10^3，0 \\le k \\le 100，0 \\le D_i \\le 100，0 \\le T_i \\le 10^4$。 对于 $100\\%$ 的数据，$1 \\le n \\le 10^3，1 \\le m \\le 10^4，0 \\le k \\le 10^5，0 \\le D_i \\le 100，0 \\le T_i \\le 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Mivik 想当大作家。 题目描述 Mivik 的键盘上有 m 个不同的按键，对应着 m 个不同的字符。由于 Mivik 不会写文章，所以他只好**等概率**随机乱按了 n 个键，打出了一篇文章。 Mivik 定义一篇文章的复杂度是这篇文章所有**非空**本质不同子串的数目。我们认为两个字符串本质不同当且仅当它们的长度不同或者它们有任意一位上的字符不同。例如，文章 `abaa` 的复杂度是 8，因为它一共有 `a`、`b`、`ab`、`ba`、`aa`、`aba`、`baa`、`abaa` 这 8 个非空的本质不同子串。 Mivik 现在想知道，这篇文章期望的复杂度是多少。由于 Mivik 不喜欢奇形怪状的小数，你只需要输出期望的复杂度对 $10^9+7$ 取模后的值。 输入输出格式 输入格式 一行两个整数 n 和 m，意义见题目描述。 输出格式 一行一个整数，代表答案对 $10^9+7$ 取模后的值。 输入输出样例 输入样例 #1 2 2 输出样例 #1 500000006 输入样例 #2 3 3 输出样例 #2 5 输入样例 #3 3 4 输出样例 #3 250000007 说明 ### 样例解释 样例一：假设键盘上的字符分别为 `a` 和 `b`，那么可能打出来的文章一共有 `aa`、`ab`、`ba`、`bb` 四种，它们的复杂度分别为 2、3、3、2，因此答案为 $\\frac{2+3+3+2}{4}=\\frac{5}{2}$，对 $10^9+7$ 取模后得到 500000006。 ### 数据范围 对于全部数据，有 $1\\le n\\le 20，1\\le m\\le 5\\cdot 10^6$。 Subtask 1 (10 pts)：满足 $1\\le n, m\\le 7$。 Subtask 2 (20 pts)：满足 $1\\le n\\le 5$。 Subtask 3 (20 pts)：满足 $1\\le n\\le 10$。 Subtask 4 (50 pts)：无特殊限制。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:压缩技术（续集版） 题目描述 设某汉字由 $N \\times N$ 的 $\\texttt 0$ 和 $\\texttt 1$ 的点阵图案组成。 我们依照以下规则生成压缩码。连续一组数值：从汉字点阵图案的第一行第一个符号开始计算，按书写顺序从左到右，由上至下。第一个数表示连续有几个 $\\texttt 0$，第二个数表示接下来连续有几个 $\\texttt 1$，第三个数再接下来连续有几个 $\\texttt 0$，第四个数接着连续几个 $\\texttt 1$，以此类推…… 例如: 以下汉字点阵图案： ``` 0001000 0001000 0001111 0001000 0001000 0001000 1111111 ``` 对应的压缩码是： $\\texttt {7 3 1 6 1 6 4 3 1 6 1 6 1 3 7}$ （第一个数是 N ,其余各位表示交替表示0和1 的个数，压缩码保证 $N \\times N=$ 交替的各位数之和） 输入输出格式 输入格式 汉字点阵图（点阵符号之间不留空格）。 输出格式 输出一行，压缩码。 输入输出样例 输入样例 #1 0001000 0001000 0001111 0001000 0001000 0001000 1111111 输出样例 #1 7 3 1 6 1 6 4 3 1 6 1 6 1 3 7 说明 数据保证，$3\\leq N\\leq 200$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:单词覆盖还原 题目描述 一个长度为 l 的字符串中被反复贴有 `boy` 和 `girl` 两单词，后贴上的可能覆盖已贴上的单词（没有被覆盖的用句点表示），最终每个单词至少有一个字符没有被覆盖。问贴有几个 `boy` 几个 `girl`？ 输入输出格式 输入格式 一行被反复贴有 `boy` 和 `girl` 两单词的字符串。 输出格式 两行，两个整数。第一行为 `boy` 的个数，第二行为 `girl` 的个数。 输入输出样例 输入样例 #1 ......boyogirlyy......girl....... 输出样例 #1 4 2 说明 数据保证，$3\\le l\\le255$，字符串仅仅包含如下字符：$\\texttt{.bgilory}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:logo语言 题目描述 Logo 语言命令可以指挥海龟在屏幕中爬行。本问题只使用 Logo 语言的三个语句：前进 `FD`，倒退 `BK` 和重复 `REPEAT`，因此，海龟只在一条直线上来回爬行。输入一行 logo 的命令行，输出海龟在屏幕中离开原来位子的距离（假设屏幕很大，可以让海龟移开 10^9 的距离）。 例如： - 输入 `FD 100` ，输出：$100$。 - 输入 `FD 100 BK 150`， 输出：$50$。 - 输入 `REPEAT 5[FD 100 BK 50]`， 输出：$250$。 - 输入 `REPEAT 5[FD 50 REPEAT 10[FD 100]]`， 输出：$5250$。 输入输出格式 输入格式 一行，一个字符串，符合上述规定的 logo 命令行。 输出格式 一个数据，海龟离开原来位子的距离。 输入输出样例 输入样例 #1 FD 100 输出样例 #1 100 说明 输入的数据绝对值不超过 $100$。输出结果不会超过10^9。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:删数问题 题目描述 一个集合有如下元素：1 是集合元素；若 P 是集合的元素，则 $2\\times P+1，4\\times P+5$ 也是集合的元素。 取出此集合中最小的 k 个元素，按从小到大的顺序组合成一个多位数，现要求从中删除 m 个数位上的数字，使得剩下的数字最大，编程输出删除前和删除后的多位数字。 注：不存在所有数被删除的情况。 输入输出格式 输入格式 只有一行两个整数，分别代表 k 和 m。 输出格式 输出为两行两个整数，第一行为删除前的数字，第二行为删除后的数字。 输入输出样例 输入样例 #1 5  4 输出样例 #1 137915 95 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $1\\le k,m\\le300$。 - 对于 $100\\%$ 的数据，保证 $1\\le k,m\\le3\\times10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:矩形分割 题目描述 出于某些方面的需求，我们要把一块 $N \\times M$ 的木板切成一个个 $1 \\times 1$ 的小方块。 对于一块木板，我们只能从某条横线或者某条竖线（要在方格线上），而且这木板是不均匀的，从不同的线切割下去要花不同的代价。而且，对于一块木板，切割一次以后就被分割成两块，而且不能把这两块木板拼在一起然后一刀切成四块，只能两块分别再进行一次切割。 现在，给出从不同的线切割所要花的代价，求把整块木板分割成 $1 \\times 1$ 块小方块所需要耗费的最小代价。 输入输出格式 输入格式 输入文件第一行包括 N 和 M，表示长 N 宽 M 的矩阵。 第二行包括 $N-1$ 个非负整数，分别表示沿着 $N-1$ 条横线切割的代价。 第三行包括 $M-1$ 个非负整数，分别表示沿着 $M-1$ 条竖线切割的代价。 输出格式 输出一个整数，表示最小代价。 输入输出样例 输入样例 #1 2 2 3 3 输出样例 #1 9 说明 数据范围： 对于 $60\\%$ 的数据，有 $1 \\le N,M \\le 100$； 对于 $100\\%$ 的数据，有 $1 \\le N,M \\le 2000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:雷达安装 题目描述 假设海岸线是一条无限延伸的直线。它的一侧是陆地，另一侧是海洋。每一座小岛是在海面上的一个点。雷达必须安装在陆地上（包括海岸线），并且每个雷达都有相同的扫描范围 d。你的任务是建立尽量少的雷达站，使所有小岛都在扫描范围之内。 数据使用笛卡尔坐标系，定义海岸线为 x 轴。在 x 轴上方为海洋，下方为陆地。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:足球 题目描述 我们当中有很多热爱中国足球的同学，我们都知道中超（中国足球超级联赛）的规则： 一场比赛中，若获胜（即你的得分严格大于对手得分）则获得 3 的积分，若打平（即你的得分等于对手得分）则获得 1 分，若失败（即你的得分严格小于对手得分）获得 0 积分。 这个问题很简单，假设 N 轮比赛中你一共攻入 S 个球，丢掉 T 个球，那么你可能获得的最大得分和最小得分是多少？ 输入输出格式 输入格式 多组数据，每组数据一行三个整数 $S,T,N（S,T \\ge 0，N \\ge 1$）。每个测试点内数据组数不超过 $3\\times 10^4$ 组。 输出格式 对于每组数据输出一行，两个整数表示最大得分和最小得分。 输入输出样例 输入样例 #1 1 1 1 1 1 2 输出样例 #1 1 1 3 2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数列排序 题目描述 给定一个数列 a，这个数列满足 $a_i \\not  =a_j（i\\not=j$），现在要求你把这个数列从小到大排序，每次允许你交换其中任意一对数，请问最少需要几次交换？ 输入输出格式 输入格式 第一行是一个整数，代表数字个数 n。 第二行有 n 个整数用空格分隔开，表示数列 a。 输出格式 只有一行，包含一个数，表示最少的交换次数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数列 题目描述 有这样一种数列 $a_1, a_2, \\cdots a_n$，其中 $a_{1}=0$，且对任意一项 $a_{i}$ 满足 $|a_{i}-a_{i+1}|=1（1\\le i<n$）。设 $s=\\sum_{i = 1}^n a_i = a_{1}+a_{2}+ \\cdots +a_{n}$，表示前 n 项之和。 现在给出数列长度 n 与数列前 n 项之和 s，要求： 输出满足条件的数列的总数对 $2^{64}$ 取模后的结果。 输出满足条件的 $100$ 个数列（如果不满 $100$ 个就全部输出）。 输入输出格式 输入格式"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:封锁阳光大学 题目描述 曹是一只爱刷街的老曹，暑假期间，他每天都欢快地在阳光大学的校园里刷街。河蟹看到欢快的曹，感到不爽。河蟹决定封锁阳光大学，不让曹刷街。 阳光大学的校园是一张由 n 个点构成的无向图，n 个点之间由 m 条道路连接。每只河蟹可以对一个点进行封锁，当某个点被封锁后，与这个点相连的道路就被封锁了，曹就无法在这些道路上刷街了。非常悲剧的一点是，河蟹是一种不和谐的生物，当两只河蟹封锁了相邻的两个点时，他们会发生冲突。 询问：最少需要多少只河蟹，可以封锁所有道路并且不发生冲突。 输入输出格式 输入格式 第一行两个正整数，表示节点数和边数。 接下来 m 行，每行两个整数 $u,v$，表示点 u 到点 v 之间有道路相连。 输出格式 仅一行如果河蟹无法封锁所有道路，则输出 `Impossible`，否则输出一个整数，表示最少需要多少只河蟹。 输入输出样例 输入样例 #1 3 3 1 2 1 3 2 3 输出样例 #1 Impossible 输入样例 #2 3 2 1 2 2 3 输出样例 #2 1 说明 【数据规模】    对于 $100\\%$ 的数据，$1\\le n \\le 10^4，1\\le m \\le 10^5$，保证没有重边。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:此外，巡洋船只和舰队将被派去保护海岸线。不幸的是，因为种种原因，国防海军部仅有很少的几位军官能指挥大型海战。因此，他们培养了一些新海军指挥官。军官们选择了“海战”游戏来帮助他们学习。 题目描述 在一个方形的盘上，放置了固定数量和形状的船只，每只船却不能碰到其它的船。在本题中，我们认为船是方形的，所有的船只都是由图形组成的方形。 求出该棋盘上放置的船只的总数。 输入输出格式 输入格式 第一行为两个整数 R 和 C，用空格隔开，分别表示游戏棋盘的行数和列数。 接下来 R 行，每行 C 个字符，为 `#` 或 `.`。`#` 表示船只的一部分，`.` 表示水。 输出格式 一行一个字符串，如果船的位置放得正确（即棋盘上只存在相互之间不能接触的方形，如果两个 `#` 号上下相邻或左右相邻却分属两艘不同的船只，则称这两艘船相互接触了）。就输出 `There are S ships.`，S 表示船只的数量。否则输出 `Bad placement.`。 输入输出样例 输入样例 #1 6 8 .....#.# ##.....# ##.....# .......# #......# #..#...# 输出样例 #1 There are 5 ships. 说明 对于 $100\\%$ 的数据，$1 \\le R,C \\le 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:瑞瑞的木棍 题目描述 瑞瑞有一堆的玩具木棍，每根木棍的两端分别被染上了某种颜色，现在他突然有了一个想法，想要把这些木棍连在一起拼成一条线，并且使得木棍与木棍相接触的两端颜色都是相同的，给出每根木棍两端的颜色，请问是否存在满足要求的排列方式。 例如，如果只有 2 根木棍，第一根两端的颜色分别为 red, blue，第二根两端的颜色分别为 red, yellow，那么 blue---red | red----yellow 便是一种满足要求的排列方式。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:瑞瑞想要亲自修复在他的一个小牧场周围的围栏。 题目描述 他测量栅栏并发现他需要 n 根木板，每根的长度为整数 $l_i$。于是，他买了一根足够长的木板，长度为所需的 n 根木板的长度的总和，他决定将这根木板切成所需的 n 根木板（瑞瑞在切割木板时不会产生木屑，不需考虑切割时损耗的长度)。 瑞瑞切割木板时使用的是一种特殊的方式，这种方式在将一根长度为 x 的木板切为两根时，需要消耗 x 个单位的能量。瑞瑞拥有无尽的能量，但现在提倡节约能量，所以作为榜样，他决定尽可能节约能量。显然，总共需要切割 $(n-1)$ 次，问题是，每次应该怎么切呢？请编程计算最少需要消耗的能量总和。 输入输出格式 输入格式 输入的第一行是整数，表示所需木板的数量 n。 第 2 到第 $(n + 1)$ 行，每行一个整数，第 $(i + 1)$ 行的整数 $l_i$ 代表第  i 根木板的长度 $l_i$。 输出格式 一个整数，表示最少需要消耗的能量总和。 输入输出样例 输入样例 #1 3 8 5 8 输出样例 #1 34 说明 #### 输入输出样例 1 解释 将长度为 $21$ 的木板，第一次切割为长度为 8 和长度为 $13$ 的，消耗 $21$ 个单位的能量，第二次将长度为 $13$ 的木板切割为长度为 5 和 8 的，消耗 $13$ 个单位的能量，共消耗 $34$ 个单位的能量，是消耗能量最小的方案。 ---- #### 数据规模与约定 - 对于 $100\\%$ 的数据，保证 $1\\le n \\le 2 \\times 10^4，1 \\leq l_i \\leq 5 \\times 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2013] 小Q的修炼 题目描述 小 Q 最近发现了一款新游戏，游戏的目标是从一个新手修炼成为武功高强的大侠。面对错综复杂的游戏世界，小 Q 要对他面临的每件事情做出谨慎的选择。例如，是否参加一个陌生人邀请的比武；同意或是拒绝用宝剑交换他人的武功秘籍......而小 Q 做出的每一个选择都有可能影响到他以后的发展：面对一个高手，若主动与之比武，很可能会损失惨重；但若不去比武，也许今后就再也见不到这个高手了。 对着这个游戏，小 Q 玩了很多次仍然玩不出他想要的结局，于是他费尽千辛万苦找到了游戏的剧本。令人惊讶的是,游戏的剧本并不像我们平时见到的剧本，反而很像代码。这个剧本是这样描述的： - 量：有 2 种量，常数和变量。 - 常数：一个整数。 - 变量：初始值为 0 的可变整数，不同变量用不同正整数编号区分。 - 事件：整个剧本由若干个事件构成。所有的事件按照给定的顺序从 1 开始依次编号。事件共有 3 种：普通事件、选择跳转和条件跳转。 - 执行位置：一个整数，表示接下来将会执行的事件编号，如果不存在这个编号的事件则停止，即游戏到了一个结局。最初的时候执行位置为 1。 - 普通事件：一个变量增加或减少一个量的值。之后执行位置增加 1。 - 选择跳转：两个整数。执行到这里时玩家需要在这两个整数中选择一个，之后执行位置将被修改为这个整数。 - 条件跳转：两个量和两个整数。执行到这里时，若第一个量小于第二个量，则执行位置将被修改为第一个整数，否则将被修改为第二个整数。 小 Q 认为，整个游戏是希望一个叫做「成就值」的变量（编号为 1）最大。 输入输出格式 输入格式 该题为提交答案型试题，所有输入数据 `train1.in`~`train10.in` 已在附加文件中。 输入的第一行包含两个正整数 $n, m$，表示事件的个数和变量的个数。 接下来有 n 行，每行描述一个事件。这些事件按照给出的顺序依次编号为 1 到 n。 描述量和事件的格式如下（格式中 `#`表示空格）"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最佳课题选择 题目描述 Matrix67 要在下个月交给老师 n 篇论文，论文的内容可以从 m 个课题中选择。由于课题数有限，Matrix67 不得不重复选择一些课题。完成不同课题的论文所花的时间不同。具体地说，对于某个课题 i，若 Matrix67 计划一共写 x 篇论文，则完成该课题的论文总共需要花费 $A_i\\times x^{B_i}$ 个单位时间。给定与每一个课题相对应的 $A_i$ 和 $B_i$ 的值，请帮助 Matrix67 计算出如何选择论文的课题使得他可以花费最少的时间完成这 n 篇论文。 输入输出格式 输入格式 第一行两个整数 n 和 m，分别代表需要完成的论文数和可供选择的课题数。 接下来 m 行每行两个整数。其中，第 i 行的两个数分别代表与第 i 个课题相对应的时间系数 $A_i$ 和指数 $B_i$。 输出格式 输出完成 n 篇论文所需要耗费的最少时间。 输入输出样例 输入样例 #1 10 3 2 1 1 2 2 1 输出样例 #1 19 说明 ### 样例说明 4 篇论文选择课题一，5 篇论文选择课题三，剩下一篇论文选择课题二，总耗时为 $2\\times4^1+1\\times1^2+2\\times5^1=8+1+10=19$ 。可以证明，不存在更优的方案使耗时小于 $19$。 ### 数据规模与约定 对于 $30\\%$ 的数据，$n\\le10,m\\le5$。 对于 $100\\%$ 的数据，$1\\le n\\le200，1\\le m\\le20，1\\le A_i\\le100，1\\le B_i \\le 5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:末日的传说 题目描述 只要是参加 jsoi 活动的同学一定都听说过 Hanoi 塔的传说：三根柱子上的金片每天被移动一次，当所有的金片都被移完之后，世界末日也就随之降临了。 在古老东方的幻想乡，人们都采用一种奇特的方式记录日期：他们用一些特殊的符号来表示从 1 开始的连续整数，1 表示最小而 n 表示最大。创世纪的第一天，日历就被赋予了生命，它自动地开始计数，就像排列不断地增加。 我们用 $1-n$ 来表示日历的元素，第一天日历就是： $$1,2,\\ldots,n-2,n-1,n$$ 第二天，日历自动变为 $$1,2,\\ldots,n-2,n,n-1$$ ······每次它都生成一个以前未出现过的“最小”的排列——把它转为 $n+1$ 进制后数的数值最小。 日子一天一天地过着。有一天，一位预言者出现了——他预言道，当这个日历到达某个上帝安排的时刻，这个世界就会崩溃······他还预言到，假如某一个日期的逆序达到一个值 m 的时候，世界末日就要降临。 什么是逆序？日历中的两个不同符号，假如排在前面的那个比排在后面的那个更大，就是一个逆序，一个日期的逆序总数达到 m 后，末日就要降临，人们都期待一个贤者，能够预见那一天到底将在什么时候到来？ 输入输出格式 输入格式 只包含一行两个正整数，分别为 n 和 m。 输出格式 输出一行，为世界末日的日期，每个数字之间用一个空格隔开。 输入输出样例 输入样例 #1 5 4 输出样例 #1 1 3 5 4 2 说明 对于 $10\\%$ 的数据有 $n\\le10$； 对于 $40\\%$ 的数据有 $n\\le1000$； 对于 $100\\%$ 的数据有 $n\\le5\\times10^4$。 所有数据均有解。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO09OCT] Heat Wave G 题目描述 有一个 n 个点 m 条边的无向图，请求出从 s 到 t 的最短路长度。 输入输出格式 输入格式 第一行四个正整数 $n,m,s,t$。 接下来 m 行，每行三个正整数 $u,v,w$，表示一条连接 $u,v$，长为 w 的边。 输出格式 输出一行一个整数，表示答案。 输入输出样例 输入样例 #1 7 11 5 4 2 4 2 1 4 3 7 2 2 3 4 3 5 7 5 7 3 3 6 1 1 6 3 4 2 4 3 5 6 3 7 2 1 输出样例 #1 7 说明 【数据范围】   对于 $100\\%$ 的数据，$1\\le n \\le 2500，1\\le m \\le 6200，1\\le w \\le 1000$。 【样例说明】    $5 \\to 6 \\to 1 \\to 4$ 为最短路，长度为 $3+1+3 = 7$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:兽径管理 题目描述 约翰农场的牛群希望能够在 N 个草地之间任意移动。草地的编号由 1 到 N。草地之间有树林隔开。牛群希望能够选择草地间的路径，使牛群能够从任一 片草地移动到任一片其它草地。 牛群可在路径上双向通行。 牛群并不能创造路径，但是他们会保有及利用已经发现的野兽所走出来的路径（以下简称兽径）。每星期他们会选择并管理一些或全部已知的兽径当作通路。 牛群每星期初会发现一条新的兽径。他们接着必须决定管理哪些兽径来组成该周牛群移动的通路，使得牛群得以从任一草地移动到任一草地。牛群只能使用当周有被管理的兽径做为通路。 牛群希望他们管理的兽径长度和为最小。牛群可以从所有他们知道的所有兽径中挑选出一些来管理。牛群可以挑选的兽径与它之前是否曾被管理无关。 兽径决不会是直线，因此连接两片草地之间的不同兽径长度可以不同。 此外虽然两条兽径或许会相交，但牛群非常的专注，除非交点是在草地内，否则不会在交点换到另外一条兽径上。 在每周开始的时候，牛群会描述他们新发现的兽径。如果可能的话，请找出可从任何一草地通达另一草地的一组需管理的兽径，使其兽径长度和最小。 输入输出格式 输入格式 输入的第一行包含两个用空白分开的整数 N 和 W。W 代表你的程序需要处理的周数。 以下每处理一周，读入一行数据，代表该周新发现的兽径，由三个以空白分开的整数分别代表该兽径的两个端点（两片草地的编号) 与该兽径的长度。一条兽径的两个端点一定不同。 输出格式 每次读入新发现的兽径后，你的程序必须立刻输出一组兽径的长度和，此组兽径可从任何一草地通达另一草地，并使兽径长度和最小。如果不能找到一组可从任一草地通达另一草地的兽径，则输出 $-1$。 输入输出样例 输入样例 #1 4 6     1 2 10     1 3 8     3 2 3     1 4 3     1 3 6     2 1 2     输出样例 #1 -1 -1 -1 14 12 8 说明 ### 样例解释 对于每一周， - 第一周时 4 号草地不能与其他草地连通，输出 $-1$； - 第二周时 4 号草地不能与其他草地连通，输出 $-1$； - 第三周时 4 号草地不能与其他草地连通，输出 $-1$； - 第四周时可以选择兽径 $(1,4,3),(1,3,8)$ 和 $(3,2,3)$； - 第五周时可以选择兽径 $(1,4,3),(1,3,6)$ 和 $(3,2,3)$； - 第六周时可以选择兽径 $(1,4,3),(2,1,2)$ 和 $(3,2,3)$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:无序字母对 题目描述 给定 n 个各不相同的无序字母对（区分大小写，无序即字母对中的两个字母可以位置颠倒）。请构造一个有 $(n+1)$ 个字母的字符串使得每个字母对都在这个字符串中出现。 输入输出格式 输入格式 第一行输入一个正整数 n。 第二行到第 $(n+1)$ 行每行两个字母，表示这两个字母需要相邻。 输出格式 输出满足要求的字符串。 如果没有满足要求的字符串，请输出 `No Solution`。 如果有多种方案，请输出字典序最小的方案（即满足前面的字母的 ASCII 编码尽可能小）。 输入输出样例 输入样例 #1 4 aZ tZ Xt aX 输出样例 #1 XaZtX   说明 不同的无序字母对个数有限，n 的规模可以通过计算得到。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:在电视时代，没有多少人观看戏剧表演。 Malidinesia 古董喜剧演员意识到这一事实，他们想宣传剧院,尤其是古色古香的喜剧片。 题目描述 他们已经打印了请帖和所有必要的信息和计划。许多学生被雇来分发这些请柬。每个学生志愿者被指定一个确切的公共汽车站，他或她将留在那里一整天,邀请人们参与。 这里的公交系统是非常特殊的：共有 n 个站点和 m 个线路，所有的线路都是单向的，连接两个站点。公共汽车离开起始点，到达目的地之后又空车返回起始点。 学生每天早上从总部所在的 1 号站点出发，乘公交车到一个预定的站点邀请乘客。每个站点都被安排了一名学生。在一天结束的时候，所有的学生都回到总部。现在需要知道的是，学生所需的公交费用的总和最小是多少。 输入输出格式 输入格式 输入的第一行是两个整数，代表站点个数 n 和线路条数 m。 第 2 到第 $(m + 1)$ 行，每行三个整数 $u, v, w$，代表存在一条从 u 出发到达 v 的线路，费用为 w。 输出格式 输出一行一个整数，表示最小费用。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:地震逃生 题目描述 汶川地震发生时，四川\\*\\*中学正在上课，一看地震发生，老师们立刻带领 x 名学生逃跑，整个学校可以抽象地看成一个有向图，图中有 n 个点，m 条边。1 号点为教室，n 号点为安全地带，每条边都只能容纳一定量的学生，超过楼就要倒塌，由于人数太多，校长决定让同学们分成几批逃生，只有第一批学生全部逃生完毕后，第二批学生才能从 1 号点出发逃生，现在请你帮校长算算，每批最多能运出多少个学生，x 名学生分几批才能运完。 输入输出格式 输入格式 第一行三个整数 $n,m,x$；   以下 m 行，每行三个整数 $a,b,c（1\\leq a,b\\leq n，0\\leq c\\leq x$）描述一条边，分别代表从 a 点到 b 点有一条边，且可容纳 c 名学生。 输出格式 两个整数，分别表示每批最多能运出多少个学生，x 名学生分几批才能运完。如果无法到达目的地（n 号点）则输出 `Orz Ni Jinan Saint Cow!`。 输入输出样例 输入样例 #1 6 7 7 1 2 1 1 4 2 2 3 1 4 5 1 4 3 1 3 6 2 5 6 1 输出样例 #1 3 3 说明 **【注释】** 比如有图 ```plain 1 2 100 2 3 1 ``` $100$ 个学生先冲到 2 号点，然后一个一个慢慢沿 $2 \\to 3$ 边走过去。 18 神牛规定这样是不可以的…… 也就是说，每批学生必须同时从起点出发，并且同时到达终点。 **【数据范围】** 对于 $100 \\%$ 的数据，$0 \\le x < 2^{31}，1 \\le n \\le 200，1 \\le m \\le 2000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO4.4] 追查坏牛奶 Pollutant Control 题目描述 你第一天接手三鹿牛奶公司就发生了一件倒霉的事情：公司不小心发送了一批有三聚氰胺的牛奶。 很不幸，你发现这件事的时候，有三聚氰胺的牛奶已经进入了送货网。这个送货网很大，而且关系复杂。你知道这批牛奶要发给哪个零售商，但是要把这批牛奶送到他手中有许多种途径。 送货网由一些仓库和运输卡车组成，每辆卡车都在各自固定的两个仓库之间单向运输牛奶。在追查这些有三聚氰胺的牛奶的时候，有必要保证它不被送到零售商手里，所以必须使某些运输卡车停止运输，但是停止每辆卡车都会有一定的经济损失。 你的任务是，在保证坏牛奶不送到零售商的前提下，制定出停止卡车运输的方案，使损失最小。 输入输出格式 输入格式 第 1 行两个整数 N、M，N 表示仓库的数目，M 表示运输卡车的数量。仓库 1 代表发货工厂，仓库 N 代表有三聚氰胺的牛奶要发往的零售商。 第 $2\\sim M+1$ 行，每行 3 个整数 $S_i、E_i$ 和 $C_i$。其中 $S_i、E_i$ 分别表示这辆卡车的出发仓库和目的仓库。$C_i$ 表示让这辆卡车停止运输的损失。 输出格式 两个整数 C 和 T，C 表示最小的损失，T 表示在损失最小的前提下，最少要停止的卡车数。 输入输出样例 输入样例 #1 4 5  1 3 100  3 2 50  2 4 60  1 2 40  2 3 80  输出样例 #1 60 1  说明 对于 $100 \\%$ 的数据，满足 $2 \\le N \\le 32，0 \\le M \\le 10^3，1 \\le S_i \\le N，1 \\le E_i \\le N，0 \\le C_i \\le 2 \\times 10^6$。 题目翻译来自 NOCOW。 USACO Training Section 4.4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO5.4] 奶牛的电信Telecowmunication 题目描述 农夫约翰的奶牛们喜欢通过电邮保持联系，于是她们建立了一个奶牛电脑网络，以便互相交流。这些机器用如下的方式发送电邮：如果存在一个由 c 台电脑组成的序列$a_1,a_2,\\cdots ,a_c$，且 $a_1$ 与 $a_2$ 相连，$a_2$ 与 $a_3$ 相连，等等。那么电脑 $a_1$ 和 $a_c$ 就可以互发电邮。 很不幸，有时候奶牛会不小心踩到电脑上，农夫约翰的车也可能碾过电脑，这台倒霉的电脑就会坏掉。这意味着这台电脑不能再发送电邮了，于是与这台电脑相关的连接也就不可用了。 有两头奶牛就想：如果我们两个不能互发电邮，至少需要坏掉多少台电脑呢？请注意，$c_1,c_2$ 不能被破坏。请编写一个程序为她们计算这个最小值。 以如下网络为例： ```plain    1*   /  3 - 2* ``` 这张图画的是有 2 条连接的 3 台电脑。我们想要在电脑 1 和 2 之间传送信息。电脑 1 与 3，2 与 3 直接连通。如果电脑 3 坏了，电脑 1 与 2 便不能互发信息了。 输入输出格式 输入格式 第一行：四个由空格分隔的整数：$N,M,c_1,c_2。N$ 是电脑总数，电脑由 1 到 N 编号。M 是电脑之间连接的总数。后面的两个整数 $c_1$ 和 $c_2$ 是上述两头奶牛使用的电脑编号。连接没有重复且均为双向的（即如果 $c_1$ 与 $c_2$ 相连，那么 $c_2$ 与 $c_1$ 也相连）。两台电脑之间至多有一条连接。电脑 $c_1$ 和 $c_2$ 不会直接相连。 第 2 到 $M+1$ 行：接下来的 M 行中，每行包含两台直接相连的电脑的编号。 输出格式 一行，一个整数，表示使电脑 $c_1$ 和 $c_2$ 不能互相通信需要坏掉的电脑数目的最小值。 输入输出样例 输入样例 #1 3 2 1 2 1 3 2 3 输出样例 #1 1 说明 对于 $100\\%$ 的数据：$1\\le N \\le 100，1\\le M \\le 600$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:电车 题目描述 在一个神奇的小镇上有着一个特别的电车网络，它由一些路口和轨道组成，每个路口都连接着若干个轨道，每个轨道都通向一个路口（不排除有的观光轨道转一圈后返回路口的可能）。在每个路口，都有一个开关决定着出去的轨道，每个开关都有一个默认的状态，每辆电车行驶到路口之后，只能从开关所指向的轨道出去，如果电车司机想走另一个轨道，他就必须下车切换开关的状态。 为了行驶向目标地点，电车司机不得不经常下车来切换开关，于是，他们想请你写一个程序，计算一辆从路口 A 到路口 B 最少需要下车切换几次开关。 输入输出格式 输入格式 第一行有 3 个整数 $N,A,B（2 \\leq N \\leq 100, 1 \\leq A,B \\leq N$），分别表示路口的数量，和电车的起点，终点。 接下来有 N 行，每行的开头有一个数字 $K_i（0 \\leq K_i \\leq N-1$），表示这个路口与 $K_i$ 条轨道相连，接下来有 $K_i$ 个数字表示每条轨道所通向的路口，开关默认指向第一个数字表示的轨道。 输出格式 输出文件只有一个数字，表示从 A 到 B 所需的最少的切换开关次数，若无法从 A 前往 B，输出 $-1$。 输入输出样例 输入样例 #1 3 2 1 2 2 3 2 3 1 2 1 2 输出样例 #1 0"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:排序 题目描述 一个不同的值的升序排序数列指的是一个从左到右元素依次增大的序列，例如，一个有序的数列 $A,B,C,D$ 表示$A<B,B<C,C<D$。在这道题中，我们将给你一系列形如 $A<B$ 的关系，并要求你判断是否能够根据这些关系确定这个数列的顺序。 输入输出格式 输入格式 第一行有两个正整数 $n,m，n$ 表示需要排序的元素数量，$2\\leq n\\leq 26$，第 1 到 n 个元素将用大写的 $A,B,C,D\\dots$ 表示。m 表示将给出的形如 $A<B$ 的关系的数量。 接下来有 m 行，每行有 3 个字符，分别为一个大写字母，一个 `<` 符号，一个大写字母，表示两个元素之间的关系。 输出格式 若根据前 x 个关系即可确定这 n 个元素的顺序 `yyy..y`（如 `ABC`），输出 `Sorted sequence determined after xxx relations: yyy...y.` 若根据前 x 个关系即发现存在矛盾（如 $A<B,B<C,C<A$），输出 `Inconsistency found after x relations.` 若根据这 m 个关系无法确定这 n 个元素的顺序，输出 `Sorted sequence cannot be determined.` （提示：确定 n 个元素的顺序后即可结束程序，可以不用考虑确定顺序之后出现矛盾的情况） 输入输出样例 输入样例 #1 4 6 A<B A<C B<C C<D B<D A<B 输出样例 #1 Sorted sequence determined after 4 relations: ABCD. 输入样例 #2 3 2 A<B B<A 输出样例 #2 Inconsistency found after 2 relations. 输入样例 #3 26 1 A<Z 输出样例 #3 Sorted sequence cannot be determined. 说明 $2 \\leq n \\leq 26,1 \\leq m \\leq 600$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Couple number 题目描述 对于一个整数 n，若存在两个自然数 $x, y$，满足 $n = x^2 - y^2$，则称 n 是 Couple number。 给出 $a,b$，请求出 $[a, b]$ 范围内有多少个 Couple number。 输入输出格式 输入格式 输入只有一行两个整数，分别表示 $a, b$。 输出格式 输出一行一个整数表示答案。 输入输出样例 输入样例 #1 1 10 输出样例 #1 7 说明 #### 数据规模与约定 对于全部的测试点，保证 $-10^7 \\le a < b \\le 10^7$ ，$b - a \\le 10^7$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:广义斐波那契数列 题目描述 广义的斐波那契数列是指形如 $a_n=p\\times a_{n-1}+q\\times a_{n-2}$ 的数列。     今给定数列的两系数 p 和 q，以及数列的最前两项 $a_1$ 和 $ a_2$，另给出两个整数 n 和 m，试求数列的第 n 项 $a_n \\bmod m$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:没有上司的舞会 题目描述 某大学有 n 个职员，编号为 $1\\ldots n$。 他们之间有从属关系，也就是说他们的关系就像一棵以校长为根的树，父结点就是子结点的直接上司。 现在有个周年庆宴会，宴会每邀请来一个职员都会增加一定的快乐指数 $r_i$，但是呢，如果某个职员的直接上司来参加舞会了，那么这个职员就无论如何也不肯来参加舞会了。 所以，请你编程计算，邀请哪些职员可以使快乐指数最大，求最大的快乐指数。 输入输出格式 输入格式 输入的第一行是一个整数 n。 第 2 到第 $(n + 1)$ 行，每行一个整数，第 $(i+1)$ 行的整数表示 i 号职员的快乐指数 $r_i$。 第 $(n + 2)$ 到第 $2n$ 行，每行输入一对整数 $l, k$，代表 k 是 l 的直接上司。 输出格式 输出一行一个整数代表最大的快乐指数。 输入输出样例 输入样例 #1 7 1 1 1 1 1 1 1 1 3 2 3 6 4 7 4 4 5 3 5 输出样例 #1 5 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $1\\leq n \\leq 6 \\times 10^3，-128 \\leq r_i\\leq 127，1 \\leq l, k \\leq n$，且给出的关系一定是一棵树。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:神秘大三角 题目描述 判断一个点与已知三角形的位置关系。 输入输出格式 输入格式 前三行，每行一个坐标，表示该三角形的三个顶点。 第四行，一个点的坐标，试判断该点与前三个点围成三角形的位置关系。 所有坐标值均为整数。 输出格式 - 若点在三角形内（不含边界），输出 1； - 若点在三角形外（不含边界），输出 2； - 若点在三角形边界上（不含顶点），输出 3； - 若点在三角形顶点上，输出 4。 输入输出样例 输入样例 #1 (0,0)  (3,0)  (0,3)  (1,1)  输出样例 #1 1  说明 ### 数据规模与约定 对于 $100\\%$ 数据，$0\\le x_i,y_i\\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数列的整除性 题目描述 对于任意一个整数数列，我们可以在每两个整数中间任意放一个符号 `+` 或 `-`，这样就可以构成一个表达式，也就可以计算出表达式的值。对于一个整数数列来说，我们能通过如上的方法构造出不同的表达式，从而得到不同的数值，如果其中某一个数值能够被 k 整除的话，我们就称该数列能被 k 整除。现在你的任务是判断某个数列是否能被某数整除。 输入输出格式 输入格式 **本题有多组数据**。   第一行一个整数 M，表示数据组数。   对于每组数据：   第一行两个整数 n 和 k，n 表示数列中整数的个数。   第二行  n 个整数，表示输入数列 $\\{a_n\\}$。 输出格式 输出应有 M 行，依次对应输入文件中的 M 个子任务，若数列能被 k 整除则输出 `Divisible`，否则输出 `Not divisible` ，行首行末应没有空格。 输入输出样例 输入样例 #1 2 4 7 17 5 -21 15 4 5 17 5 -21 15 输出样例 #1 Divisible Not divisible"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:花园 题目描述 小 L 有一座环形花园，沿花园的顺时针方向，他把各个花圃编号为 $1 \\sim n$。花园 1 和 n 是相邻的。 他的环形花园每天都会换一个新花样，但他的花园都不外乎一个规则：任意相邻 m 个花圃中都只有不超过 k 个 C 形的花圃，其余花圃均为 P 形的花圃。 例如，若 $n=10$ , $m=5$ , $k=3$ ，则 - `CCPCPPPPCC` 是一种不符合规则的花圃。 - `CCPPPPCPCP` 是一种符合规则的花圃。 请帮小 L 求出符合规则的花园种数对 $10^9+7$ 取模的结果。 输入输出格式 输入格式 只有一行三个整数，分别表示 $n, m, k$。 输出格式 输出一行一个整数表示答案。 输入输出样例 输入样例 #1 10 5 3 输出样例 #1 458 输入样例 #2 6 2 1 输出样例 #2 18 说明 #### 数据规模与约定 - 对于 $40\\%$ 的数据，保证 $n \\le 20$。 - 对于 $60\\%$ 的数据，保证 $m=2$。 - 对于 $80\\%$ 的数据，保证 $n \\le 10^5$； - 对于 $100\\%$ 的数据，保证 $2 \\leq n \\le 10^{15}，2 \\leq m \\leq \\min(n, 5)，1 \\leq k \\lt m$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:扑克牌 题目描述 组合数学是数学的重要组成部分，是一门研究离散对象的科学，它主要研究满足一定条件的组态（也称组合模型）的存在、计数以及构造等方面的问题。组合数学的主要内容有组合计数、组合设计、组合矩阵、组合优化等。 随着计算机科学的日益发展，组合数学的重要性也日渐凸显，因为计算机科学的核心内容是使用算法处理离散数据。 今天我们来研究组合数学中的一个有趣的问题，也是一个简单的计数问题： 从一副含有 n 张的扑克牌(每张扑克牌都不相同)中，分给 m 个人，第 i 个人得到 $a_i$ 张牌，求一共有几种分法，这个数可能非常大，请输出此数模 $10007$ 后的结果。 输入输出格式 输入格式 第一行两个整数为 $n,m$。 第二行 m 个整数 $a_i$。 输出格式 此数模 $10007$ 后的结果。 输入输出样例 输入样例 #1 5 2 3 1 输出样例 #1 20 输入样例 #2 20 19 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 输出样例 #2 8707 说明 对于 $50\\%$ 的数据：$M=1$。 对于 $100\\%$ 的数据：$1 \\leq n \\leq 10^4，1 \\leq m \\leq 100，0 \\leq a_i \\leq 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:租用游艇 题目描述 长江游艇俱乐部在长江上设置了 n 个游艇出租站 $1,2,\\cdots,n$。游客可在这些游艇出租站租用游艇，并在下游的任何一个游艇出租站归还游艇。游艇出租站 i 到游艇出租站 j 之间的租金为 $r(i,j)（1\\le i\\lt j\\le n$）。试设计一个算法，计算出从游艇出租站 1 到游艇出租站 n 所需的最少租金。 输入输出格式 输入格式 第一行中有一个正整数 n，表示有 n 个游艇出租站。接下来的 $n-1$ 行是一个半矩阵 $r(i,j)（1\\le i<j\\le n$）。 输出格式 输出计算出的从游艇出租站 1 到游艇出租站 n 所需的最少租金。 输入输出样例 输入样例 #1 3 5 15 7"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO07MAR] Gold Balanced Lineup G 题目描述 神仙 $\\mathsf E \\color{red} \\mathsf{ntropyIncreaser}$ 在许多方面都有着很强的能力。具体的说，他总共有 m 种能力，并将这些能力编号为 $1 \\sim m$。   他的能力是一天一天地提升的，每天都会有一些能力得到一次提升，她对每天的能力提升都用一个数字表示，称之为能力提升数字，比如数字 $13$，转化为二进制为 $1101$，并且从右往左看，表示他的编号为 $1,3,4$ 的能力分别得到了一次提升。   $\\mathsf E \\color{red} \\mathsf{ntropyIncreaser}$ 把每天表示能力提升的数字的记了下来，如果在连续的一段时间内，她的每项能力都提升了相同的次数，她就会称这段时间为一个均衡时期，比如在连续 5 天内，她的每种能力都提升了 4 次，那么这就是一个长度为 5 的均衡时期。 于是，问题来了，给出 $\\mathsf E \\color{red} \\mathsf{ntropyIncreaser} n$ 天的能力提升数字，请求出均衡时期的最大长度。 输入输出格式 输入格式 第一行有两个整数 $n,m$，表示有 n 天，m 种能力。　　 接下来有 n 行，每行有一个整数，分别表示第 $1\\sim n$ 天的能力提升数字。   能力提升数字转化为二进制后，从右到左的每一位表示对应的能力是否在当天得到了一次提升。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小M的作物 题目描述 小 M 在 MC 里开辟了两块巨大的耕地 A 和 B（你可以认为容量是无穷），现在，小 P 有 n 种作物的种子，每种作物的种子有 1 个（就是可以种一棵作物），编号为 1 到 n。 现在，第 i 种作物种植在 A 中种植可以获得 $a_i$ 的收益，在 B 中种植可以获得 $b_i$ 的收益，而且，现在还有这么一种神奇的现象，就是某些作物共同种在一块耕地中可以获得额外的收益，小 M 找到了规则中共有 m 种作物组合，第 i 个组合中的作物共同种在 A 中可以获得 $c_{1,i}$ 的额外收益，共同种在 B 中可以获得 $c_{2,i}$ 的额外收益。 小 M 很快的算出了种植的最大收益，但是他想要考考你，你能回答他这个问题么？ 输入输出格式 输入格式 第一行一个整数 n，表示作物种数。 第二行 n 个整数，表示 $a_i$。 第三行 n 个整数，表示 $b_i$。 第四行一个整数 m，表示组合种数。 接下来 m 行中，第 i 行第一个整数 $k_i$，表示第 i 个作物组合中的作物种数，接下来两个整数 $c_{1,i},c_{2,i}$，然后 $k_i$ 个整数，表示该组合中的作物编号。 输出格式 只有一行，包括一个整数，表示最大收益。 输入输出样例 输入样例 #1 3 4 2 1 2 3 2 1 2 3 2 1 2 输出样例 #1 11 说明 ### 样例解释  A 耕地种作物 $1,2，B$ 耕地种作物 3，收益： $4+2+3+2=11$。 ### 数据范围 对于 $100\\%$ 的数据，$1 \\le k < n \\le 10^3，1 \\le m \\le 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:兔子数 题目描述 设 $S(N)$ 表示 N 的各位数字之和，如 $S(484) = 4+8+4 = 16$， $S(22) = 2+2 = 4$。如果一个正整数满足 $S(x \\cdot x) = S(x) \\cdot S(x)$，我们称之为 Rabbit Number。比方说，$22$ 就是一个 Rabbit Number，因为 $S(484) = S(22) \\cdot S(22)$。 现在，给出一个区间 $[L,R]$，求在该区间内的 Rabbit Number 的个数。 输入输出格式 输入格式 输入仅一行，为空格隔开的两个数 L 和 R。 输出格式 输出仅一行一个整数，表示所求 Rabbit Number 的个数。 输入输出样例 输入样例 #1 22 22 输出样例 #1 1 输入样例 #2 484 484 输出样例 #2 0 输入样例 #3 1 58 输出样例 #3 12 输入样例 #4 58 484 输出样例 #4 24 输入样例 #5 1000000000 1000000000 输出样例 #5 1 说明 对于 $100 \\%$ 的数据，$1 \\le L \\le R \\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:WD：嗯，+U+U！ 题目描述 幻象迷宫可以认为是无限大的，不过它由若干个 $N\\times M$ 的矩阵重复组成。矩阵中有的地方是道路，用 $\\verb!.!$ 表示；有的地方是墙，用 $\\verb!#!$ 表示。LHX 和 WD 所在的位置用 $\\verb!S!$ 表示。也就是对于迷宫中的一个点$(x,y)$，如果 $(x \\bmod n,y \\bmod m)$ 是 $\\verb!.!$ 或者 $\\verb!S!$，那么这个地方是道路；如果 $(x \\bmod n,y \\bmod m)$ 是$\\verb!#!$，那么这个地方是墙。LHX 和 WD 可以向上下左右四个方向移动，当然不能移动到墙上。 请你告诉 LHX 和 WD，它们能否走出幻象迷宫（如果它们能走到距离起点无限远处，就认为能走出去）。如果不能的话，LHX 就只好启动城堡的毁灭程序了……当然不到万不得已，他不想这么做。 输入输出格式 输入格式 输入包含多组数据，以 EOF 结尾。 每组数据的第一行是两个整数 $N,M$。 接下来是一个 $N\\times M$ 的字符矩阵，表示迷宫里 $(0,0)$ 到 $(n-1,m-1)$ 这个矩阵单元。 输出格式 对于每组数据，输出一个字符串，`Yes` 或者 `No`。 输入输出样例 输入样例 #1 5 4 ##.# ##S# #..# #.## #..# 5 4 ##.# ##S# #..# ..#. #.## 输出样例 #1 Yes No"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:原 维护队列 参见 P1903 题目描述 某一天WJMZBMR在打osu~~~但是他太弱逼了，有些地方完全靠运气:( 我们来简化一下这个游戏的规则 有 n 次点击要做，成功了就是 `o`，失败了就是 `x`，分数是按 combo 计算的，连续 a 个 combo 就有 $a\\times a$ 分，combo 就是极大的连续 `o`。 比如`ooxxxxooooxxx`，分数就是 $2 \\times 2 + 4 \\times 4 = 4 +16=20$。 Sevenkplus 闲的慌就看他打了一盘，有些地方跟运气无关要么是 `o` 要么是 `x`，有些地方 `o` 或者 `x` 各有 $50\\%$ 的可能性，用 `?` 号来表示。 比如 `oo?xx` 就是一个可能的输入。 那么 WJMZBMR 这场 osu 的期望得分是多少呢？ 比如 `oo?xx` 的话，`?` 是 `o` 的话就是 `oooxx`（9），是x的话就是 `ooxxx`（4），期望自然就是 $(4+9)/2 =6.5$ 了。 输入输出格式 输入格式 第一行一个整数 n（$n\\le3\\times10^5$），表示点击的个数 接下来一个字符串，每个字符都是 `o`，`x`，`?` 中的一个 输出格式 一行一个浮点数表示答案 四舍五入到小数点后 4 位 如果害怕精度跪建议用 long double 或者 extended。 输入输出样例 输入样例 #1 4 ???? 输出样例 #1 4.1250"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:有序表的合并 题目描述 给出两个数列 $a, b$，均按不降序排序。其中保证 a 中没有重复的数字。 现在请你求出：a 中每一个数字在 b 中出现了几次？ 输入输出格式 输入格式 **本题单测试点内有多组测试数据**。 输入的第一行是一个整数，表示数据组数 T。接下来按顺序给出每组数据的输入信息： 第一行为两个整数，依次表示 a 数列的长度 n 和 b 数列的长度 m。   第二行有 n 个整数表示数列 a，第 i 个整数表示 $a_i$。   第三行有 m 个整数表示数列 b，第 i 个整数表示 $b_i$。 输出格式 为了避免输出过大，对于每组数据，请你输出一行一个整数，表示数列 a 的每个数在 b 中出现次数的**按位异或和**。 形式化的，设 $a_i$ 在 b 中出现了 $c_i$ 次，则你需要输出 $c_1 \\bigoplus c_2 \\bigoplus \\dots \\bigoplus c_n$ 的值，其中 $\\bigoplus$ 表示按位异或操作。你可以参考提示来完成计算。 输入输出样例 输入样例 #1 1 3 5 1 3 6 1 3 3 5 5 输出样例 #1 3 输入样例 #2 1 9 4 1 2 3 4 5 6 7 8 9 1 1 4 5 输出样例 #2 2 输入样例 #3 2 3 5 1 3 6 1 3 3 5 5 9 4 1 2 3 4 5 6 7 8 9 1 1 4 5 输出样例 #3 3 2 说明 ### 样例 1 解释 - $a_1 = 1$ 在 b 中出现了 1 次。 - $a_2 = 3$ 在 b 中出现了 2 次。 - $a_3 = 6$ 在 b 中出现了 0 次。 故输出为 $1 \\bigoplus 2 = 3$。 ### 样例 2 解释 $1, 4, 5$ 分别在 b 中出现了 $2, 1, 1$ 次，故输出为 $2 \\bigoplus 1 \\bigoplus 1 = 2$。 ### 数据规模与约定 对于全部的测试点，保证： - $1 \\leq T \\leq 10$； - $1 \\leq n, m \\leq 10^7，\\sum (n + m) \\leq  10^7$； - $1 \\leq a_i, b_i < 2^{64}$，且 $a_i < a_{i + 1}，b_i \\leq b_{i + 1}$。 其中 $\\sum (n+m)$ 表示单测试点内所有 n 与 m 的和，即输入数列的总长度不超过 $10^7$。 ### 提示 - 请注意大量数据读入对程序效率造成的影响，选择合适的读入方式，避免超时。 - 请采用合适的数据类型存储变量，避免溢出。 - 如果你不知道什么是按位异或和，可以在你的代码里添加如下的函数： ```cpp template <class T> T getXorSum(T *begin, T *end) {   T ret = 0;   for (T *it = begin; it != end; ++it) ret ^= *it;   return ret; } ``` 这一函数的作用是计算传入数组（包括 `std::vector`）某一左闭右开区间的按位异或和，返回值类型与传入数组的类型相同，调用方法与 `std::sort` 类似，例如，要求数组 a 的 $a_1 \\sim a_n$ 的按位异或和，则调用 `getXorSum(a + 1, a + 1 + n)`，求 $a_0 \\sim a_{n - 1}$ 的按位异或和，则调用 `getXorSum(a, a + n)`。如果 a 是 `std::vector`，则将上述调用代码里的 `a` 均改为 `a.begin()` 即可。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:蚂蚁 题目描述 有许多蚂蚁在一根无限长的木棍上，每一只蚂蚁都有一个初始位置和初始朝向（任意两只蚂蚁的初始位置不同）。蚂蚁们以每秒一个单位的速度向前移动，当两只蚂蚁相遇时，它们会掉头（掉头时间忽略不计）。现给出每只蚂蚁的初始位置和初始朝向，请你计算出它们在 t 秒后的位置和朝向。 输入输出格式 输入格式 第一行，两个空格隔开的整数 $n,t$（代表蚂蚁数 n 和时间 t）。 第 $2\\sim n+1$ 行每行两个整数，第 $i+1$ 行代表第 i 只蚂蚁的初始位置 $a_i$ 及初始朝向 $b_i（b_i=1$ 时蚂蚁朝右，$b_i=-1$ 时蚂蚁朝左）。 输出格式 共 n 行，每行两个整数，第 i 行代表 t 秒后第 i 只蚂蚁的位置及朝向（$-1$ 表示朝左，1 表示朝右，0 表示正在转向中）。 输入输出样例 输入样例 #1 4 1 1 1 5 1 3 -1  10 1 输出样例 #1 2 0 6 1 2 0 11 1 说明 ### 数据范围及约定 - 对于 $40\\%$ 的数据，$1\\le n\\le 100$； - 对于 $80\\%$ 的数据，$1\\le n\\le 10^4，0\\le t\\le 1000$； - 对于 $100\\%$ 的数据，$n\\le 10^5，0\\le t\\le 10^5，|a_i|\\le 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:【模板】最小表示法 题目描述 小敏和小燕是一对好朋友。 他们正在玩一种神奇的游戏，叫 Minecraft。 他们现在要做一个由方块构成的长条工艺品。但是方块现在是乱的，而且由于机器的要求，他们只能做到把这个工艺品最左边的方块放到最右边。 他们想，在仅这一个操作下，最漂亮的工艺品能多漂亮。 两个工艺品美观的比较方法是，从头开始比较，如果第 i 个位置上方块不一样那么谁的瑕疵度小，那么谁就更漂亮，如果一样那么继续比较第 $i+1$ 个方块。如果全都一样，那么这两个工艺品就一样漂亮。 输入输出格式 输入格式 第一行一个整数 n，代表方块的数目。 第二行 n 个整数，每个整数按从左到右的顺序输出方块瑕疵度的值。 输出格式 一行 n 个整数，代表最美观工艺品从左到右瑕疵度的值。 输入输出样例 输入样例 #1 10 10 9 8 7 6 5 4 3 2 1 输出样例 #1 1 10 9 8 7 6 5 4 3 2 说明 - 对于 $20\\%$ 的数据，$n\\le 1000$； - 对于 $40\\%$ 的数据，$n\\le 10^4$； - 对于 $100\\%$ 的数据，$n\\le 3\\times 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:矩形 题目描述 给出平面上的 n 个点，请找出一个边与坐标轴平行的矩形，使得它的边界上有尽量多的点。 输入输出格式 输入格式 第一行一个整数 n，为平面内点的个数。 第 $2\\sim n+1$ 行每行两个整数，为点的横、纵坐标。 输出格式 只有一个数，为所取矩形边界上能包含尽量多的点的个数。 输入输出样例 输入样例 #1 10  2 3  9 2  7 4  3 4  5 7  1 5  10 4  10 6  11 4  4 6  输出样例 #1 7 说明 ### 数据范围及约定 - 对于 $40\\%$ 的数据，$1\\le n\\le 30$； - 对于 $100\\%$ 的数据，$1\\le n\\le 300$，各点的横、纵坐标在 $[1,100]$ 范围内。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:NOI元丹 题目描述 小A打算开始炼 $\\texttt{NOI}$ 元丹（什么鬼），据说吃了可以提高 $\\texttt{NOI}$ 时的成绩。 是这么练的。元丹有三种元核，`N`、`O`、`I`。现有很多个这样原核，按顺序排成一行。炼元丹时，从左往右分别挑出 `N`、`O`、`I` 三个原核吞下。 现在他关心，有几种服用方式……且慢！ 他觉得服用方式太少，以至于不能成仙。所以他可以通过某个途径，得到 `N`、`O`、`I` 的三种原核中的**任意一个**，至于哪一种由他决定。然后他将获得这个原核的插入到这一排原核中的任意位置（包括最前最后）。 现在你要知道，新的元核序列中能有多少种 `N`、`O`、`I` 的取出方式。子串的字母并不要求连续。 输入输出格式 输入格式 第一行，一个整数 N，表示字符串的长度。 第二行，一行字符串，里面只有只有 `N`、`O`、`I` 三种字母。 输出格式 表示出最多可以提炼出来的 $\\texttt{NOI}$ 元丹的方案种数。 输入输出样例 输入样例 #1 5 NOIOI 输出样例 #1 6 说明 样例解释： 他可以获取一个 `N` 元核，加到最前面。 ```plain NNOIOI | NNOIOI | NNOIOI | NNOIOI | NNOIOI | NNOIOI ~ ~~   | ~ ~  ~ | ~   ~~ |  ~~~   |  ~~  ~ |  ~  ~~ ``` 对于 $30\\%$ 的数据 $N \\le 200$。 对于 $50\\%$ 的数据 $N \\le 2000$。 对于 $100\\%$ 的数据 $3 \\le N \\le 10 ^ 5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:“叮铃铃铃”，随着高考最后一科结考铃声的敲响，三年青春时光顿时凝固于此刻。毕业的欣喜怎敌那离别的不舍，憧憬着未来仍毋忘逝去的歌。$1000$ 多个日夜的欢笑和泪水，全凝聚在毕业晚会上，相信，这一定是一生最难忘的时刻！ 题目描述 为了把毕业晚会办得更好，老师想要挑出默契程度最大的 k 个人参与毕业晚会彩排。可是如何挑呢？老师列出全班同学的号数 $1,2,\\ldots ,n$ 并且相信 k 个人的默契程度便是他们的最大公约数（这不是迷信哦~）。这可难为了他，请你帮帮忙吧！ PS：一个数的最大公约数即本身。 输入输出格式 输入格式 两个空格分开的正整数 n 和 k。 输出格式 一个整数，为最大的默契值。 输入输出样例 输入样例 #1 4 2 输出样例 #1 2 说明 对于 $20\\%$ 的数据，$k \\le 2，n \\le 10^3$。 对于另 $30\\%$ 的数据，$k \\le 10，n \\le 100$。 对于 $100\\%$ 的数据，$k \\le 10^9，n \\le 10^9，n \\ge k \\ge 1$（神犇学校，人数众多）。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 瞬间，地面上出现了一个 $n\\times m$ 的巨幅矩阵，矩阵的每个格子上有一坨 $0\\sim k$ 不等量的魔液。 怪物各给了小 a 和 uim 一个魔瓶，说道，你们可以从矩阵的任一个格子开始，每次向右或向下走一步，从任一个格子结束。开始时小 a 用魔瓶吸收地面上的魔液，下一步由 uim 吸收，如此交替下去，并且要求最后一步必须由 uim 吸收。魔瓶只有 k 的容量，也就是说，如果装了 $k+1$ 那么魔瓶会被清空成零，如果装了 $k+2$ 就只剩下 1，依次类推。 怪物还说道，最后谁的魔瓶装的魔液多，谁就能活下来。小 a 和 uim 感情深厚，情同手足，怎能忍心让小伙伴离自己而去呢？沉默片刻，小 a 灵机一动，如果他俩的魔瓶中魔液一样多，不就都能活下来了吗？小 a 和他的小伙伴都笑呆了！ 现在他想知道他们都能活下来有多少种方法。 输入输出格式 输入格式 第一行，三个空格隔开的整数 $n,m,k$。 接下来 n 行，m 列，表示矩阵每一个的魔液量。同一行的数字用空格隔开。 输出格式 一个整数，表示方法数。由于可能很大，输出对 $1,000,000,007$ 取余后的结果。 输入输出样例 输入样例 #1 2 2 3 1 1 1 1 输出样例 #1 4 说明 【题目来源】 lzn 改编 【样例解释】 样例解释：四种方案是：$(1,1)\\to (1,2)，(1,1)\\to (2,1)，(1,2)\\to (2,2)，(2,1)\\to (2,2)$。 【数据范围】 对于 $20\\%$ 的数据，$n,m\\leq 10，k\\leq2$； 对于 $50\\%$ 的数据，$n,m\\leq 100，k\\leq5$； 对于 $100\\%$ 的数据，$1 \\leq n,m\\leq 800，1\\leq k\\leq 15$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 幽暗城的地图是一个 $n \\times m$ 的 $01$ 串。$a_{i, j} = 1$ 时表示 $(i, j)$ 的位置是障碍，无法通过；$a_{i, j} = 1$ 时表示 $(i, j)$ 的位置可以进入。 小 A 与萨尔的初始位置是 $(x_1, y_1)$，而恐惧魔王的初始位置是 $(x_2, y_2)$。小 A 的目标就是到达恐惧魔王的位置。 萨尔会按照一个特定的路线行走，该路线是一个数字串，由 $0 \\sim 4$ 组成。 第 i 秒，若数字串第（$i \\bmod {}$数字串的长度）位等于 0，则表示这一秒萨尔将会原地不动；    等于 1，则表示这一秒萨尔会向上走一格；    等于 2，则表示这一秒萨尔会向下走一格；    等于 3，则表示这一秒萨尔会向左走一格；    等于 4，则表示这一秒萨尔会向右走一格。 若萨尔将要移动的位置是墙或者超出迷宫的范围，则萨尔会原地不动。恐惧魔王也是这样。（换句话说，你可以认为如果将数字串是重复无限次，第 i 秒就是字符串第 i 位） 小A每秒可以选择从上下左右四个方向中选择一个方向，朝那个方向走一格，前提是那个位置不是墙并且没有超出迷宫的范围；或者原地不动。不过，由于幽暗城的诡异环境，小 A 只能持续脱离萨尔的光环 s 秒，若超过 s 秒小 A 则会死亡。光环的有效半径为 d ，表示当小 A 与萨尔之间的距离 $\\sqrt{(x-xx)^2+(y-yy)^2}$ 小于等于 d 时小 A 才能受到萨尔光环的效果。若小 A 脱离萨尔的光环又重新进入光环有效区域，则再次离开光环时持续时间归零重记。 小 A 想知道最少需要几秒他才能到达恐惧魔王所在的位置。 输入输出格式 输入格式 第一行四个数 $n,m,s,d$。 接下来的 n 行，每行 m 个数（0 或 1），之间没有空格，表示幽暗城的地图。 接下来的一行四个整数，$x_1,y_1,x_2,y_2（1 \\le x_1,x_2 \\le n，1 \\le y_1,y_2 \\le m$）。 接下来的一行是一个数字串，表示萨尔的移动方式。 接下来的一行是一个数字串，表示恐惧魔王的移动方式。 输出格式 一行一个整数，表示需要最少的时间。 输入输出样例 输入样例 #1 3 4 7 3 1010 0000 0101 1 2 3 3 0132401 12131 输出样例 #1 3 说明 **【题目来源】** kiro 原创 **【数据范围】** 对于 $100\\%$ 的数据，$1 \\le n,m \\le 50，0 \\le s \\le 1000，0 \\le d \\le 100，1 \\le $ 数字串长度 $ \\le 100，0 \\le $ 答案 $ \\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小猫 题目描述 有 $2n$ 只小猫站成一圈，主人小明想把它们两两之间用绳子绑住尾巴连在一起。同时小明是个完美主义者，不容许看到有两根绳子交叉。请问小明有几种连线方案，可以把让所有小猫两两配对？ 方案数很大，仅需输出方案数模 $10^9+7$（一个质数）的值。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO05MAR] Yogurt factory 机器工厂 题目描述 小 T 开办了一家机器工厂，在 N个星期内，原材料成本和劳动力价格不断起伏，第 i 周生产一台机器需要花费 $C_i$ 元。若没把机器卖出去，每保养一台机器，每周需要花费 S 元，这个费用不会发生变化。 机器工厂接到订单，在第 i 周需要交付 $Y_i$ 台机器给委托人，第 i 周刚生产的机器，或者之前的存货，都可以进行交付。 请你计算出这 n 周时间内完成订单的最小代价。 输入输出格式 输入格式 第一行输入两个整数 N 和 S，接下来 N 行每行两个数 $C_i$ 和 $Y_i$。 输出格式 输出一个整数，表示最少的代价。 输入输出样例 输入样例 #1 4 5 88 200 89 400 97 300 91 500 输出样例 #1 126900 说明 $1\\leq n\\leq 10^4，1 \\le C_i \\le 5000，1 \\le S\\le 100，0\\le Y_i\\le 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[TJOI2011] 树的序 题目描述 众所周知，二叉查找树的形态和键值的插入顺序密切相关。准确的讲：  1. 空树中加入一个键值 k，则变为只有一个结点的二叉查找树，此结点的键值即为 k。 2. 在非空树中插入一个键值 k，若 k 小于其根的键值，则在其左子树中插入 k，否则在其右子树中插入 k。 我们将一棵二叉查找树的键值插入序列称为树的生成序列，现给出一个生成序列，求与其生成同样二叉查找树的所有生成序列中字典序最小的那个，其中，字典序关系是指对两个长度同为 n 的生成序列，先比较第一个插入键值，再比较第二个，依此类推。 输入输出格式 输入格式 第一行，一个整数 n，表示二叉查找树的结点个数。第二行，有 n 个正整数 $k_1, k_2, \\cdots,k_n$，表示生成序列，简单起见，$k_1 \\sim k_n$ 为一个 1 到 n 的排列。 输出格式 一行，n 个正整数，为能够生成同样二叉查找数的所有生成序列中最小的。 输入输出样例 输入样例 #1 4 1 3 4 2 输出样例 #1 1 3 2 4 说明 ### 数据范围及约定 - 对于 $20\\%$ 的数据， $1\\le n ≤ 10$。 - 对于 $50\\%$ 的数据， $1\\le n ≤ 100$。 - 对于 $100\\%$ 的数据， $1\\le n ≤ 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:油滴扩展 题目描述 在一个长方形框子里，最多有 N 个相异的点，在其中任何一个点上放一个很小的油滴，那么这个油滴会一直扩展，直到接触到其他油滴或者框子的边界。必须等一个油滴扩展完毕才能放置下一个油滴。那么应该按照怎样的顺序在这 N 个点上放置油滴，才能使放置完毕后所有油滴占据的总面积最大呢？（不同的油滴不会相互融合） 注：圆的面积公式 $S = \\pi r^2$，其中 r 为圆的半径。 输入输出格式 输入格式 第一行，一个整数 N。 第二行，四个整数 $x, y, x', y'$，表示长方形边框一个顶点及其对角顶点的坐标。 接下来 N 行，第 i 行两个整数 $x_i, y_i$，表示盒子内第 i 个点的坐标。 输出格式 一行，一个整数，长方形盒子剩余的最小空间（结果四舍五入输出）。 输入输出样例 输入样例 #1 2 20 0 10 10 13 3 17 7 输出样例 #1 50 说明 对于 $100\\%$ 的数据，$1 \\le N \\le 6$，坐标范围在 $[-1000, 1000]$ 内。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:单词背诵 题目描述 灵梦有 n 个单词想要背，但她想通过一篇文章中的一段来记住这些单词。 文章由 m 个单词构成，她想在文章中找出连续的一段，其中包含最多的她想要背的单词（重复的只算一个）。并且在背诵的单词量尽量多的情况下，还要使选出的文章段落尽量短，这样她就可以用尽量短的时间学习尽可能多的单词了。 输入输出格式 输入格式 第 1 行一个数 n，接下来 n 行每行是一个长度不超过 $10$ 的字符串，表示一个要背的单词。 接着是一个数 m，然后是 m 行长度不超过 $10$ 的字符串，每个表示文章中的一个单词。 输出格式 输出文件共 2 行。第 1 行为文章中最多包含的要背的单词数，第 2 行表示在文章中包含最多要背单词的最短的连续段的长度。 输入输出样例 输入样例 #1 3  hot  dog  milk  5  hot  dog  dog  milk  hot  输出样例 #1 3  3  说明 ### 数据规模与约定 - 对于 $30\\%$ 的数据，$n \\le 50，m \\le 500$； - 对于 $60\\%$ 的数据，$n \\le 300，m \\le 5000$； - 对于 $100\\%$ 的数据，$n \\le 1000，m \\le 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:高级打字机 题目描述 早苗入手了最新的高级打字机。最新款自然有着与以往不同的功能，那就是它具备撤销功能，厉害吧。 请为这种高级打字机设计一个程序，支持如下 3 种操作： 1. `T x`：Type 操作，表示在文章末尾打下一个小写字母 x。 2. `U x`：Undo 操作，表示撤销最后的 x 次修改操作。 3. `Q x`：Query 操作，表示询问当前文章中第 x 个字母并输出。请注意 Query 操作并不算修改操作。 文章一开始可以视为空串。 输入输出格式 输入格式 第 1 行：一个整数 n，表示操作数量。 以下 n 行，每行一个命令。保证输入的命令合法。 输出格式 每行输出一个字母，表示 Query 操作的答案。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:幸运数与排列 题目描述 一个数是幸运数当且仅当这个数仅由 4 和 7 构成，比如 $47，744，4747$。 询问在 1 到 n 的全排列中字典序第 k 小的排列中，有多少个幸运数在排列中的位置编号也是幸运数。 输入输出格式 输入格式 一行，包含两个整数 n，k。 输出格式 一个整数表示答案。如果不存在第 k 小的排列，则输出 $-1$。 输入输出样例 输入样例 #1 7 4 输出样例 #1 1 输入样例 #2 4 7 输出样例 #2 1 说明 #### 样例 1 解释 排列为 $1,2,3,4,6,7,5$。 #### 样例 2 解释 排列为：$2,1,3,4$。 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $n\\le 8$。 - 对于 $60\\%$ 的数据，保证 $n\\le 100$。 - 对于 $100\\%$ 的数据，保证 $1 \\leq n,k\\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:密令 题目描述 给定一小写字母串 s，每次操作你可以选择一个 p（$1 \\leq p \\lt |s|$）执行下述修改中的任意一个： 1. 将 $s_p$ 改为其字典序 $+1$ 的字母，将 $s_{p+1}$ 改为其字典序 $-1$ 的字母； 2. 将 $s_p$ 改为其字典序 $-1$ 的字母，将 $s_{p+1}$ 改为其字典序 $+1$ 的字母。 在经过任意多次操作后，串 s 能变化成多少种字符串？ 修改过程中必须保证 s 是合法的小写字母串（即不能对字母 a 进行字典序 $-1$ 的操作），答案对 $10^9 + 7$ 取模。 输入输出格式 输入格式 第一行一个整数 T，表示数据组数 接下来 T 行，每行一个小写字母串 s。 输出格式 输出 T 行，每行一个整数表示答案。 输入输出样例 输入样例 #1 3 aaaaaaaaa ya klmbfxzb 输出样例 #1 0 24 320092793 说明 - 对于 $30\\%$ 的数据，$T=1，|s| \\leq 10$； - 对于 $60\\%$ 的数据，$T \\leq 10$； - 对于 $100\\%$ 的数据，$T \\leq 10000，1 \\leq |s| \\leq 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:座位安排 题目描述 给 n 个人安排座位，先给每个人一个 $1\\sim n$ 的编号，设第i个人的编号为 $a_i$（不同人的编号可以相同），接着从第一个人开始，大家依次入座。 第 i 个人来了以后尝试坐到 $a_i$，如果 $a_i$ 被占据了，就尝试 $a_{i+1}，a_{i+1}$ 也被占据了的话就尝试 $a_{i+2}$，……，如果一直尝试到第 n 个都不行，该安排方案就不合法。 然而有 m 个人的编号已经确定（他们或许贿赂了你的上司…)，你只能安排剩下的人的编号。求有多少种合法的安排方案。由于答案可能很大，只需输出其除以 M 后的余数即可。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最大正方形 题目描述 在一个 $n\\times m$ 的只包含 0 和 1 的矩阵里找出一个不包含 0 的最大正方形，输出边长。 输入输出格式 输入格式 输入文件第一行为两个整数 $n,m(1\\leq n,m\\leq 100)$，接下来 n 行，每行 m 个数字，用空格隔开，0 或 1。 输出格式 一个整数，最大正方形的边长。 输入输出样例 输入样例 #1 4 4 0 1 1 1 1 1 1 0 0 1 1 0 1 1 0 1 输出样例 #1 2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:算式 题目描述 给出 n 个数字，不改变它们的相对位置，在中间加入 k 个乘号和 $(n-k-1)$ 个加号，括号随便加，使最终结果尽量大。因为乘号和加号一共就是 $n-1$ 个了，所以恰好每两个相邻数字之间都有一个符号。例如： $n=5，k=2，5$ 个数字分别为 1，2，3，4，5，可以加成： $$1\\times 2\\times(3+4+5)=24$$ $$1\\times(2+3)\\times(4+5)=45$$ $$(1\\times2+3)\\times(4+5)=45$$ $$\\ldots\\ldots$$ 输入输出格式 输入格式 输入的第一行为两个用空格隔开的整数，分别表示表示 n 和 k。 第二行为 n 个用空格隔开的整数 $a_i$，代表给出的数字。 输出格式 输出文件仅一行包含一个整数，表示要求的最大的结果。 输入输出样例 输入样例 #1 5 2 1 2 3 4 5 输出样例 #1 120 说明 #### 数据规模与约定 - 对于 $100\\%$ 的数据，保证 $2\\le n\\le15，0\\le k\\lt n，0 \\leq a_i \\leq 9$，答案小于 $2^{31}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:一个关于序列的游戏【数据疑似有误】 题目描述 有一个序列，你可以在上面删除符合要求的连续段若干次。每次删除都会得到连续段长度对应的分数。 需要符合的要求为： 1. 相邻两个元素相差为 1。 2. 如果某个元素不在连续段的最左或最右，那么这个元素就不能同时小于相邻的左右两个元素。 $[1,2,3,4,3],[1,2],[3,2],[3]$ 都符合条件。 显然，删除掉连续段后，这个段的左边和右边并在一起成为相邻元素。 你的任务是对于给出的序列，计算出可能获得的最大总分。 输入输出格式 输入格式 第一行一个整数 N，表示序列长度。 第二行 N 个数，$V_1,V_2 \\cdots V_N$，代表每个长度对应的分数。 第三行 N 个数，$A_1,A_2 \\cdots A_N$，代表初始序列的每个元素。 输出格式 一个数，可以获得的最大总分。 输入输出样例 输入样例 #1 6 -100 5 6 10 0 0 3 1 2 3 4 10 输出样例 #1 11 说明 ### 数据范围及约定 - 对于 $10\\%$ 的数据 $,N \\le 3$； - 对于 $40\\%$ 的数据 $,N \\le 10$； - 对于 $70\\%$ 的数据 $,N \\le 70$； - 对于 $100\\%$ 的数据 $,1 \\le N \\le 150，-10000 \\le V_i \\le 10000，0 \\le A_i \\le 1000000000$。相同的 $A_i$ 不会超过 7 个。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 给定 n，求 $$\\sum_{i = 1}^n \\sum_{j = i + 1}^n \\gcd(i, j)$$ 其中 $\\gcd(i, j)$ 表示 i 和 j 的最大公约数。 输入输出格式 输入格式 输入只有一行一个整数，表示 n。 输出格式 输出一行一个整数表示答案。 输入输出样例 输入样例 #1 10 输出样例 #1 67 说明 #### 数据规模与约定 - 对于 $40\\%$ 的数据，保证 $n \\leq 2 \\times 10^3$。 - 对于 $100\\%$ 的数据，保证 $2 \\leq n \\leq 2 \\times 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:方阵安排 题目描述 A 班希望在学校的行军比赛中取得一个好成绩，他们希望自己班级的行军方阵是一个完美的方阵。他们认为，如果每个人四周的男生个数为偶数，那么这就是一个完美的方阵。 现在你已知道 A 班现有的方阵，你需要把尽量少的女生改成男生，使这个方阵变成一个完美的方阵。 输入输出格式 输入格式 输入的第一行是一个正整数 n，表示方阵大小为 $n \\times n$ 。 第 2 到第 $(n+1)$ 行，每行 n 个数非零即一的数字，第 $(i + 1)$ 行的第 j 个数字代表方阵第 i 行第 j 列的人的性别，其中 0 为女生，1 为男生。 输出格式 输出一个数，表示最少需要把女生改成男生的个数。若无解，输出 $-1$。 输入输出样例 输入样例 #1 3 0 0 0 1 0 0 0 0 0 输出样例 #1 3 说明 #### 输入输出样例 1 解释 将方阵改为 ``` 0 1 0 1 0 1 0 1 0 ``` --- #### 数据规模与约定 对于 $40\\%$ 的数据，保证 $n \\leq 6$。 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 18$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:取数 题目描述 在一个 n 行 m 列的数阵中，你须在每一行取一个数（共 n 个数），并将它们相加得到一个和。对于给定的数阵，请你输出和前 k 小的取数方法。 输入输出格式 输入格式 第一行，三个数 $n,m,k$。 第 $2\\sim n+1$ 行，每行 m 个正整数。 输出格式 一行共 k 个数，代表在每一行取一个数前 k 小的加和。 输入输出样例 输入样例 #1 3 3 2 1 2 3 6 3 5 4 1 2 输出样例 #1 5 6 说明 对于 $20\\%$ 的数据，$1\\le n\\le 8$。 对于 $100\\%$ 的数据，$1\\le n\\le 800，1\\le k\\le m\\le 800$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Mivik 现在已经写好了他的书，他现在准备给这本书起个书名去投稿。 题目描述 由于 Mivik 写书是乱敲键盘敲出来的，他准备对书名干同样的事情。Mivik 的键盘上有 m 个不同的按键，对应着 m 个不同的字符。Mivik 决定在这个键盘上**等概率**随机敲 n 次敲出标题。但出于某些原因，Mivik 希望书名中要包含有一个人的名字 S。于是 Mivik 来问你，他随机敲出的标题有多大的概率包含有这个名字。 同样的，Mivik 并不喜欢奇形怪状的小数，所以你只需要输出这个概率对 $998244353$ 取模后的值。 输入输出格式 输入格式 第一行三个整数 n、m、$|S|$，其中 $|S|$ 代表这个名字的长度。 第二行给出 $|S|$ 个整数 $a_i$，代表这个名字。 输出格式 一行一个整数，代表概率对 $998244353$ 取模后的值。 输入输出样例 输入样例 #1 3 2 2 1 1 输出样例 #1 623902721 输入样例 #2 6 3 4 1 2 3 2 输出样例 #2 480636170 说明 ### 样例解释 样例一：为方便描述，我们定义键盘上两个按键为 `a` 和 `b`。那么长度为 3 的所有字符串共有 `aaa`、`aab`、`aba`、`abb`、`baa`、`bab`、`bba`、`bbb` 这 8 个，其中包含有指定名字 `aa` 的共有 `aaa`、`aab`、`baa` 这三个，则概率为 $\\frac{3}{8}$，取模后得到 623902721。 ### 数据范围 对于全部数据，有 $1\\le |S|\\le 10^5，|S|\\le n\\le |S|+10^5，1\\le m\\le 10^8$。 Subtask 1 (5 pts)：满足 $m=1$。 Subtask 2 (20 pts)：满足 $1\\le n, m\\le 250$。 Subtask 3 (30 pts)：满足 $1\\le n, m\\le 5000$。 Subtask 3 (45 pts)：无特殊限制。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:山上的国度 题目描述 有一个神秘的小国坐落在南方的青山之上，只有当黄昏时，落日耀眼的余晖刺破薄雾的遮拦，有机缘者才可看到小山上面的 n 个美丽的村庄。 传说这个古老的国家里有 m 条枢纽管道，每一条苍老的管道连接着两个村庄，千百年来为村民提供水源的流通。 n 个村庄里只有一个水库，从有水库的村庄通过这些枢纽管道向其它村庄提供水源。大家都明白水往低处流，所有村庄都能得到水库的供水。 黄小明就是那个有机缘者，同时他也是个偏执狂（把小猫绑在一起的那个变态小明），他迫切的想要知道水库应该在哪一个村庄，你能帮他解决疑惑吗？ 输入输出格式 输入格式 第一行输入 $n,m（n,m \\leq 300$）。 第二行输入 n 个正整数，第 i 个数表示第 i 个村庄的海拔。之后 m 行每行两个数表示这两个村庄之间有一条道路。（同海拔之间不能相互流水） 输出格式 若存在这样的村庄，输出两行：第一行为 `Oui, j'ai trouve la solution.`，第二行为村庄的编号。 否则，请输出 `Non`。 输入输出样例 输入样例 #1 4 2 1 2 3 4 1 2 3 4 输出样例 #1 Non"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:会议 题目描述 有一个村庄居住着 n 个村民，有 $n-1$ 条路径使得这 n 个村民的家联通，每条路径的长度都为 1。现在村长希望在某个村民家中召开一场会议，村长希望所有村民到会议地点的距离之和最小，那么村长应该要把会议地点设置在哪个村民的家中，并且这个距离总和最小是多少？若有多个节点都满足条件，则选择节点编号最小的那个点。 输入输出格式 输入格式 第一行，一个数 n，表示有 n 个村民。 接下来 $n-1$ 行，每行两个数字 a 和 b，表示村民 a 的家和村民 b 的家之间存在一条路径。 输出格式 一行输出两个数字 x 和 y。 x 表示村长将会在哪个村民家中举办会议。 y 表示距离之和的最小值。 输入输出样例 输入样例 #1 4 1 2  2 3  3 4  输出样例 #1 2 4 说明 #### 数据范围 对于 $70\\%$ 数据 $n \\le 10^3$。 对于 $100\\%$ 数据 $n \\le 5 \\times 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:“咚咚咚……”“查水表！”原来是查水表来了，现在哪里找这么热心上门的查表员啊！小明感动得热泪盈眶，开起了门…… 题目描述 妈妈下班回家，街坊邻居说小明被一群陌生人强行押上了警车！妈妈丰富的经验告诉她小明被带到了 t 区，而自己在 s 区。 该市有 m 条大道连接 n 个区，一条大道将两个区相连接，每个大道有一个拥挤度。小明的妈妈虽然很着急，但是不愿意拥挤的人潮冲乱了她优雅的步伐。所以请你帮她规划一条从 s 至 t 的路线，使得经过道路的拥挤度最大值最小。 输入输出格式 输入格式 第一行有四个用空格隔开的 n，m，s，t，其含义见【题目描述】。 接下来 m 行，每行三个整数 $u, v, w$，表示有一条大道连接区 u 和区 v，且拥挤度为 w。 **两个区之间可能存在多条大道**。 输出格式 输出一行一个整数，代表最大的拥挤度。 输入输出样例 输入样例 #1 3 3 1 3 1 2 2 2 3 1 1 3 3 输出样例 #1 2 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $n\\leq 10$。 - 对于 $60\\%$ 的数据，保证 $n\\leq 100$。 - 对于 $100\\%$ 的数据，保证 $1 \\leq n\\leq 10^4，1 \\leq m \\leq 2 \\times 10^4，w \\leq 10^4，1 \\leq s, t \\leq n$。且从 s 出发一定能到达 t 区。 ---  #### 样例输入输出 1 解释 小明的妈妈要从 1 号点去 3 号点，最优路线为 1->2->3。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2013] 矩阵游戏 题目描述 婷婷是个喜欢矩阵的小朋友，有一天她想用电脑生成一个巨大的 n 行 m 列的矩阵（你不用担心她如何存储）。她生成的这个矩阵满足一个神奇的性质：若用 $F[i,j]$ 来表示矩阵中第 i 行第 j 列的元素，则 $F[i,j]$ 满足下面的递推式: $$\\begin{aligned} F[1, 1] &= 1 \\\\ F[i, j] &=a\\times F[i, j-1]+b, &j\\neq 1 \\\\ F[i, 1] &=c\\times F[i-1, m]+d, &i\\neq 1 \\\\ \\end{aligned}$$ 递推式中 $a,b,c,d$ 都是给定的常数。 现在婷婷想知道 $F[n,m]$ 的值是多少，请你帮助她。由于最终结果可能很大，你只需要输出 $F[n,m]$ 除以 $10^9+7$ 的余数。 输入输出格式 输入格式 包含一行有六个整数 $n,m,a,b,c,d$。意义如题所述。 输出格式 包含一个整数，表示 $F[n,m]$ 除以 $10^9+7$ 的余数。 输入输出样例 输入样例 #1 3 4 1 3 2 6 输出样例 #1 85 说明 【样例1说明】 样例中的矩阵为： $$\\begin{pmatrix}  1 &  4 &  7 & 10 \\\\ 26 & 29 & 32 & 35 \\\\ 76 & 79 & 82 & 85 \\\\ \\end{pmatrix}$$ ### 数据范围 | 测试点编号 | 数据范围 | | :-: | :-: | | 1 | $1 \\le n,m \\le 10；1 \\le a,b,c,d \\le 1000$ | | 2 | $1 \\le n,m \\le 100；1 \\le a,b,c,d \\le 1000$ | | 3 | $1 \\le n,m \\le 10^3；1 \\le a,b,c,d \\le 10^9$ | | 4 | $1 \\le n,m \\le 10^3；1 \\le a,b,c,d \\le 10^9$ | | 5 | $1 \\le n,m \\le 10^9；1 \\le a = c \\le 10^9；1 \\le b = d \\le 10^9$ | | 6 | $1 \\le n,m \\le 10^9；a = c = 1；1 \\le b,d \\le 10^9$ | | 7 | $1 \\le n,m,a,b,c,d \\le 10^9$ | | 8 | $1 \\le n,m,a,b,c,d \\le 10^9$ | | 9 | $1 \\le n,m,a,b,c,d \\le 10^9$ | | 10 | $1 \\le n,m,a,b,c,d \\le 10^9$ | | 11 | $1 \\le n,m \\le 10^{1\\,000}；a = c = 1；1 \\le b,d \\le 10^9$ | | 12 | $1 \\le n,m \\le 10^{1\\,000}；1 \\le a = c \\le 10^9；1 \\le b = d \\le 10^9$ | | 13 | $1 \\le n,m \\le 10^{1\\,000}；1 \\le a,b,c,d \\le 10^9$ | | 14 | $1 \\le n,m \\le 10^{1\\,000}；1 \\le a,b,c,d \\le 10^9$ | | 15 | $1 \\le n,m \\le 10^{20\\,000}；1 \\le a,b,c,d \\le 10^9$ | | 16 | $1 \\le n,m \\le 10^{20\\,000}；1 \\le a,b,c,d \\le 10^9$ | | 17 | $1 \\le n,m \\le 10^{1\\,000\\,000}；a = c = 1；1 \\le b,d \\le 10^9$ | | 18 | $1 \\le n,m \\le 10^{1\\,000\\,000}；1 \\le a = c \\le 10^9；1 \\le b = d \\le 10^9$ | | 19 | $1 \\le n,m \\le 10^{1\\,000\\,000}；1 \\le a,b,c,d \\le 10^9$ | | 20 | $1 \\le n,m \\le 10^{1\\,000\\,000}；1 \\le a,b,c,d \\le 10^9$ |"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:题意翻译 ### 题目描述： 假设 k 大于 1， 可以证明有无穷多个正整数三元组 $(a, b, c)$ 满足以下方程:    $a^2 + b^2 + c^2 = k(ab + bc + ca) + 1$      给定正整数 n 和 k，找出 n 个三元组 $(a_1, b_1, c_1), (a_2, b_2, c_2), ⋯ ,(a_n, b_n, c_n)$ 使它们都满足方程。另外，这 $3n$ 个正整数 $(a_1, b_1, c_1), (a_2, b_2, c_2), ⋯ ,(a_n, b_n, c_n)$ 应该是不同的，每个数最多有 $100$ 位。 ### 输入格式： 第一行包含两个整数： 方程中的常数 k 和  所求三元组的数量 n $(2 ≤ k ≤ 1000, 1 ≤ n ≤ 1000)$; ### 输出格式： 输出有 n 行。第 i 行应该包含三个空格分隔的正整数 $ai$, $bi$ 和 $ci$， 为你找到的第 i 个解。每个数最多 $100$ 位。 题目描述 Given an integer k greater than 1, it is possible to prove that there are infinitely many triples of positive integers $(a, b, c)$ that satisfy the following equation: $$a^2+b^2+c^2=k(ab+bc+ca)+1$$ Given positive integers n and k, find n arbitrary triples $(a_1, b_1, c_1), (a_2, b_2, c_2), \\cdots , (a_n, b_n, c_n)$ that all satisfy the equation. Furthermore, all $3n$ integers $(a_1, b_1, c_1), (a_2, b_2, c_2), \\cdots , (a_n, b_n, c_n)$ should be different positive integers with at most $100$ decimal digits each. 输入输出格式 输入格式 The first line contains two integers k and $n\\;(2 \\leq k \\leq 1000, 1 \\leq n \\leq 1000)$ — the constant k in the equation and the target number of triples. 输出格式 Output n lines. The i-th line should contain three space separated integers $a_i$, $b_i$ and $c_i$ with at most $100$ digits each — the i-th of the solutions you found. 输入输出样例 输入样例 #1 2 8 输出样例 #1 1 2 6 3 10 24 12 35 88 15 28 84 4 5 18 14 33 90 40 104 273 21 60 152 输入样例 #2 3 3 输出样例 #2 1 3 12 8 21 87 44 165 615"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:酒店之王 题目描述 XX 酒店的老板想成为酒店之王，本着这种希望，第一步要将酒店变得人性化。由于很多来住店的旅客有自己喜好的房间色调、阳光等，也有自己所爱的菜，但是该酒店只有 p 间房间，一天只有固定的 q 道不同的菜，每个房间只能住一位客人，每道菜也只能给一位客人食用。 有一天来了 n 个客人，每个客人说出了自己喜欢哪些房间，喜欢哪道菜。但是很不幸，可能做不到让所有顾客满意（满意的条件是住进喜欢的房间且吃到喜欢的菜）。 要怎么分配，能使最多顾客满意呢？ 输入输出格式 输入格式 第一行给出三个整数，分别表示表示 $n,p,q$。 之后 n 行，每行 p 个整数，只可能是 0 或 1，第 i 行第 j 个数表示第 i 个人喜不喜欢第 j 个房间（1 表示喜欢， 0 表示不喜欢）。 之后 n 行，每行 q 个整数，只可能是 0 或 1，第 i 行第 j 个数表示第 i 个人喜不喜欢第 j 道菜（1 表示喜欢， 0 表示不喜欢）。 输出格式 最大的顾客满意数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[AHOI2005] 约数研究 题目描述 科学家们在 Samuel 星球上的探险得到了丰富的能源储备，这使得空间站中大型计算机 Samuel II 的长时间运算成为了可能。由于在去年一年的辛苦工作取得了不错的成绩，小联被允许用 Samuel II 进行数学研究。 小联最近在研究和约数有关的问题，他统计每个正数 N 的约数的个数，并以 $f(N)$ 来表示。例如 $12$ 的约数有 $1,2,3,4,6,12$，因此 $f(12)=6$。下表给出了一些 $f(N)$ 的取值： | N    | 1  | 2  | 3  | 4  | 5  | 6  | | ------ | ---- | ---- | ---- | ---- | ---- | ---- | | $f(N)$ | 1  | 2  | 2  | 3  | 2  | 4  | 现在请你求出： $$ \\sum_{i=1}^n f(i) $$ 输入输出格式 输入格式 输入一个整数 n。 输出格式 输出答案。 输入输出样例 输入样例 #1 3 输出样例 #1 5 说明 - 对于 $20\\%$ 的数据，$N \\leq 5000$； - 对于 $100\\%$ 的数据，$1 \\leq N \\leq 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:平均数 题目描述 给一个长度为 n 的数列，我们需要找出该数列的一个子串，使得子串平均数最大化，并且子串长度 $\\ge m$。 输入输出格式 输入格式 第一行两个整数 n 和 m。 接下来 n 行，每行一个整数 $a_i$，表示序列第 i 个数字。 输出格式 一个整数，表示最大平均数的 $1000$ 倍，如果末尾有小数，直接舍去，不要用四舍五入求整。 输入输出样例 输入样例 #1 10 6 6 4 2 10 3 8 5 9 4 1 输出样例 #1 6500 说明 #### 数据规模与约定 - 对于 $60\\%$ 的数据，保证 $m\\le n\\le 10^4$； - 对于 $100\\%$ 的数据，保证 $1 \\leq m\\le n\\le 10^5，0\\le a_i\\le2000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:苦恼的小明 题目描述 黄小明和他的合伙人想要创办一所英语培训机构，注册的时候要填一张个人情况的表格，在身高一栏小明犯了愁。 身高要求精确到厘米，但小明实在太高了，无法在纸上填下这么长的数字。小明花钱买通了办事人员，于是只要写上他的身高模 $10007$ 的结果就行了。 可小明不会取模，想起前几天请你帮他解决了水库的问题，于是又来找你帮忙。 输入输出格式 输入格式 小明的身高用 $a_1^{a_2^{\\cdots^{a_n}}}$ 表示，第一行输入 n，第二行输入 n 个正整数表示 $a_1$ 至 $a_n$。 输出格式 一个数字表示小明身高 $\\bmod 10007$的值。 输入输出样例 输入样例 #1 2            17 747 输出样例 #1 173 说明 所有的 $0\\le a_i<10^4$。 第 $1 \\sim 6$ 数据点满足 $n=2$。 第 $7 \\sim 10$ 数据点满足 $n=3$。 第 $11$ 个数据点满足 $n=1234567$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[国家集训队] 稳定婚姻 题目描述 我们已知 n 对夫妻的婚姻状况，称第 i 对夫妻的男方为 $B_i$，女方为 $G_i$。若某男 $B_i$ 与某女 $G_j$ 曾经交往过（无论是大学，高中，亦或是幼儿园阶段，$i \\le j$），则当某方与其配偶（即 $B_i$ 与 $G_i$ 或 $B_j$ 与 $G_j$）感情出现问题时，他们有私奔的可能性。不妨设 $B_i$ 和其配偶 $G_i$ 感情不和，于是 $B_i$ 和 $G_j$ 旧情复燃，进而 $B_j$ 因被戴绿帽而感到不爽，联系上了他的初恋情人 $Gk$ ……一串串的离婚事件像多米诺骨牌一般接踵而至。若在 $B_i$ 和 $G_i$ 离婚的前提下，这 $2n$ 个人最终依然能够结合成 n 对情侣，那么我们称婚姻 i 为不安全的，否则婚姻 i 就是安全的。 给定所需信息，你的任务是判断每对婚姻是否安全。 输入输出格式 输入格式 第一行为一个正整数 n，表示夫妻的对数； 以下 n 行，每行包含两个字符串，表示这 n 对夫妻的姓名（先女后男），由一个空格隔开； 第 $n+2$ 行包含一个正整数 m，表示曾经相互喜欢过的情侣对数； 以下 m 行，每行包含两个字符串，表示这 m 对相互喜欢过的情侣姓名（先女后男），由一个空格隔开。 输出格式 输出文件共包含 n 行，第 i 行为 `Safe`（如果婚姻 i 是安全的）或 `Unsafe`（如果婚姻 i 是不安全的）。 输入输出样例 输入样例 #1 2 Melanie Ashley Scarlett Charles 1 Scarlett Ashley 输出样例 #1 Safe Safe 输入样例 #2 2 Melanie Ashley Scarlett Charles 2 Scarlett Ashley Melanie Charles 输出样例 #2 Unsafe Unsafe 说明 对于 $20\\%$ 的数据，$n \\le 20$； 对于 $40\\%$ 的数据，$n \\le 100，m \\le 400$； 对于 $100\\%$ 的数据，所有姓名字符串中只包含英文大小写字母，大小写敏感，长度不大于 8，保证每对关系只在输入文件中出现一次，输入文件的最后 m 行不会出现未在之前出现过的姓名，这 $2n$ 个人的姓名各不相同，$1 \\le n \\le 4000，0 \\le m \\le 20000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:互质数列sequence 题目描述 一个数列有 n 个数字，我们定义一种操作：我们可以将相邻两个数字同时除以它们的一个公约数，这个操作所花费的代价为作为除数的这个公约数的值。我们经过若干次这样操作，可以将原数列变为相邻的数对都互质的数列。问达成要求的最小代价。 输入输出格式 输入格式 第一行一个正整数 n。 接下来 n 行，每行一个整数，依次表示数列中的每个数字。 输出格式 输出最小代价。 输入输出样例 输入样例 #1 3 3 12 6 输出样例 #1 5 说明 - $30\\%$ 数据满足 $n \\leq 20$； - $100\\%$ 数据满足 $1 \\leq n \\leq 10000$，数列中的数字 $1\\le A_i \\leq 2 \\times 10^7$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:骰子 题目描述 n 个人排成一排，你排在第 m 个。 每轮队首的人投一次骰子。 - 若掷到 1，则队首的人获胜。 - 若掷到 $2,4,6$，则队首的人排到队尾。 - 若掷到 $3,5$，则队首的人出队。 若队列中仅剩一人，则该人获胜，求你获胜的概率。 输入输出格式 输入格式 一行两个整数 $n,m$。 输出格式 一个实数表示获胜概率，精确到小数点后 9 位。 输入输出样例 输入样例 #1 2 1 输出样例 #1 0.444444444 说明 - 对于 $30\\%$ 的数据，$0<m\\le n\\le 10$。 - 对于 $100\\%$ 的数据，$0<m\\le n\\le 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:子序列 题目描述 给定一个长度为 N（N 为偶数）的序列，问能否将其划分为两个长度为 $N / 2$ 的严格递增子序列。 输入输出格式 输入格式 若干行，每行表示一组数据。 对于每组数据，首先输入一个整数 N，表示序列的长度。之后 N 个整数表示这个序列。 输出格式 输出行数与输入行数相同。 对于每组数据，如果存在一种划分，则输出 `Yes!`，否则输出`No!`。 输入输出样例 输入样例 #1 6 3 1 4 5 8 7  6 3 2 1 6 5 4  输出样例 #1 Yes!  No!  说明 **【数据范围】** 共三组数据，每组数据行数<=50，0 <= 输入的所有数 <= 10^9 第一组(30%)：N <= 20 第二组(30%)：N <= 100 第三组(40%)：N <= 2000"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:L 发明了一种与树有关的游戏。 题目描述 他从树中删除任意数量（可以为 0）的边，计算删除后所有连通块大小的乘积，L 将得到这么多的分数。 你的任务就是对于一颗给定的树，求出 L 能得到的最大分数。 输入输出格式 输入格式 第一行一个整数 n，表示树的节点个数。 接下来 $(n-1)$ 行，每行两个整数 $u, v$，代表存在一条连接 $u, v$ 的边。 输出格式 输出一行一个整数，表示 L 能得到的最大分数。 输入输出样例 输入样例 #1 5 1 2 2 3 3 4 4 5 输出样例 #1 6 输入样例 #2 8 1 2 1 3 2 4 2 5 3 6 3 7 6 8 输出样例 #2 18 输入样例 #3 3 1 2 1 3  输出样例 #3 3  说明 #### 数据规模与约定 - 对于 $10\\%$ 的数据，保证 $n \\leq 5$。 - 对于 $30\\%$ 的数据，保证 $n \\leq 100$。 - 另有 $30\\%$ 的数据，保证给出的树是一条链。 - 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 700，1 \\leq u, v \\leq n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:经营与开发 题目描述 $4X$ 概念体系，是指在 PC 战略游戏中一种相当普及和成熟的系统概念，得名自 4 个同样以 EX 为开头的英语单词。 - $\\verb!eXplore!$（探索） - $\\verb!eXpand!$（拓张与发展） - $\\verb!eXploit!$（经营与开发） - $\\verb!eXterminate!$（征服） ——维基百科 今次我们着重考虑 exploit 部分，并将其模型简化： 你驾驶着一台带有钻头（初始能力值 w）的飞船，按既定路线依次飞过 n 个星球。星球笼统的分为 2 类：资源型和维修型。（p 为钻头当前能力值） 1. 资源型：含矿物质量 $a_i$，若选择开采，则得到 $a_i\\times p$ 的金钱，之后钻头损耗 $k\\%$，即 $p\\gets p\\times (1-0.01k)$； 2. 维修型：维护费用 $b_i$，若选择维修，则支付 $b_i\\times p$ 的金钱，之后钻头修复 $c\\%$，即 $p\\gets p\\times (1+0.01c)$。 注：维修后钻头的能力值可以超过初始值（你可以认为是翻修 + 升级） 金钱可以透支。 请作为舰长的你仔细抉择以最大化收入。 输入输出格式 输入格式 第一行 4 个整数 $n,k,c,w$。 以下 n 行，每行 2 个整数 $\\mathrm{type},x$。 - $\\mathrm{type}$ 为 1 则代表其为资源型星球，x 为其矿物质含量 $a_i$； - $\\mathrm{type}$ 为 2 则代表其为维修型星球，x 为其维护费用 $b_i$； 输出格式 一个实数（保留 2 位小数），表示最大的收入。 输入输出样例 输入样例 #1 5 50 50 10  1 10  1 20  2 10  2 20  1 30  输出样例 #1 375.00 说明 ### 数据范围及约定 - 对于 $30\\%$ 的数据 $n \\le 100$； - 另有 $20\\%$ 的数据 $n \\le 1000，k=100$； - 对于 $100\\%$ 的数据 $n \\le 100000，0 \\le k,c,w,a_i,b_i \\le 100$，保证答案不超过 $10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:坚果保龄球 题目描述 PVZ 这款游戏中，有一种坚果保龄球。zombie 从地图右侧不断出现，向左走，玩家需要从左侧滚动坚果来碾死他们。 我们可以认为地图是一个行数为 6，列数为 $60$ 的棋盘。zombie 出现的那一秒站在这一行的第 $60$ 列，之后每秒向左移动一步。玩家可以随时在屏幕最某一行第一列摆放坚果，这一行的 zombie 瞬间全被滚过去的坚果碾死。如果 zombie 走到第 1 列没有被消灭，如果再向左走，则你的大脑就会被 zombie 吃掉。 现在有 n 只 zombie！告诉你每只 zombie 出现的时间以及在出现的行数（可能会同时出现同一位置的僵尸），请问至少需要多少坚果才能消灭所有的 zombie。 输入输出格式 输入格式 第一行一个正整数 n，表示 zombie 数量。 之后 n 行中，每行两个正整数 P 和 t，分别表示 zombie 所在行和 zombie 出现的时间。 输出格式 一个正整数，最少需要的坚果数。 输入输出样例 输入样例 #1 10 1 1 1 61 2 1 2 60 3 1 3 2 3 3 3 4 4 1 4 99999 输出样例 #1 6 说明 ### 数据范围及约定 对于全部数据，$n \\le 2000，t \\le 100000，1 \\le P \\le 6$。 ### 题目来源 kkksc03 改编"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 彩排了一次，老师不太满意。当然啦，取每位同学的号数来找最大公约数显然不太合理。于是老师给每位同学评了一个能力值。于是现在问题变为，从 n 个学生中挑出 k 个人使得他们的默契程度（即能力值的最大公约数）最大。但因为节目太多了，而且每个节目需要的人数又不知道。老师想要知道所有情况下能达到的最大默契程度是多少。这下子更麻烦了，还是交给你吧~ PS：一个数的最大公约数即本身。 输入输出格式 输入格式 第一行一个正整数 n。 第二行为 n 个空格隔开的正整数，表示每个学生的能力值。 输出格式 总共 n 行，第 i 行为 $k=i$ 情况下的最大默契程度。 输入输出样例 输入样例 #1 4 1 2 3 4 输出样例 #1 4 2 1 1 说明 【题目来源】 lzn 原创 【数据范围】 记输入数据中能力值的最大值为 $\\textit{inf}$。 - 对于 $20\\%$ 的数据，$n \\leq 5，\\textit{inf}\\leq 10^3$； - 对于另 $30\\%$ 的数据，$n \\leq 100，\\textit{inf} \\leq 10$； - 对于 $100\\%$ 的数据，$n \\leq 10^4，\\textit{inf} \\leq 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:拆分数列 题目描述 给出一列数字，需要你添加任意多个逗号将其拆成若干个严格递增的数。如果有多组解，则输出使得最后一个数最小的同时，字典序最大的解（即先要满足最后一个数最小；如果有多组解，则使得第一个数尽量大；如果仍有多组解，则使得第二个数尽量大，依次类推……）。 输入输出格式 输入格式 共一行，为初始的数字。 输出格式 共一行，为拆分之后的数列。每个数之间用逗号分隔。行尾无逗号。 输入输出样例 输入样例 #1 3456 输出样例 #1 3,4,5,6 输入样例 #2 3526 输出样例 #2 3,5,26 输入样例 #3 3546 输出样例 #3 35,46 输入样例 #4 0001 输出样例 #4 0001 输入样例 #5 100000101 输出样例 #5 100,000101 说明 ### 数据范围及约定 记输入的字符串的长度为 l。 - 对于 $10\\%$ 的数据，$l \\le 5$； - 对于 $30\\%$ 的数据，$l \\le 15$； - 对于 $50\\%$ 的数据，$l \\le 50$； - 对于 $100\\%$ 的数据，$l \\le 500$。 ### 题目来源 lzn 改编"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:攻击火星 题目描述 一群外星人将要攻击火星。 火星的地图是一个 n 个点的无向图。这伙外星人将按照如下方法入侵，先攻击度为 0 的点（相当于从图中删除掉它），然后是度为 1 的点，依此类推直到度为 $n-1$ 的点。 所有的点度统计是动态统计的。（一个点删掉后，与之相连的点的点度都会 $-1$）。外星人攻击度为某个数的点时是同时攻击的。 你需要设计这个图的边的方案来使得未被攻击的点最多。注意：你设计的图**不允许自环及重边**。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:gw 还是会做饭的，于是拿出了储藏的食物准备填饱肚子。gw 希望能在 $T$ 时间内做出最美味的食物，但是这些食物美味程度的计算方式比较奇葩，于是绝望的 gw 只好求助于你了。 题目描述 一共有 n 件食材，每件食材有三个属性，$a_i，b_i$ 和 $c_i$，如果在 t 时刻完成第 i 样食材则得到 $a_i-t\\times b_i$ 的美味指数，用第 i 件食材做饭要花去 $c_i$ 的时间。 众所周知，gw 的厨艺不怎么样，所以他需要你设计烹调方案使得美味指数最大。 输入输出格式 输入格式 第一行是两个正整数 T 和 n，表示到达地球所需时间和食材个数。 - 下面一行 n 个整数，$a_i$； - 下面一行 n 个整数，$b_i$； - 下面一行 n 个整数，$c_i$。 输出格式 输出最大美味指数。 输入输出样例 输入样例 #1 74 1 502 2 47 输出样例 #1 408 说明 ### 数据范围及约定 - 对于 $40\\%$ 的数据 $1 \\le n \\le 10$； - 对于 $100\\%$ 的数据 $1 \\le n \\le 50$。 所有数字均小于 $10^5$。 ### 题目来源 tinylic 改编"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[TJOI2011] 构造矩阵 题目描述 要求构造一个 $n\\times m$ 的 $01$ 矩阵，满足每一行中 1 的个数分别为 $r_1,r_2,\\ldots,r_n$ ,每一列中1的个数为 $c_1,c_2,\\ldots,c_m$。 在此基础上要求字典序最小。两个矩阵比较字典序时先比较第一行，第一行相等再比较第二行…… 输入输出格式 输入格式 第一行输入两个整数 $n,m$。 第二行输入 n 个整数 $r_1,r_2,\\ldots,r_n$。 第三行输入 m 个整数 $c_1,c_2,\\ldots,c_m $。 输出格式 输出一个 $n\\times m$ 的矩阵。 输入输出样例 输入样例 #1 2 3 2 1  1 0 2  输出样例 #1 101 001 说明 对于 $100\\%$ 的数据 $n,m\\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:寻找段落 题目描述 给定一个长度为 n 的序列 a，定义 $a_i$ 为第 i 个元素的价值。现在需要找出序列中最有价值的“段落”。段落的定义是长度在 $[S, T]$ 之间的连续序列。最有价值段落是指平均值最大的段落。 **段落的平均值** 等于 **段落总价值** 除以 **段落长度**。 输入输出格式 输入格式 第一行一个整数 n，表示序列长度。 第二行两个整数 S 和 T，表示段落长度的范围，在 $[S, T]$ 之间。 第三行到第 $n+2$ 行，每行一个整数表示每个元素的价值指数。 输出格式 一个实数，保留 3 位小数，表示最优段落的平均值。 输入输出样例 输入样例 #1 3  2 2  3  -1  2  输出样例 #1 1.000 说明 【数据范围】 对于 $30\\%$ 的数据有 $n \\le 1000$。 对于 $100\\%$ 的数据有 $1 \\le n \\le 100000，1 \\le S \\le T \\le n，-{10}^4 \\le a_i \\le {10}^4$。 【题目来源】 tinylic 改编"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最长连号 题目描述 输入长度为 n 的一个正整数序列，要求输出序列中最长连号的长度。 连号指在序列中，从小到大的连续自然数。 输入输出格式 输入格式 第一行，一个整数 n。 第二行，n 个整数 $a_i$，之间用空格隔开。 输出格式 一个数，最长连号的个数。 输入输出样例 输入样例 #1 10 1 5 6 2 3 4 5 6 8 9 输出样例 #1 5"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小玉买文具 题目描述 班主任给小玉一个任务，到文具店里买尽量多的签字笔。已知一只签字笔的价格是 1 元 9 角，而班主任给小玉的钱是 a 元 b 角，小玉想知道，她最多能买多少只签字笔呢。 输入输出格式 输入格式 输入只有一行两个整数，分别表示 a 和 b。 输出格式 输出一行一个整数，表示小玉最多能买多少只签字笔。 输入输出样例 输入样例 #1 10 3 输出样例 #1 5 说明 #### 数据规模与约定 对于全部的测试点，保证 $0 \\leq a \\leq 10^4，0 \\leq b \\leq 9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小玉家的电费 题目描述 夏天到了，各家各户的用电量都增加了许多，相应的电费也交的更多了。小玉家今天收到了一份电费通知单。小玉看到上面写：据闽价电 [2006]27 号规定，月用电量在 $150$ 千瓦时及以下部分按每千瓦时 $0.4463$ 元执行，月用电量在 $151\\sim 400$ 千瓦时的部分按每千瓦时 $0.4663$ 元执行，月用电量在 $401$ 千瓦时及以上部分按每千瓦时 $0.5663$ 元执行;小玉想自己验证一下，电费通知单上应交电费的数目到底是否正确呢。请编写一个程序，已知用电总计，根据电价规定，计算出应交的电费应该是多少。 输入输出格式 输入格式 输入一个正整数，表示用电总计（单位以千瓦时计），不超过 $10000$。 输出格式 输出一个数，保留到小数点后 1 位（单位以元计，保留到小数点后 1 位）。 输入输出样例 输入样例 #1 267 输出样例 #1 121.5"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小玉在游泳 题目描述 小玉开心的在游泳，可是她很快难过的发现，自己的力气不够，游泳好累哦。已知小玉第一步能游 2 米，可是随着越来越累，力气越来越小，她接下来的每一步都只能游出上一步距离的 $98\\%$。现在小玉想知道，如果要游到距离 s 米的地方，她需要游多少步呢。请你编程解决这个问题。 输入输出格式 输入格式 输入一个实数 s（单位：米），表示要游的目标距离。 输出格式 输出一个整数，表示小玉一共需要游多少步。 输入输出样例 输入样例 #1 4.3 输出样例 #1 3 说明 数据保证，$0 \\leq s < 100$，且 s 小数点后最多只有一位。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 有一只小鱼，它平日每天游泳 $250$ 公里，周末休息（实行双休日)，假设从周 x 开始算起，过了 n 天以后，小鱼一共累计游泳了多少公里呢？ 输入输出格式 输入格式 输入两个正整数 $x,n$，表示从周 x 算起，经过 n 天。 输出格式 输出一个整数，表示小鱼累计游泳了多少公里。 输入输出样例 输入样例 #1 3 10 输出样例 #1 2000 说明 数据保证，$1\\le x \\le 7，1 \\le n\\le 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小鱼的游泳时间 题目描述 伦敦奥运会要到了，小鱼在拼命练习游泳准备参加游泳比赛，可怜的小鱼并不知道鱼类是不能参加人类的奥运会的。 这一天，小鱼给自己的游泳时间做了精确的计时（本题中的计时都按 $24$ 小时制计算），它发现自己从 a 时 b 分一直游泳到当天的 c 时 d 分，请你帮小鱼计算一下，它这天一共游了多少时间呢？ 小鱼游的好辛苦呀，你可不要算错了哦。 输入输出格式 输入格式 一行内输入四个整数，以空格隔开，分别表示题目中的 $a, b, c, d$。 输出格式 一行内输出两个整数 e 和 f，用空格间隔，依次表示小鱼这天一共游了多少小时多少分钟。其中表示分钟的整数 f 应该小于 $60$。 输入输出样例 输入样例 #1 12 50 19 10 输出样例 #1 6 20 说明 对于全部测试数据，$0\\le a,c \\le 24，0\\le b,d \\le 60$，且结束时间一定晚于开始时间。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小鱼会有危险吗 题目描述 有一次，小鱼要从 A 处沿直线往右边游，小鱼第一秒可以游 7 米，从第二秒开始每秒游的距离只有前一秒的 $98\\%$。有个极其邪恶的猎人在距离 A 处右边 s 米的地方，安装了一个隐蔽的探测器，探测器左右 x 米之内是探测范围。一旦小鱼进入探测器的范围，探测器就会在这一秒结束时把信号传递给那个猎人，猎人在一秒后就要对探测器范围内的水域进行抓捕，这时如果小鱼还在这范围内就危险了。也就是说小鱼一旦进入探测器范围，如果能在下 1 秒的时间内马上游出探测器的范围，还是安全的。现在给出 s 和 x 的数据，请你判断小鱼会不会有危险？如果有危险输出 `y`，没有危险输出 `n`。 输入输出格式 输入格式 一行内输入两个实数，用空格分隔，表示 s 和 x。 输出格式 一行内输出'y'或者'n'表示小鱼是否会有危险。 输入输出样例 输入样例 #1 14 1 输出样例 #1 n 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $1 \\leq s,x\\le100$，小数点后最多有 6 位小数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小鱼的数字游戏 题目描述 小鱼最近被要求参加一个数字游戏，要求它把看到的一串数字 $a_i$（长度不一定，以 0 结束），记住了然后反着念出来（表示结束的数字 0 就不要念出来了）。这对小鱼的那点记忆力来说实在是太难了，你也不想想小鱼的整个脑袋才多大，其中一部分还是好吃的肉！所以请你帮小鱼编程解决这个问题。 输入输出格式 输入格式 一行内输入一串整数，以 0 结束，以空格间隔。 输出格式 一行内倒着输出这一串整数，以空格间隔。 输入输出样例 输入样例 #1 3 65 23 5 34 1 30 0 输出样例 #1 30 1 34 5 23 65 3 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $0 \\leq a_i \\leq 2^{31} - 1$，数字个数不超过 $100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小鱼比可爱 题目描述 人比人，气死人；鱼比鱼，难死鱼。小鱼最近参加了一个“比可爱”比赛，比的是每只鱼的可爱程度。参赛的鱼被从左到右排成一排，头都朝向左边，然后每只鱼会得到一个整数数值，表示这只鱼的可爱程度，很显然整数越大，表示这只鱼越可爱，而且任意两只鱼的可爱程度**可能一样**。由于所有的鱼头都朝向左边，所以每只鱼只能看见在它左边的鱼的可爱程度，它们心里都在计算，在自己的眼力范围内有多少只鱼不如自己可爱呢。请你帮这些可爱但是鱼脑不够用的小鱼们计算一下。 输入输出格式 输入格式 第一行输入一个正整数 n，表示鱼的数目。 第二行内输入 n 个正整数，用空格间隔，依次表示从左到右每只小鱼的可爱程度 $a_i$。 输出格式 一行，输出 n 个整数，用空格间隔，依次表示每只小鱼眼中有多少只鱼不如自己可爱。 输入输出样例 输入样例 #1 6 4 3 0 5 1 2 输出样例 #1 0 0 0 3 1 2 说明 对于 $100\\%$ 的数据，$1 \\leq n\\leq 100，0 \\leq a_i \\leq 10$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[P7883](/problem/P7883) 平面最近点对（加强加强版） 题目描述 给定平面上 n 个点，找出其中的一对点的距离，使得在这 n 个点的所有点对中，该距离为所有点对中最小的 输入输出格式 输入格式 第一行：n ，保证 $2\\le n\\le 200000$ 。 接下来 n 行：每行两个实数：$x\\ y$ ，表示一个点的行坐标和列坐标，中间用一个空格隔开。 输出格式 仅一行，一个实数，表示最短距离，精确到小数点后面 4 位。 输入输出样例 输入样例 #1 3 1 1 1 2 2 2 输出样例 #1 1.0000 说明 数据保证 $0\\le x,y\\le 10^9$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:序列取数 题目描述 给定一个长为 n 的整数序列 $(n \\le 1000)$，由 A 和 B 轮流取数（A 先取）。每个人可从序列的左端或右端取若干个数（至少一个），但不能两端都取。所有数都被取走后，两人分别统计所取数的和作为各自的得分。假设 A 和 B 都足够聪明，都使自己得分尽量高，求 A 的最终得分。 输入输出格式 输入格式 第一行，一个正整数 T，表示有 T 组数据。（$T \\le 100$） 接着 T 行，每行第一个数为 n，接着 n 个整数表示给定的序列。 输出格式 输出T行，每行一个整数，表示 A 的得分。 输入输出样例 输入样例 #1 2  1 -1  2 1 2 输出样例 #1 -1  3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:找出伪币 题目描述 给你一个装有 n 枚硬币的袋子。n 枚硬币中有一个是伪造的，并且那个伪造的硬币和真的硬币重量不一样。你的任务是找出这枚伪造的硬币。 为了帮助你完成这一任务，将提供一台可用来比较两组硬币重量的仪器，比如天平。利用这台仪器，可以知道两组硬币的重量是否相同。 输入输出格式 输入格式 第一行，一个正整数 T，表示有 T 组数据。 接着 T 行，每行三个正整数 $k,p,n$。 $p=-1$：伪币偏轻；$p=1$：伪币偏重；$p=0$：你不知道伪币与真币的重量对比关系。 n 为一个 k 位十进制正整数（没有前导 0）。 输出格式 输出 T 行，每行一个整数 m，表示至少要称量 m 次就一定能找出伪币。 输入输出样例 输入样例 #1 2 1 1 6 1 0 6 输出样例 #1 2 3 说明 对于 $40\\%$ 的数据，$n\\leq 10^5$。 对于 $100\\%$ 的数据，$k\\leq 10^4，3\\lt n\\lt 10^{10001}，1\\leq T\\leq 40$。 当 $p=0$ 时，你还需要知道伪币与真币相比是轻是重"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 假定两个水壶A和B，供水量不限。可以使用三种方法装水： - 给一个水壶装水； - 把一个水壶倒空； - 从一个水壶倒进另一个水壶。 当从一个水壶倒进另一个水壶时，如果第一个水壶倒空，或者第二个水壶装满就不能再倒了。例如，一个水壶A是5加仑和另一个水壶B是6加仑，水量是8加仑，则从水壶A倒进水壶B时，让水壶B充满水而水壶A剩3加仑水。 问题由3个参数：$C_a，C_b和N$，分别表示水壶A和B的容量，目标水量N。解决问题的目标是，给出一系列倒水的步骤，使水壶B中的水量恰好是N。 输入输出格式 输入格式 第一行为数据组数T。 接下来的T行，每行三个数字$C_a，C_b和N$，意义如题目所示。 T不超过$30$组，$0<C_a≤Cb，N≤C_b≤1000$，且$C_a和C_b$互质。 输出格式 输出共为T行，第一个数字为要达成的完成次数$a_i$（题目保证存在解）。 接下来$a_i$个数字，表示各种操作： - 1操作:$fill A$ 意为给A灌满水 - 2操作:$fill B$ - 3操作:$empty A$ 意为将A中水倒空 - 4操作:$empty B$ - 5操作:$pour B A$ 意为将B中水倒到A中（直到A满或者B中水没有剩余） - 6操作:$pour A B$ 输入输出样例 输入样例 #1 2 3 5 4  5 7 3  输出样例 #1 6 2 5 3 5 2 5  6 1 6 1 6 4 6  输入样例 #2 1 26 29 11 输出样例 #2 22 1 6 1 6 4 6 1 6 4 6 1 6 4 6 1 6 4 6 1 6 4 6  说明 开启了spj。 如果你的方案比答案优，会提示UKE，此时请联系管理员修改数据。 如果你的方案比答案差，分数会相应减损。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:吃奶酪 题目描述 房间里放着 n 块奶酪。一只小老鼠要把它们都吃掉，问至少要跑多少距离？老鼠一开始在 $(0,0)$ 点处。 输入输出格式 输入格式 第一行有一个整数，表示奶酪的数量 n。 第 2 到第 $(n + 1)$ 行，每行两个实数，第 $(i + 1)$ 行的实数分别表示第 i 块奶酪的横纵坐标 $x_i, y_i$。 输出格式 输出一行一个实数，表示要跑的最少距离，保留 2 位小数。 输入输出样例 输入样例 #1 4 1 1 1 -1 -1 1 -1 -1 输出样例 #1 7.41 说明 #### 数据规模与约定 对于全部的测试点，保证 $1\\leq n\\leq 15，|x_i|, |y_i| \\leq 200$，小数点后最多有 3 位数字。 #### 提示 对于两个点 $(x_1,y_1)，(x_2, y_2)$，两点之间的距离公式为 $\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}$。 --- $2022.7.13$：新增加一组 $\\text{Hack}$ 数据。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SHOI2002] 滑雪 题目描述 Michael 喜欢滑雪。这并不奇怪，因为滑雪的确很刺激。可是为了获得速度，滑的区域必须向下倾斜，而且当你滑到坡底，你不得不再次走上坡或者等待升降机来载你。Michael 想知道在一个区域中最长的滑坡。区域由一个二维数组给出。数组的每个数字代表点的高度。下面是一个例子： ```plain 1   2   3   4   5 16  17  18  19  6 15  24  25  20  7 14  23  22  21  8 13  12  11  10  9 ``` 一个人可以从某个点滑向上下左右相邻四个点之一，当且仅当高度会减小。在上面的例子中，一条可行的滑坡为 $24-17-16-1$（从 $24$ 开始，在 1 结束）。当然    $25－24－23－\\ldots－3－2－1$ 更长。事实上，这是最长的一条。 输入输出格式 输入格式 输入的第一行为表示区域的二维数组的行数 R 和列数 C。下面是 R 行，每行有 C 个数，代表高度(两个数字之间用 1 个空格间隔)。 输出格式 输出区域中最长滑坡的长度。 输入输出样例 输入样例 #1 5 5 1 2 3 4 5 16 17 18 19 6 15 24 25 20 7 14 23 22 21 8 13 12 11 10 9 输出样例 #1 25 说明 对于 $100\\%$ 的数据，$1\\leq R,C\\leq 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 回文词是一种对称的字符串。任意给定一个字符串，通过插入若干字符，都可以变成回文词。此题的任务是，求出将给定字符串变成回文词所需要插入的最少字符数。 比如 $\\verb!Ab3bd!$ 插入 2 个字符后可以变成回文词 $\\verb!dAb3bAd!$ 或 $\\verb!Adb3bdA!$，但是插入少于 2 个的字符无法变成回文词。 **注意**：此问题区分大小写。 输入输出格式 输入格式 输入共一行，一个字符串。 输出格式 有且只有一个整数，即最少插入字符数。 输入输出样例 输入样例 #1 Ab3bd 输出样例 #1 2 说明 ### 数据范围及约定 记字符串长度为 l。 对于全部数据，$0<l\\le 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:无 题目描述 在一个凹槽中放置了 n 层砖块、最上面的一层有 n 块砖，从上到下每层依次减少一块砖。每块砖都有一个分值，敲掉这块砖就能得到相应的分值，如下图所示： ```cpp 14 15  4  3  23  33  33 76  2    2   13 11      22 23        31 ``` 如果你想敲掉第 i 层的第 j 块砖的话，若 $i=1$，你可以直接敲掉它；若 $i>1$，则你必须先敲掉第 $i-1$ 层的第 j 和第 $j+1$ 块砖。 你现在可以敲掉最多 m 块砖，求得分最多能有多少。 输入输出格式 输入格式 输入文件的第一行为两个正整数 n 和 m；接下来 n 行，描述这 n 层砖块上的分值 $a_{i,j}$，满足 $0\\leq a_{i,j}\\leq 100$。 对于 $100\\%$ 的数据，满足 $1\\leq n\\leq 50，1\\leq m\\leq \\frac{n\\times(n+1)}{2}$； 输出格式 输出文件仅一行为一个正整数，表示被敲掉砖块的最大价值总和。 输入输出样例 输入样例 #1 4 5 2 2 3 4 8 2 7 2 3 49 输出样例 #1 19"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 维护一个数列 $a_i$，支持两种操作：  - `1 l r K D`：给出一个长度等于 $r-l+1$ 的等差数列，首项为 K，公差为 D，并将它对应加到 $[l,r]$ 范围中的每一个数上。即：令 $a_l=a_l+K,a_{l+1}=a_{l+1}+K+D\\ldots a_r=a_r+K+(r-l) \\times D$。  - `2 p`：询问序列的第 p 个数的值 $a_p$。 输入输出格式 输入格式 第一行两个整数数 $n,m$ 表示数列长度和操作个数。 第二行 n 个整数，第 i 个数表示 $a_i$。 接下来的 m 行，每行先输入一个整数 $opt$。 若 $opt=1$ 则再输入四个整数 $l\\ r\\ K\\ D$； 若 $opt=2$ 则再输入一个整数 p。 输出格式 对于每个询问，一行一个整数表示答案。 输入输出样例 输入样例 #1 5 2 1 2 3 4 5 1 2 4 1 2 2 3 输出样例 #1 6 说明 #### 数据规模与约定 对于 $100\\%$ 数据，$0\\le n,m \\le 10^5,-200\\le a_i,K,D\\le 200, 1 \\leq l \\leq r \\leq n, 1 \\leq p \\leq n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:【模板】最长公共子序列 题目描述 给出 $1,2,\\ldots,n$ 的两个排列 $P_1$ 和 $P_2$ ，求它们的最长公共子序列。 输入输出格式 输入格式 第一行是一个数 n。 接下来两行，每行为 n 个数，为自然数 $1,2,\\ldots,n$ 的一个排列。 输出格式 一个数，即最长公共子序列的长度。 输入输出样例 输入样例 #1 5  3 2 1 4 5 1 2 3 4 5 输出样例 #1 3 说明 - 对于 $50\\%$ 的数据， $n \\le 10^3$； - 对于 $100\\%$ 的数据， $n \\le 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:求m区间内的最小值 题目描述 一个含有 n 项的数列，求出每一项前的 m 个数到它这个区间内的最小值。若前面的数不足 m 项则从第 1 个数开始，若前面没有数则输出 0。 输入输出格式 输入格式 第一行两个整数，分别表示 n，m。 第二行，n 个正整数，为所给定的数列 $a_i$。 输出格式 n 行，每行一个整数，第 i 个数为序列中 $a_i$ 之前 m 个数的最小值。 输入输出样例 输入样例 #1 6 2 7 8 1 4 3 2 输出样例 #1 0 7 7 1 1 3  说明 对于 $100\\%$ 的数据，保证 $1\\le m\\le n\\le2\\times10^6，1\\le a_i\\le3\\times10^7$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:砝码称重 题目描述 现有 n 个砝码，重量分别为 $a_i$，在去掉 m 个砝码后，问最多能称量出多少不同的重量（不包括 0）。 请注意，砝码只能放在其中一边。 输入输出格式 输入格式 第 1 行为有两个整数 n 和 m，用空格分隔。 第 2 行有 n 个正整数 $a_1, a_2, a_3,\\ldots , a_n$，表示每个砝码的重量。 输出格式 仅包括 1 个整数，为最多能称量出的重量数量。 输入输出样例 输入样例 #1 3 1 1 2 2 输出样例 #1 3 说明 【样例说明】 在去掉一个重量为 2 的砝码后，能称量出 $1, 2, 3$ 共 3 种重量。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:马的遍历 题目描述 有一个 $n \\times m$ 的棋盘，在某个点 $(x, y)$ 上有一个马，要求你计算出马到达棋盘上任意一个点最少要走几步。 输入输出格式 输入格式 输入只有一行四个整数，分别为 $n, m, x, y$。 输出格式 一个 $n \\times m$ 的矩阵，代表马到达某个点最少要走几步（不能到达则输出 $-1$）。 输入输出样例 输入样例 #1 3 3 1 1 输出样例 #1 0    3    2     3    -1   1     2    1    4     说明 ### 数据规模与约定 对于全部的测试点，保证 $1 \\leq x \\leq n \\leq 400，1 \\leq y \\leq m \\leq 400$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO1.3] 虫洞 wormhole 题目描述 Farmer John 周末进行高能物理实验的结果却适得其反，导致 n 个虫洞出现在农场上，农场是一个二维平面，没有两个虫洞处于同一位置。 根据他的计算，FJ 知道他的虫洞两两配对，形成 $\\dfrac{n}{2}$ 对配对。例如，如果 A 和 B 的虫洞连接成一对，进入虫洞 A 的任何物体将从虫洞 B 出去，方向不变；反之亦然。   然而这可能发生相当令人不快的后果。例如，假设有两个成对的虫洞 $A(1,1)$ 和 $B(3,1)$，Bessie 从 $(2,1)$ 开始朝着  x 正方向移动。Bessie 将进入虫洞 $B(3,1)$，从 $A(1,2)$ 出去，然后再次进入 B，困在一个无限循环中！ FJ 知道他的农场里每个虫洞的确切位置。他知道 Bessie 总是向 x 正方向走进来，虽然他不记得贝茜的当前位置。   请帮助 FJ 计算有多少种虫洞配对方案，使得存在一个位置，使得 Bessie 从该位置出发，会被困在一个无限循环中。 输入输出格式 输入格式 第一行一个正整数 n，表示虫洞数量。 接下来 n 行，每行两个整数 $x,y$，表示一个虫洞的坐标。 输出格式 输出一行一个整数表示答案。 输入输出样例 输入样例 #1 4 0 0 1 0 1 1 0 1 输出样例 #1 2 说明 ### 数据范围 对于 $100\\%$ 的数据，$2\\le n \\le 12，0 \\le x,y \\le 10^9$。   保证 n 为偶数。 ### 样例解释 将虫洞编号为 $1 \\sim 4$，然后通过将 $1,2$ 和 $3,4$ 匹配，如果 Bessie 从 $(0,0)$ 到 $(1,0)$ 之间的任意位置出发，她会陷入无限循环中。 相似的，在相同的起始点，如果配对是 $1,3$ 和 $2,4$，贝茜也会陷入循环。（如果贝西从 3 进去，1 出来，她会走向 2 ，然后被传送到 4，最后又回到 3） 仅有 $1,4$ 和 $2,3$ 的配对允许贝茜从任何二维平面上的点向 x 正方向走，而不出现无限循环。 题面翻译摘自 NOCOW"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 求方程： $$\\dfrac{1}{x} + \\dfrac{1}{y} = \\dfrac{1}{n!}$$  的正整数解的组数，答案对 $10^9+7$ 取模。 输入输出格式 输入格式 输入只有一行一个整数，表示 n。 输出格式 输出一行一个整数表示正整数解的组数模 $10^9+7$ 的值。 输入输出样例 输入样例 #1 2 输出样例 #1 3 输入样例 #2 1439 输出样例 #2 102426508 说明 #### 样例 1 解释 共有三个数对 $(x,y)$ 满足条件，分别是 $(3,6),(4,4)$ 和 $(6,3)$。 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $n\\le 100$ 。 - 对于 $100\\%$ 的数据，保证 $1 \\le n\\le 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[HNOI2008] Cards 题目描述 小春现在很清闲，面对书桌上的 n 张牌，他决定给每张牌染色，目前小春拥有 3 种颜色：红色，蓝色，绿色。他询问 Sun 有多少种染色方案，Sun 很快就给出了答案。 进一步，小春要求染出 $S_r$ 张红色，$S_b$ 张蓝色，$S_g$ 张绿色。他又询问有多少种方案，Sun 想了一下，又给出了正确答案。最后小春发明了 m 种不同的洗牌法，这里他又问 Sun 有多少种不同的染色方案。两种染色方法相同当且仅当其中一种可以通过任意的洗牌法（即可以使用多种洗牌法，而每种方法可以使用多次）洗成另一种。 Sun 发现这个问题有点难度，决定交给你，由于答案可能很大，你只需要求出答案对于 P 取模的结果。 保证 P 为一个质数。 输入输出格式 输入格式 第一行输入 5 个整数，依次表示：$S_r,S_b,S_g,m,P（m\\le 60,m+1<p<100$）。其中，题面所提及的 n 为 $S_r+S_b+S_g$，即 $n=S_r+S_b+S_g$。 接下来 m 行，每行描述一种洗牌法，每行有 n 个用空格隔开的整数 $X_1X_2...X_n$，保证其为 1 到 n 的一个排列，表示使用这种洗牌法，第 i 位变为原来的 $X_i$ 位的牌。输入数据保证任意多次洗牌都可用这 m 种洗牌法中的一种代替，且对每种洗牌法，都存在一种洗牌法使得能回到原状态。 同时，对于 $100\\%$ 的数据满足 $\\max\\{S_r,S_b,S_g\\}\\le 20$ 。 输出格式 不同的染色方法对 P 取模的结果。 输入输出样例 输入样例 #1 1 1 1 2 7 2 3 1 3 1 2 输出样例 #1 2 说明 有 2 种本质上不同的染色法：`RGB` 和 `RBG`，使用洗牌法 `231` 一次，可得 `GBR` 和 `BGR`，使用洗牌法 `312` 一次，可得 `BRG` 和 `GRB`。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:后缀表达式 题目描述 所谓后缀表达式是指这样的一个表达式：式中不再引用括号，运算符号放在两个运算对象之后，所有计算按运算符号出现的顺序，严格地由左而右新进行（不用考虑运算符的优先级）。 如：$\\texttt{3*(5-2)+7}$ 对应的后缀表达式为：$\\texttt{3.5.2.-*7.+@}$。在该式中，`@` 为表达式的结束符号。`.` 为操作数的结束符号。 输入输出格式 输入格式 输入一行一个字符串 s，表示后缀表达式。 输出格式 输出一个整数，表示表达式的值。 输入输出样例 输入样例 #1 3.5.2.-*7.+@ 输出样例 #1 16 说明 数据保证，$1 \\leq |s| \\leq 50$，答案和计算过程中的每一个值的绝对值不超过 $10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[HAOI2008] 硬币购物 题目描述 共有 4 种硬币。面值分别为 $c_1,c_2,c_3,c_4$。 某人去商店买东西，去了 n 次，对于每次购买，他带了 $d_i$ 枚 i 种硬币，想购买 s 的价值的东西。请问每次有多少种付款方法。 输入输出格式 输入格式 输入的第一行是五个整数，分别代表 $c_1,c_2,c_3,c_4, n$。 接下来 n 行，每行有五个整数，描述一次购买，分别代表 $d_1, d_2, d_3, d_4,s$。 输出格式 对于每次购买，输出一行一个整数代表答案。 输入输出样例 输入样例 #1 1 2 5 10 2 3 2 3 1 10 1000 2 2 2 900 输出样例 #1 4 27 说明 #### 数据规模与约定 * 对于 $100\\%$ 的数据，保证 $1 \\leq c_i, d_i, s \\leq 10^5，1 \\leq n \\leq 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:求细胞数量 题目描述 一矩形阵列由数字 0 到 9 组成，数字 1 到 9 代表细胞，细胞的定义为沿细胞数字上下左右若还是细胞数字则为同一细胞，求给定矩形阵列的细胞个数。 输入输出格式 输入格式 第一行两个整数代表矩阵大小 n 和 m。 接下来 n 行，每行一个长度为 m 的只含字符 `0` 到 `9` 的字符串，代表这个 $n \\times m$ 的矩阵。 输出格式 一行一个整数代表细胞个数。 输入输出样例 输入样例 #1 4 10 0234500067 1034560500 2045600671 0000000089 输出样例 #1 4 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $1 \\le n,m \\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO03FALL] Beauty Contest G /【模板】旋转卡壳 题目描述 给定平面上 n 个点，求凸包直径。 输入输出格式 输入格式 第一行一个正整数 n。    接下来 n 行，每行两个整数 $x,y$，表示一个点的坐标。 输出格式 输出一行一个整数，表示答案的平方。 输入输出样例 输入样例 #1 4 0 0 0 1 1 1 1 0 输出样例 #1 2 说明 【数据范围】   对于 $100\\%$ 的数据，$2\\le n \\le 50000，|x|,|y| \\le 10^4$。 --- $\\text{upd 2022.7.22}$：新增加四组 Hack 数据。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 整个城市可以看做一个 n 个点，n 条边的单圈图(保证图连通)，唯一的环便是绕城的环路。保证环上任意两点有且只有 2 条简单路径互通。图中的其它部分皆隶属城市郊区。 现在，有一位名叫 Jim 的同学想在 B 市开店，但是任意一条边的 2 个点不能同时开店，每个点都有一定的人流量，第 i 个点的人流量是 $p_i$，在该点开店的利润就等于 $p_i×k$，其中 k 是一个常数。 Jim 想尽量多的赚取利润，请问他应该在哪些地方开店？ 输入输出格式 输入格式 第一行一个整数 n，代表城市中点的个数。城市中的 n 个点由 $0 \\sim n-1$ 编号。 第二行有 n 个整数，第 $(i + 1)$ 个整数表示第 i 个点的人流量 $p_i$。 接下来 n 行，每行有两个整数 $u, v$，代表存在一条连接 u 和 v 的道路。 最后一行有一个实数，代表常数 k。 输出格式 输出一行一个实数代表答案，结果保留一位小数。 输入输出样例 输入样例 #1 4 1 2 1 5 0 1 0 2 1 2 1 3 2 输出样例 #1 12.0 说明 #### 数据规模与约定 - 对于 $20\\%$ 的数据，保证 $n \\leq 100$。 - 另有 $20\\%$ 的数据，保证环上的点不超过 $2000$ 个。 - 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 10^5，1 \\leq p_i \\leq 10^4，0 \\leq u, v < n，0 \\leq k \\leq 10^4，k$ 的小数点后最多有 6 位数字。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 圣诞老人回到了北极圣诞区，已经快到 12 点了。也就是说极光表演要开始了。这里的极光不是极地特有的自然极光景象。而是圣诞老人主持的人造极光。 轰隆隆 …… 烟花响起（来自中国的浏阳花炮之乡）。接下来就是极光表演了。 人造极光其实就是空中的一幅幅 $n\\times m$ 的点阵图像。只是因为特别明亮而吸引了很多很多小精灵的目光，也成为了圣诞夜最美丽的一刻。 然而在每幅 $n \\times m$ 的点阵图像中，每一个点只有发光和不发光两种状态。对于所有的发光的点，在空中就形成了美丽的图画。而这个图画是以若干个（s 个）图案组成的。对于图案，圣诞老人有着严格的定义：对于两个发光的点，如果他们的曼哈顿距离（对于 $A(x_1, y_1)$ 和 $B(x_2, y_2)$ ，A 和 B 之间的曼哈顿距离为 $|x_1-x_2|+|y_1-y_2|$ ）小于等于 2。那么这两个点就属于一个图案 …… 小精灵们一边欣赏着极光，一边数着每一幅极光图像中的图案数。伴着歌声和舞蹈，度过了美丽的圣诞之夜。^_^ 输入输出格式 输入格式 第一行，两个数 n 和 m 。 接下来一共 n 行，每行 m 个字符。对于第 i 行第 j 个字符，如果其为 `-`  ，那么表示该点不发光，如果其为 `#` ，那么表示该点发光。不可能出现其他的字符。 输出格式 第一行，一个数 s。 输入输出样例 输入样例输出样例 #1 4 说明 $1 \\le n,m \\le 100$。 DFS~~"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:搭配购买 题目描述 明天就是母亲节了，电脑组的小朋友们在忙碌的课业之余挖空心思想着该送什么礼物来表达自己的心意呢？听说在某个网站上有卖云朵的，小朋友们决定一同前往去看看这种神奇的商品，这个店里有 n 朵云，云朵已经被老板编号为 $1,2,3,...,n$，并且每朵云都有一个价值，但是商店的老板是个很奇怪的人，他会告诉你一些云朵要搭配起来买才卖，也就是说买一朵云则与这朵云有搭配的云都要买，电脑组的你觉得这礼物实在是太新奇了，但是你的钱是有限的，所以你肯定是想用现有的钱买到尽量多价值的云。 输入输出格式 输入格式 第一行输入三个整数，$n,m,w$，表示有 n 朵云，m 个搭配和你现有的钱的数目。 第二行至 $n+1$ 行，每行有两个整数， $c_i,d_i$，表示第 i 朵云的价钱和价值。 第 $n+2$ 至 $n+1+m$ 行 ，每行有两个整数 $u_i,v_i$。表示买第 $u_i$ 朵云就必须买第 $v_i$ 朵云,同理，如果买第 $v_i$ 朵就必须买第 $u_i$ 朵。 输出格式 一行，表示可以获得的最大价值。 输入输出样例 输入样例 #1 5 3 10 3 10 3 10 3 10 5 100 10 1 1 3 3 2 4 2 输出样例 #1 1 说明 - 对于 $30\\%$ 的数据，满足 $1 \\le n \\le 100$； - 对于 $50\\%$ 的数据，满足 $1 \\le n, w \\le 10^3，1 \\le m \\le 100$； - 对于 $100\\%$ 的数据，满足 $1 \\le n, w \\le 10^4，0 \\le m \\le 5 \\times 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:题意翻译 #### 题目描述 曾经在一个森林中居住着 N 只好斗的猴子。在最初他们我行我素，互不认识。但是猴子们不能避免争吵，且两只猴子只会在不认识对方时发生争吵，当争吵发生时，双方会邀请它们各自最强壮的朋友并发起决斗（决斗的为各自最强壮的朋友）。当然，在决斗之后两只猴子和他们各自的伙伴都认识对方了（成为朋友），虽然他们曾经有过冲突，但是他们之间绝不会再发生争吵了。 假设每只猴子有一个强壮值，强壮值将在一场决斗后减少为原先的一半（例如  $10$ 会减少到  5，而  5 会减少到  2，即向下取整）。 我们也假设每只猴子都认识它自己（是自己的朋友）。即当他是他朋友中最强壮的，他自己就会去决斗。 #### 输入格式 有多组数据，每一组数据有两部分。 第一部分：第一行包含一个整数 N 表示猴子的数量。后为 N 行，每行一个数字为第 i 只猴子的强壮值  $s_{i}$。 第二部分：第一行包含一个整数 M 表示发生了 M 次冲突。后为 M 行，每行两个整数 x 和 y，表示第 x 只猴子和第 y 只猴子之间发生了冲突。 #### 输出格式 对于每次冲突，如果两只猴子认识对方，输出 `-1`，否则输出决斗后他们朋友中最强壮的猴子的强壮值。 #### 说明/提示 $N,M\\leq 100000，s_{i}\\leq 32768$ 题目描述 Once in a forest, there lived N aggressive monkeys. At the beginning, they each does things in its own way and none of them knows each other. But monkeys can't avoid quarrelling, and it only happens between two monkeys who does not know each other. And when it happens, both the two monkeys will invite the strongest friend of them, and duel. Of course, after the duel, the two monkeys and all of there friends knows each other, and the quarrel above will no longer happens between these monkeys even if they have ever conflicted."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.1] 顺序的分数 Ordered Fractions 题目描述 输入一个自然数 n，对于一个最简分数 $a/b$（分子和分母互质的分数），满足 $1 \\le b \\le n,0 \\le a/b \\le 1$，请找出所有满足条件的分数。 这有一个例子，当 $n=5$ 时，所有解为： $$\\frac01,\\frac15,\\frac14,\\frac13,\\frac25,\\frac12,\\frac35,\\frac23,\\frac34 ,\\frac45,\\frac11$$ 给定一个自然数 n，请编程按分数值递增的顺序输出所有解。   注：    1、0 和任意自然数的最大公约数就是那个自然数。     2、互质指最大公约数等于1的两个自然数。 输入输出格式 输入格式 单独的一行一个自然数 n 输出格式 每个分数单独占一行，按照大小次序排列 输入输出样例 输入样例 #1 5 输出样例 #1 0/1 1/5 1/4 1/3 2/5 1/2 3/5 2/3 3/4 4/5 1/1 说明 【数据范围】     对于 $100\\%$ 的数据，$1\\le n \\le 160$。 USACO 2.1 翻译来自NOCOW"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.1] 三值的排序 Sorting a Three-Valued Sequence 题目描述 排序是一种很频繁的计算任务。现在考虑最多只有三值的排序问题。一个实际的例子是，当我们给某项竞赛的优胜者按金银铜牌排序的时候。在这个任务中可能的值只有三种 $1,2,3$。我们用交换的方法把他排成升序的。 写一个程序计算出，给定的一个 $1,2,3$ 组成的数字序列，排成升序所需的最少交换次数 输入输出格式 输入格式 第一行一个正整数 n，表示奖牌个数。    接下来 n 行，每行一个 $[1,3]$ 内的整数，表示奖牌。 输出格式 输出一行一个整数，表示排成升序所需的最少交换次数。 输入输出样例 输入样例 #1 9 2 2 1 3 3 3 2 3 1 输出样例 #1 4 说明 【数据范围】   对于 $100\\%$ 的数据，$1\\le n \\le 1000$。 USACO 2.1 翻译来自NOCOW"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.1] 健康的荷斯坦奶牛 Healthy Holsteins 题目描述 农民 John 以拥有世界上最健康的奶牛为傲。他知道每种饲料中所包含的牛所需的最低的维他命量是多少。请你帮助农夫喂养他的牛，以保持它们的健康，使喂给牛的饲料的种数最少。 给出牛所需的最低的维他命量，输出喂给牛需要哪些种类的饲料，且所需的饲料剂量最少。 维他命量以整数表示，每种饲料最多只能对牛使用一次，数据保证存在解。 输入输出格式 输入格式 第一行一个整数 v，表示需要的维他命的种类数。   第二行 v 个整数，表示牛每天需要的每种维他命的最小量。 第三行一个整数 g，表示可用来喂牛的饲料的种数。    下面 g 行，第 n 行表示编号为 n 饲料包含的各种维他命的量的多少。 输出格式 输出文件只有一行，包括牛必需的最小的饲料种数 p；后面有 p 个数，表示所选择的饲料编号（按从小到大排列）。 如果有多个解，输出饲料序号最小的（即字典序最小）。 输入输出样例 输入样例 #1 4 100 200 300 400 3 50  50  50  50 200 300 200 300 900 150 389 399 输出样例 #1 2 1 3 说明 【数据范围】   对于 $100\\%$ 的数据，$1\\le v \\le 25，1\\le g \\le 15$。   输入的所有整数在 $[1,1000]$ 范围内。 USACO 2.1 翻译来自NOCOW"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.1] 海明码 Hamming Codes 题目描述 给出 $n,b,d$，要求找出 n 个由 $0,1$ 组成的编码，每个编码有 b 位），使得两两编码之间至少有 d 个单位的 “Hamming距离”。“   Hamming距离”是指对于两个编码，他们二进制表示法中的不同二进制位的数目。看下面的两个编码 `0x554` 和 `0x234`（十六进制数） ``` 0x554 = 0101 0101 0100 0x234 = 0010 0011 0100 不同位    xxx  xx ``` 因为有五个位不同，所以“Hamming距离”是 5。 输入输出格式 输入格式 一行，包括 $n,b,d$。 输出格式 n 个编码（用十进制表示），要排序，十个一行。   如果有多解，你的程序要输出这样的解：假如把它化为 $2^b$ 进制数，它的值要最小。 输入输出样例 输入样例 #1 16 7 3 输出样例 #1 0 7 25 30 42 45 51 52 75 76 82 85 97 102 120 127 说明 【数据范围】   对于 $100\\%$ 的数据，$1\\le n \\le 64，1\\le b \\le 8，1\\le d \\le 7$。 请解释：“必须与其他所有的数相比，Hamming 距离都符合要求，这个数才正确” 答：如样例输出，$0,7，0,25$，比较都符合海明码，同样 $7,25，7,30$，比较也符合要求，以此类推。题中至少有 d 个单位，意思就是大于等于 d 个单位的都可以。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:在被众多联盟的士兵攻击后，他决定逃回自己的家乡奥格瑞玛。 题目描述 在艾泽拉斯，有 n 个城市。编号为 $1,2,3,\\ldots,n$。 城市之间有 m 条双向的公路，连接着两个城市，从某个城市到另一个城市，会遭到联盟的攻击，进而损失一定的血量。 每次经过一个城市，都会被收取一定的过路费（包括起点和终点）。路上并没有收费站。 假设 1 为暴风城，n 为奥格瑞玛，而他的血量最多为 b，出发时他的血量是满的。如果他的血量降低至负数，则他就无法到达奥格瑞玛。 歪嘴哦不希望花很多钱，他想知道，在可以到达奥格瑞玛的情况下，他所经过的所有城市中最多的一次收取的费用的最小值是多少。 输入输出格式 输入格式 第一行 3 个正整数，$n,m,b$。分别表示有 n 个城市，m 条公路，歪嘴哦的血量为 b。 接下来有 n 行，每行 1 个正整数，$f_i$。表示经过城市 i，需要交费 $f_i$ 元。 再接下来有 m 行，每行 3 个正整数，$a_i,b_i,c_i（1\\leq a_i,b_i\\leq n$）。表示城市 $a_i$ 和城市 $b_i$ 之间有一条公路，如果从城市 $a_i$ 到城市 $b_i$，或者从城市 $b_i$ 到城市 $a_i$，会损失 $c_i$ 的血量。 输出格式 仅一个整数，表示歪嘴哦交费最多的一次的最小值。 如果他无法到达奥格瑞玛，输出 `AFK`。 输入输出样例 输入样例 #1 4 4 8 8 5 6 10 2 1 2 2 4 1 1 3 4 3 4 3 输出样例 #1 10 说明 对于 $60\\%$ 的数据，满足 $n\\leq 200，m\\leq 10^4，b\\leq 200$； 对于 $100\\%$ 的数据，满足 $1\\leq n\\leq 10^4，1\\leq m\\leq 5\\times 10^4，1\\leq b\\leq 10^9$； 对于 $100\\%$ 的数据，满足 $1\\leq c_i\\leq 10^9，1\\leq f_i\\leq 10^9$，可能有两条边连接着相同的城市。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[POI2001] [HAOI2007] 反素数 题目描述 对于任何正整数 x，其约数的个数记作 $g(x)$。例如 $g(1)=1，g(6)=4$。 如果某个正整数 x 满足：$\\forall 0 \\lt i \\lt x$，都有 $g(x) \\gt g(i)$，则称 x 为**反质数**。例如，整数 $1,2,4,6$ 等都是反质数。 现在给定一个数 N，你能求出不超过 N 的最大的反质数么？ 输入输出格式 输入格式 一个数 N。 输出格式 不超过 N 的最大的反质数。 输入输出样例 输入样例 #1 1000 输出样例 #1 840 说明 $1 \\leq N \\leq 2 \\times 10^9$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.2] 序言页码 Preface Numbering 题目描述 给定 n，求 $1 \\sim n$ 的 **罗马数字** 表示中，各个字符出现了多少次。 比如 $n = 5$，表示为  I, II, III, IV, V。总共有 7 个 I 出现，2 个 V 出现。 输入输出格式 输入格式 一个整数 n。 输出格式 每行一个字符和一个数字 k，表示这个字符出现了 k 次。字符必须按罗马数字表中的递增顺序输出。 输入输出样例 输入样例 #1 5 输出样例 #1 I 7 V 2 说明 【数据范围】   对于 $100\\%$ 的数据，$1\\le n \\le 3500$。 翻译来自NOCOW USACO 2.2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.2] 集合 Subset Sums 题目描述 对于从 $1\\sim n$ 的连续整数集合，能划分成两个子集合，且保证每个集合的数字和是相等的。举个例子，如果 $n=3$，对于 $\\{1,2,3\\}$ 能划分成两个子集合，每个子集合的所有数字和是相等的： $\\{3\\}$ 和 $\\{1,2\\}$ 是唯一一种分法（交换集合位置被认为是同一种划分方案，因此不会增加划分方案总数）   如果 $n=7$，有四种方法能划分集合 $\\{1,2,3,4,5,6,7 \\}$，每一种分法的子集合各数字和是相等的: $\\{1,6,7\\}$ 和 $\\{2,3,4,5\\}$   $\\{2,5,7\\}$ 和 $\\{1,3,4,6\\}$   $\\{3,4,7\\}$ 和 $\\{1,2,5,6\\}$   $\\{1,2,4,7\\}$ 和 $\\{3,5,6\\}$   给出 n，你的程序应该输出划分方案总数。 输入输出格式 输入格式 输入文件只有一行，且只有一个整数 n 输出格式 输出划分方案总数。 输入输出样例 输入样例 #1 7 输出样例 #1 4 说明 【数据范围】   对于 $100\\%$ 的数据，$1\\le n \\le 39$。 翻译来自NOCOW USACO 2.2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.2] 循环数 Runaround Numbers 题目描述 循环数是那些不包括 0 且没有重复数字的整数（比如 $81362$）并且还应同时具有一个有趣的性质, 就像这个例子: 如果你从最左边的数字开始（在这个例子中 8）向右数最左边这个数（如果数到了最右边就回到最左边），你会停止在另一个新的数字（如果停在一个相同的数字上，这个数就不是循环数）。   就像：$8\\ 1\\ 3\\ 6\\ 2$ 从最左边接下去数 8 个数字: $1\\ 3\\ 6\\ 2\\ 8\\ 1\\ 3\\ 6$ 所以下一个数字是 6 重复这样做 (这次从 `6` 开始数 6 个数字) 并且你会停止在一个新的数字上: $2\\ 8\\ 1\\ 3\\ 6\\ 2$, 也就是 2 再这样做 (这次数两个): $8\\ 1$ 再一次 (这次一个): 3 又一次: $6\\ 2\\ 8$    这时你回到了起点,在经过每个数字一次后回到起点的就是循环数。如果你经过每一个数字一次以后没有回到起点, 你的数字不是一个循环数。 给你一个数字 m ，找出第一个比 m 大的循环数, 输出数据保证结果能用一个无符号长整型数 $ \\in [0,2^{32})$ 装下。 （追加提醒：循环数每个数位都必须要访问到） 输入输出格式 输入格式 仅仅一行, 包括 m。 输出格式 仅仅一行，输出第一个比 m 大的循环数。 输入输出样例 输入样例 #1 81361 输出样例 #1 81362 说明 【数据范围】   对于 $100\\%$ 的数据，$1\\le m \\le 10^9$。 翻译来自NOCOW USACO 2.2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.2] 派对灯 Party Lamps 题目描述 在 IOI98 的节日宴会上，我们有 n 盏彩色灯，他们分别从 $1 \\sim n$ 被标上号码。这些灯都连接到四个按钮： 按钮 1：当按下此按钮，将改变所有的灯：本来亮着的灯就熄灭，本来是关着的灯被点亮。 按钮 2：当按下此按钮，将改变所有奇数号的灯。 按钮 3：当按下此按钮，将改变所有偶数号的灯。 按钮 4：当按下此按钮，将改变所有序号是 $3k+1 \\ (k \\in [0,+\\infty) \\cap \\mathbb Z)$ 的灯。例如：$1,4,7,10 \\dots$ 一个计数器 c 记录按钮被按下的次数。当宴会开始，所有的灯都亮着，此时计数器 c 为 0。 你将得到计数器 c 上的数值和经过若干操作后某些灯的状态。写一个程序去找出所有灯最后可能的与所给出信息相符的状态，并且没有重复。 输入输出格式 输入格式 第一行一个正整数 n；第二行一个整数 c，表示最后计数器的数值。   第三行若干个整数，表示最后亮着的灯，以 `-1` 结束。   第四行若干个整数，表示最后关着的灯，以 `-1` 结束。 保证不会有灯会在输入中出现两次。 输出格式 每一行是所有灯可能的最后状态（没有重复）。   每一行有 n 个字符，第 i 个字符表示 i 号灯。0 表示关闭，1 表示亮着。这些行必须从小到大排列（看作是二进制数）。 如果没有可能的状态，则输出一行 `IMPOSSIBLE`。 输入输出样例 输入样例 #1 10 1 -1 7 -1 输出样例 #1 0000000000 0101010101 0110110110 说明 【数据范围】   对于 $100\\%$ 的数据，$10 \\le n \\le 100，0 \\le c \\le 10^4$。 【样例解释】   在这个样例中，有三种可能的状态： - 所有灯都关着 - $1,4,7,10$ 号灯关着，$2,3,5,6,8,9$ 亮着。 - $1,3,5,7,9$ 号灯关着，$2,4,6,8,10$ 亮着。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:找筷子 题目描述 经过一段时间的紧张筹备，电脑小组的“RP 餐厅”终于开业了，这天，经理 LXC 接到了一个定餐大单，可把大家乐坏了！员工们齐心协力按要求准备好了套餐正准备派送时，突然碰到一个棘手的问题:筷子！ CX 小朋友找出了餐厅中所有的筷子，但遗憾的是这些筷子长短不一，而我们都知道筷子需要长度一样的才能组成一双，更麻烦的是 CX 找出来的这些筷子数量为奇数，但是巧合的是，这些筷子中只有一只筷子是落单的，其余都成双，善良的你，可以帮 CX 找出这只落单的筷子的长度吗？ 输入输出格式 输入格式 第一行是一个整数，表示筷子的数量 n。 第二行有 n 个整数，第 i 个整数表示第 i 根筷子的长度 $a_i$。 输出格式 输出一行一个整数表示答案。 输入输出样例 输入样例 #1 9 2 2 1 3 3 3 2 3 1 输出样例 #1 2 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $n \\leq 10^5$。 - 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 10^7 + 1，1 \\leq a_i \\leq 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.3] 最长前缀 Longest Prefix 题目描述 在生物学中，一些生物的结构是用包含其要素的大写字母序列来表示的。生物学家对于把长的序列分解成较短的序列（即元素）很感兴趣。 如果一个集合 P 中的元素可以串起来（元素可以重复使用）组成一个序列 s ，那么我们认为序列 s 可以分解为 P 中的元素。元素不一定要全部出现（如下例中 `BBC` 就没有出现）。举个例子，序列 `ABABACABAAB` 可以分解为下面集合中的元素：`{A,AB,BA,CA,BBC}` 序列 s 的前面 k 个字符称作 s 中长度为 k 的前缀。设计一个程序，输入一个元素集合以及一个大写字母序列  ，设 $s'$ 是序列 s 的最长前缀，使其可以分解为给出的集合 P 中的元素，求 $s'$ 的长度 k。 输入输出格式 输入格式 输入数据的开头包括若干个元素组成的集合 O，用连续的以空格分开的字符串表示。字母全部是大写，数据可能不止一行。元素集合结束的标志是一个只包含一个 `.` 的行，集合中的元素没有重复。   接着是大写字母序列 s ，长度为，用一行或者多行的字符串来表示，每行不超过 $76$ 个字符。换行符并不是序列 s 的一部分。 输出格式 只有一行，输出一个整数，表示 S 符合条件的前缀的最大长度。 输入输出样例 输入样例 #1 A AB BA CA BBC . ABABACABAABC 输出样例 #1 11 说明 **【数据范围】** 对于 $100\\%$ 的数据，$1\\le \\text{card}(P) \\le 200，1\\le |S| \\le 2\\times 10^5，P$ 中的元素长度均不超过 $10$。 翻译来自NOCOW USACO 2.3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 蒟蒻 HansBug 在一本数学书里面发现了一个神奇的数列，包含 N 个实数。他想算算这个数列的平均数和方差。 输入输出格式 输入格式 第一行包含两个正整数 $N,M$，分别表示数列中实数的个数和操作的个数。 第二行包含 N 个实数，其中第 i 个实数表示数列的第 i 项。 接下来 M 行，每行为一条操作，格式为以下三种之一： 操作 1：`1 x y k` ，表示将第 x 到第 y 项每项加上 k，k 为一实数。   操作 2：`2 x y` ，表示求出第 x 到第 y 项这一子数列的平均数。   操作 3：`3 x y` ，表示求出第 x 到第 y 项这一子数列的方差。 输出格式 输出包含若干行，每行为一个实数，即依次为每一次操作 2 或操作 3 所得的结果（所有结果四舍五入保留 4 位小数）。 输入输出样例 输入样例 #1 5 5 1 5 4 2 3 2 1 4 3 1 5 1 1 1 1 1 2 2 -1 3 1 5 输出样例 #1 3.0000 2.0000 0.8000 说明 关于方差：对于一个有 n 项的数列 A，其方差 $s^2$ 定义如下： $$s^2=\\frac{1}{n}\\sum\\limits_{i=1}^n\\left(A_i-\\overline A\\right)^2$$ 其中 $\\overline A$ 表示数列 A 的平均数，$A_i$ 表示数列 A 的第 i 项。 样例说明： | 操作步骤 | 输入内容 | 操作要求 | 数列 | 输出结果 | 说明 | | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | | 0 | - | - | `1 5 4 2 3` | - | - | | 1 | `2 1 4` | 求 $\\left[1,4\\right]$ 内所有数字的平均数 | `1 5 4 2 3` | `3.0000` | 平均数 $=\\left(1+5+4+2\\right)\\div 4=3.0000$ | | 2 | `3 1 5` | 求 $\\left[1,5\\right]$ 内所有数字的方差 | `1 5 4 2 3` | `2.0000` | 平均数 $=\\left(1+5+4+2+3\\right)\\div 5=3$，方差 $=\\left(\\left(1-3\\right)^2+\\left(5-3\\right)^2+\\left(4-3\\right)^2+\\left(2-3\\right)^2+\\left(3-3\\right)^2\\right)\\div 5=2.0000$ | | 3 | `1 1 1 1` | 将 $\\left[1,1\\right]$ 内所有数字加 1 | `2 5 4 2 3` | - | - | | 4 | `1 2 2 -1` | 将 $\\left[2,2\\right]$ 内所有数字加 $-1$ | `2 4 4 2 3` | - | - | | 5 | `3 1 5` | 求 $\\left[1,5\\right]$ 内所有数字的方差 | `2 4 4 2 3` | `0.8000` | 平均数 $=\\left(2+4+4+2+3\\right)\\div 5=3$，方差 $=\\left(\\left(2-3\\right)^2+\\left(4-3\\right)^2+\\left(4-3\\right)^2+\\left(2-3\\right)^2+\\left(3-3\\right)^2\\right)\\div 5=0.8000$ | 数据规模： | 数据点 | N | M | 备注 | | :----------: | :----------: | :----------: | :----------: | | $1\\sim3$ | $N\\le 8$ | $M\\le 15$ | - | | $4\\sim7$ | $N\\le 10^5$ | $M\\le 10^5$ | 不包含操作 3| | $8\\sim10$ | $N\\le 10^5$ | $M\\le 10^5$ | - |"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.3] 奶牛家谱 Cow Pedigrees 题目描述 一个有 n 个节点，深度为 k 的无标号完满二叉树（即每个节点的儿子数为 0 或 2）有多少种结构？定义根节点深度为 1。 答案对 $9901$ 取模。 输入输出格式 输入格式 两个空格分开的整数 $n,k$。 输出格式 输出一行一个整数表示答案。 输入输出样例 输入样例 #1 5 3 输出样例 #1 2 说明 【数据范围】   对于 $100\\%$ 的数据，$3\\le n < 200，2 \\le k < 100$。 USACO 2.3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.3] 零的数列 Zero Sum 题目描述 请考虑一个由 1 到 N 的数字组成的递增数列：$1, 2, 3, \\ldots, N$。 现在请在数列中插入 `+` 表示加，或者 `-` 表示减，` `（空格） 表示空白（例如 `1-2 3` 就等于 `1-23`），来将每一对数字组合在一起（请不要在第一个数字前插入符号）。 计算该表达式的结果并判断其值是否为 0。 请你写一个程序找出所有产生和为零的长度为N的数列。 输入输出格式 输入格式 单独的一行表示整数 N（$3 \\leq N \\leq 9$）。 输出格式 按照 ASCI I码的顺序，输出所有在每对数字间插入 `+`，`-`，` `（空格） 后能得到结果为零的数列。 输入输出样例 输入样例 #1 7 输出样例 #1 1+2-3+4-5-6+7 1+2-3-4+5+6-7 1-2 3+4+5+6+7 1-2 3-4 5+6 7 1-2+3+4-5+6-7 1-2-3-4-5+6+7 说明 翻译来自NOCOW USACO 2.3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.3] Money System / [USACO07OCT]Cow Cash G 题目描述 母牛们不但创建了它们自己的政府而且选择了建立了自己的货币系统。由于它们特殊的思考方式，它们对货币的数值感到好奇。 传统地，一个货币系统是由 $1,5,10,20,25,50,100$ 的单位面值组成的。 母牛想知道有多少种不同的方法来用货币系统中的货币来构造一个确定的数值。 举例来说, 使用一个货币系统 $(1,2,5,10, \\ldots)$ 产生 $18$ 单位面值的一些可能的方法是：$18 \\times 1, 9 \\times 2, 8 \\times 2+2 \\times 1, 3 \\times 5+2+1$，等等。 写一个程序来计算有多少种方法用给定的货币系统来构造一定数量的面值。保证总数在 $64$ 位带符号整数的范围内。 输入输出格式 输入格式 第一行两个整数：货币系统中货币的种类数目 V（$1 \\leq V \\leq 25$）。要构造的数量钱是 N（$1 \\leq N \\leq 10,000$）。 第二行 V 个整数，代表所有可用的货币的面值。 输出格式 单独的一行，包含用这 V 种硬币凑足 N 单位货币的方案数。 输入输出样例 输入样例 #1 3 10 1 2 5 输出样例 #1 10 说明 翻译来自NOCOW USACO 2.3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.3] 控制公司 Controlling Companies 题目描述 有些公司是其他公司的部分拥有者，因为他们获得了其他公司发行的股票的一部分。 据说，如果至少满足了以下三个条件之一，公司 A 就可以控制公司 B 了： - 公司 A = 公司 B。 - 公司 A 拥有大于 $50\\%$ 的公司 B 的股票。 - 公司 A 控制 K（$K \\geq 1$）个公司，记为 $C_1, \\ldots, C_K$，每个公司 $C_i$ 拥有 $x_i\\%$ 的公司 B 的股票，并且 $x_1+ \\ldots + x_K \\gt 50\\%$。 给你一个表，每行包括三个数 $i,j,p$：表明公司 i 享有公司 j 的 $p\\%$ 的股票。计算所有的数对 $(h,s)$，表明公司 h 控制公司 s。至多有 $100$ 个公司。 输入输出格式 输入格式 第一行一个整数 N，表明表格的行数。 接下来 N 行，每行三个整数 $i,j,p$，表示 i 公司拥有 j 公司 $p\\%$ 的股份。 输出格式 输出零个或更多个的控制其他公司的公司。每行包括两个整数 $A,B$，表示 A 公司控制了 B 公司。将输出的数对以 A 为第一关键字，B 为第二关键字升序排列。 请不要输出控制自己的公司（即你输出的数对均要满足 $A \\neq B$）。 输入输出样例 输入样例 #1 3 1 2 80 2 3 80 3 1 20 输出样例 #1 1 2 1 3 2 3 说明 翻译来自NOCOW USACO 2.3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:休息中的小呆 题目描述 当大家在考场中接受考验（折磨？）的时候，小呆正在悠闲（欠扁）地玩一个叫“最初梦想”的游戏。游戏描述的是一个叫 pass 的有志少年在不同的时空穿越对抗传说中的大魔王 chinesesonic 的故事。小呆发现这个游戏的故事流程设计得很复杂，它有着很多的分支剧情，但不同的分支剧情是可以同时进行的，因此游戏可以由剧情和剧情的结束点组成，某些剧情必须要在一些特定的剧情结束后才能继续发展。为了体验游戏的完整性，小呆决定要看到所有的分支剧情——完成所有的任务。但这样做会不会耽误小呆宝贵的睡觉时间呢？所以就请你来解决这个问题了。 输入输出格式 输入格式 小呆会给你一个剧情流程和完成条件的列表， 其中第一行有一个数 n，表示总共有 n 个剧情结束点； 第二行一个数 m，表示有 m个不同的剧情； 下面的 m 行中每行有三个数，表示从剧情结束点 i 必须完成一个耗费时间为 k 的剧情才能到达剧情结束点 j。 输出格式 你要告诉小呆完成整个游戏至少需要多少时间，以及要经过的所有可能的剧情结束点（按升序输出）。 输入输出样例 输入样例 #1 4  5  1 2 2  2 3 2  3 5 3  1 4 3  4 5 3  输出样例 #1 7  1 2 3 5  说明 ### 数据范围及约定 对于全部数据，$0<n<100，0<m\\le 120，0<i\\le 100，0<j\\le 100，0<k\\le 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2008] 假面舞会 题目描述 一年一度的假面舞会又开始了，栋栋也兴致勃勃的参加了今年的舞会。 今年的面具都是主办方特别定制的。每个参加舞会的人都可以在入场时选择一个自己喜欢的面具。每个面具都有一个编号，主办方会把此编号告诉拿该面具的人。 为了使舞会更有神秘感，主办方把面具分为 k（$k\\geq 3$）类，并使用特殊的技术将每个面具的编号标在了面具上，只有戴第 i 类面具的人才能看到戴第 $i+1$  类面具的人的编号，戴第 k 类面具的人能看到戴第 1 类面具的人的编号。 参加舞会的人并不知道有多少类面具，但是栋栋对此却特别好奇，他想自己算出有多少类面具，于是他开始在人群中收集信息。 栋栋收集的信息都是戴第几号面具的人看到了第几号面具的编号。如戴第 2 号面具的人看到了第 5 号面具的编号。栋栋自己也会看到一些编号，他也会根据自己的面具编号把信息补充进去。 由于并不是每个人都能记住自己所看到的全部编号，因此，栋栋收集的信息不能保证其完整性。现在请你计算，按照栋栋目前得到的信息，至多和至少有多少类面具。由于主办方已经声明了 $k\\geq 3$，所以你必须将这条信息也考虑进去。 输入输出格式 输入格式 第一行包含两个整数 $n, m$，用一个空格分隔，n 表示主办方总共准备了多少个面具，m 表示栋栋收集了多少条信息。接下来 m 行，每行为两个用空格分开的整数 $a, b$，表示戴第 a 号面具的人看到了第 b 号面具的编号。相同的数对 $a, b$ 在输入文件中可能出现多次。 输出格式 包含两个数，第一个数为最大可能的面具类数，第二个数为最小可能的面具类数。如果无法将所有的面具分为至少 3 类，使得这些信息都满足，则认为栋栋收集的信息有错误，输出两个 `-1`。 输入输出样例 输入样例 #1 6 5 1 2 2 3 3 4 4 1 3 5 输出样例 #1 4 4 输入样例 #2 3 3 1 2 2 1 2 3 输出样例 #2 -1 -1 说明 - 对于 $50\\%$ 的数据，满足 $n \\leq 300，m \\leq 10^3$； - 对于 $100\\%$ 的数据，满足 $n \\leq 10^5，m \\leq 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:陶陶摘苹果（升级版） 题目描述 又是一年秋季时，陶陶家的苹果树结了 n 个果子。陶陶又跑去摘苹果，这次他有一个 a 公分的椅子。当他手够不着时，他会站到椅子上再试试。 这次与 NOIp2005 普及组第一题不同的是：陶陶之前搬凳子，力气只剩下 s 了。当然，每次摘苹果时都要用一定的力气。陶陶想知道在 $s<0$ 之前最多能摘到多少个苹果。 现在已知 n 个苹果到达地上的高度 $x_i$，椅子的高度 a，陶陶手伸直的最大长度 b，陶陶所剩的力气 s，陶陶摘一个苹果需要的力气 $y_i$，求陶陶最多能摘到多少个苹果。 输入输出格式 输入格式 第 1 行：两个数 苹果数 n，力气 s。 第 2 行：两个数 椅子的高度 a，陶陶手伸直的最大长度 b。 第 3 行~第 $3+n-1$ 行：每行两个数 苹果高度 $x_i$，摘这个苹果需要的力气 $y_i$。 输出格式 只有一个整数，表示陶陶最多能摘到的苹果数。 输入输出样例 输入样例 #1 8 15 20 130 120 3 150 2 110 7 180 1 50 8 200 0 140 3 120 2 输出样例 #1 4 说明 对于 $100\\%$ 的数据，$n\\leq 5000$, $a\\leq 50$, $b\\leq 200$, $s\\leq 1000$, $x_i\\leq 280$, $y_i\\leq 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:A/B Problem 题目描述 输入两个整数 $a,b$，输出它们的商。 输入输出格式 输入格式 两行，第一行是被除数，第二行是除数。 输出格式 一行，商的整数部分。 输入输出样例 输入样例 #1 10 2 输出样例 #1 5 说明 $0\\le a\\le 10^{5000}，1\\le b\\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Cantor表（升级版） 题目描述 现代数学的著名证明之一是 Georg Cantor 证明了有理数是可枚举的。他是用下面这一张表来证明这一命题的： $$\\begin{matrix} 1/1 & 1/2 & 1/3 & 1/4 & 1/5 & \\cdots \\cr 2/1 & 2/2 & 2/3 & 2/4 &  \\cdots \\cr 3/1 & 3/2 & 3/3 &  \\cdots \\cr 4/1 & 4/2 &  \\cdots \\cr 5/1 &  \\cdots \\cr \\end{matrix} $$ 这次与 NOIp1999 第一题不同的是：这次需输入两个分数（不一定是最简分数），算出这两个分数的积（注意需要约分至最简分数），输出积在原表的第几列第几行（若积形如 a（即结果为整数）或者 $1/a$，则看作表内的 $a/1$ 或 $1/a$ 结算）。 输入输出格式 输入格式 共两行。每行输入一个分数（不一定是最简分数）。 输出格式 两个整数，表示输入的两个分数的积在表中的第几列第几行。 输入输出样例 输入样例 #1 4/5 5/4 输出样例 #1 1 1 说明 ### 数据范围 对于全部数据，两个分数的分母和分子均小于 $10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:序列变换 题目描述 给定一个由 n 个整数构成的序列 $a_1, a_2, \\ldots , a_n$，你需要对它进行如下操作： 1. 输入格式 `1 x y`，表示把所有 $a_{k x}（k$ 为正整数，$k x \\le n$）都加上 y。 2. 输入格式 `2 j`，表示输出 $a_j$。 输入输出格式 输入格式 第一行，两个数 $n, m$，表示有 n 个数，m 条操作。   第二行，n 个数 $a_1, a_2, \\ldots , a_n$。   接下来 m 行，为 m 条操作。 输出格式 输出若干行，每行对应一次操作2。 输入输出样例 输入样例 #1 5 4 6 9 9 8 1  2 4 1 2 5 1 3 1 2 4 输出样例 #1 8 13 说明 对于 $40 \\%$ 的数据，$n \\le 100$。   对于 $100 \\%$ 的数据，$1 \\le n \\le {10}^6，1 \\le m \\le {10}^5，|a_i| \\le {10}^6，|y| \\le {10}^6，1 \\le x, j \\le n$，操作 2 不超过 ${10}^4$ 条。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:种树 题目描述 cyrcyr 今天在种树，他在一条直线上挖了 n 个坑。这 n 个坑都可以种树，但为了保证每一棵树都有充足的养料，cyrcyr 不会在相邻的两个坑中种树。而且由于 cyrcyr 的树种不够，他至多会种 k 棵树。假设 cyrcyr 有某种神能力，能预知自己在某个坑种树的获利会是多少（可能为负），请你帮助他计算出他的最大获利。 输入输出格式 输入格式 第一行，两个正整数 $n,k$。 第二行，n 个整数，第 i 个数表示在直线上从左往右数第 i 个坑种树的获利。 输出格式 输出一个数，表示 cyrcyr 种树的最大获利。 输入输出样例 输入样例 #1 6 3   100 1 -1 100 1 -1  输出样例 #1 200 说明 对于 $20\\%$ 的数据，$n\\leq 20$。 对于 $50\\%$ 的数据，$n\\leq 6000$。 对于 $100\\%$ 的数据，$1 \\le n\\leq 500000，1 \\le k\\leq \\dfrac{n}{2}$，在一个地方种树获利的绝对值在 $10^6$ 以内。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:火枪打怪 题目描述 LXL 进入到了一片丛林,结果他发现有 n 只怪物排成一排站在他面前。LXL 有一杆火枪能对付这些怪物。他知道从左至右数第 i 只怪物的血量是 $m_i$。现在 LXL 可以将一些子弹射向某个怪物。LXL 可以控制他所发射的子弹数量及子弹的威力值。当某个子弹射到第 i 个怪物，如果这个子弹的威力值为 p，除了这个怪物会掉 p 点血以外，它左边的第 j 个怪物 $(j<i)$，也会遭到 $\\max(0, p - (i - j)^2)$ 的溅射伤害（好神奇的子弹）。当某只怪物的血量小于 0 时，它就死了，但它的尸体还在，即怪物的位置永远不会改变。LXL 希望只用 k 发子弹，请你求出一个最小的正整数 p，使 LXL 用 k 发子弹且每发子弹的威力值为 p 就可以消灭所有怪物。 输入输出格式 输入格式 第一行，两个正整数 $n,k$。 第二行，n 个正整数，第 i 个正整数表示从左至右数第 i 只怪物的血量 $m_i$。 输出格式 一个正整数，表示子弹的最小威力值 p。 输入输出样例 输入样例 #1 3 1 1 4 5 输出样例 #1 6 说明 对于 $30\\%$ 的数据，$n\\leq 300$。 对于 $100\\%$ 的数据，$n\\leq 5\\times 10^5，k\\leq 5\\times 10^5，1\\leq m_i\\leq 10^{10}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2004] 郁闷的出纳员 题目描述 OIER 公司是一家大型专业化软件公司，有着数以万计的员工。作为一名出纳员，我的任务之一便是统计每位员工的工资。这本来是一份不错的工作，但是令人郁闷的是，我们的老板反复无常，经常调整员工的工资。如果他心情好，就可能把每位员工的工资加上一个相同的量。反之，如果心情不好，就可能把当前在公司的所有员工的工资扣除一个相同的量。我真不知道除了调工资他还做什么其它事情。 工资的频繁调整很让员工反感，尤其是集体扣除工资的时候，一旦某位员工发现自己的工资已经低于了合同规定的工资下界，他就会立刻气愤地离开公司，并且再也不会回来了。每位员工的工资下界都是统一规定的。每当一个人离开公司，我就要从电脑中把他的工资档案删去，同样，每当公司招聘了一位新员工，我就得为他新建一个工资档案。 老板经常到我这边来询问工资情况，他并不问具体某位员工的工资情况，而是问现在工资第 k 多的员工拿多少工资。每当这时，我就不得不对数万个员工进行一次漫长的排序，然后告诉他答案。 好了，现在你已经对我的工作了解不少了。正如你猜的那样，我想请你编一个工资统计程序。怎么样，不是很困难吧？ 如果某个员工的初始工资低于最低工资标准，那么将不计入最后的答案内。 输入输出格式 输入格式 第一行有两个整数 n 和 $\\min。n$ 表示下面有多少条命令，$\\min$ 表示工资下界。 接下来的 n 行，每行一个字符 x 和一个整数 k，表示一条命令。命令可以是以下四种之一： - `I k`  新建一个工资档案，初始工资为 k。如果某员工的初始工资低于工资下界，他将立刻离开公司。 - `A k`   把每位员工的工资加上 k。 - `S k`   把每位员工的工资扣除 k。 - `F k`    查询第 k 多的工资。 在初始时，可以认为公司里一个员工也没有。 输出格式 对于每条 `F` 命令，你的程序要输出一行，仅包含一个整数，为当前工资第  k 多的员工所拿的工资数，如果 k 大于目前员工的数目，则输出 $-1$。 输出的最后一行包含一个整数，为离开公司的员工的总数。 请注意，初始工资低于工资下界的员工不算做离开公司的员工。 输入输出样例 输入样例 #1 9 10 I 60 I 70 S 50 F 2 I 30 S 15 A 5 F 1 F 2 输出样例 #1 10 20 -1 2 说明 #### 数据规模与约定 对于全部的测试点，保证： - `I` 命令的条数不超过 $10^5$； - `A` 和 `S` 命令的总条数不超过 $100$； - `F` 命令的条数不超过 $10^5$； - 每次工资调整的调整量不超过 $10^3$； - 新员工的工资不超过 $10^5$。 - $0 \\leq n \\leq 3 \\times 10^5，0 \\leq \\text{min} \\leq 10^9$，输入的所有数字均在 $32$ 位带符号整形范围内。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 这一天老师要查第 m 个同学的成绩，为了不挨批，MC努力回想，想起成绩单上的一个规律： 若把成绩看作是一个实数数列，则 $A_i=\\dfrac{(A_{i-1})-(A_{i+1})}{2}+d$，（就是每一项为其前后两项之差除以 2 再加 d）。此时，我告诉了 MC 一共 n 项的数列首项 $A_1$ 和末项 $A_n$，以及 d。剩下的靠你了！ 输入输出格式 输入格式 第一行两个整数 $n,m$ 第二行三个整数，依次是 $d,A_1,A_n$。 输出格式 输出一个实数 $A_m$，保留 3 位小数。 输入输出样例 输入样例 #1 53 23  0.543 1.213 9768.134  输出样例 #1 0.543 说明 $1\\le n\\le 60，0\\le m\\le n，|d|,|A_1|,|A_n|<10^4$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:肥猫的游戏 题目描述 野猫与胖子，合起来简称肥猫，是一个班的同学，他们也都是数学高手，所以经常在一起讨论数学问题也就不足为奇了。 一次，野猫遇到了一道有趣的几何游戏题目，便拿给胖子看。游戏要求在一个有 n 个顶点凸多边形上进行，这个凸多边形的 $n-3$ 条对角线将多边形分成 $n-2$ 个三角形，这 $n-3$ 条对角线在多边形的顶点相交。三角形中的一个被染成黑色，其余是白色。 双方轮流进行游戏，当轮到一方时，他必须沿着画好的对角线，从多边形上切下一个三角形。切下黑色三角形的一方获胜。胖子一看觉得确实很有趣，不如就一起玩玩吧。假设游戏由野猫先开始，那么野猫是否有必胜的策略呢？请写一个程序帮助野猫算一算。 输入输出格式 输入格式 第一行为一个整数 n，表示多边形的顶点数，多边形的顶点由 0 至 $n-1$ 顺时针标号。 接着的 $n-2$ 行描述组成多边形的三角形。第 $i+1$ 行 $(1 \\leq i \\leq n-2)$ 有三个空格分隔的非负整数 a 、b 、c ，它们是第 i 个三角形的顶点编号。第一个给出的三角形是黑色的。 输出格式 只有一行，倘若野猫有必胜策略，输出 `JMcat Win`；否则，输出 `PZ Win`（注意大小写和空格）。 输入输出样例 输入样例 #1 6 0 1 2 2 4 3 4 2 0 0 5 4 输出样例 #1 JMcat Win 说明 $4 \\leq n \\leq 5 \\times 10^4$。 如果连接一个多边形中任意两点的线段都完全包含于这个多边形，则称这个多边形为凸多边形。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:猫狗大战 题目描述 新一年度的猫狗大战通过 SC（星际争霸）这款经典的游戏来较量，野猫和飞狗这对冤家为此已经准备好久了，为了使战争更有难度和戏剧性，双方约定只能选择 Terran（人族）并且只能造机枪兵。 比赛开始了，很快，野猫已经攒足几队机枪兵，试探性的发动进攻；然而，飞狗的机枪兵个数也已经不少了。野猫和飞狗的兵在飞狗的家门口相遇了，于是，便有一场腥风血雨和阵阵惨叫声。由于是在飞狗的家门口，飞狗的兵补给会很快，野猫看敌不过，决定撤退。这时飞狗的兵力也不足够多，所以没追出来。 由于不允许造医生，机枪兵没办法补血。受伤的兵只好忍了。 现在，野猫又攒足了足够的兵力，决定发起第二次进攻。为了使这次进攻给狗狗造成更大的打击，野猫决定把现有的兵分成两部分，从两路进攻。由于有些兵在第一次战斗中受伤了，为了使两部分的兵实力平均些，分的规则是这样的： 1) 两部分兵的个数最多只能差一个； 2) 每部分兵的血值总和必须要尽可能接近。现在请你编写一个程序，给定野猫现在有的兵的个数以及每个兵的血格值，求出野猫按上述规则分成两部分后每部分兵的血值总和。 输入输出格式 输入格式 第一行为一个整数 $n\\ (1 \\le n \\le 200)$，表示野猫现在有的机枪兵的个数。以下的 n 行每行一个整数，表示每个机枪兵的血格 $(1 \\le a_i \\le 40)$。 输出格式 一行，为两个整数，表示分成两部分后每部分兵的血值总和。 输入输出样例 输入样例 #1 3 35 20 32 输出样例 #1 35 52 说明 TO 狗狗：这道题的数据范围我已经尽量按星际的游戏规则来了，如果你再固执于由于机枪兵的攻击力一定使不能达到某些血格值或者游戏中一定要造农民不能使机枪兵的人数达到 $200$ 的话，我只能决定将那场猫狗大战的录像公开于世人了！！！"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:买蛋糕 题目描述 野猫过生日，大家当然会送礼物了（咳咳，没送礼物的同志注意了哈！！），由于不知道送什么好，又考虑到实用性等其他问题，大家决定合伙给野猫买一个生日蛋糕。大家不知道最后要买的蛋糕的准确价格，而只会给蛋糕估价，即要买一个不超过多少钱的蛋糕。众 OIer 借此发挥：能否用最少的钱币数去凑成估价范围内的所有价值，使得不管蛋糕价值多少，都不用找钱…… 现在问题由此引出：对于一个给定的 n，能否用最少的不等的正整数去组成 n 以内（包括 n）的所有的正整数呢？如果能，最少需要多少个正整数，用最少个数又有多少不同的组成方法呢？ 输入输出格式 输入格式 只有一行包含一个整数 $n\\ (1\\le n\\le 1000)$。   输出格式 一行两个数，第一个数是最少需要多少个数，第二个数是用最少个数的组成方案个数。两个答案用空格分隔。 输入输出样例 输入样例 #1 6  输出样例 #1 3 2  说明 最少用三个数，有两种方法，分别是：$1,2,3$ 和 $1,2,4$。 - 对于 $1,2,3$ 有 $1,2,3，1+3，2+3，1+2+3$； - 对于 $1,2,4$ 有 1，2，$1+2，4，1+4，2+4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:集合位置 题目描述 每次有大的活动，大家都要在一起“聚一聚”，不管是去好乐迪，还是避风塘，或者汤姆熊，大家都要玩的痛快。还记得心语和花儿在跳舞机上的激情与释放，还记得草草的投篮技艺是如此的高超，还记得狗狗的枪法永远是'S'……还有不能忘了，胖子的歌声永远是让我们惊叫的！！ 今天是野猫的生日，所以想到这些也正常，只是因为是上学日，没法一起去玩了。但回忆一下那时的甜蜜总是一种幸福嘛。。。 但是每次集合的时候都会出现问题！野猫是公认的“路盲”，野猫自己心里也很清楚，每次都提前出门，但还是经常迟到，这点让大家很是无奈。后来，野猫在每次出门前，都会向花儿咨询一下路径，根据已知的路径中，总算能按时到了。 现在提出这样的一个问题：给出 n 个点的坐标，其中第一个为野猫的出发位置，最后一个为大家的集合位置，并给出哪些位置点是相连的。野猫从出发点到达集合点，总会挑一条最近的路走，如果野猫没找到最近的路，他就会走第二近的路。请帮野猫求一下这条第二最短路径长度。 输入输出格式 输入格式 第一行是两个整数 $n(1 \\le n \\le 200)$ 和 m，表示一共有 n 个点和 m 条路，以下 n 行每行两个数 $x_i，y_i，(-500 \\le x_i,y_i \\le 500),$ 代表第 i 个点的坐标，再往下的 m 行每行两个整数 $p_j，q_j,(1 \\le p_j,q_j \\le n)$，表示两个点相通。 输出格式 只有一行包含一个数，为第二最短路线的距离（保留两位小数），如果存在多条第一短路径，则答案就是第一最短路径的长度；如果不存在第二最短路径，输出 `-1`。 输入输出样例 输入样例 #1 3 3  0 0  1 1  0 2  1 2  1 3  2 3  输出样例 #1 2.83"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:猩猩散步 题目描述 猩猩，骆驼，还有泡泡经常喜欢在饭后到操场上散步，由于猩猩的走路姿势最突出最显眼，理所应当的成为他们中的主角，所以我的题目就说猩猩散步了。（骆驼和泡泡别有意见哈，和猩猩争啥……） 当然，话说回来，猩猩在 OI 上的能力也是不容低估的，你看，散步时还会想一道与此相关的问题，这是道经典的不能再经典的问题了。 在一个 $m×n$ 的矩阵上，猩猩在左下角的顶点出现了，他只能沿着路径向上或者向右走，他的目标是“蠕动”到右上角的顶点，问他有多少路径可以选择。嗯，这个、这个、这个似乎地球人都知道怎么做，但是请注意，我有个条件没给呢！m 和 n 现在的最大范围是 $5\\times 10^4$，这可怎么办？仔细想想吧。 输入输出格式 输入格式 只有一行，包含两个整数 m 和 n，其上限均为 $5\\times 10^4$。 输出格式 由于最后的答案数目过大，所以只检查后 $100$ 位，输出时每行十个数字，没空格间隔，共十行，如果答案位数没超过 $100$ 位，则需要在空位上补 0。   输入输出样例 输入样例 #1 7 4  输出样例 #1 0000000000  0000000000  0000000000  0000000000  0000000000  0000000000  0000000000  0000000000  0000000000  0000000330"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:分梨子 题目描述 Finley 家的院子里有棵梨树，最近收获了许多梨子。于是，Finley 决定挑出一些梨子，分给幼稚园的宝宝们。可是梨子大小味道都不太一样，一定要尽量挑选那些差不多的梨子分给孩子们，那些分到小梨子的宝宝才不会哭闹。 每个梨子都具有两个属性值，$A_i$ 和 $B_i$，本别表示梨子的大小和甜度情况。假设在选出的梨子中，两个属性的最小值分别是 $A_0$ 和 $B_0$。只要对于所有被选出的梨子 i，都满足 $C_1 \\times (A_i-A_0)+C_2 \\times (B_i-B_0) \\le C_3$（其中，$C_1,C_2$ 和 $C_3$ 都是已知的常数），就可以认为这些梨子是相差不多的，可以用来分给小朋友们。 那么，作为幼稚园园长的你，能算出最多可以挑选出多少个梨子吗？ 输入输出格式 输入格式 第一行一个整数 N（$1 \\le N \\le 2000$），表示梨子的总个数。 第二行三个正整数，依次为 $C_1,C_2$ 和 $C_3（C_1,C_2 \\le 2000，C_3 \\le 10^9$）。 接下来的 N 行，每行两个整数。第 i 行的两个整数依次为 $A_i$ 和 $B_i$。 输出格式 只有一个整数，表示最多可以选出的梨子个数。 输入输出样例 输入样例 #1 3  2 3 6  3 2  1 1  2 1  输出样例 #1 2  说明 ### 样例说明 可以选择 $1,3$ 两个梨子或者 $2,3$ 两个梨子。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[国家集训队] 小 Z 的袜子 题目描述 upd on 2020.6.10 ：更新了时限。 作为一个生活散漫的人，小 Z 每天早上都要耗费很久从一堆五颜六色的袜子中找出一双来穿。终于有一天，小 Z 再也无法忍受这恼人的找袜子过程，于是他决定听天由命…… 具体来说，小 Z 把这 N 只袜子从 1 到 N 编号，然后从编号 L 到 R (L 尽管小 Z 并不在意两只袜子是不是完整的一双，甚至不在意两只袜子是否一左一右，他却很在意袜子的颜色，毕竟穿两只不同色的袜子会很尴尬。 你的任务便是告诉小 Z，他有多大的概率抽到两只颜色相同的袜子。当然，小 Z 希望这个概率尽量高，所以他可能会询问多个 $(L,R)$ 以方便自己选择。 **然而数据中有 $L=R$ 的情况，请特判这种情况，输出`0/1`。** 输入输出格式 输入格式 输入文件第一行包含两个正整数 N 和 M。N 为袜子的数量，M 为小 Z 所提的询问的数量。接下来一行包含 N 个正整数 $C_i$，其中 $C_i$ 表示第 i 只袜子的颜色，相同的颜色用相同的数字表示。再接下来 M 行，每行两个正整数 $L, R$ 表示一个询问。 输出格式 包含 M 行，对于每个询问在一行中输出分数 $A/B$ 表示从该询问的区间 $[L,R]$ 中随机抽出两只袜子颜色相同的概率。若该概率为 0 则输出 `0/1`，否则输出的 $A/B$ 必须为最简分数。（详见样例） 输入输出样例 输入样例 #1 6 4 1 2 3 3 3 2 2 6 1 3 3 5 1 6 输出样例 #1 2/5 0/1 1/1 4/15 说明 $30\\%$ 的数据中，$N,M\\leq 5000$； $60\\%$ 的数据中，$N,M \\leq 25000$； $100\\%$ 的数据中，$N,M \\leq 50000，1 \\leq L < R \\leq N，C_i \\leq N$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:【模板】中国剩余定理（CRT）/ 曹冲养猪 题目描述 自从曹冲搞定了大象以后，曹操就开始捉摸让儿子干些事业，于是派他到中原养猪场养猪，可是曹冲满不高兴，于是在工作中马马虎虎，有一次曹操想知道母猪的数量，于是曹冲想狠狠耍曹操一把。举个例子，假如有 $16$ 头母猪，如果建了 3 个猪圈，剩下 1 头猪就没有地方安家了。如果建造了 5 个猪圈，但是仍然有 1 头猪没有地方去，然后如果建造了 7 个猪圈，还有 2 头没有地方去。你作为曹总的私人秘书理所当然要将准确的猪数报给曹总，你该怎么办？ 输入输出格式 输入格式 第一行包含一个整数 n —— 建立猪圈的次数，接下来 n 行，每行两个整数 $a_i, b_i$，表示建立了 $a_i$ 个猪圈，有 $b_i$ 头猪没有去处。你可以假定 $a_1 \\sim a_n$ 互质。 输出格式 输出包含一个正整数，即为曹冲至少养母猪的数目。 输入输出样例 输入样例 #1 3 3 1 5 1 7 2 输出样例 #1 16 说明 $1 \\leq n\\le10，0 \\leq b_i\\lt a_i\\le100000，1 \\leq \\prod a_i \\leq 10^{18}$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:曹操气急败坏的把你找来，要你钻入火海把连环线上着火的船只的长度统计出来！ 题目描述 给定每个起火部分的起点和终点，请你求出燃烧位置的长度之和。 输入输出格式 输入格式 第一行一个整数，表示起火的信息条数 n。   接下来 n 行，每行两个整数 $a, b$，表示一个着火位置的起点和终点（**注意：左闭右开**）。 输出格式 输出一行一个整数表示答案。 输入输出样例 输入样例 #1 3 -1 1 5 11 2 9 输出样例 #1 11 说明 ### 数据规模与约定 对于全部的测试点，保证 $1 \\leq n \\leq 2 \\times 10^4，-2^{31} \\leq a \\leq  b \\lt 2^{31}$，且答案小于 $2^{31}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:可是在现实中它有个缺陷，就是两个不能在同一行或同一列！ 题目描述 孔明兴高采烈的叫庞统来参观，孔明存心想难一难庞统，他把 k 个木牛流马放在一个大的 $n \\times n$ 的格子地板上，并且给他们都染上色，想让庞统帮着算算有多少种不同的合理布局情况？ 输入输出格式 输入格式 第一行: $n, k, h（n \\le 20，h$ 为有多少种颜色）。 接下来 h 行为每种颜色多少个。 输出格式 合理布局情况总数。 输入输出样例 输入样例 #1 4 4 1 4 输出样例 #1 24 说明 不需要高精度，并且孔明规定在格子地板上不能翻转，也就是说如果两种布局在翻转后是一样的仍算两种。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:自从到了南蛮之地，孔明不仅把孟获收拾的服服帖帖，而且还发现了不少少数民族的智慧，他发现少数民族的图腾往往有着一种分形的效果，在得到了酋长的传授后，孔明掌握了不少绘图技术，但唯独不会画他们的图腾，于是他找上了你的爷爷的爷爷的爷爷的爷爷……帮忙，作为一个好孙子的孙子的孙子的孙子……你能做到吗？ 题目描述 给定一个正整数 n，参考输出样例，输出图形。 输入输出格式 输入格式 每个数据输入一个正整数 n，表示图腾的大小（此大小非彼大小） 输出格式 这个大小的图腾 输入输出样例 输入样例 #1 2 输出样例 #1    /\\   /__\\  /\\  /\\ /__\\/__\\ 输入样例 #2 3 输出样例 #2        /\\       /__\\      /\\  /\\     /__\\/__\\    /\\      /\\   /__\\    /__\\  /\\  /\\  /\\  /\\ /__\\/__\\/__\\/__\\ 说明 数据保证，$1 \\leq n \\leq 10$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[CTSC2000] 公路巡逻 题目描述 在一条没有分岔的高速公路上有 n 个关口，相邻两个关口之间的距离都是 $10\\rm km$ 。所有车辆在这条高速公路上的最低速度为 $60\\rm km/h$ ，最高速度为 $120\\rm km/h$，并且只能在关口处改变速度。 巡逻的方式是在某个时刻 $T_{i}$ 从第 $n_{i}$ 个关口派出一辆巡逻车匀速驶抵第 $n_{i+1}$ 个关口，路上耗费的时间为 $t_{i}$ 秒。 两辆车相遇是指它们之间发生超车或者两车同时到达某关口（同时出发不算相遇）。 巡逻部门想知道一辆于 6 点整从第 1 个关口出发去第 n 个关口的车（称为目标车）最少会与多少辆巡逻车相遇，请编程计算之。假设所有车辆到达关口的时刻都是整秒。 输入输出格式 输入格式 输入文件第一行为两个整数，分别为关口数 n 和巡逻车数 m 。 接下来的 m 行每一行为一辆巡逻车的信息（按出发位置递增排序），格式为 $n_{i}，T_{i}，t_{i}$，分别表示第 i 辆巡逻车的出发位置、出发时刻和路上耗费的时间，其中 $n_{i}$ 和 $T_{i}$ 为整数， $T_{i}$ 形如 `HHMMSS`，表示时、分、秒，采用 $24$ 小时制，不足两位的数用前置 0 补齐。 输出格式 输出文件第一行为目标车与巡逻车相遇次数。 第二行为目标车与巡逻车相遇次数最少时最早到达第 n 个关口的时刻（格式同输入中的 $T_{i}$ ）。 输入输出样例 输入样例 #1 3 2 1 060000 301 2 060300 600 输出样例 #1 0 061301 说明 $1 < n < 50，1 < m < 300，1 \\leq  n_{i} < n，300 \\leq i \\leq 600$，所有的 $T_i$ 不早于 $05:00$，不晚于 $23:00$。 CTSC2000 第一试"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:月下老人告诉丘比特，纯洁的爱情并不是不存在，而是他没有找到。在东方，人们讲究的是缘分。月下老人只要做一男一女两个泥人，在他们之间连上一条红线，那么它们所代表的人就会相爱——无论他们身处何地。而丘比特的爱情之箭只能射中两个距离相当近的人，选择的范围自然就小了很多，不能找到真正的有缘人。 题目描述 情人节（Valentine's day）的午夜零时，丘比特开始了自己的工作。他选择了一组数目相等的男女，感应到他们互相之间的缘分大小，并依此射出了神箭，使他们产生爱意。他希望能选择最好的方法，使被他选择的每一个人被射中一次，且每一对被射中的人之间的缘分的和最大。 当然，无论丘比特怎么改造自己的弓箭，总还是存在缺陷的。首先，弓箭的射程尽管增大了，但毕竟还是有限的，不能像月下老人那样，做到“千里姻缘一线牵”。其次，无论怎么改造，箭的轨迹终归只能是一条直线，也就是说，如果两个人之间的连线段上有别人，那么莫不可向他们射出丘比特之箭，否则，按月下老人的话，就是“乱点鸳鸯谱”了。 作为一个凡人，你的任务是运用先进的计算机为丘比特找到最佳的方案。 输入输出格式 输入格式 输入第一行为正整数 k，表示丘比特之箭的射程。 第二行为正整数 n。 随后有 $2 \\times n$ 行，表示丘比特选中的人的信息，其中前 n 行为男子，后 n 行为女子。 每个人的信息由两部分组成：他的姓名和他的位置。姓名是长度小于 $20$ 且仅包含字母的字符串，忽略大小写的区别，位置是由一对整数表示的坐标，它们之间用空格分隔。格式为 ```x y Name```。 输入文件剩下的部分描述了这些人的缘分。每一行的格式为 ```Name1 Name2 p```。 `Name1` 和 `Name2` 为有缘人的姓名，p 是他们之间的缘分值（p 为小于等于 $255$ 的正整数）。 以一个 ```End``` 作为文件结束标志。 每两个人之间的缘分至多只被描述一次。如果没有被描述，则说明他们缘分值为 1。 输出格式 输出仅一个正整数，表示每一对被射中的人之间的缘分的总和。这个和应当是最大的。 输入输出样例 输入样例 #1 2 3 0 0 Adam 1 1 Jack 0 2 George 1 0 Victoria 0 1 Susan 1 2 Cathy Adam Cathy 100 Susan George 20 George Cathy 40 Jack Susan 5 Cathy Jack 30 Victoria Jack 20 Adam Victoria 15 End 输出样例 #1 65 说明 $1\\le n\\le 30$。 CTSC2000 第二试"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[国家集训队] Tree II 题目描述 一棵 n 个点的树，每个点的初始权值为 1。   对于这棵树有 q 个操作，每个操作为以下四种操作之一： - `+ u v c`：将 u 到 v 的路径上的点的权值都加上自然数 c； - `- u1 v1 u2 v2`：将树中原有的边 $(u_1,v_1)$ 删除，加入一条新边 $(u_2,v_2)$，保证操作完之后仍然是一棵树； - `* u v c`：将 u 到 v 的路径上的点的权值都乘上自然数 c； - `/ u v`：询问 u 到 v 的路径上的点的权值和，将答案对 $51061$ 取模。 输入输出格式 输入格式 第一行两个整数 $n,q$。 接下来 $n-1$ 行每行两个正整数 $u,v$，描述这棵树的每条边。 接下来 q 行，每行描述一个操作。 输出格式 对于每个询问操作，输出一行一个整数表示答案。 输入输出样例 输入样例 #1 3 2 1 2 2 3 * 1 3 4 / 1 1 输出样例 #1 4 说明 【数据范围】    对于 $10\\%$ 的数据，$1\\le n,q \\le 2000$；    另有 $15\\%$ 的数据，$1 \\le n,q \\le 5\\times 10^4$，没有 `-` 操作，并且初始树为一条链；     另有 $35\\%$ 的数据，$1 \\le n,q \\le 5\\times 10^4$，没有 `-` 操作；   对于 $100\\%$ 的数据，$1\\le n,q \\le 10^5，0\\le c \\le 10^4$。 By (伍一鸣)"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 晚上，小卡从阳台望出去，“哇~~~~好多星星啊”，但他还没给其他房间设一个窗户。    天真的小卡总是希望能够在晚上能看到最多最亮的星星，但是窗子的大小是固定的，边也必须和地面平行。   这时小卡使用了超能力（透视术）知道了墙后面每个星星的位置和亮度，但是小卡发动超能力后就很疲劳，只好拜托你告诉他最多能够有总和多亮的星星能出现在窗口上。 输入输出格式 输入格式 本题有多组数据，第一行为 T，表示有 T 组数据。 对于每组数据： 第一行 3 个整数 $n,W,H$ 表示有 n 颗星星，窗口宽为 W，高为 H。 接下来 n 行，每行三个整数 $x_i,y_i,l_i$ 表示星星的坐标在 $(x_i,y_i)$，亮度为 $l_i$。 输出格式 T 个整数，表示每组数据中窗口星星亮度总和的最大值。 输入输出样例 输入样例 #1 2 3 5 4 1 2 3 2 3 2 6 3 1 3 5 4 1 2 3 2 3 2 5 3 1 输出样例 #1 5 6 说明 为了便于理解，输入样例中每组数据之间添加了空行，实际测试数据中并无空行。 小卡买的窗户框是金属做的，所以在边框上的不算在内。 ### 数据范围 对于 $100\\%$ 的数据：$1\\le T \\le 10，1\\le n \\le 10^4，1\\le W,H \\le 10^6，0\\le x_i,y_i < 2^{31}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 县城里有 n 个用地道相连的房子，第 i 个只与第 $i-1$ 和第 $i+1$ 个相连。这时有 m 个消息依次传来： 1. 若消息为 ```D x```：鬼子将 x 号房子摧毁了，地道被堵上。 1. 若消息为 ```R``` ：村民们将鬼子上一个摧毁的房子修复了。 2. 若消息为 ```Q x```：有一名士兵被围堵在 x 号房子中。 李云龙收到信息很紧张，他想知道每一个被围堵的士兵能够到达的房子有几个。 输入输出格式 输入格式 第一行两个整数 $n,m$。 接下来 m 行，有如题目所说的三种信息共 m 条。 输出格式 对于每一个被围堵的士兵，输出该士兵能够到达的房子数。 输入输出样例 输入样例 #1 7 9 D 3 D 6 D 5 Q 4 Q 5 R Q 4 R Q 4 输出样例 #1 1 0 2 4 说明 $1\\leq n,m\\leq 5\\times 10^4$。 若士兵被围堵在摧毁了的房子中，那只能等死了。。。。。。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:积木城堡 题目描述 XC 的儿子小 XC 最喜欢玩的游戏用积木垒漂亮的城堡。城堡是用一些立方体的积木垒成的，城堡的每一层是一块积木。   小 XC 是一个比他爸爸 XC 还聪明的孩子，他发现垒城堡的时候，如果下面的积木比上面的积木大，那么城堡便不容易倒。所以他在垒城堡的时候总是遵循这样的规则。 小 XC 想把自己垒的城堡送给幼儿园里漂亮的女孩子们，这样可以增加他的好感度。为了公平起见，他决定把送给每个女孩子一样高的城堡，这样可以避免女孩子们为了获得更漂亮的城堡而引起争执。   可是他发现自己在垒城堡的时候并没有预先考虑到这一点。所以他现在要改造城堡。由于他没有多余的积木了，他灵机一动，想出了一个巧妙的改造方案。他决定从每一个城堡中挪去一些积木，使得最终每座城堡都一样高。为了使他的城堡更雄伟，他觉得应该使最后的城堡都尽可能的高。 任务： 请你帮助小 XC 编一个程序，根据他垒的所有城堡的信息，决定应该移去哪些积木才能获得最佳的效果。 注意：一座城堡的高度，是组成它的所有积木的棱长之和。 输入输出格式 输入格式 第一行是一个整数 n，表示一共有 n 座城堡。   以下 n 行每行是一系列非负整数，用一个空格分隔，按从下往上的顺序依次给出一座城堡中所有积木的**棱长**。用 `-1` 结束。 输出格式 一个整数，表示最后城堡的最大可能的高度。   如果找不到合适的方案，则输出 0。 输入输出样例 输入样例 #1 2 2 1 -1 3 2 1 -1 输出样例 #1 3 说明 【数据范围】   对于 $100\\%$ 的数据，$1 \\le n \\le 100$，一座城堡中的积木不超过 $100$ 块，每块积木的棱长不超过 $100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 给定一棵 n 个节点的树，边带权，编号 $0 \\sim n-1$，需要支持五种操作： - `C i w` 将输入的第 i 条边权值改为 w - `N u v` 将 $u,v$ 节点之间的边权都变为相反数 - `SUM u v` 询问 $u,v$ 节点之间边权和 - `MAX u v` 询问 $u,v$ 节点之间边权最大值 - `MIN u v` 询问 $u,v$ 节点之间边权最小值 保证任意时刻所有边的权值都在 $[-1000,1000]$ 内。 输入输出格式 输入格式 第一行一个正整数 n，表示节点个数。   接下来 $n-1$ 行，每行三个整数 $u,v,w$，表示 $u,v$ 之间有一条权值为 w 的边，描述这棵树。       然后一行一个正整数 m，表示操作数。   接下来 m 行，每行表示一个操作。 输出格式 对于每一个询问操作，输出一行一个整数表示答案。 输入输出样例 输入样例 #1 3 0 1 1 1 2 2 8 SUM 0 2 MAX 0 2 N 0 1 SUM 0 2 MIN 0 2 C 1 3 SUM 0 2 MAX 0 2 输出样例 #1 3 2 1 -1 5 3 说明 【数据范围】   对于 $100\\%$ 的数据，$1\\le n,m \\le 2\\times 10^5$。 2020.02.04 修正了一点数据的错误   2020.03.14 加入了一组 hack 数据   2020.11.26 加入了一组 hack 数据 By @_Leaving"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 oibh 被突来的洪水淹没了，还好 oibh 总部有在某些重要的地方起一些围墙。用 `*` 号表示，而一个四面被围墙围住的区域洪水是进不去的。 oibh 总部内部也有许多重要区域，每个重要区域在图中用一个 `0` 表示。 现在给出 oibh 的围墙建设图，问有多少个没被洪水淹到的重要区域。 输入输出格式 输入格式 第一行为两个正整数 $x,y$。 接下来 x 行，每行 y 个整数，由 `*` 和 `0` 组成，表示 oibh 总部的建设图。 输出格式 输出没被水淹没的 oibh 总部的 `0` 的数量。 输入输出样例 输入样例 #1 4 5 00000 00*00 0*0*0 00*00 输出样例 #1 1 输入样例 #2 5 5 ***** *0*0* **0** *0*0* ***** 输出样例 #2 5 说明 对于 $100\\%$ 的数据，$1 \\le x,y \\le 500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:NASA（美国航空航天局）因为航天飞机的隔热瓦等其他安全技术问题一直大伤脑筋，因此在各方压力下终止了航天飞机的历史，但是此类事情会不会在以后发生，谁也无法保证。所以，在遇到这类航天问题时，也许只能让航天员出仓维修。但是过多的维修会消耗航天员大量的能量，因此 NASA 便想设计一种食品方案，使体积和承重有限的条件下多装载一些高卡路里的食物。 题目描述 航天飞机的体积有限，当然如果载过重的物品，燃料会浪费很多钱，每件食品都有各自的体积、质量以及所含卡路里。在告诉你体积和质量的最大值的情况下，请输出能达到的食品方案所含卡路里的最大值，当然每个食品只能使用一次。 输入输出格式 输入格式 第一行 2 个整数，分别代表体积最大值 h 和质量最大值 t。  第二行 1 个整数代表食品总数 n。  接下来 n 行每行 3 个数 体积 $h_i$，质量 $t_i$，所含卡路里 $k_i$。  输出格式 一个数，表示所能达到的最大卡路里（`int` 范围内） 输入输出样例 输入样例 #1 320 350 4 160 40 120 80 110 240 220 70 310 40 400 220 输出样例 #1 550 说明 对于 $100\\%$ 的数据，$h,t,h_i,t_i \\le 400，n \\le 50，k_i \\le 500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 正处在某一特定时期之中的李大水牛由于消化系统比较发达，最近一直处在饥饿的状态中。某日上课，正当他饿得头昏眼花之时，眼前突然闪现出了一个 $n \\times m(n,m \\le 200)$ 的矩型的巨型大餐桌，而自己正处在这个大餐桌的一侧的中点下边。餐桌被划分为了 $n \\times m$ 个小方格，每一个方格中都有一个圆形的巨型大餐盘，上面盛满了令李大水牛朝思暮想的食物。李大水牛已将餐桌上所有的食物按其所能提供的能量打了分（有些是负的，因为吃了要拉肚子），他决定从自己所处的位置吃到餐桌的另一侧，但他吃东西有一个习惯——只吃自己前方或左前方或右前方的盘中的食物。 由于李大水牛已饿得不想动脑了，而他又想获得最大的能量，因此，他将这个问题交给了你。 每组数据的出发点都是最后一行的中间位置的下方！ 输入输出格式 输入格式 第一行为m n（n为奇数），李大水牛一开始在最后一行的中间的下方 接下来为m\\*n的数字距阵. 共有m行,每行n个数字.数字间用空格隔开.代表该格子上的盘中的食物所能提供的能量. 数字全是整数. 输出格式 一个数,为你所找出的最大能量值. 输入输出样例 输入样例 #1 6 7 16 4 3 12 6 0 3 4 -5 6 7 0 0 2 6 0 -1 -2 3 6 8 5 3 4 0 0 -2 7 -1 7 4 0 7 -5 6 0 -1 3 4 12 4 2 输出样例 #1 41 说明 快吃！快吃！快吃！"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:但是，拿到这个任务的 sqybi 发现，原来出题比单身更让人感到无聊 -\\_- … 所以，他决定了，要在出题的同时去办另一件能够使自己不无聊的事情——给自己找 GF。 题目描述 sqybi 现在看中了 n 个 MM，我们不妨把她们编号 1 到 n。请 MM 吃饭是要花钱的，我们假设请 i 号 MM 吃饭要花 $rmb[i]$ 块大洋。而希望骗 MM 当自己 GF 是要费人品的，我们假设请第 i 号 MM 吃饭试图让她当自己 GF 的行为（不妨称作泡该 MM）要耗费 $rp[i]$ 的人品。而对于每一个 MM 来说，sqybi 都有一个对应的搞定她的时间，对于第 i 个 MM 来说叫做 $time[i]$。sqybi 保证自己有足够的魅力用 $time[i]$ 的时间搞定第 i 个 MM ^\\_^。 sqybi 希望搞到尽量多的 MM 当自己的 GF，这点是毋庸置疑的。但他不希望为此花费太多的时间（毕竟七夕赛的题目还没出），所以他希望在保证搞到 MM 数量最多的情况下花费的总时间最少。 sqybi 现在有 m 块大洋,他也通过一段时间的努力攒到了 r 的人品（这次为模拟赛出题也攒 rp 哦\\~\\~）。他凭借这些大洋和人品可以泡到一些 MM。他想知道，自己泡到最多的 MM 花费的最少时间是多少。 注意 sqybi 在一个时刻只能去泡一个 MM ——如果同时泡两个或以上的 MM 的话，她们会打起来的… 输入输出格式 输入格式 输入的第一行是 n，表示 sqybi 看中的 MM 数量。 接下来有 n 行，依次表示编号为 $1, 2, 3, \\ldots , n$ 的一个 MM 的信息。每行表示一个 MM 的信息，有三个整数：$rmb，rp$ 和 $time$。 最后一行有两个整数，分别为 m 和 r。 输出格式 你只需要输出一行，其中有一个整数，表示 sqybi 在保证 MM 数量的情况下花费的最少总时间是多少。 输入输出样例 输入样例 #1 4 1 2 5 2 1 6 2 2 2 2 2 3 5 5 输出样例 #1 13 说明 sqybi 说：如果题目里说的都是真的就好了… sqybi 还说，如果他没有能力泡到任何一个 MM，那么他就不消耗时间了（也就是消耗的时间为 0），他要用这些时间出七夕比赛的题来攒 rp… **【数据规模】** 对于 $20 \\%$ 的数据，$1 \\le n \\le 10$；   对于 $100 \\%$ 的数据，$1 \\le rmb \\le 100，1 \\le rp \\le 100，1 \\le time \\le 1000$。   对于 $100 \\%$ 的数据，$1 \\le m, r, n \\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:精卫填海 题目描述 本题为改编题。 > 发鸠之山，其上多柘木。有鸟焉，其状如乌，文首，白喙，赤足，名曰精卫，其名自詨。是炎帝之少女，名曰女娃。女娃游于东海，溺而不返，故为精卫。常衔西山之木石，以堙于东海。——《山海经》 精卫终于快把东海填平了！只剩下了最后的一小片区域了。同时，西山上的木石也已经不多了。精卫能把东海填平吗？ 事实上，东海未填平的区域还需要至少体积为 v 的木石才可以填平，而西山上的木石还剩下 n 块，每块的体积和把它衔到东海需要的体力分别为 k 和 m。精卫已经填海填了这么长时间了，她也很累了，她还剩下的体力为 c。 输入输出格式 输入格式 输入文件的第一行是三个整数：$v,n,c$。 从第二行到第 $n+1$ 行分别为每块木石的体积和把它衔到东海需要的体力。 输出格式 输出文件只有一行，如果精卫能把东海填平，则输出她把东海填平后剩下的最大的体力，否则输出 `Impossible`（不带引号）。 输入输出样例 输入样例 #1 100 2 10 50 5 50 5 输出样例 #1 0 输入样例 #2 10 2 1 50 5 10 2 输出样例 #2 Impossible 说明 ### 数据范围及约定 - 对于 $20\\%$ 的数据，$0<n \\le 50$； - 对于 $50\\%$ 的数据，$0<n \\le 1000$； - 对于 $100\\%$ 的数据，$0<n \\le 10^4$，所有读入的数均属于 $[0,10^4]$，最后答案不大于 c。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:George 很喜欢数学，尤其是算数数系列。 题目描述 他最喜欢的是数字的无穷序列，结果是把所有的自然数按升序排列。这个序列开始是：$\\texttt{1234567891011121314...}$ 我们称这个序列为序列 S，然后 $S_1 = 1$, $S_2 = 2$, ... , $S_{10} = 1$, $S_{11} = 0$，依此类推. George 现有一个数字序列 A ，他想知道这个序列在 S 中最早出现的位置。请你帮助他解决这个问题。 输入输出格式 输入格式 输入一个字符串，表示数字序列 A ，位数不超过 $200$，中间没有空格。 输出格式 输出使 $A_1 = S_k, A_2 = S_{k+1}, ...,A_{len_{A}} = S_{k + len(A)-1}$ 成立的最小正整数 k，其中 $len_{A}$ 表示序列 A 的长度。 输入输出样例 输入样例 #1 101  输出样例 #1 10  说明 来源 Source Ural State University Problem Archive"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:伊甸园日历游戏 题目描述 Adam 和 Eve 玩一个游戏，他们先从 $1900.1.1$ 到 $2006.11.4$ 这个日期之间随意抽取一个日期出来。然后他们轮流对这个日期进行操作： 1. 把日期的天数加 1，例如 $1900.1.1$ 变到 $1900.1.2$； 2. 把月份加 1，例如：$1900.1.1$ 变到 $1900.2.1$。 其中如果天数超过应有天数则日期变更到下个月的第 1 天。月份超过 $12$ 则变到下一年的 1 月。而且进行操作二的时候，如果有这样的日期：$1900.1.31$，则变成了 $1900.2.31$，这样的操作是非法的，我们不允许这样做。而且所有的操作均要考虑历法和闰年的规定。 谁先将日期变到 $2006.11.4$ 谁就赢了。 每次游戏都是 Adam 先操作，问他有没有必胜策略？ 输入输出格式 输入格式 第一行一个整数，为数据组数。 接下来一行 $X,Y,Z$ 表示 X 年 Y 月 Z 日。 输出格式 输出 `YES` 或者 `NO` 表示 Adam 是否有必胜策略。 输入输出样例 输入样例 #1 3 2001 11 3 2001 11 2 2001 10 3 输出样例 #1 YES NO NO"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:绕钉子的长绳子 题目描述 平面上有 N 个圆柱形的大钉子，半径都为 R，所有钉子组成一个凸多边形。 现在你要用一条绳子把这些钉子围起来，绳子直径忽略不计。求出绳子的长度。 输入输出格式 输入格式 第一行共两个数，整数 $N\\ (1 \\le N \\le 100)$ 和实数 R。 接下来 N 行按逆时针顺序给出 N 个钉子中心的坐标。 坐标的绝对值不超过 $100$。 输出格式 一个数，绳子的长度，精确到小数点后 2 位。 输入输出样例 输入样例 #1 4 1  0.0 0.0  2.0 0.0  2.0 2.0  0.0 2.0  输出样例 #1 14.28  说明 本题来自 URAL1020，翻译来自 NOCOW。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:旅行 题目描述 你要进行一个行程为 $7000$ 千米的旅行，现在沿途有些汽车旅馆，为了安全起见，每天晚上都不开车，住在汽车旅馆，你手里现在已经有一个旅馆列表，用离起点的距离来标识，如下： - $[0,990,1010,1970,2030,2940,3060,3930,4060,4970,5030,5990,6010,7000]$。 但在出发之前可能还要增加一些旅馆。 现在旅行社为了节约成本，要求每天至少行驶 A 公里，国家旅行社为了安全起见，要求每天最多只能行驶 B 公里。 你想知道一共有多少种旅行方案。 输入输出格式 输入格式 第一行输入一个整数 A，第二行输入一个整数 B，第三行输入 N（$0 \\le N \\le 20$），表示在出发之前又新增 N 个汽车旅馆； 接下来 N 行，每行一个整数 m，表示旅馆离起点的距离（$0<m<7000$）。注意：没有任意两个旅馆在同一位置。 输出格式 输出一共有多少种旅行方案。 输入输出样例 输入样例 #1 500 1500 0 输出样例 #1 64"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:青蛙的约会 题目描述 两只青蛙在网上相识了，它们聊得很开心，于是觉得很有必要见一面。它们很高兴地发现它们住在同一条纬度线上，于是它们约定各自朝西跳，直到碰面为止。可是它们出发之前忘记了一件很重要的事情，既没有问清楚对方的特征，也没有约定见面的具体位置。不过青蛙们都是很乐观的，它们觉得只要一直朝着某个方向跳下去，总能碰到对方的。但是除非这两只青蛙在同一时间跳到同一点上，不然是永远都不可能碰面的。为了帮助这两只乐观的青蛙，你被要求写一个程序来判断这两只青蛙是否能够碰面，会在什么时候碰面。 我们把这两只青蛙分别叫做青蛙 A 和青蛙 B，并且规定纬度线上东经 0 度处为原点，由东往西为正方向，单位长度 1 米，这样我们就得到了一条首尾相接的数轴。设青蛙 A 的出发点坐标是 x，青蛙 B 的出发点坐标是 y。青蛙 A 一次能跳 m 米，青蛙 B 一次能跳 n 米，两只青蛙跳一次所花费的时间相同。纬度线总长 L 米。现在要你求出它们跳了几次以后才会碰面。 输入输出格式 输入格式 输入只包括一行五个整数 $x,y,m,n,L$。 输出格式 输出碰面所需要的次数，如果永远不可能碰面则输出一行一个字符串 `Impossible`。 输入输出样例 输入样例 #1 1 2 3 4 5 输出样例 #1 4 说明 对于 $100\\%$ 的数据，$1 \\le x \\ne y \\le 2 \\times 10^{9}，1 \\le m, n \\le 2 \\times 10^{9}，1 \\le L \\le 2.1 \\times 10^{9}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:感谢 @SLYZ_0120  提供的翻译。 题目描述 Problems involving the computation of exact values of very large magnitude and precision are common. For example, the computation of the national debt is a taxing experience for many computer systems. This problem requires that you write a program to compute the exact value of Rn where R is a real number ( 0.0 < R <= 9999.9) and n is an integer such that 0 < n <= 250. 输入输出格式 输入格式 The input will consist of a set (less than 11) of pairs of values for R and n. The R value will occupy columns 1 through 6, and the n value will be in columns 8 and 9.       输出格式 The output will consist of one line for each line of input giving the exact value of R^n. Leading zeros should be suppressed in the output. Insignificant trailing zeros must not be printed. Don't print the decimal point if the result is an integer. 输入输出样例 输入样例 #1 95.123  2 0.4321  5 5.1234  7 6.7592  3 98.999  5 1.0100 10 输出样例 #1 9048.385129 .01506334182914325601 92663.3181348508776705891407804544 308.806114738688 9509420210.697891990494999 1.10462212541120451001 说明 If you don't know how to determine wheather encounted the end of input: s is a string and n is an integer C++ while(cin>>s>>n)  {  ... }  c while(scanf( %s%d ,s,&n)==2) //to see if the scanf read in as many items as you want"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.4] 两只塔姆沃斯牛 The Tamworth Two 题目描述 两只牛逃跑到了森林里。Farmer John 开始用他的专家技术追捕这两头牛。你的任务是模拟他们的行为（牛和 John）。 追击在 $10 \\times 10$ 的平面网格内进行。一个格子可以是：一个障碍物，两头牛（它们总在一起），或者 Farmer John。两头牛和 Farmer John 可以在同一个格子内（当他们相遇时），但是他们都不能进入有障碍的格子。 一个格子可以是： - `.` 空地； - `*` 障碍物； - `C` 两头牛； - `F` Farmer John。 这里有一个地图的例子： ```plain *...*..... ......*... ...*...*.. .......... ...*.F.... *.....*... ...*...... ..C......* ...*.*.... .*.*...... ``` 牛在地图里以固定的方式游荡。每分钟，它们可以向前移动或是转弯。如果前方无障碍（地图边沿也是障碍），它们会按照原来的方向前进一步。否则它们会用这一分钟顺时针转 90 度。 同时，它们不会离开地图。 Farmer John 深知牛的移动方法，他也这么移动。 每次（每分钟）Farmer John 和两头牛的移动是同时的。如果他们在移动的时候穿过对方，但是没有在同一格相遇，我们不认为他们相遇了。当他们在某分钟末在某格子相遇，那么追捕结束。 读入十行表示地图。每行都只包含 10 个字符，表示的含义和上面所说的相同。保证地图中只有一个 `F` 和一个 `C`。`F` 和 `C` 一开始不会处于同一个格子中。 计算 Farmer John 需要多少分钟来抓住他的牛，假设牛和 Farmer John 一开始的行动方向都是正北（即上）。 如果 John 和牛永远不会相遇，输出 0。 输入输出格式 输入格式 输入共十行，每行 10 个字符，表示如上文描述的地图。 输出格式 输出一个数字，表示 John 需要多少时间才能抓住牛们。如果 John 无法抓住牛，则输出 0。 输入输出样例 输入样例 #1 *...*..... ......*... ...*...*.. .......... ...*.F.... *.....*... ...*...... ..C......* ...*.*.... .*.*...... 输出样例 #1 49 说明 翻译来自NOCOW USACO 2.4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.4] 穿越栅栏 Overfencing 题目描述 Farmer John 在外面的田野上搭建了一个巨大的用栅栏围成的迷宫。幸运的是，他在迷宫的边界上留出了两段栅栏作为迷宫的出口。更幸运的是，他所建造的迷宫是一个“完美的”迷宫：即你能从迷宫中的任意一点找到一条走出迷宫的路。 给定迷宫的宽度 W（$1 \\leq W \\leq 38$）及高度 H（$1 \\leq H \\leq 100$）。$2 \\times H+1$ 行，每行 $2 \\times W+1$ 的字符以下面给出的格式表示一个迷宫。然后计算从迷宫中最“糟糕”的那一个点走出迷宫所需的步数（即使从这一点以最优的方式走向最靠近的出口，它仍然需要最多的步数）。 当然了，牛们只会水平或垂直地在 X 或 Y 轴上移动，他们从来不走对角线。每移动到一个新的方格算作一步（包括移出迷宫的那一步）。 这是一个 $W=5,H=3$ 的迷宫： ```plain +-+-+-+-+-+ |         | +-+ +-+ + + |     | | | + +-+-+ + + | |     |   +-+ +-+-+-+ ``` 如上图的例子，栅栏的柱子只出现在奇数行或奇数列。每个迷宫只有两个出口。 输入输出格式 输入格式 第一行两个整数 $W,H$。 接下来 $2 \\times H+1$ 行：每行 $2 \\times W+1$ 个字符，描述一个迷宫。 输出格式 输出一个单独的整数，表示最坏情况下牛走出迷宫的最小步数。 输入输出样例 输入样例 #1 5 3 +-+-+-+-+-+ |         | +-+ +-+ + + |     | | | + +-+-+ + + | |     |   +-+ +-+-+-+ 输出样例 #1 9 说明 翻译来自NOCOW USACO 2.4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:某天，小 W 正在上数学课，听见老师讲解因式分解增补删除及十字相乘法的技巧，感觉非常厉害，于是想用这些技巧来做题，但做着做着遇到一道不会做的题，你能帮帮他吗？ 题目描述 在整多项式环内对多项式 $x^n-1$ 作因式分解（简单点说就是做因式分解题），要求分解到全部为素多项式为止（即最后结果不能有可继续分解的多项式）。 输入输出格式 输入格式 输入共一行，一个正整数 n。 输出格式 输出一行一个字符串，表示因式分解的结果。 最后的输出中每个因式应该不含空格，在可以省略 0、1、乘号和括号的情况下应该尽可能省略。 有多个因式时，每个因式应该降幂排列，并且保证首项系数为正。 除此以外，我们要求按如下顺序排列因式： - 优先输出次数低的因式，对于次数相同的因式，依次比较每个因式的系数，从高指数项到低指数项（包括被省略即系数为 0 的项）。 - 系数首先比较绝对值，其次比较符号。规定绝对值小的系数字典序小，绝对值相同时比较符号，负号字典序比正号小。字典序越小的因式应该排在越前面输出。详见样例。 输入输出样例 输入样例 #1 12 输出样例 #1 (x-1)(x+1)(x^2+1)(x^2-x+1)(x^2+x+1)(x^4-x^2+1) 说明 ### 提示 $(x^n-1)/(x+1)=\\cdots$ ### 数据范围及约定 - 对 $20\\%$ 数据，$1 \\le n \\le 200$； - 对 $100\\%$ 数据，$1 \\le n \\le 5000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:求逆序对 题目描述 我们说$(i,j)$ 是 $a_1,a_2,\\cdots,a_N$ 的一个逆序对，当且仅当 $i<j$ 且 $a_i>a_j$。例如 $[2,4,1,3,5]$ 的逆序对有 3 个，分别为 $(1,3),(2, 3), (2, 4)$。现在已知 N 和 K，求 $1,2,3,\\cdots,N$ 的所有特定排列，使得这些排列的逆序对的数量恰好为 K。输出这些特定排列的数量。 例如 $N=5，K=3$ 的时候，满足条件的排列有 $15$ 个，它们是："}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.4] 牛的旅行 Cow Tours 题目描述 Farmer John 的农场里有很多 **牧区**。有的路径连接一些特定的牧区。**一片所有连通的牧区** 称为一个 **牧场**。但是就目前而言，你能看到至少有两个牧区通过任何路径都不连通。这样，Farmer John 就有 **多个** 牧场了。 John 想在牧场里添加 **恰好** 一条路径。对这条路径有以下限制： 一个牧场的 **直径** 就是牧场中 **最远** 的两个牧区的距离（本题中所提到的所有距离指的都是 **最短的距离**）。考虑如下的有 5 个牧区的牧场，牧区用 `*` 表示，路径用直线表示。每一个牧区都有自己的坐标： ```plain                 (15,15) (20,15)                  D       E                  *-------*                  |     _/|                  |   _/  |                  | _/    |                  |/      |         *--------*-------*         A        B       C      (10,10)  (15,10) (20,10) ``` 这个牧场的直径大约是 $12.07106$，最远的两个牧区是 A 和 E，它们之间的最短路径是 $A \\to B \\to E$。 这里是 John 的另一个牧场： ```plain                          *F(30,15)                         /                        _/                       _/                        /                         *------*                    G      H                   (25,10)   (30,10) ``` 在这个例子中，他刚好有这两个牧场。John 将会在这两个牧场中各选一个牧区（即从 $\\{A,B,C,D,E\\}$ 中选择一个牧区，从 $\\{F,G,H\\}$ 中选择一个牧区），然后用一条路径将它们连起来，使得连通后这个新的更大的牧场的直径尽可能小。 注意，如果两条路径中途相交，我们不认为它们是连通的。只有两条路径在同一个牧区相交，我们才认为它们是连通的。 输入文件包括牧区、它们各自的坐标，还有一个如下的对称邻接矩阵： ```plain 　 A  B  C  D  E  F  G  H  A  0  1  0  0  0  0  0  0 B  1  0  1  1  1  0  0  0 C  0  1  0  0  1  0  0  0 D  0  1  0  0  1  0  0  0 E  0  1  1  1  0  0  0  0 F  0  0  0  0  0  0  1  0 G  0  0  0  0  0  1  0  1 H  0  0  0  0  0  0  1  0 ``` 其他邻接表中可能直接使用行列而不使用字母来表示每一个牧区。输入数据中不包括牧区的名字。 输入文件 **至少** 包括两个不连通的牧区。 请编程找出一条连接属于两个 **不同牧场** 的牧区的路径，使得连上这条路径后，这个更大的新牧场的直径尽可能小。输出在所有合法的连接方案中，新牧场直径的最小值。 输入输出格式 输入格式 第一行一个整数 N（$1 \\leq N \\leq 150$），表示牧区数。 接下来 N 行，每行两个整数 $X,Y（0 \\leq X ,Y \\leq 10^5$），表示 N 个牧区的坐标。注意每个牧区的坐标都是不一样的。 接下来 N 行，每行 N 个数字，代表邻接矩阵 M。第 i 行第 j 列的数字为 1，表示 i 号牧区和 j 号牧区之间存在一条道路直接相连；第 i 行第 j 列的数字为 0，表示 i 号牧区和 j 号牧区之间不存在直接相连的道路。 保证 $M_{i,j} = M_{j,i}$。 输出格式 只有一行，包括一个实数，表示所求直径。数字保留六位小数。 只需要打到小数点后六位即可，不要做任何特别的四舍五入处理。 输入输出样例 输入样例 #1 8 10 10 15 10 20 10 15 15 20 15 30 15 25 10 30 10 01000000 10111000 01001000 01001000 01110000 00000010 00000101 00000010 输出样例 #1 22.071068 说明 样例对应题目描述中的情况。 最优解是连接 C 牧区和 G 牧区，连接后图上只有一个牧场。这个牧场的直径为 $A \\to B \\to C \\to G \\to F$，长度约为 $22.071068$。可以证明不存在更优的方案。 USACO 2.4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 本题为著名的 NPC 难题的简化版本。 现在笛卡尔平面上有 $n\\ (n \\le 1000)$ 个点，每个点的坐标为 $(x,y)$，（$-2^{31}<x,y<2^{31}$，且为整数），任意两点之间相互到达的代价为这两点的欧几里德距离，现要你编程求出最短 bitonic tour。 输入输出格式 输入格式 第一行一个整数 n。 接下来 n 行，每行两个整数 $x,y$，表示某个点的坐标。 输入中保证没有重复的两点，保证最西端和最东端都只有一个点。 输出格式 一行，即最短回路的长度，保留 2 位小数。 输入输出样例 输入样例 #1 7  0 6  1 0  2 3  5 4  6 1  7 5  8 2  输出样例 #1 25.58  说明 ### 题目来源 《算法导论（第二版）》 15-1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2003] 智破连环阵 题目描述 B 国在耗资百亿元之后终于研究出了新式武器——连环阵（Zenith Protected Linked Hybrid Zone）。传说中，连环阵是一种永不停滞的自发性智能武器。但经过 A 国间谍的侦察发现，连环阵其实是由 M 个编号为 $1, 2,\\ldots, M$ 的独立武器组成的。最初，1 号武器发挥着攻击作用，其他武器都处在无敌自卫状态。以后，一旦第 i（$1\\leq i< M$）号武器被消灭，1 秒种以后第 $i+1$ 号武器就自动从无敌自卫状态变成攻击状态。当第 M 号武器被消灭以后，这个造价昂贵的连环阵就被摧毁了。 为了彻底打击 B 国科学家，A 国军事部长打算用最廉价的武器——炸弹来消灭连环阵。经过长时间的精密探测，A 国科学家们掌握了连环阵中 M 个武器的平面坐标，然后确定了 n 个炸弹的平面坐标并且安放了炸弹。每个炸弹持续爆炸时间为 5 分钟。在引爆时间内，每枚炸弹都可以在瞬间消灭离它平面距离不超过 k 的、处在攻击状态的 B 国武器。和连环阵类似，最初 $a_1$ 号炸弹持续引爆 5 分钟时间，然后 $a_2$ 号炸弹持续引爆 5 分钟时间，接着 $a_3$ 号炸弹引爆$\\ldots$以此类推，直到连环阵被摧毁。 显然，不同的序列 $a_1, a_2, a_3\\ldots$ 消灭连环阵的效果也不同。好的序列可以在仅使用较少炸弹的情况下就将连环阵摧毁；坏的序列可能在使用完所有炸弹后仍无法将连环阵摧毁。现在，请你决定一个最优序列 $a_1, a_2, a_3\\ldots$ 使得在第 $a_x$ 号炸弹引爆的时间内连环阵被摧毁。这里的 x 应当尽量小。 输入输出格式 输入格式 第一行包含三个整数：M、n 和 k，分别表示 B 国连环阵由 M 个武器组成，A 国有 n 个炸弹可以使用，炸弹攻击范围为 k。以下 M 行，每行由一对整数 $x_i, y_i$ 组成，表示第 i 号武器的平面坐标。再接下来 n 行，每行由一对整数 $u_i, v_i$ 组成，表示第 i 号炸弹的平面坐标。输入数据保证随机、无误、并且必然有解。 输出格式 一行包含一个整数 x，表示实际使用的炸弹数。 输入输出样例 输入样例 #1 4 3 6 0 6 6 6 6 0 0 0 1 5 0 3 1 1 输出样例 #1 2 说明 对于 $100\\%$ 的数据，$1\\leq M, n\\leq 100，1\\leq k\\leq 1000，0\\leq x_i, y_i\\leq 10000，0\\leq u_i, v_i\\leq 10000$。 各个测试点 2 秒。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[国家集训队] 矩阵乘法 题目描述 给你一个 $n \\times n$ 的矩阵，不用算矩阵乘法，但是每次询问一个子矩形的第 k 小数。 输入输出格式 输入格式 第一行有两个整数，分别表示矩阵大小 n 和询问组数 q。 第 2 到第 $(n + 1)$ 行，每行 n 个整数，表示这个矩阵。第 $(i + 1)$ 行的第 j 个数表示矩阵第 i 行第 j 列的数 $a_{i, j}$。 接下来 q 行，每行五个整数 $x_1, y_1, x_2, y_2, k$，表示一组询问，要求找到以 $(x_1, y_1)$ 为左上角，$(x_2, y_2)$ 为右下角的子矩形中的第 k 小数。 输出格式 对于每组询问，输出一行一个整数表示答案。 输入输出样例 输入样例 #1 2 2 2 1 3 4 1 2 1 2 1 1 1 2 2 3 输出样例 #1 1 3 说明 #### 数据规模与约定 - 对于 $20\\%$ 的数据，保证 $n \\leq 100，q \\leq 10^3$。 - 对于 $40\\%$ 的数据，保证 $n \\leq 300，q \\leq 10^4$。 - 对于 $60\\%$ 的数据，保证 $n \\leq 400，q \\leq 3 \\times 10^4$。 - 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 500，1 \\leq q \\leq 6 \\times 10^4，0 \\leq a_{i, j} \\leq 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:切蛋糕 题目描述 Facer今天买了 n 块蛋糕，不料被信息组中球球等好吃懒做的家伙发现了，没办法，只好浪费一点来填他们的嘴巴。他答应给每个人留一口，然后量了量每个人口的大小。Facer 有把刀，可以切蛋糕，但他不能把两块蛋糕拼起来，但是他又不会给任何人两块蛋糕。现在问你，facer 怎样切蛋糕，才能满足最多的人。（facer 的刀很强，切的时候不会浪费蛋糕）。     输入输出格式 输入格式 第一行 n，facer 有 n 个蛋糕。接下来 n 行，每行表示一个蛋糕的大小。再一行一个数 m，为信息组的人数，然后 m 行，每行一个数，为一个人嘴的大小。$(1\\le n\\le 50， 1\\le m\\le 1024)$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.4] 回家 Bessie Come Home 题目描述 现在是晚餐时间，而母牛们在外面分散的牧场中。  Farmer John 按响了电铃，所以她们开始向谷仓走去。 你的工作是要指出哪只母牛会最先到达谷仓（在给出的测试数据中，总会**有且只有**一只最快的母牛）。在挤奶的时候（晚餐前），每只母牛都在她自己的牧场上，一些牧场上可能没有母牛。 每个牧场由一条条道路和一个或多个牧场连接（可能包括自己）。有时，两个牧场（可能是字母相同的）之间会有超过一条道路相连。至少有一个牧场和谷仓之间有道路连接。因此，所有的母牛最后都能到达谷仓，并且母牛总是走最短的路径。当然，母牛能向着任意一方向前进，并且她们以相同的速度前进。牧场被标记为 $\\texttt{a} \\ldots \\texttt{z}$ 和 $\\texttt{A} \\ldots \\texttt{Y}$，在用大写字母表示的牧场中有一只母牛，小写字母中则没有。 谷仓的标记是 $\\texttt{Z}$，注意没有母牛在谷仓中。 **注意 $\\texttt{m}$ 和 $\\texttt{M}$ 不是同一个牧场**。 输入输出格式 输入格式 第一行一个整数 P（$1\\leq P \\leq 10^4$），表示连接牧场（谷仓）的道路的数目。 接下来 P 行，每行用空格分开的两个字母和一个正整数：被道路连接牧场的标号和道路的长度（道路长度均不超过 $10^3$）。 输出格式 单独的一行包含二个项目：最先到达谷仓的母牛所在的牧场的标号，和这只母牛走过的路径的长度。 输入输出样例 输入样例 #1 5 A d 6 B d 3 C e 9 d Z 8 e Z 3 输出样例 #1 B 11 说明 翻译来自 NOCOW USACO 2.4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO2.4] 分数化小数 Fractions to Decimals 题目描述 写一个程序，输入一个形如 $\\dfrac{N}{D}$ 的分数，输出它的小数形式。如果小数有循环节的话，把循环节放在一对圆括号中。 例如，$\\dfrac{1}{3}=0.33333333\\ldots$ 写成 $0.(3)，\\dfrac{41}{333}= 0.123123123\\ldots$ 写成 $0.(123)$，整数 x 写成 $x.0$。 输入输出格式 输入格式 输入包含两个整数 N 和 D（$1 \\leq N,D \\leq 10^5$）。 输出格式 输出按照上面规则计算出的小数表达式。如果结果长度大于 $76$，每行输出 $76$ 个字符。 输入输出样例 输入样例 #1 45 56 输出样例 #1 0.803(571428) 说明 翻译来自NOCOW USACO 2.4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 不管你喜不喜欢，现在需要你做的是，就是按照老师的要求，写一个程序，模拟老师的询问。当然，老师有时候需要更新某位同学的成绩。 输入输出格式 输入格式 第一行，有两个正整数 n 和 m（$0<n \\le 2\\times 10^5,0<m<5000$），分别代表学生的数目和操作的数目。学生 ID 编号分别从 1 编到 n。第二行包含 n 个整数，代表这 n 个学生的初始成绩，其中第 i 个数代表 ID 为 i 的学生的成绩。接下来有 m 行。每一行有一个字符 c（只取 `Q` 或 `U`），和两个正整数 a，b。当 c 为 `Q` 的时候，表示这是一条询问操作，它询问 ID 从 a 到 b（包括 $a,b$） 的学生当中，成绩最高的是多少。当 c 为 `U` 的时候，表示这是一条更新操作，如果当前 a 学生的成绩低于 b，则把 ID 为 a 的学生的成绩更改为 b，否则不改动。 输出格式 对于每一次询问操作，在一行里面输出最高成绩。 输入输出样例 输入样例 #1 5 6 1 2 3 4 5 Q 1 5 U 3 6 Q 3 4 Q 4 5 U 2 9 Q 1 5 输出样例 #1 5 6 5 9"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:卡布列克圆舞曲 题目描述 卡布列克是一位数学家，他在研究数字时发现：任意一个不是用完全相同数字组成的四位数，如果对它们的每位数字重新排序，组成一个较大的数和一个较小的数，然后用较大数减去较小数，差不够四位数时补零，类推下去，最后将变成一个固定的数：$6174$，这就是卡布列克常数，例如： $4321-1234=3087$。 $8730-378=8352$。 $8532-2358=6174$。 $7641-1467=6174$。 如果 K 位数也照此办理，它们不是变成一个数，而是在几个数字之间形成循环，称作卡布列克圆舞曲。例如对于五位数 $54321$： $54321-12345=41976$。 $97641-14679=82962$。 $98622-22689=75933$。 $97533-33579=63954$。 $96543-34569=61974$。 $97641-14679=82962$。 我们把 $82962,75933,63954,61974$ 称作循环节，即卡布列克圆舞曲。 输入输出格式 输入格式 若干行，每行为一个待求“卡布列克圆舞曲”的起始整数 n。（$n<2^{31}$） 输出格式 每行为对应整数的循环节，数据之间用空格隔开。 输入输出样例 输入样例 #1 4321 54321 输出样例 #1 6174 82962 75933 63954 61974"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:可怜的狗狗 题目描述 小卡家有  n 只狗，由于品种、年龄不同，每一只狗都有一个不同的漂亮值。漂亮值与漂亮的程度成反比（漂亮值越低越漂亮），吃饭时，狗狗们会按顺序站成一排等着主人给食物。 可是嘉嘉真的很懒，他才不肯喂这么多狗呢，这多浪费时间啊，于是他每次就只给第  i 只到第  j 只狗中第  k 漂亮的狗狗喂食（好狠心的人啊）。而且为了保证某一只狗狗不会被喂太多次，他喂的每个区间  $[i,j]$ 不互相包含。 输入输出格式 输入格式 第一行输入两个数  $n,m$， m 表示嘉嘉喂食的次数 第二行  n 个整数，表示第  i 只狗的漂亮值为  $a_i$。 接下来  m 行，每行  3 个整数  $i,j,k$，表示询问这次喂食喂第  i 到第  j 只狗中第  k 漂亮的狗的漂亮值。 输出格式 m 行，每行一个整数，表示每一次喂的那只狗漂亮值为多少。 输入输出样例 输入样例 #1 7 2 1 5 2 6 3 7 4 1 5 3 2 7 1 输出样例 #1 3 2 说明 $1\\le n \\le 3\\times 10^5 ,1\\le m \\le5\\times10^4$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:不高兴的津津（升级版） 题目描述 津津上初中了。妈妈认为津津应该更加用功学习，所以津津除了上学之外，还要参加妈妈为她报名的各科复习班。另外每天妈妈还会送她去学习朗诵、舞蹈和钢琴。但是津津如果一天上课超过八个小时就会不高兴，而且上得越久就会越不高兴。 这次与 NOIp2004 普及组第一题不同的是：假设津津不会因为其它事不高兴，但是她的不高兴会（当然高兴也会）持续到第二天。请你帮忙检查一下津津以后 n 天的日程安排，看看以后 n 天她会不会不高兴（计算方法：用昨天不高兴程度加上今天上课总时间减去 8 后得到的数作为今天不高兴程度）；输出以后 n 天结束后不高兴程度和是多少。 输入输出格式 输入格式 第一行共一个数 n。 第二行至第 $n+1$ 行，每行两个数，表示这天上学时间和课外补习班时间。 输出格式 一个数，这 n 天过后的不高兴程度和。 输入输出样例 输入样例 #1 7 5 3 6 2 7 2 5 3 5 4 0 4 0 6 输出样例 #1 -2 说明 ### 数据范围及约定 对于全部数据，上学时间和上课时间各不超过 8，和不超过 $16，n \\le 3000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO08MAR] Cow Travelling S 题目描述 奶牛们在被划分成 N 行 M 列（$2 \\leq N,M \\leq 100$）的草地上游走， 试图找到整块草地中最美味的牧草。 Farmer John 在某个时刻看见贝茜在位置 $(R_1, C_1)$，恰好 T（$0 \\lt T \\leq 15$）秒后，FJ 又在位置 $(R_2, C_2)$ 与贝茜撞了正着。FJ 并不知道在这 T 秒内贝茜是否曾经到过 $(R_2, C_2)$，他能确定的只是，现在贝茜在那里。 设 S 为奶牛在 T 秒内从 $(R_1, C_1)$ 走到 $(R_2, C_2)$ 所能选择的路径总数，FJ 希望有 一个程序来帮他计算这个值。每一秒内，奶牛会水平或垂直地移动 1 单位距离（奶牛总是在移动，不会在某秒内停在它上一秒所在的点）。草地上的某些地方有树，自然，奶牛不能走到树所在的位置，也不会走出草地。 现在你拿到了一张整块草地的地形图，其中 `.` 表示平坦的草地，`*` 表示挡路的树。你的任务是计算出，一头在 T 秒内从 $(R_1, C_1)$ 移动到 $(R_2, C_2)$ 的奶牛可能经过的路径有哪些。 输入输出格式 输入格式 第一行包含 3 个用空格隔开的整数：$N,M,T$。 接下来 n 行：第 i 行为 M 个连续的字符，描述了草地第 i 行各点的情况，保证字符是 `.` 和 `*` 中的一个。 最后一行 4 个整数 $R_1,C_1,R_2,C_2$。 输出格式 输出从 $(R_1, C_1)$ 移动到 $(R_2, C_2)$ 的方案数。 输入输出样例 输入样例 #1 4 5 6 ...*. ...*. ..... ..... 1 3 1 5 输出样例 #1 1 说明 奶牛在 6 秒内从 $(1,3)$ 走到 $(1,5)$ 的方法只有一种，绕过她面前的树。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:村村通 题目描述 某市调查城镇交通状况，得到现有城镇道路统计表。表中列出了每条道路直接连通的城镇。市政府  村村通工程  的目标是使全市任何两个城镇间都可以实现交通（但不一定有直接的道路相连，只要相互之间可达即可）。请你计算出最少还需要建设多少条道路？ 输入输出格式 输入格式 输入包含若干组测试数据，每组测试数据的第一行给出两个用空格隔开的正整数，分别是城镇数目 n 和道路数目 m ；随后的 m 行对应 m 条道路，每行给出一对用空格隔开的正整数，分别是该条道路直接相连的两个城镇的编号。简单起见，城镇从 1 到 n 编号。 注意：两个城市间可以有多条道路相通。 **在输入数据的最后，为一行一个整数 0，代表测试数据的结尾。** 输出格式 对于每组数据，对应一行一个整数。表示最少还需要建设的道路数目。 输入输出样例 输入样例 #1 4 2 1 3 4 3 3 3 1 2 1 3 2 3 5 2 1 2 3 5 999 0 0 输出样例 #1 1 0 2 998 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $1 \\le n < 1000$ 。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:弹珠 题目描述 玛莎和比尔各自有自己的弹珠收藏。他们想重新分配收藏品，使两人能平等拥有弹珠。如果所有的弹珠的价值相同，那么他们就可以平分。但不幸的是，有一些弹珠更大，或者更美丽，所以，玛莎和比尔给每个弹珠一个 1 到 6 的价值。现在他们想平分这些弹珠，使每个人得到的总价值相同。不幸的是，他们发现，他们可能无法以这种方式分弹珠（即使弹珠的总价值为偶数）。例如，如果有一个价值为 1、一个价值为 3 和两个价值为 4 的弹珠，这样他们就不能把弹珠分为价值相等的两部分。因此，他们想要你写一个程序，告诉他们是否能将所有弹珠分成价值相等的两部分。 输入输出格式 输入格式 输入文件有若干行，行中包含六个非负整数 $N_1,\\cdots,N_6$，其中 $N_i$ 是价值为 i 的弹珠的个数。最大弹珠总数将达到 $2\\times 10^4$。 输入文件的最后一行是 `0 0 0 0 0 0`。不要处理这一行。 输出格式 对于每一组数据，输出 `Collection #k:`，k为输出的是第几组，接着是 `Can be divided.` 或 `Can't be divided.`。 每一组输出后多打一个空行。可以参考样例。 输入输出样例 输入样例 #1 1 0 1 2 0 0   1 0 0 0 1 1   0 0 0 0 0 0   输出样例 #1 Collection #1:  Can't be divided.    Collection #2:  Can be divided."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:HNSDFZ 的同学们为了庆祝春节，准备排练一场舞会。 题目描述 在越来越讲究合作的时代，人们注意的更多的不是个人物的舞姿，而是集体的排列。   为了配合每年的倒计时，同学们决定排出——“数字舞蹈”。顾名思义就是所有人一起排成若干个数字 -\\_\\_\\_-||||  更为创新的是，每个人都是趴在地上，保证横竖。   现在给出数字及其要求摆出的大小，请你编程，模拟同学们的优美姿态。 输入输出格式 输入格式 第一行为 k。k 表示要摆出数字的大小。 第二行为全部由数字组成的字符串，即要摆出的几个数字。 输出格式 按题目要求输出。详见样例。 输入输出样例 输入样例 #1 2 1234567890 输出样例 #1       --   --        --   --   --   --   --   --     |    |    | |  | |    |       | |  | |  | |  |    |    |    | |  | |    |       | |  | |  | |  |       --   --   --   --   --        --   --          | |       |    |    | |  |    | |  |    | |  |    | |       |    |    | |  |    | |  |    | |  |       --   --        --   --        --   --   --  说明 ### 数据范围及约定 对于全部数据，$k \\le 30， 0<|s|\\le 255$。除了第一个数字之外，每个数字之前有 1 个空格，所有数字全部对齐。 建议大家直接输出，不要保存。 如果对于大小和 k 有疑问，请自行理解。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[TJOI2011] 01矩阵 题目描述 $n\\times m$ 的 $01$ 矩阵，其中某些位置已经确定，为 '.' 的位置可以填 0 或 1，求相邻两个位置不同为 1 的矩阵方案数，答案模 $10007$。 输入输出格式 输入格式 第一行输入两个数 $n,m$。 接下来输入一个 $n\\times m$ 的矩阵，由 $\\verb!0!,\\verb!1!,\\verb!.!$ 组成。 输出格式 输出一个整数，为相邻两个位置不同为 1 的矩阵个数。 输入输出样例 输入样例 #1 2 3 10. ... 输出样例 #1 5 说明 ### 数据范围及约定 对于 $100\\%$ 的数据，$n\\times m \\le 225$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 这个翻译软件的原理很简单，它只是从头到尾，依次将每个英文单词用对应的中文含义来替换。对于每个英文单词，软件会先在内存中查找这个单词的中文含义，如果内存中有，软件就会用它进行翻译；如果内存中没有，软件就会在外存中的词典内查找，查出单词的中文含义然后翻译，并将这个单词和译义放入内存，以备后续的查找和翻译。 假设内存中有 M 个单元，每单元能存放一个单词和译义。每当软件将一个新单词存入内存前，如果当前内存中已存入的单词数不超过 $M-1$，软件会将新单词存入一个未使用的内存单元；若内存中已存入 M 个单词，软件会清空最早进入内存的那个单词，腾出单元来，存放新单词。 假设一篇英语文章的长度为 N 个单词。给定这篇待译文章，翻译软件需要去外存查找多少次词典？假设在翻译开始前，内存中没有任何单词。 输入输出格式 输入格式 共 2 行。每行中两个数之间用一个空格隔开。 第一行为两个正整数 $M,N$，代表内存容量和文章的长度。 第二行为 N 个非负整数，按照文章的顺序，每个数（大小不超过 $1000$）代表一个英文单词。文章中两个单词是同一个单词，当且仅当它们对应的非负整数相同。 输出格式 一个整数，为软件需要查词典的次数。 输入输出样例 输入样例 #1 3 7 1 2 1 5 4 4 1 输出样例 #1 5 说明 ### 样例解释 整个查字典过程如下：每行表示一个单词的翻译，冒号前为本次翻译后的内存状况： 1. `1`：查找单词 1 并调入内存。 2. `1 2`：查找单词 2 并调入内存。 3. `1 2`：在内存中找到单词 1。 4. `1 2 5`：查找单词 5 并调入内存。 5. `2 5 4`：查找单词 4 并调入内存替代单词 1。 6. `2 5 4`：在内存中找到单词 4。 7. `5 4 1`：查找单词 1 并调入内存替代单词 2。 共计查了 5 次词典。 ### 数据范围 - 对于 $10\\%$ 的数据有 $M=1，N \\leq 5$； - 对于 $100\\%$ 的数据有 $1 \\leq M \\leq 100，1 \\leq N \\leq 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:包裹快递 题目描述 小 K 成功地破解了密文。但是乘车到 X 国的时候，发现钱包被偷了，于是无奈之下只好作快递员来攒足路费去 Orz 教主…… 一个快递公司要将 n 个包裹分别送到 n 个地方，并分配给邮递员小 K 一个事先设定好的路线，小 K 需要开车按照路线给的地点顺序相继送达，且不能遗漏一个地点。小 K 得到每个地方可以签收的时间段，并且也知道路线中一个地方到下一个地方的距离。若到达某一个地方的时间早于可以签收的时间段，则必须在这个地方停留至可以签收，但不能晚于签收的时间段，可以认为签收的过程是瞬间完成的。 为了节省燃料，小 K 希望在全部送达的情况下，车的最大速度越小越好，就找到了你给他设计一种方案，并求出车的最大速度最小是多少。 输入输出格式 输入格式 第 1 行为一个正整数 n，表示需要运送包裹的地点数。 下面 n 行，第 $i+1$ 行有 3 个正整数 $x _ i, y _ i, s _ i$，表示按路线顺序给出第 i 个地点签收包裹的时间段为 $[x _ i, y _ i]$，即最早为距出发时刻 $x _ i$，最晚为距出发时刻 $y _ i$，从前一个地点到达第 i 个地点距离为 $s _ i$，且保证路线中 $x _ i$ 递增。 可以认为 $s _ 1$ 为出发的地方到第 1 个地点的距离，且出发时刻为 0。 输出格式 仅包括一个正数，为车的最大速度最小值，结果保留两位小数。 输入输出样例 输入样例 #1 3 1 2 2 6 6 2 7 8 4 输出样例 #1 2.00 说明 #### 数据范围 - 对于 $20\\%$ 的数据，$0 < n \\le 10$。    - 对于 $30\\%$ 的数据，$0<x_i,y_i,s_i \\le 1000$。    - 对于 $50\\%$ 的数据，$0<n \\le 1000$。    - 对于 $100\\%$ 的数据，$0<n \\le 2\\times10^5，x_i \\le y_i \\le 10^8，s_i \\le10^7$。 ----- #### 样例解释 第一段用 1 的速度在时间 2 到达第 1 个地点，第二段用 $0.5$ 的速度在时间 6 到达第 2 个地点，第三段用 2 的速度在时间 8 到达第 3 个地点。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[POI2004] SZP 题目描述 Byteotian 中央情报局（BIA）雇佣了许多特工。他们每个人的工作就是监视另一名特工。Byteasar 国王需要进行一次秘密行动，所以他要挑选尽量多的信得过的特工。但是这项任务是如此的机密以至于所有参加行动的特工都必须至少被另一名没有参加任务的特工所监视（就是说如果某个特工参加了行动，那么原先监视他的那些特工中至少要有一个没有参加进行动）。 给出监视任务的详情，要求计算最多能有多少个特工参与其中。 输入输出格式 输入格式 第一行只有一个整数，n 代表特工的总数。特工从 1 到 n 编号。 接下来 n 行每行一个整数 $a_k$ 表示特工 k 将要监视特工 $a_k，1 \\le k \\le n，1 \\le a_k \\le n，a_k \\ne k$。 输出格式 一个数，最多能有多少特工参加入这个任务。 输入输出样例 输入样例 #1 6 2 3 1 3 6 5 输出样例 #1 3 说明 对于 $100\\%$ 的数据，$1\\le k,a_k\\le n\\le 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:三倍经验 题目描述 数字金字塔由 n 行整数组成，第 $i(1\\le i\\le n)$ 行有 i 个数字，一个示例如下。   ```text         7       3   9     8   1   0   2   7   4   4  4   5   2   6   5 ```   现在你在金字塔的顶部（第一行），你希望走到金字塔的底部（第 n 行），每一步你只能走向当前所在位置的左下方的数字或者右下方的数字。同时作为一个强大的小朋友，你可以选择金字塔中的不多于 k 个数字让他们成为原来的 3 倍。   你会收集你路上经过的所有位置上的数字，最后的得分即为收集的数字之和，求最大得分。 输入输出格式 输入格式 第一行输入两个整数 $n,k$，表示数字金字塔的行数和乘 3 的数字个数最大值；   接下来 n 行，其中的第 i 行有 i 个以空格隔开的整数依次表示数字金字塔第 i 行的数字 $a_{i,1},a_{i,2},a_{i,3}...a_{i,i}$。 输出格式 一行一个整数，表示最大得分。 输入输出样例 输入样例 #1 5 3 7 3 9 8 1 0 2 7 4 4 4 5 2 6 5 输出样例 #1 75 说明 对于 $30\\%$ 的数据，满足 $k\\le n\\le 6$，并且对于任意 $1\\le i\\le n，1\\le j\\le i$ 满足 $0\\le a_{i,j}\\le 100$；   对于 $100\\%$ 的数据，满足 $1\\le n\\le100，0\\le k\\le \\dfrac{n(n+1)}{2}$，且对于任意 $1\\le i\\le n，1\\le j\\le i$ 满足 $|a_{i,j}|\\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO04DEC] Dividing the Path G 题目描述 约翰的奶牛们发现山脊上的草特别美味。为了维持草的生长，约翰打算安装若干喷灌器。为简化问题，山脊可以看成一维的数轴，长为 $L(1\\le L\\le 10^6)$，而且 L 一定是一个偶数。每个喷灌器可以双向喷灌，并有确定的射程，该射程不短于 A，不长于 B，A，$B(1\\le A\\le B\\le 10^3)$ 都是给出的正整数。它所在位置的两边射程内，都属它的灌溉区域。现要求山脊的每一个区域都被灌溉到，而且喷灌器的灌溉区域不允许重叠。约翰有 $N(1\\le N\\le 10^3)$ 只奶牛，每一只都有特别喜爱的草区，第 i 奶牛的草区是 $[S_i,E_i]$，不同奶牛的草区可以重叠。现要求，每只奶牛的草区仅被一个喷灌器灌溉。 寻找最少需要的喷灌器数目。 输入输出格式 输入格式 第一行两个整数 N，L。 第二行两个整数 A，B。 然后 N 行每一行两个整数 $S_i，E_i（1\\le S_i < E_i\\le L$）。 输出格式 一行，输出所需的最少洒水器数量。如果无法为农夫约翰设计喷头配置，则输出 $-1$。 输入输出样例 输入样例 #1 2 8 1 2 6 7 3 6 输出样例 #1 3 说明 对于 $100\\%$ 的数据，$1\\le L\\le 10^6，1\\le A,B\\le 10^3，1\\le N\\le 10^3，1\\le S_i<E_i\\le L$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 FJ 已经给他的农场安排了一条高速的网络线路，他想把这条线路共享给其他农场。为了用最小的消费，他想铺设最短的光纤去连接所有的农场。 你将得到一份各农场之间连接费用的列表，你必须找出能连接所有农场并所用光纤最短的方案。每两个农场间的距离不会超过 $10^5$。 输入输出格式 输入格式 第一行农场的个数 N（$3 \\leq N \\leq 100$）。 接下来是一个 $N \\times N$ 的矩阵，表示每个农场之间的距离。理论上，他们是 N 行，每行由 N 个用空格分隔的数组成，实际上，由于每行 $80$ 个字符的限制，因此，某些行会紧接着另一些行。当然，对角线将会是 0，因为不会有线路从第 i 个农场到它本身。 输出格式 只有一个输出，其中包含连接到每个农场的光纤的最小长度。 输入输出样例 输入样例 #1 4 0 4 9 21 4 0 8 17 9 8 0 16 21 17 16 0 输出样例 #1 28 说明 题目翻译来自NOCOW。 USACO Training Section 3.1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO05MAR] Out of Hay S 题目描述 Bessie 计划调查 N（$2 \\leq N \\leq 2\\,000$）个农场的干草情况，它从 1 号农场出发。农场之间总共有 M（$1 \\leq M \\leq 10^4$）条双向道路，所有道路的总长度不超过 $10^9$。有些农场之间存在着多条道路，所有的农场之间都是连通的。 Bessie 希望计算出该图中最小生成树中的最长边的长度。 输入输出格式 输入格式 第一行两个整数 $N,M$。 接下来 M 行，每行三个用空格隔开的整数 $A_i,B_i,L_i$，表示 $A_i,B_i$ 之间有一条道路，长度为 $L_i$。 输出格式 一个整数，表示最小生成树中的最长边的长度。 输入输出样例 输入样例 #1 3 3 1 2 23 2 3 1000 1 3 43 输出样例 #1 43"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO08OCT] Watering Hole G 题目描述 Farmer John 的农场缺水了。 他决定将水引入到他的 n 个牧场。他准备通过挖若干井，并在各块田中修筑水道来连通各块田地以供水。在第 i 号田中挖一口井需要花费 $W_i$ 元。连接 i 号田与 j 号田需要 $P_{i,j}（P_{j,i}=P_{i,j}$）元。 请求出 FJ 需要为使所有农场都与有水的农场相连或拥有水井所需要的最少钱数。 输入输出格式 输入格式 第一行为一个整数 n。 接下来 n 行，每行一个整数 $W_i$。 接下来 n 行，每行 n 个整数，第 i 行的第 j 个数表示连接 i 号田和 j 号田需要的费用 $P_{i,j}$。 输出格式 输出最小开销。 输入输出样例 输入样例 #1 4 5 4 4 3 0 2 2 2 2 0 3 3 2 3 0 4 2 3 4 0 输出样例 #1 9 说明 对于 $100\\%$ 的数据，$1 \\leq n \\leq 300，1 \\leq W_i \\leq 10^5，0 \\leq P_{i,j} \\leq 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 规定：x 和 y 是亲戚，y 和 z 是亲戚，那么 x 和 z 也是亲戚。如果 x，y 是亲戚，那么 x 的亲戚都是 y 的亲戚，y 的亲戚也都是 x 的亲戚。 输入输出格式 输入格式 第一行：三个整数 $n,m,p$，（$n,m,p \\le 5000$），分别表示有 n 个人，m 个亲戚关系，询问 p 对亲戚关系。 以下 m 行：每行两个数 $M_i，M_j，1 \\le M_i,~M_j\\le N$，表示 $M_i$ 和 $M_j$ 具有亲戚关系。 接下来 p 行：每行两个数 $P_i,P_j$，询问 $P_i$ 和 $P_j$ 是否具有亲戚关系。 输出格式 p 行，每行一个 `Yes` 或 `No`。表示第 i 个询问的答案为“具有”或“不具有”亲戚关系。 输入输出样例 输入样例 #1 6 5 3 1 2 1 5 3 4 5 2 1 3 1 4 2 3 5 6 输出样例 #1 Yes Yes No"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 在这个帮派里，有一名忍者被称之为 Master。除了 Master 以外，每名忍者都有且仅有一个上级。为保密，同时增强忍者们的领导力，所有与他们工作相关的指令总是由上级发送给他的直接下属，而不允许通过其他的方式发送。 现在你要招募一批忍者，并把它们派遣给顾客。你需要为每个被派遣的忍者支付一定的薪水，同时使得支付的薪水总额不超过你的预算。另外，为了发送指令，你需要选择一名忍者作为管理者，要求这个管理者可以向所有被派遣的忍者发送指令，在发送指令时，任何忍者（不管是否被派遣）都可以作为消息的传递人。管理者自己可以被派遣，也可以不被派遣。当然，如果管理者没有被排遣，你就不需要支付管理者的薪水。     你的目标是在预算内使顾客的满意度最大。这里定义顾客的满意度为派遣的忍者总数乘以管理者的领导力水平，其中每个忍者的领导力水平也是一定的。     写一个程序，给定每一个忍者 i 的上级 $B_i$，薪水 $C_i$，领导力 $L_i$，以及支付给忍者们的薪水总预算 M，输出在预算内满足上述要求时顾客满意度的最大值。 输入输出格式 输入格式 第一行包含两个整数 N 和 M，其中 N 表示忍者的个数，M表示薪水的总预算。   接下来 N 行描述忍者们的上级、薪水以及领导力。其中的第i行包含三个整数 $B_i,C_i,L_i$ 分别表示第 i 个忍者的上级，薪水以及领导力。Master 满足 $B_i=0$，并且每一个忍者的老板的编号一定小于自己的编号 $B_i\\lt i$。 输出格式 一行一个整数，表示在预算内顾客的满意度的最大值。 输入输出样例 输入样例 #1 5 4 0 3 3 1 3 5 2 2 2 1 2 4 2 3 1 输出样例 #1 6 说明 $1 \\le N \\le 10^5，1 \\le M \\le 10^9，0 \\le B_i \\lt i，1 \\le C_i \\le M，1 \\le L_i \\le 10^9$。 对于 $30\\%$ 的数据，$N \\le 3000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 给定一个数，请将该数各个位上数字反转得到一个新数。 这次与 NOIp2011 普及组第一题不同的是：这个数可以是小数，分数，百分数，整数。 - 整数反转是将所有数位对调。 - 小数反转是把整数部分的数反转，再将小数部分的数反转，不交换整数部分与小数部分。 - 分数反转是把分母的数反转，再把分子的数反转，不交换分子与分母。 - 百分数的分子一定是整数，百分数只改变数字部分。 输入输出格式 输入格式 一个实数 s 输出格式 一个实数，即 s 的反转数 输入输出样例 输入样例 #1 5087462 输出样例 #1 2647805 输入样例 #2 600.084 输出样例 #2 6.48 输入样例 #3 700/27 输出样例 #3 7/72 输入样例 #4 8670% 输出样例 #4 768% 说明 **【数据范围】** - 对于 $25\\%$ 的数据，s 是整数，不大于 $20$ 位； - 对于 $25\\%$ 的数据，s 是小数，整数部分和小数部分均不大于 $10$ 位； - 对于 $25\\%$ 的数据，s 是分数，分子和分母均不大于 $10$ 位； - 对于 $25\\%$ 的数据，s 是百分数，分子不大于 $19$ 位。 **【数据保证】** - 对于整数翻转而言，整数原数和整数新数满足整数的常见形式，即除非给定的原数为零，否则反转后得到的新数和原来的数字的最高位数字不应为零。 - 对于小数翻转而言，其小数点前面部分同上，小数点后面部分的形式，保证满足小数的常见形式，也就是末尾没有多余的 0（小数部分除了 0 没有别的数，那么只保留 1 个 0。若反转之后末尾数字出现 0，请省略多余的 0） - 对于分数翻转而言，分数不约分，分子和分母都不是小数。输入的分母不为 0。与整数翻转相关规定见上。 - 对于百分数翻转而言，见与整数翻转相关内容。 数据不存在负数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Bessie 处于半梦半醒的状态。过了一会儿，她意识到她在数数，不能入睡。 题目描述 Bessie 的大脑反应灵敏，仿佛真实地看到了她数过的一个又一个数。她开始注意每一个数码（$0 \\ldots 9$）：每一个数码在计数的过程中出现过多少次？ 给出两个整数 M 和 N，求在序列 $[M, M + 1, M + 2, \\ldots, N - 1, N]$ 中每一个数码出现了多少次。 输入输出格式 输入格式 第 1 行: 两个用空格分开的整数 M 和 N。 输出格式 第 1 行: 十个用空格分开的整数，分别表示数码 $0 \\ldots 9$ 在序列中出现的次数。 输入输出样例 输入样例 #1 129 137 输出样例 #1 1 10 2 9 1 1 1 1 0 1 说明 数据保证，$1 \\leq M \\leq N \\leq 2 \\times 10^9，N-M \\leq 5 \\times 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 每当 Bessie 将一个数转换成新的进制时，她总会写错一位数字。例如，她将 14 转化成 2 进制数，正确的结果是 1110，但她可能会写成 0110 或 1111。Bessie 从不会意外的增加或删减数字，所以她可能会写出以 0 开头的错误数字。 给出 Bessie 转换后 N 的 2 进制形式和 3 进制形式，请计算出 N 的正确数值（用十进制表示）。N 可能会达到 $10^9$，输入数据保证解的存在唯一性。 输入输出格式 输入格式 第一行，N 的 2 进制表示（有一位是错误的数字）。 第二行，N 的 3 进制表示（有一位是错误的数字）。 输出格式 N 的正确值。 输入输出样例 输入样例 #1 1010 212 输出样例 #1 14"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:幸福的路 题目描述 每天，John 都要为了农场里 n（$1 \\leq n\\leq 10$） 头牛的健康和幸福四处奔波。 每头牛的位置可以描述为一个二维坐标，John 从坐标原点 $(0,0)$ 出发。为了使路径更有趣，John 决定只沿着平行于坐标轴的方向行走，这样只能沿着东西南北方向运动。而且只有到达某头牛的坐标后 John 才会改变行走的方向（当然，如果有必要，John 也会穿过某头牛的坐标而不改变行走的方向。） 如果 John 改变行走的方向，他会原地转 $90^\\circ$ 或者 $180^\\circ$。John 的路径必须保证检查完所有牛后返回原点。 John 可以穿过某头牛的坐标而不改变方向任意次，请计算出有多少条路径满足 John 能检查完 n 头牛，在每头牛的坐标处恰好改变一次方向。同一条路径从不同方向经过要计算两次。 输入输出格式 输入格式 第一行，整数 n。 第二行到第 $n+1$ 行，第 $i+1$ 行是两个用空格隔开的整数 x 和 y，表示第 i 头牛的坐标（$-1000 \\leq x,y \\leq 1000$）。 输出格式 一行一个整数，表示路径的量。如果没有满足要求则输出 0。 输入输出样例 输入样例 #1 4 0 1 2 1 2 0 2 -5 输出样例 #1 2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:奶牛 Kruscal 认为人类的加法太落后了。比如说有时候想要用加法计算 `+15*3`，只能写成 `+15+15+15`，真是浪费精力啊！于是，Kruscal 决定开发出一种新的加法算式。 题目描述 当然，新的算式也是建立在原本算式的基础上的，不同就在于上式可以直接写成 `+++15`，同理，对于 `-15*3` 这样的算式可以写成 `---15`。一段时间后，Kruscal 又被那无穷多个 `+-` 号囧到了，于是他又将这个算式改进了一下。 比如 `+15*3` 又可以写成 `+(3)15`，同样，`-15*3` 等价于 `-(3)15`。但从上面可以看出，对于乘数较小的情况，如 `+++15` 这样的表述还是很方便的，于是在新的算式中还是保留了这种形式。 对于算式还要做一点特殊的说明：`+15*3` 转换成 Kruscal 型算式时可以写成 `+++15` 或 `+(3)15`，但不可以写成 `++(2)15` 这样的形式。 对于算式 `23+15*3-2` 可以表示为以下几种形式：`23+++15-2`、`23+(3)15-2`、`+23+++15-2`、`+23+(3)15-2、+(1)23+(3)15-(1)2`。不会出现如下几种形式：`(1)23+++15-2`、`+23++(2)15-(1)2`、`23+++15-2+(0)100`、`23-(-3)15-2`。 输入输出格式 输入格式 一行，一个 Kruscal 型算式。 输出格式 一行，为运算结果。 输入输出样例 输入样例 #1 +(1)23+(3)15-(1)2 输出样例 #1 66 说明 对于 $100 \\%$ 的数据，算式长度不超过 $2000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 色板长度为 L，L 是一个正整数，所以我们可以均匀地将它划分成 L 块 1 厘米长的小方格。并从左到右标记为 $1, 2, \\dots L$。 现在色板上只有一个颜色，老师告诉阿宝在色板上只能做两件事： 1. `C A B C` 指在 A 到 B 号方格中涂上颜色 C。 2. `P A B` 指老师的提问：A 到 B 号方格中有几种颜色。 学校的颜料盒中一共有 T 种颜料。为简便起见，我们把他们标记为 $1, 2, \\dots T$. 开始时色板上原有的颜色就为 1 号色。 面对如此复杂的问题，阿宝向你求助，你能帮助他吗？ 输入输出格式 输入格式 第一行有3个整数 $L (1 \\le L \\le 10^5), T (1 \\le T \\le 30) 和 O (1 \\le O \\le 10^5)$。 在这里 O 表示事件数。  接下来 O 行, 每行以 `C A B C` 或 `P A B` 得形式表示所要做的事情（这里 $A, B, C$ 为整数, 可能 $A> B$，这样的话需要你交换 A 和 B）。 输出格式 对于老师的提问，做出相应的回答。每行一个整数。 输入输出样例 输入样例 #1 2 2 4 C 1 1 2 P 1 2 C 2 2 2 P 1 2 输出样例 #1 2 1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:运动员最佳匹配问题 题目描述 羽毛球队有男女运动员各 n 人。给定 2 个 $n \\times n$ 矩阵 P 和 Q。$P_{i,j}$ 是男运动员 i 和女运动员 j 配对组成混合双打的男运动员竞赛优势；$Q_{i,j}$ 是女运动员 i 和男运动员 j 配合的女运动员竞赛优势。 但是，由于技术配合和心理状态等各种因素影响，$P_{i,j}$ 不一定等于 $Q_{j,i}$。男运动员 i 和女运动员 j 配对组成混合双打的男女双方竞赛优势为 $\\bm{P_{i,j} \\times Q_{j,i}}$。 现在，请你设计一个算法，计算男女运动员最佳配对法，使各组男女双方竞赛优势的总和达到最大。 输入输出格式 输入格式 第一行有 1 个正整数 n $(1 \\le n \\le 20)$。接下来的 $2n$ 行，每行 n 个数。前 n 行是 P，后 n 行是 Q。 输出格式 将计算出的男女双方竞赛优势的总和的最大值输出。 输入输出样例 输入样例 #1 3  10 2 3  2 3 4  3 4 5  2 2 2  3 5 3  4 5 1 输出样例 #1 52"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO5.2] 蜗牛的旅行Snail Trails 题目描述 萨丽·斯内尔（Sally Snail，蜗牛）喜欢在 $N\\times N$ 的棋盘上闲逛（$1<n \\le 120$）。 她总是从棋盘的左上角出发。棋盘上有空的格子（用 $\\verb!.!$ 来表示）和 B 个路障（用 $\\verb!#!$ 来表示）。 下面是这种表示法的示例棋盘： $$ \\boxed{\\quad\\begin{aligned} \\verb!   A  B  C  D  E  F  G  H! \\\\ \\verb!1  S  .  .  .  .  .  #  .! \\\\ \\verb!2  .  .  .  .  #  .  .  .! \\\\ \\verb!3  .  .  .  .  .  .  .  .! \\\\ \\verb!4  .  .  .  .  .  .  .  .! \\\\ \\verb!5  .  .  .  .  .  #  .  .! \\\\ \\verb!6  #  .  .  .  .  .  .  .! \\\\ \\verb!7  .  .  .  .  .  .  .  .! \\\\ \\verb!8  .  .  .  .  .  .  .  .! \\\\ \\end{aligned}\\quad}$$ 萨丽总是垂直（向上或者向下）或水平（向左或者向右）地走。她可以从出发地（总是记作 $\\tt A1$）向下或者向右走。一旦萨丽选定了一个方向，她就会一直走下去。如果她遇到棋盘边缘或者路障，她就停下来，并且转过 $90$ 度。她不可能离开棋盘，或者走进路障当中。并且，萨丽从不跨过她已经经过的格子。当她再也不能走的时候，她就停止散步。 这里是上面的棋盘上的一次散步路线图示： $$ \\boxed{\\quad\\begin{aligned} \\verb!   A  B  C  D  E  F  G  H! \\\\ \\verb!1  S--------------+  #  .! \\\\ \\verb!2  .  .  .  .  #  |  .  .! \\\\ \\verb!3  .  .  .  .  .  |  .  .! \\\\ \\verb!4  .  .  .  .  .  +-----+! \\\\ \\verb!5  .  .  .  .  .  #  .  |! \\\\ \\verb!6  #  .  .  .  .  .  .  |! \\\\ \\verb!7  +-----------------+  |! \\\\ \\verb!8  +--------------------+! \\\\ \\end{aligned}\\quad}$$   萨丽向右走，再向下，向右，向下，然后向左，再向上，最后向右走。这时她遇到了一个她已经走过的格子，她就停下来了。但是，如果她在 $\\tt F5$ 格遇到路障后选择另外一条路——向我们看来是左边的方向转弯，情况就不一样了。 你的任务是计算并输出，如果萨丽聪明地选择她的路线的话，她所能够经过的最多格子数。 输入输出格式 输入格式 输入的第一行包括 N —棋盘的大小，和 B —路障的数量（$1 \\le B \\le 200$）。接下来的 B 行包含着路障的位置信息。下面的样例输入对应着上面的示例棋盘。下面的输出文件表示问题的解答。注意，当 $N>26$ 时，输入文件就不能表示 $\\tt Z$ 列以后的路障了。（这句话不用专门理他。其实就是从 A 的 ASCII 码开始向后顺延，不管是什么字母就行了） 输出格式 输出文件应该只由一行组成，即萨丽能够经过的最多格子数。 输入输出样例 输入样例 #1 8 4  E2  A6  G1  F5 输出样例 #1 33 说明 $$ \\boxed{\\quad\\begin{aligned} \\verb!   A  B  C  D  E  F  G  H! \\\\ \\verb!1  S  .  .  .  .  .  #  .! \\\\ \\verb!2  |  .  .  .  #  .  .  .! \\\\ \\verb!3  |  .  .  .  +--------+! \\\\ \\verb!4  |  .  .  .  |  .  .  |! \\\\ \\verb!5  +-----------+  #  .  |! \\\\ \\verb!6  #  .  .  .  .  .  .  |! \\\\ \\verb!7  +------------------  |! \\\\ \\verb!8  +--------------------+! \\\\ \\end{aligned}\\quad}$$ 题目翻译来自NOCOW。 USACO Training Section 5.2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:请计算出所有 $N$ 头牛完成旅程的最短时间。 题目描述 Farmer John has discovered that his cows produce higher quality milk when they are subject to strenuous exercise.  He therefore decides to send his N cows (1 <= N <= 25,000) to climb up and then back down a nearby mountain! Cow i takes U(i) time to climb up the mountain and then D(i) time to climb down the mountain.  Being domesticated cows, each cow needs the help of a farmer for each leg of the climb, but due to the poor economy, there are only two farmers available, Farmer John and his cousin Farmer Don.  FJ plans to guide cows for the upward climb, and FD will then guide the cows for the downward climb.  Since every cow needs a guide, and there is only one farmer for each part of the voyage, at most one cow may be climbing upward at any point in time (assisted by FJ), and at most one cow may be climbing down at any point in time (assisted by FD).  A group of cows may temporarily accumulate at the top of the mountain if they climb up and then need to wait for FD's assistance before climbing down.  Cows may climb down in a different order than they climbed up. Please determine the least possible amount of time for all N cows to make the entire journey. 输入输出格式 输入格式 第一行，一个整数 N。 第 2 到第 $N+1$ 行，每行两个用空格隔开的整数 $U(i)$ 和 $D(i)$。 $(1 \\le U(i),D(i) \\le 50,000)$。 输出格式 一行一个整数，表示所有 N 头牛完成旅程的最短时间。 输入输出样例 输入样例 #1 3 6 4 8 1 2 3 输出样例 #1 17"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:还是 N 皇后 题目描述 正如题目所说，这题是著名的 N 皇后问题。 输入输出格式 输入格式 第一行有一个 N。接下来有 N 行 N 列描述一个棋盘，`*` 表示可放，`.` 表示不可放。 输出格式 输出方案总数。 输入输出样例 输入样例 #1 4 **.* **** **** **** 输出样例 #1 1 说明 $0< n\\le14$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:膜拜 题目描述 神牛有很多…当然…每个同学都有自己衷心膜拜的神牛。 某学校有两位神牛，神牛甲和神牛乙。新入学的 n 位同学们早已耳闻他们的神话。 所以，已经衷心地膜拜其中一位了。现在，老师要给他们分机房。但是，要么保证整个机房都是同一位神牛的膜拜者，或者两个神牛的膜拜者人数差不超过 m。另外，现在 n 位同学排成一排，老师只会把连续一段的同学分进一个机房。老师想知道，至少需要多少个机房。 输入输出格式 输入格式 输入文件第一行包含两个整数 n 和 m。 第 2 到第 $(n + 1)$ 行，每行一个非 1 即 2 的整数，第 $(i + 1)$ 行的整数表示第 i 个同学崇拜的对象，1 表示甲，2 表示乙。 输出格式 输出一个整数，表示最小需要机房的数量。 输入输出样例 输入样例 #1 5 1 2 2 1 2 2 输出样例 #1 2 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $1 \\le n,m \\le 50$。 - 对于 $100\\%$ 的数据，保证 $1 \\le n,m \\le 2500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:牛宫 题目描述 AP 神牛准备给自己盖一座很华丽的矩形宫殿。于是，他看中了一块 $N \\times M$ 的矩形空地。 空地中每个格子都有自己的海拔高度 $a_{i,j}$。AP 想让他的宫殿的平均海拔在海平面之上（假设海平面的高度是 0，平均数都会算吧？）。而且，AP 希望他的宫殿尽量大，能够容纳更多的人来膜拜他。请问 AP 的宫殿最后会有多大？ 输入输出格式 输入格式 第一行为 N 和 M。之后 N 行，每行 M 个数，描述的空地的海拔 $a_{i,j}$。 输出格式 输出宫殿最大面积。 输入输出样例 输入样例 #1 3 2 4 0 -10 8 -2 -2 输出样例 #1 4 说明 对于 $50\\%$ 的数据，$N,M \\le 100$； 对于 $100 \\%$ 的数据，$1 \\le N,M \\le 200，-2\\times10^9 \\le a_{i,j} \\le 16315$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:加等式 题目描述 对于一个整数集合，我们定义“加等式”如下：集合中的某一个元素可以表示成集合内其他元素之和。如集合 ${1,2,3}$ 中就有一个加等式：$3=1+2$。而且 $3=1+2$ 和 $3=2+1$ 是相同的加等式，也是这个集合唯一的加等式。给定一个整数集合，编程找出其加等式的个数。 输入输出格式 输入格式 第一行为 t，表示测试数据组数。 接下来 t 行，每行表示一组测试数据。其中第一个数 m，表示集合元素的个数，接下来 m 个不同的整数 $x_i$，表示集合元素。 输出格式 对于每个输入数据，输出一个整数，表示其中加等式的个数。 输入输出样例 输入样例 #1 3 3 1 2 3 3 1 2 5 6 1 2 3 5 4 6 输出样例 #1 1 0 7 说明 $1\\le t\\le 10，1\\le m \\le 30，1\\le x\\le 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:赛跑 题目描述 SH的跑步成绩一直不太理想。为了帮助SH提高成绩，KC决定和他进行一次赛跑。比赛的起点设在农场主的屋前，他们同时出发，沿着同一方向，直到跑到终点----农场远处的一棵树下。 他们的跑步速度在一些时间段内是恒定的。比如：SH在前３个时间段速度是５，接着６个时间段内速度是１０。他们的比赛总时间相同。他们希望能统计出在整个比赛过程中领先顺序的变化次数。举个例子，某个时刻SH领先，下个时刻KC领先，这就是一次领先顺序的变化；如果某个时刻SH领先，接下来一段时间KC赶上来并和SH齐头并进，但最终还是超过了SH，这也是一次领先顺序的变化。 输入输出格式 输入格式 第１行：N和M（1 <= N, M <= 1000）。 接下来的N行：每行两个整数，描述SH跑步的一段，分别表示该段SH跑步的速度和持续这种速度的时间。所有的数据范围 [1..1000]。 再接下来的M行：每行两个整数，描述KC跑步的一段，分别表示该段KC跑步的速度和持续这种速度的时间。所有的数据范围 [1..1000]。 输出格式 一行：整个比赛过程中领先顺序的变化次数。 输入输出样例 输入样例 #1 4 3 1 2 4 1 1 1 2 10 2 3 1 2 3 9 输出样例 #1 2 说明 输入：SH在前 2 个单位时间内速度是 1，接着 1 个单位时间内速度是 4，接着 1 个单位时间内速度是 1，最后 $10$ 个单位时间内速度是 2。KC在前 3 个个单位时间内速度是 2，接着 2 个单位时间内速度是 2，最后 9 个单位时间内速度是 3。 输出：比赛开始后KC领先，直到第 5 个单位时间SH超过KC（第一次领先顺序变化），接着第 7 个单位时间时，KC又反超SH，变成领先（第二次领先顺序变化）。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Generic Cow Protests 题目描述 约翰家的 n 头奶牛聚集在一起，排成一列，正在进行一项抗议活动。第 i 头奶牛的理智度为 $a_i$。   约翰希望奶牛在抗议时保持理性，为此，他打算将所有的奶牛隔离成若干个小组，每个小组内的奶牛的理智度总和都要不小于零。   由于奶牛是按直线排列的，所以一个小组内的奶牛位置必须是连续的。请帮助约翰计算一下，最多分成几组。 输入输出格式 输入格式 第一行一个正整数 n，表示牛的数目。   接下来 n 行，每行一个整数，表示每个牛的理智度。 输出格式 若存在合法分组方案，输出一行一个整数表示答案；否则输出 `Impossible`。 输入输出样例 输入样例 #1 4 2 3 -3 1 输出样例 #1 3 说明 【数据规模和约定】    对于 $30\\%$ 的数据，$1\\le n \\le 20$；    对于 $100\\%$ 的数据，$1\\le n \\le 1000，|a_i| \\le 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:KC 喝咖啡 题目描述 话说 KC 和 SH 在福州的时候常常跑去 85°C 喝咖啡或者其他的一些什么东西。 这天，KC 想要喝一杯咖啡，服务员告诉他，现在有 n 种调料，这杯咖啡只可以加入其中的 m 种（当然 KC 一定会加入 m 种，不会加入少于 m 种的调料），根据加入的调料不同，制成这杯咖啡要用的时间也不同，得到的咖啡的美味度也不同。 KC 在得知所有的 n 种调料后，作为曾经的化竞之神的他，马上就知道了所有调料消耗的时间 $c _ i$ 以及调料的美味度 $v _ i$。由于 KC 急着回去刷题，所以他想尽快喝到这杯咖啡，但他又想喝到美味的咖啡，所以他想出了一个办法，他要喝到 $\\dfrac{\\sum v _ i}{\\sum c _ i}$ 最大的咖啡，也就是单位时间的美味度最大的咖啡。 现在，KC 把调料信息告诉了 SH，要 SH 帮他算出喝到的咖啡的 $\\dfrac{\\sum v _ i}{\\sum c _ i}$，但 SH 不想帮 KC 算这东西，于是 KC 就只能拜托你来算了。 注释：$\\sum$ 表示求和，所以 $\\dfrac{\\sum v _ i}{\\sum c _ i}$ 表示美味度的总和除以消耗时间的总和。 输入输出格式 输入格式 输入数据共三行。 第一行为一个整数 $n, m$，表示调料种数和能加入的调料数。 接下来两行，每行为 n 个数，第一行第 i 个整数表示调料 i 的美味度 $v _ i$，第二行第 i 个整数表示调料 i 消耗的时间 $c _ i$。 输出格式 一个实数 T，表示 KC 喝的咖啡的最大 $\\dfrac{\\sum v _ i}{\\sum c _ i}$，保留三位小数。 输入输出样例 输入样例 #1 3 2 1 2 3 3 2 1 输出样例 #1 1.667 说明 **样例 1 解释**： KC 选 2 号和 3 号调料，$\\dfrac{\\sum v _ i}{\\sum c _ i} = \\dfrac{2 + 3}{2 + 1} = 1.667$。 可以验证不存在更优的选择。 **数据范围**： 对 $20 \\%$ 的数据：$1 \\leq n \\leq 5$。 对 $50 \\%$ 的数据：$1 \\leq n \\leq 10$。 对 $80 \\%$ 的数据：$1 \\leq n \\leq 50$。 对 $100 \\%$ 的数据：$1 \\leq n \\leq 200, 1 \\leq m \\leq n, 1 \\leq c[i], v[i] \\leq 1 \\times 10 ^ 4$。 数据保证答案不超过 $1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:眼红的Medusa 题目描述 虽然 Miss Medusa 到了北京，领了科技创新奖，但是她还是觉得不满意。原因是：他发现很多人都和她一样获了科技创新奖，特别是其中的某些人，还获得了另一个奖项——特殊贡献奖。而越多的人获得了两个奖项，Miss Medusa就会越眼红。于是她决定统计有哪些人获得了两个奖项，来知道自己有多眼红。 输入输出格式 输入格式 第一行两个整数 $n, m$，表示有 n 个人获得科技创新奖，m 个人获得特殊贡献奖。 第二行 n 个正整数，表示获得科技创新奖的人的编号。 第三行 m 个正整数，表示获得特殊贡献奖的人的编号。 输出格式 输出一行，为获得两个奖项的人的编号，按在科技创新奖获奖名单中的先后次序输出。 输入输出样例 输入样例 #1 4 3 2 15 6 8 8 9 2 输出样例 #1 2 8 说明 对于 $60\\%$ 的数据，$0 \\leq n, m \\leq 1000$，获得奖项的人的编号 $\\lt 2 \\times 10^9$； 对于 $100\\%$ 的数据，$0 \\leq n, m \\leq 10^5$，获得奖项的人的编号 $\\lt 2 \\times 10^9$。 输入数据保证第二行任意两个数不同，第三行任意两个数不同。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:计算分数 题目描述 Csh 被老妈关在家里做分数计算题，但显然他不愿意坐这么多复杂的计算。况且在家门口还有 Xxq 在等着他去一起看电影。为了尽快地能去陪 Xxq 看电影，他把剩下的计算题交给了你，你能帮他解决问题吗？ 输入输出格式 输入格式 输入一行，为一个分数计算式。 计算式中只包含数字、`+`、`-`、`/`。其中 `/` 为分数线，分数线左边为分子，右边为分母。输入数据保证不会出现繁分数。如果输入计算式的第一项为正，不会有前缀 `+` 号；若为负，会有前缀 `-` 号。 所有整数均以分数形式出现。 输出格式 输出一行，为最后的计算结果（用最简分数或整数表示）。 保证答案内出现的所有数（如果答案是分数即为分子和分母）均在 $64$ 位带符号整数的表示范围之内。 输入输出样例 输入样例 #1 2/1+1/3-1/4 输出样例 #1 25/12 说明 ### 数据范围及约定 对于所有测试点，输入计算式长度在 $100$ 以内，分子、分母在 $1000$ 以内。同时保证，直接从前往后直接计算分数的和或者差，然后立刻化简，这么做的中间结果不会超过 long long 的范围。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:栈的操作 题目描述 现在有四个栈，其中前三个为空，第四个栈从栈顶到栈底分别为 $1,2,3,\\cdots ,n$。每一个栈只支持一种操作：弹出并压入。它指的是把其中一个栈 A 的栈顶元素 x 弹出，并马上压入任意一个栈 B 中。但是这样的操作必须符合一定的规则才能进行。 - 规则 1：A 栈不能为空。 - 规则 2：B 栈为空或 x 比 B 栈栈顶要小。 对于给定的 n，请你求出把第四个栈的 n 个元素全部移到第一个栈的最少操作次数。 由于最少操作次数可能很多，请你把答案对 $10^6+7$ 取模。 输入输出格式 输入格式 一行，一个整数 n。 输出格式 一行，一个正整数，为把最少操作次数 $\\bmod (10^6+7)$ 的值。 输入输出样例 输入样例 #1 2 输出样例 #1 3 说明 - 对于 $30\\%$ 的数据，$n\\le 8$。 - 对于 $60\\%$ 的数据，$n\\le 60$。 - 对于 $100\\%$ 的数据，$n\\le 2\\times 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:超级数 题目描述 设x的约数个数为 $f(x)$，若 $\\forall i\\in [1,n)\\cap \\mathbb{Z^+},f(n)>f(i)$，就把 n 称作 `supernumber`。 给出 m 个数 $a_1,a_2,\\ldots,a_m$，请分别输出不大于 $a_1$，不大于 $a_2$，...，不大于 $a_m$ 的最大 `supernumber`。 输入输出格式 输入格式 第一行有一个整数，代表 m。 第 2  到第 $(m+1)$ 行，每行一个整数，其中第  $(i+1)$ 行的整数为 $a_i$。 输出格式 共 m 行，每行一个整数，其中第 i 行为不大于 $a_i$ 的最大`supernumber`。 输入输出样例 输入样例 #1 2 8 13 输出样例 #1 6 12 说明 #### 数据规模与约定 - 对于 $40\\%$ 的数据，$m=1$。 - 对于 $50\\%$ 的数据，$a_i\\le1000$。 - 对于 $70\\%$ 的数据，$a_i\\le 2\\times10^7$。 - 对于 $100\\%$ 的数据，$m\\le10^5，a_i\\le10^{17}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:切绳子 题目描述 有 N 条绳子，它们的长度分别为 $L_i$。如果从它们中切割出 K 条长度相同的绳子，这 K 条绳子每条最长能有多长？答案保留到小数点后 2 位(直接舍掉 2 位后的小数)。 输入输出格式 输入格式 第一行两个整数 N 和 K，接下来 N 行，描述了每条绳子的长度 $L_i$ 。 输出格式 切割后每条绳子的最大长度。答案与标准答案误差不超过 $0.01$ 或者相对误差不超过 $1\\%$ 即可通过。 输入输出样例 输入样例 #1 4 11 8.02 7.43 4.57 5.39 输出样例 #1 2.00 说明 对于 $100\\%$ 的数据 $0<L_i\\leq 100000.00,0<n\\leq 10000,0<k\\leq 10000$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:奶牛浴场 题目描述 由于 John 建造了牛场围栏，激起了奶牛的愤怒，奶牛的产奶量急剧减少。为了讨好奶牛，John 决定在牛场中建造一个大型浴场。但是 John 的奶牛有一个奇怪的习惯，每头奶牛都必须在牛场中的一个固定的位置产奶，而奶牛显然不能在浴场中产奶，于是，John 希望所建造的浴场不覆盖这些产奶点。这回，他又要求助于 Clevow 了。你还能帮助 Clevow 吗？ John 的牛场和规划的浴场都是矩形。浴场要完全位于牛场之内，并且浴场的轮廓要与牛场的轮廓平行或者重合。浴场不能覆盖任何产奶点，但是产奶点可以位于浴场的轮廓上。 Clevow 当然希望浴场的面积尽可能大了，所以你的任务就是帮她计算浴场的最大面积。 输入输出格式 输入格式 输入文件的第一行包含两个整数 L 和 W，分别表示牛场的长和宽。 文件的第二行包含一个整数 n，表示产奶点的数量。 以下 n 行每行包含两个整数 x 和 y，表示一个产奶点的坐标。 所有产奶点都位于牛场内，即：$0 \\le x \\le L，0 \\le y \\le W$。 输出格式 输出文件仅一行，包含一个整数 S，表示浴场的最大面积。 输入输出样例 输入样例 #1 10 10 4 1 1 9 1 1 9 9 9 输出样例 #1 80 说明 对于所有数据，$0 \\le n \\le 5 \\times 10^3，1 \\le L,W \\le 3 \\times 10^4$。 Winter Camp 2002 感谢 @凯瑟琳98 提供了 4 组 hack 数据。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:从此，这道数学难题引起了几乎所有数学家的注意。哥德巴赫猜想由此成为数学皇冠上一颗可望不可及的“明珠”。 题目描述 现在请你编一个程序验证哥德巴赫猜想。 先给出一个奇数 n，要求输出 3 个质数，这 3 个质数之和等于输入的奇数。 输入输出格式 输入格式 仅有一行，包含一个正奇数 n，其中 $9 < n < 20000$。 输出格式 仅有一行，输出 3 个质数，这 3 个质数之和等于输入的奇数。相邻两个质数之间用一个空格隔开，最后一个质数后面没有空格。如果表示方法不唯一，请输出第一个质数最小的方案，如果第一个质数最小的方案不唯一，请输出第一个质数最小的同时，第二个质数最小的方案。 输入输出样例 输入样例 #1 2009 输出样例 #1 3 3 2003"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 这里的 $A+B$ 是很奇特的。它是按质数的顺序来进位的。例如：$1,0+2,1$ ＝ $1,0,1$（用 $\\verb!,!$ 来分隔每一位）。个位是 2 进制，十位是 3 进制，百位是 5 进制，千位是 7 进制，万位是 $11$ 进制……两个加数的最高位是万位（万位可能有两位）。 输入输出格式 输入格式 输入一个形如 $1,0+2,1$ 字符串 s。 输出格式 输出相加后的结果。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:倒水 题目描述 一天，CC 买了 N 个容量可以认为是无限大的瓶子，开始时每个瓶子里有 1 升水。接着 CC 发现瓶子实在太多了，于是他决定保留不超过 K 个瓶子。每次他选择两个当前含水量相同的瓶子，把一个瓶子的水全部倒进另一个里，然后把空瓶丢弃。（不能丢弃有水的瓶子） 显然在某些情况下 CC 无法达到目标，比如 $N = 3、K = 1$。此时 CC 会重新买一些新的瓶子（新瓶子容量无限，开始时有 1 升水），以达到目标。 现在 CC 想知道，最少需要买多少新瓶子才能达到目标呢？ 输入输出格式 输入格式 一行两个正整数 $N, K（1 \\le N \\le 2 \\times 10^9，K \\le 1000$）。 输出格式 一个非负整数，表示最少需要买多少新瓶子。 输入输出样例 输入样例 #1 3 1 输出样例 #1 1 输入样例 #2 13 2 输出样例 #2 3 输入样例 #3 1000000 5 输出样例 #3 15808"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:魔法照片 题目描述 一共有 n 个人（以 $1\\sim n$ 编号）向佳佳要照片，而佳佳只能把照片给其中的 k 个人。佳佳按照与他们的关系好坏的程度给每个人赋予了一个初始权值 $W_i$。然后将初始权值从大到小进行排序，每人就有了一个序号 $D_i$（取值同样是 $1\\sim n$）。按照这个序号对 $10$ 取模的值将这些人分为 $10$ 类。也就是说定义每个人的类别序号 $C_i$ 的值为 $(D_i-1)\\bmod 10 +1$，显然类别序号的取值为 $1 \\sim 10$。第 i 类的人将会额外得到 $E_i$ 的权值。你需要做的就是求出加上额外权值以后，最终的权值最大的 k 个人，并输出他们的编号。**在排序中，如果两人的 $E_i$ 相同，编号小的优先。** 输入输出格式 输入格式 第一行输入用空格隔开的两个整数，分别是 n 和 k。 第二行给出了 $10$ 个正整数，分别是 $E_1\\sim E_{10}$。 第三行给出了 n 个正整数，第 i 个数表示编号为  i 的人的权值 $W_i$。 输出格式 只需输出一行用空格隔开的 k 个整数，分别表示最终的 $W_i$ 从高到低的人的编号。 输入输出样例 输入样例 #1 10 10 1 2 3 4 5 6 7 8 9 10 2 4 6 8 10 12 14 16 18 20 输出样例 #1 10 9 8 7 6 5 4 3 2 1 说明 对于 $100\\%$ 的数据，$1\\leq n\\leq 20000，1\\leq k\\leq n$，保证所有数据均在 `int` 范围之内。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:魔杖 题目描述 Smart 在春游时意外地得到了一种好东西——一种非常珍贵的树枝。这些树枝可以用来做优质的魔杖！ 选择怎样的切割方式来制作魔杖非常重要，关键问题是——一把魔杖既不能太长、又不能太短，且制作出来的魔杖不能有冲突…… Smart 得到的这些树枝在属性上完全相同。每一根树枝都有 n 段（用 1~ n 编号），给定了每段的长度 l 和每段的魔力值 m 。你可以做的就是选择一段或连续的几段，把它们作为一个整体切下来，再用来制作魔杖。但是一根魔杖的长度不能太长，不能大于给定的值 h；也不能太短，不能小于给定的值 $low$ 。 魔杖有一个奇怪的要求：如果某一根魔杖的制作材料是另一根魔杖的一部分，则这两根魔杖之间将发生冲突。比如说树枝有三段，从左到右的长度分别为 4 、 1 、 3 ，Smart需要长度为 4 到 5 之间的魔杖。他可以用一根树枝的前两段做出一个长度为 5 的魔杖，用一根树枝的后两段做出长度为 4 的魔杖；但他决不能用一根树枝的前两段做了魔杖后再单独使用另一根树枝的第一段做成魔杖，因为前者包含了后者的所有成分，这会导致冲突。 我们假设 Smart 可以得到任意多这样的树枝。 Smart 需要制作出若干个互不冲突的魔杖，使所有魔杖的魔力值之和最大。（魔杖的长度就是组成它的那些段的长度的总和，魔力值亦然）。 输入输出格式 输入格式 第一行有三个用空格隔开的整数，分别表示 n、$low、h$。 第二行有 n 个用空格隔开的整数，第 i 个整数代表 $l_i$ 。 第三行有 n 个用空格隔开的整数，第 i 个整数代表 $m_i$。 输出格式 输出一行一个整数，表示能够获得的魔力值的最大值。 输入输出样例 输入样例 #1 6 4 5 1 3 3 2 2 1 2 3 1 4 5 2 输出样例 #1 21 说明 #### 样例输入输出 1 解释 取 $[1$  $3] [3 2] [2 2 1]$ 做成魔杖，得到最大权值 $2+3+1+4+4+5+2=21$ 。 --- #### 数据规模与约定 对于$100\\%$的数据，保证： - $1\\le n\\le 1000，1\\le low\\le h < 2^{31}$。 - $1 \\leq l_i, m_i \\le 10^5$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:魔法阵 题目描述 魔法阵是一个 $n \\times m$ 的格子（高 n，宽 m），$n \\times m$ 为偶数。Smart 手中有 $n \\times m$ 个宝石（以 $1 \\sim n \\times m$ 编号）。Smart 从最右上角的格子开始走，从一个格子可以走到上、下、左、右 4 个相邻的格子，但不能走出边界。每个格子必须且仅能到过 1 次，这样 Smart 一共走了 $n \\times m$ 个格子停止（随便停哪里）。Smart 每进入一个格子，就在该格子里放入一颗宝石。他是按顺序放的，也就是说——第 i 个进入的格子放入 i 号宝石。 如果两颗宝石的编号对 $\\frac{n \\times m}{2}$ 取模的值相同，则认为这两颗宝石相互之间有微妙的影响。也就是说，我们按照宝石的编号对 $\\frac{n \\times m}{2}$ 取模的值，将宝石分成 $\\frac{n \\times m}{2}$ 对，其中每对都恰有两颗宝石。对于每一对宝石，设第一颗宝石在第 a 行第 b 列，另一颗宝石在第 c 行第 d 列，那么定义这 2 个宝石的魔力影响值为 $k_1 \\times \\lvert a - c \\rvert + k_2 \\times \\lvert b - d \\rvert$。 需要你求出的是，在所有合乎题意的宝石摆放方案中，所有成对的宝石间的最大魔力影响值的最小值为多少。换句话说，如果我们定义对 $\\frac{n \\times m}{2}$ 取模的值为 i 的一对宝石的魔力影响值为 $a_i$。你需要求出的就是 $\\max \\{ a_i : i=0,1,2,\\ldots \\}$ 的最小值。 输入输出格式 输入格式 只有一行用空格隔开的四个整数，分别是 $n, m, k_1, k_2$。 输出格式 只需输出一个整数，即题目所要求的“所有成对的宝石间的最大魔力影响值的最小值”。 输入输出样例 输入样例 #1 2 2 2 2 输出样例 #1 4 说明 对于 $100\\%$ 的数据，$n \\times m \\le 50，1 \\le k_1, k_2 \\le 32767$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:四方定理 题目描述 四方定理是众所周知的：任意一个正整数n，可以分解为不超过四个整数的平方和。例如：$25=1^{2}+2^{2}+2^{2}+4^{2}$，当然还有其他的分解方案，$25=4^{2}+3^{2}和25=5^{2}$。给定的正整数n，编程统计它能分解的方案总数。注意：$25=4^{2}+3^{2}和25=3^{2}+4^{2}$视为一种方案。 输入输出格式 输入格式 第一行为正整数t($t\\le 100$)，接下来t行，每行一个正整数n($n\\le 32768$)。 输出格式 对于每个正整数n，输出方案总数。 输入输出样例 输入样例 #1 1 2003 输出样例 #1 48"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2016] 循环之美 题目描述 牛牛是一个热爱算法设计的高中生。在他设计的算法中，常常会使用带小数的数进行计算。牛牛认为，如果在 k 进制下，一个数的小数部分是纯循环的，那么它就是美的。现在，牛牛想知道：对于已知的十进制数 n 和 m，在 k 进制下，有多少个数值上互不相等的纯循环小数，可以用分数 $\\frac xy$ 表示,其中 $1≤x≤n,1≤y≤m$，且 $x,y$ 是整数。一个数是纯循环的，当且仅当其可以写成以下形式： $$a.\\dot{c_1} c_2 c_3 \\dots c_{p - 1} \\dot{c_p}$$ 其中，a 是一个整数，$p≥1$；对于 $1≤i≤p，c_i$ 是 k 进制下的一位数字。 例如，在十进制下，$0.45454545……=0.\\dot {4} \\dot {5}$ 是纯循环的，它可以用 $\\frac {5}{11}、\\frac{10}{22}$ 等分数表示；在十进制下，$0.1666666……=0.1\\dot6$ 则不是纯循环的，它可以用 $\\frac 16$ 等分数表示。需要特别注意的是，我们认为一个整数是纯循环的，因为它的小数部分可以表示成 0 的循环或是 $k-1$ 的循环；而一个小数部分非 0 的有限小数不是纯循环的。 输入输出格式 输入格式 只有一行，包含三个十进制数 $N,M,K$ 意义如题所述。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO07OPEN] Catch That Cow S 题目描述 FJ 丢失了他的一头牛，他决定追回他的牛。已知 FJ 和牛在一条直线上，初始位置分别为 x 和 y，假定牛在原地不动。FJ 的行走方式很特别：他每一次可以前进一步、后退一步或者直接走到 $2\\times x$ 的位置。计算他至少需要几步追上他的牛。 输入输出格式 输入格式 第一行为一个整数 $t\\ ( 1\\le t\\le 10)$，表示数据组数； 接下来每行包含一个两个正整数 $x,y\\ (0<x,y \\le 10^5)$，分别表示 FJ 和牛的坐标。 输出格式 对于每组数据，输出最少步数。 输入输出样例 输入样例 #1 1  5 17 输出样例 #1 4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:泥泞路 题目描述 暴雨过后，FJ 的农场到镇上的公路上有一些泥泞路，他有若干块长度为 L 的木板可以铺在这些泥泞路上，问他至少需要多少块木板，才能把所有的泥泞路覆盖住。 输入输出格式 输入格式 第一行为正整数 n 和 L，分别表示有多少段泥泞路和木板的长度； 接下来 n 行，每一行两个整数 s 和 e，表示每一段泥泞路的起点和终点。 输出格式 仅一个正整数，表示木板数。 输入输出样例 输入样例 #1 3 3 1 6 13 17 8 12 输出样例 #1 5 说明 对于 $100 \\%$ 的数据，$n,L \\leq 10000，s \\leq e \\leq 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:失踪的7 题目描述 远古的 Pascal 人也使用阿拉伯数字来进行计数，但是他们又不喜欢使用 7 ，因为他们认为 7 是一个不吉祥的数字，所以 Pascal 数字 8 其实表示的是自然数中的 7，$18$ 表示的是自然数中的 $16$ 。请计算，在正整数 n 范围以内包含有多少个 Pascal 数字。 输入输出格式 输入格式 第一行为正整数 t，接下来 t 行，每行一个正整数 n，且保证输入 n 的是 Pascal 数字"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:阶乘数码 题目描述 求 $n!$ 中某个数码出现的次数。 输入输出格式 输入格式 第一行为 $t(t \\leq 10)$，表示数据组数。接下来 t 行，每行一个正整数 $n(n \\leq 1000)$ 和数码 a。 输出格式 对于每组数据，输出一个整数，表示 $n!$ 中 a 出现的次数。 输入输出样例 输入样例 #1 2 5 2 7 0 输出样例 #1 1 2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:互质 题目描述 输入两个正整数 n 和 k，求与 n 互质的第 k 个正整数。 输入输出格式 输入格式 仅一行，为两个正整数 n 和 k。 输出格式 一个正整数，表示与 n 互质的第 k 个正整数。 输入输出样例 输入样例 #1 10 5 输出样例 #1 11 说明 #### 数据规模与约定 对于所有的数据，保证 $1 \\leq n \\le 10^6，1 \\leq k\\le 10^8$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:因子和 题目描述 输入两个整数 a 和 b，求 $a^b$ 的因子和。 由于结果太大，只要输出它对 $9901$ 取模的结果。 输入输出格式 输入格式 仅一行，为两个整数 a 和 b。 输出格式 输出一行一个整数表示答案对 $9901$ 取模的结果。 输入输出样例 输入样例 #1 2 3 输出样例 #1 15 说明 #### 数据规模与约定 对于全部的测试点，保证 $1 \\leq a \\leq 5 \\times 10^7，0 \\leq b \\leq 5 \\times 10^7$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:护卫队 题目描述 护卫车队在一条单行的街道前排成一队，前面河上是一座单行的桥。因为街道是一条单行道，所以任何车辆都不能超车。桥能承受一个给定的最大承载量。为了控制桥上的交通，桥两边各站一个指挥员。护卫车队被分成几个组，每组中的车辆都能同时通过该桥。当一组车队达到了桥的另一端，该端的指挥员就用电话通知另一端的指挥员，这样下一组车队才能开始通过该桥。每辆车的重量是已知的。任何一组车队的重量之和不能超过桥的最大承重量。被分在同一组的每一辆车都以其最快的速度通过该桥。一组车队通过该桥的时间是用该车队中速度最慢的车通过该桥所需的时间来表示的。问题要求计算出全部护卫车队通过该桥所需的最短时间值。 输入输出格式 输入格式 第一行包含三个整数，第一个整数表示该桥所能承受的最大载重量（用吨表示）；第二个整数表示该桥长度（用千米表示）；第三个整数表示该护卫队中车辆的总数（$n\\lt 1000$）。接下来的几行中，每行包含两个正整数 W 和 S（用空格隔开），W 表示该车的重量（用吨表示），S 表示该车过桥能达到的最快速度（用千米/小时表示）。车子的重量和速度是按车子排队等候时的顺序给出的。 输出格式 输出文件应该是一个实数，四舍五入精确到小数点后1位，表示整个护卫车队通过该桥所需的最短时间（用分钟表示）。 输入输出样例 输入样例 #1 100 5 10 40 25 50 20 50 20 70 10 12 50 9 70 49 30 38 25 27 50 19 70 输出样例 #1 75.0"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:信封问题 题目描述 某人写了 n 封信和 n 个信封，如果所有的信都装错了信封。求所有信都装错信封共有多少种不同情况。 输入输出格式 输入格式 一个信封数 n，保证 $n \\le 20$。 输出格式 一个整数，代表有多少种情况。 输入输出样例 输入样例 #1 2 输出样例 #1 1 输入样例 #2 3 输出样例 #2 2 说明 对于 $100 \\%$ 的数据，$1 \\le n \\le 20$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:输出一行，表示水坑的数量。 题目描述 Due to recent rains, water has pooled in various places in Farmer John's field, which is represented by a rectangle of N x M (1 <= N <= 100; 1 <= M <= 100) squares. Each square contains either water ('W') or dry land ('.'). Farmer John would like to figure out how many ponds have formed in his field. A pond is a connected set of squares with water in them, where a square is considered adjacent to all eight of its neighbors. Given a diagram of Farmer John's field, determine how many ponds he has."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 一串长度不超过 $255$ 的 PASCAL 语言代码，只有 $a,b,c$ 三个变量，而且只有赋值语句，赋值只能是一个一位的数字或一个变量，每条赋值语句的格式是 `[变量]:=[变量或一位整数];`。未赋值的变量值为 0 输出 $a,b,c$ 的值。 输入输出格式 输入格式 一串符合语法的 PASCAL 语言，只有 $a,b,c$ 三个变量，而且只有赋值语句，赋值只能是一个一位的数字或一个变量，未赋值的变量值为 0。 输出格式 输出 $a,b,c$ 最终的值。 输入输出样例 输入样例 #1 a:=3;b:=4;c:=5; 输出样例 #1 3 4 5 说明 输入的 PASCAL 语言长度不超过 $255$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:垂直柱状图 题目描述 写一个程序从输入文件中去读取四行大写字母（全都是大写的，每行不超过 $100$ 个字符），然后用柱状图输出每个字符在输入文件中出现的次数。严格地按照输出样例来安排你的输出格式。 输入输出格式 输入格式 四行字符，由大写字母组成，每行不超过 $100$ 个字符 输出格式 由若干行组成，前几行由空格和星号组成，最后一行则是由空格和字母组成的。在任何一行末尾不要打印不需要的多余空格。不要打印任何空行。 输入输出样例 输入样例 #1 THE QUICK BROWN FOX JUMPED OVER THE LAZY DOG. THIS IS AN EXAMPLE TO TEST FOR YOUR HISTOGRAM PROGRAM. HELLO! 输出样例 #1                             *                             *         *                   *         *                   *     *   *         *                   *     *   * *       *     *             *     *   * *       *     * *     * *   *     * * * *       *   * * *     * *   * *   * * * * *     * * * * * *     * * * * *   * * * *     * * * * * * * * * * * * * * * * * * * * * * * * * * * * A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 说明 每行输出后面不允许出现多余的空格。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 “不放债不借债”，贝西多么希望自己可以遵循这个忠告。她已经和她的 $N(1 \\leq N \\leq 100,000)$ 个朋友有了债务关系，或者借债了，或者放债了。她的 N 个朋友依次标号为 $1\\dots N$。 结算日终于来临了。她知道，朋友欠她的钱比她欠朋友的钱多。她的朋友们分布在一条直线上，第 i 头奶牛站的位置距离谷仓 i 米。贝西打算沿着这条直线行走，从欠她钱的奶牛手里收钱回来，并且还钱给她欠钱的奶牛。 当她沿直线移动的时候，她可以要求任何欠她钱的奶牛还全部的钱。当她有足够的钱可以还清她的某个债，就可以把钱给对应的奶牛还清她的债。奶牛 i 欠贝西 $D_i$ 元 $(-1,000 \\leq D_i \\leq 1,000,D_i \\neq 0)$，负数表示贝西欠奶牛 i 钱。 贝西从谷仓出发，位置为 0，初始贝西没有钱。贝西收回她的所有借债，并且还清她的欠债所需行走的最短距离是多少？注意：她必须在最后一头奶牛所在的位置，完成她的行走。 输入输出格式 输入格式 第一行，一个整数 N  接下来第 $2 \\dots N+1$ 行，第 $i+1$ 行包含一个整数 $D_i$ 输出格式 一个整数，贝西收回借债并且还清欠债，所需要行走的最短距离（单位为米） 输入输出样例 输入样例 #1 5 100 -200 250 -200 200 输出样例 #1 9"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:A+B Problem（高精） 题目描述 高精度加法，相当于 a+b problem，**不用考虑负数**。 输入输出格式 输入格式 分两行输入。$a,b \\leq 10^{500}$。 输出格式 输出只有一行，代表 $a+b$ 的值。 输入输出样例 输入样例 #1 1 1 输出样例 #1 2 输入样例 #2 1001 9099 输出样例 #2 10100"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Sramoc问题 题目描述 话说员工们整理好了筷子之后，就准备将快餐送出了，但是一看订单，都傻眼了:订单上没有留电话号码,只写了一个  $sramoc(k,m)$ 函数，这什么东西？什么意思？于是餐厅找来了资深顾问团的成员，YQ，SC，HQ，经过大量的查阅，大家获得了一些信息，$sramoc(k,m)$ 表示用数字 $0,1,2,\\dots k-1$ 组成的正整数中能被 m 整除的最小数。例如 $k=2,m=7$ 的时候，$sramoc(2,7)=1001$。自然电话号码就是 $1001$，为了尽快将快餐送出，电脑组的童鞋们埋头算起了这个齐葩的号码。。。 输入输出格式 输入格式 第 1 行为两个整数 $k,m$。 输出格式 仅 1 行，那个电话号码（最小的数）。 输入输出样例 输入样例 #1 2 7 输出样例 #1 1001 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，$2\\le k\\le10，1\\le m\\le 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 2013 年 X 月 X 日，俄罗斯办理了斯诺登的护照，于是他混迹于一架开往委内瑞拉的飞机。但是，这件事情太不周密了，因为 FBI 的间谍早已获悉他的具体位置——但这不是最重要的——最重要的是如果要去委内瑞拉，那么就要经过古巴，而经过古巴的路在美国的掌控之中。 丧心病狂的奥巴马迫降斯诺登的飞机，搜查时却发现，斯诺登杳无踪迹。但是，在据说是斯诺登的座位上，发现了一张纸条。纸条由纯英文构成：`Obama is a two five zero.`（以 `.` 结束输出，只有 6 个单词+一个句号，句子开头如没有大写亦为合法）这句话虽然有点无厘头，但是警官陈珺骛发现这是一条极其重要的线索。他在斯诺登截获的一台笔记本中找到了一个 C++ 程序，输入这条句子后立马给出了相对应的密码。陈珺鹜高兴得晕了过去，身为警官的你把字条和程序带上了飞机，准备飞往曼哈顿国际机场，但是在飞机上检查的时候发现——程序被粉碎了！飞机抵达华盛顿只剩 5 分钟，你必须在这 5 分钟内编写（杜撰）一个程序，免受上司的 $10000000000 \\bmod 10$ 大板。破译密码的步骤如下： （1）找出句子中所有用英文表示的数字 $(\\leq 20)$，列举在下： 正规：`one two three four five six seven eight nine ten eleven twelve`            `thirteen fourteen fifteen sixteen seventeen eighteen nineteen             twenty` 非正规：`a both another first second third`。为避免造成歧义，`another` 算作 1 处理。 （2）将这些数字平方后对 $100$ 取模，如 $00,05,11,19,86,99$。 （3）把这些两位数按数位排成一行，组成一个新数，如果开头为 0，就去 0。 （4）找出所有排列方法中最小的一个数，即为密码。 // 数据已经修正 By absi2011 如果还有问题请联系我 输入输出格式 输入格式 一个含有 6 个单词的句子。 输出格式 一个整型变量（密码）。如果没有符合要求的数字出现，则输出 0。 输入输出样例 输入样例 #1 Black Obama is two five zero . 输出样例 #1 425"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 话说有一天，小 Z 乘坐宇宙飞船，飞到一个美丽的星球。因为历史的原因，科技在这个美丽的星球上并不很发达，星球上人们普遍采用 $B\\ (2 \\le B \\le 36)$ 进制计数。星球上的人们用美味的食物招待了小 Z，作为回报，小 Z 希望送一个能够完成 B 进制加法的计算器给他们。现在小 Z 希望你可以帮助他，编写实现 B 进制加法的程序。 输入输出格式 输入格式 数据数据共三行。 第一行，一个十进制的整数，表示进制 B； 第二行和第三行，每行一个 B 进制数正整数。数字的每一位属于 $\\{\\tt 0,1,2,3,4,5,6,7,8,9,A,B\\cdots\\}$。 输出格式 一个 B 进制数，表示输入的两个数的和。 输入输出样例 输入样例 #1 4 123 321 输出样例 #1 1110 说明 ### 数据范围及约定 记 $n,m$ 分别表示两个 B 进制数字的长度。 对于全部数据，$1\\le n,m\\le 2000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:迷宫 题目描述 给定一个 $N \\times M$ 方格的迷宫，迷宫里有 T 处障碍，障碍处不可通过。 在迷宫中移动有上下左右四种方式，每次只能移动一个方格。数据保证起点上没有障碍。 给定起点坐标和终点坐标，每个方格最多经过一次，问有多少种从起点坐标到终点坐标的方案。 输入输出格式 输入格式 第一行为三个正整数 $N,M,T$，分别表示迷宫的长宽和障碍总数。 第二行为四个正整数 $SX,SY,FX,FY，SX,SY$ 代表起点坐标，$FX,FY$ 代表终点坐标。 接下来 T 行，每行两个正整数，表示障碍点的坐标。 输出格式 输出从起点坐标到终点坐标的方案总数。 输入输出样例 输入样例 #1 2 2 1 1 1 2 2 1 2 输出样例 #1 1 说明 对于 $100\\%$ 的数据，$1 \\le N,M \\le 5，1 \\le T \\le 10，1 \\le SX,FX \\le n，1 \\le SY,FY \\le m$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:请帮助约翰确定必须要添加的莲花的最少数量，以及有多少种放置这些莲花的方法。 题目描述 FJ has installed a beautiful pond for his cows' aesthetic enjoyment and exercise. The rectangular pond has been partitioned into square cells of M rows and N columns (1 ≤ M ≤ 30; 1 ≤ N ≤ 30). Some of the cells have astonishingly sturdy lilypads; others have rocks; the remainder are just beautiful, cool, blue water. Bessie is practicing her ballet moves by jumping from one lilypad to another and is currently located at one of the lilypads. She wants to travel to another lilypad in the pond by jumping from one lilypad to another. Surprising only to the uninitiated, Bessie's jumps between lilypads always appear as a chess-knight's move: one move in one direction and then two more in the orthogonal direction (or perhaps two in one direction and then one in the orthogonal direction). Farmer John is observing Bessie's ballet drill and realizes that sometimes she might not be able to jump to her destination lilypad because intermediary lilypads are missing. Ever thrifty, he wants to place additional lilypads so she can complete her quest (perhaps quickly, perhaps by using a large number of intermediate lilypads). Of course, lilypads cannot be placed where rocks already intrude on a cell. Help Farmer John determine the minimum number of additional lilypads he has to place, and in how many ways he can place that minimum number. 输入输出格式 输入格式 第一行两个用空格分开的整数 M 和 N。 第二行到 $M+1$ 行，第 $i+1$ 行有 N 个用空格分开的整数，描述了池塘第 i 行的状态： - 0 为水，1 为莲花，2 为岩石，3 为贝西所在的起点，4 为贝西想去的终点。 输出格式 第一行一个整数，需要增加的最少莲花数；如果无解，输出 $-1$。 第二行输出放置这些莲花的方案数量，保证这个数字可用一个 $64$ 位的有符号整数，表示。 特别地，如果第一行是 $-1$，不要输出第二行。 输入输出样例 输入样例 #1 4 5 1 0 0 0 0 3 0 0 0 0 0 0 2 0 0 0 0 0 4 0 输出样例 #1 2 3 说明 ### 样例解释 池塘分成四行五列，贝西的起点在第二行第一列，想去的终点在第四行第四列，池塘里一共有三朵莲花和一块石头。 最少需要两朵莲花，有三种方式可以放置， 如下 $\\verb!X!$ 所示： $$\\begin{bmatrix} \\verb!10000! \\\\ \\verb!30X00! \\\\ \\verb!00200! \\\\ \\verb!0X040! \\\\ \\end{bmatrix},\\begin{bmatrix} \\verb!10X00! \\\\ \\verb!30000! \\\\ \\verb!0X200! \\\\ \\verb!00040! \\\\ \\end{bmatrix},\\begin{bmatrix} \\verb!10X00! \\\\ \\verb!3000X! \\\\ \\verb!00200! \\\\ \\verb!00040! \\\\ \\end{bmatrix} $$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 Although Farmer John has no problems walking around the fair to collect prizes or see the shows, his cows are not in such good shape; a full day of walking around the fair leaves them exhausted. To help them enjoy the fair, FJ has arranged for a shuttle truck to take the cows from place to place in the fairgrounds. FJ couldn't afford a really great shuttle, so the shuttle he rented traverses its route only once (!) and makes N (1 <= N <= 20,000) stops (conveniently numbered 1..N) along its path. A total of K (1 <= K <= 50,000) groups of cows conveniently numbered 1..K wish to use the shuttle, each of the M\\_i (1 <= M\\_i <= N) cows in group i wanting to ride from one stop S\\_i (1 <= S\\_i < E\\_i) to another stop E\\_i (S\\_i < E\\_i <= N) farther along the route. The shuttle might not be able to pick up an entire group of cows (since it has limited capacity) but can pick up partial groups as appropriate. Given the capacity C (1 <= C <= 100) of the shuttle truck and the descriptions of the groups of cows that want to visit various sites at the fair, determine the maximum number of cows that can ride the shuttle during the fair. 输入输出格式 输入格式 第一行：包括三个整数：$K,N$ 和 C，彼此用空格隔开。 第二行到 $K+1$ 行：在第 $i+1$ 行，将会告诉你第 i 组奶牛的信息：$S_i,E_i$ 和 $M_i$，彼此用空格隔开。 输出格式 第一行：可以坐班车的奶牛的最大头数。 输入输出样例 输入样例 #1 8 15 3 1 5 2 13 14 1 5 8 3 8 14 2 14 15 1 9 12 1 12 15 2 4 6 1 输出样例 #1 10 说明 【样例说明】 班车可以把 2 头奶牛从 1 送到 5，3 头奶牛从 5 送到 8，2 头奶牛从 8 送到 $14，1$ 头奶牛从 9 送到 $12，1$ 头奶牛从 $13$ 送到 $14，1$ 头奶牛从 $14$ 送到 $15$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:路径统计 题目描述 “RP 餐厅” 的员工素质就是不一般，在齐刷刷的算出同一个电话号码之后，就准备让 HZH,TZY 去送快餐了，他们将自己居住的城市画了一张地图，已知在他们的地图上，有 N 个地方，而且他们目前处在标注为 “1” 的小镇上，而送餐的地点在标注为 “N” 的小镇。（有点废话）除此之外还知道这些道路都是单向的，从小镇 I 到 J 需要花费 $D[I, J]$ 的时间，为了更高效快捷的将快餐送到顾客手中，他们想走一条从小镇 1 到小镇 N 花费最少的一条路，但是他们临出发前，撞到因为在路上堵车而生气的 FYY，深受启发，不能仅知道一条路线，万一。。。于是，他们邀请 FYY 一起来研究起了下一个问题：这个最少花费的路径有多少条？ 输入输出格式 输入格式 输入文件第一行为两个空格隔开的数 $N, E$，表示这张地图里有多少个小镇及有多少边的信息。 下面 E 行，每行三个数 $I, J, C$，表示从 I 小镇到 J 小镇有道路相连且花费为 C。（注意，数据提供的边信息可能会重复，不过保证 $I \\ne J，1 \\leq I, J\\leq N$）。 输出格式 输出文件包含两个数，分别是最少花费和花费最少的路径的总数。保证花费最少的路径的总数不超过 $2^{30}$。 两个不同的最短路方案要求：路径长度相同（均为最短路长度）且最短路经过的点的编号序列不同。 若城市 N 无法到达则只输出一个 `No answer`。 输入输出样例 输入样例 #1 5 4 1 5 4 1 2 2 2 5 2 4 1 1 输出样例 #1 4 2 说明 对于 $30\\%$ 的数据 $N\\leq 20$； 对于 $100\\%$ 的数据 $1\\leq N\\leq 2000，0\\leq E\\leq N\\times (N-1)，1\\leq C\\leq 10$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最小回文数 题目描述 回文数是从左向右读和从右向左读结果一样的数字串。 例如：$121、44$ 和 3 是回文数，$175$ 和 $36$ 不是。 对于一个给定的 N，请你寻找一个回文数 P，满足 $P > N$。 满足这样条件的回文数很多，你的任务是输出其中最小的一个。 输入输出格式 输入格式 一行，一个正整数 N。N 的数值小于 ${10}^{100}$，并且 N 没有前导 0。 输出格式 你的程序应该输出一行，最小的回文数 P（$P > N$）。 输入输出样例 输入样例 #1 44 输出样例 #1 55 说明 对于 $50 \\%$ 的数据，$N < {10}^9$。   对于 $100 \\%$ 的数据，$N < {10}^{100}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:鸿山洞的灯 题目描述 已知 n 盏灯以及每盏灯的位置 $p_i，p_i$ 均不相等，当两盏灯之间的距离小于 $dist$ 时，若这个安全距离里面还有灯是亮着时，就可以关掉这些灯（即若第 $i-1$ 盏与第 $i+1$ 盏的距离 $\\leq dist$，则可以关掉第 i 盏）。 求在保证洞里的光线是充足的情况下，一段区域里能删除的灯的最大值。 距离洞口最近和最远的两盏灯必须是亮着。 输入输出格式 输入格式 第一行两个数，n 和 $dist$。 第二行 n 个数，即每盏灯的位置 $p_i$。 输出格式 一个数，即一段区域里能删除的灯的最大值。 输入输出样例 输入样例 #1 3 3  1 2 3 输出样例 #1 1 说明 对于 $100\\%$ 的数据，$1\\leq n\\leq 10^5$，保证 $dist$ 在 `int` 整型范围之内。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:循环的数字 题目描述 你曾经因为看见一样的东西一遍又一遍地重复、循环而对电视节目感到厌烦么？好吧，虽然我并不关心电视节目的好坏，不过有时却也很像那样不断循环的数字。 让我们假定两个不同的正整数 $(n, m)$ 是循环的，当且仅当你能通过将 n 末端的几个数字移到它的首端而不改变移动的数字的顺序并使整个数字变成 m 。举个例子，$(12345, 34512)$ 就是一对循环的数字，因为你能把 $12345$ 中末尾的 $345$ 移到 $12$ 前面，从而得到 $34512$。注意，为了成为一对循环的数字，n 和 m 位数必须相同。无论 n 或 m 都没有前置的 0。 现在给定正整数 A 和 B，并保证 A 和 B 位数相同且均没有前置 0，求存在多少循环的正整数对 $(n, m)$，使得 $A \\leq n \\le m \\leq B$ ？ 输入输出格式 输入格式 本题有共有 $10$ 个测试点。 每个输入文件包含 1 行。 第 1 行有两个用空格隔开的正整数 A 和 B。 输出格式 每个输出文件应包含一个正整数 x，表示共有 x 组循环的正整数对 $(n,m)$ 使得 $A \\leq n \\le m \\leq B$。 输入输出样例 输入样例 #1 1111 2222 输出样例 #1 287 说明 $1\\le A,B \\leq 2\\times 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[yLOI2018] 树上的链 题目描述 给定一棵有 n 个节点的树。每个节点有一个点权和一个参数。节点 i 的权值为 $w_i$，参数为 $c_i。1$ 是这棵树的根。 现在，对每个节点 u（$1 \\leq u \\leq n$），请在树上你找到最长的一条链 $v_1, v_2, \\dots v_m$，满足如下条件： 1. $v_1 = u$。 2. 对 $2 \\leq i \\leq m$， 有 $v_i$ 是 $v_{i - 1}$ 的父节点。 3. 链上节点的点权和不超过 $c_u$，即 $\\sum_{j = 1}^m w_{v_j} \\leq c_u$。  输入输出格式 输入格式 第一行是一个整数，表示树的节点数 n。   第二行有 $n - 1$ 个整数 $p_2, p_3, \\dots p_n$，其中 $p_i$ 表示节点 i 的父节点。   第三行有 n 个整数，第 i 个整数表示节点 i 的权值 $w_i$。   第四行有 n 个整数，第 i 个整数表示节点 i 的参数 $c_u$。 输出格式 输出一行 n 个用空格隔开的整数，第 i 个整数表示节点 i 对应的链的最长长度。 输入输出样例 输入样例 #1 5 1 1 2 2 1 2 3 4 5 1 3 3 6 8 输出样例 #1 1 2 1 2 3 说明 ### 数据规模与约定 对全部的测试点，保证 $1 \\leq u, v \\leq n \\leq 10^5，1 \\leq p_i \\lt i，1 \\leq w_i \\leq c_i \\leq 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:跑路 题目描述 小 A 的工作不仅繁琐，更有苛刻的规定，要求小 A 每天早上在 $6:00$ 之前到达公司，否则这个月工资清零。可是小 A 偏偏又有赖床的坏毛病。于是为了保住自己的工资，小 A 买了一个空间跑路器，每秒钟可以跑 $2^k$ 千米（k 是任意自然数）。当然，这个机器是用 `longint` 存的，所以总跑路长度不能超过 `maxlongint` 千米。小 A 的家到公司的路可以看做一个有向图，小 A 家为点 1，公司为点 n，每条边长度均为一千米。小 A 想每天能醒地尽量晚，所以让你帮他算算，他最少需要几秒才能到公司。数据保证 1 到 n 至少有一条路径。 输入输出格式 输入格式 第一行两个整数 $n,m$，表示点的个数和边的个数。 接下来 m 行每行两个数字 $u,v$，表示一条 u 到 v 的边。 输出格式 一行一个数字，表示到公司的最少秒数。 输入输出样例 输入样例 #1 4 4 1 1 1 2 2 3 3 4 输出样例 #1 1 说明 **【样例解释】** $1 \\to 1 \\to 2 \\to 3 \\to 4$，总路径长度为 4 千米，直接使用一次跑路器即可。 **【数据范围】** $50\\%$ 的数据满足最优解路径长度 $\\leqslant 1000$； $100\\%$ 的数据满足 $n \\leqslant 50，m \\leqslant 10000$，最优解路径长度 $\\leqslant$ `maxlongint`。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 最近有 n 个不爽的事，每句话都有一个正整数刺痛值（心理承受力极差）。爱与愁大神想知道连续 m 个刺痛值的和的最小值是多少，但是由于业务繁忙，爱与愁大神只好请你编个程序告诉他。 输入输出格式 输入格式 第一行有两个用空格隔开的整数，分别代表 n 和 m。 第 2 到第 $(n + 1)$ 行，每行一个整数，第 $(i + 1)$ 行的整数 $a_i$ 代表第 i 件事的刺痛值 $a_i$。 输出格式 输出一行一个整数，表示连续 m 个刺痛值的和的最小值是多少。 输入输出样例 输入样例 #1 8 3 1 4 7 3 1 2 4 3 输出样例 #1 6 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $n \\leq 20$。 - 对于 $60\\%$ 的数据，保证 $n \\leq 100$。 - 对于 $90\\%$ 的数据，保证 $n \\leq 10^3$。 - 对于 $100\\%$ 的数据，保证 $0 \\leq m \\leq n \\leq 3 \\times 10^3，1 \\leq a_i \\leq 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:一道极其无厘头的题目。 题目描述 事情是这样的：   西游记中的孙沙猪三徒弟在西天取经之后开始进入厦门大学经贸系学习经济，在 1 个小时的学习后，他们用特殊手段毕业了。 然后，他们创办了三个公司：“花果山生态旅游山庄集团公司” “高老庄猪肉美食城有限公司” 和 “流沙河轮渡有限公司”。虽然这三家公司出自 “经卷出版社” 社长唐三藏的徒弟们，但是每家公司都仍然保持着 0 元以下的财政收入。   于是，他们想到了一个无聊的方法：向别人偷！其中，孙悟空偷猪八戒的平底锅之前，猪八戒可以一直抢沙和尚的笔记本。 现在，作为猪八戒手下首席智士的你，要帮助既聪明又愚蠢的猪八戒用那种不正当的手段挽救这个公司！   你可以这样做：你已经知道孙悟空什么时候要来偷猪八戒的东西，而猪八戒又要在什么时间去抢沙和尚的东西，又知道猪八戒每秒钟可以偷沙和尚 n 台笔记本，帮猪八戒算一算，自己在有限的时间内能偷到沙和尚多少台笔记本，使得他有足够的时间来防御大师兄。 输入输出格式 输入格式 第一行：一个时间，为 时：分：秒 形式，表示猪八戒打算去偷沙和尚笔记本的时间； 第二行：一个时间，为 时：分：秒 形式，表示孙悟空打算去偷猪八戒平底锅的时间。 **注：时间可能有前导零，也有可能没有。** 第三行：一行一个整数 n，表示猪八戒一秒能偷沙和尚的笔记本数。 保证第一行的时间要比第二行的时间早。 输出格式 一个整数，表示猪八戒能偷沙和尚笔记本的个数。 输入输出样例 输入样例 #1 00:0:00 0:00:10 10 输出样例 #1 100 说明 对于 $100\\%$ 的数据，保证两个时间合法，$n<32768$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 LiYuxiang 是个天资聪颖的孩子，他的梦想是成为世界上最伟大的医师。为此，他想拜附近最有威望的医师为师。医师为了判断他的资质，给他出了一个难题。医师把他带到一个到处都是草药的山洞里对他说：“孩子，这个山洞里有一些不同种类的草药，采每一种都需要一些时间，每一种也有它自身的价值。我会给你一段时间，在这段时间里，你可以采到一些草药。如果你是一个聪明的孩子，你应该可以让采到的草药的总价值最大。” 如果你是 LiYuxiang，你能完成这个任务吗？ 此题和原题的不同点： 1. 每种草药可以无限制地疯狂采摘。 2. 药的种类眼花缭乱，采药时间好长好长啊！师傅等得菊花都谢了！ 输入输出格式 输入格式 输入第一行有两个整数，分别代表总共能够用来采药的时间 t 和代表山洞里的草药的数目 m。 第 2 到第 $(m + 1)$ 行，每行两个整数，第 $(i + 1)$ 行的整数 $a_i, b_i$ 分别表示采摘第 i 种草药的时间和该草药的价值。 输出格式 输出一行，这一行只包含一个整数，表示在规定的时间内，可以采到的草药的最大总价值。 输入输出样例 输入样例 #1 70 3 71 100 69 1 1 2 输出样例 #1 140 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $m \\le 10^3$ 。 - 对于 $100\\%$ 的数据，保证 $1 \\leq m \\le 10^4，1 \\leq t \\leq 10^7$，且 $1 \\leq m \\times t \\leq 10^7，1 \\leq a_i, b_i \\leq 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 月落乌啼问爱与愁大神为什么，爱与愁大神写了一个数字 n（$n \\le 9999$），说翻译成英语就知道为什么了。月落乌啼接过这个数字后，本想翻译成英语，但是班主任叫他去帮个忙。他想尽快知道答案，于是这个艰巨的任务就拜托你了。 标准美式英语，仅在末两位 $ \\le 10$ 时加 `and` 且没有连字符。 输入输出格式 输入格式 只有一行，一个数 n（$n \\le 9999$） 输出格式 一行英文，表示 n 翻译成英语的答案。 输入输出样例 输入样例 #1 5208"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 废话少说，给你一个大数 N（不一定在 int64 范围内），让你进行素性判断，然后分解质因数。当然，初中数学题不可能有大于 int64 的数让你判断素性，因此超过范围的数可以忽略不计。为了让程序更加贴心，JosephZheng 多了一些要求，会在输入输出中给出具体情况。 输入输出格式 输入格式 一个大数 N（N 为非负整数），其中这个数的各个数位之间可以插入各种符号，例如 $1234$ 可以为 `1 - 2alsdkjf3！@￥%！@@@##￥……！￥#-4` 等。你需要在这一长串乱码中找出这个要判断的数。输入数据可能有多组，如果读到一行没有数字的字串即结束。字符串长度可能大于 $255$。 输出格式 在读入数据之前先输出 `Enter the number=`，不要换行。 然后输出 `Prime?`，问号后有一个空格，但不要换行。 如果是质数则输出 `Yes!` 否则输出 `No!`。此时换行。 若果是质数就 halt，若是小于 2 的数则在输出 `No!` 后也 halt。若是合数则分解质因数。如果该数大于四千万则输出 `The number is too large!`，然后 halt。否则分解质因数。输出结果的方式在输出样例中会详细给出。每组数据之间空一行。 输入输出样例 输入样例 #1 4 eed 输出样例 #1 Enter the number= Prime? No! 4=2^2 Enter the number= 输入样例 #2 2 end 输出样例 #2 Enter the number= Prime? Yes! Enter the number= 输入样例 #3 -1 adfs 输出样例 #3 Enter the number= Prime? No! Enter the number= 输入样例 #4 1234###24#@13#@￥！1 hehe 输出样例 #4 Enter the number= Prime? No! The number is too large! Enter the number= 输入样例 #5 1.5 1 1234324123512343123 @~@~@~@ 输出样例 #5 Enter the number= Prime? No! 15=3^1*5^1 Enter the number= Prime? No! Enter the number= Prime? No! The number is too large! Enter the number= 输入样例 #6 12 halt@@ 输出样例 #6 Enter the number= Prime? No! 12=2^2*3^1 Enter the number= 说明 编这道题的 JosephZheng 有些无聊，但是很考验基本功哦！仔细审题！ 水题一道。。。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:漂亮字串 题目描述 Caima 认为 $\\tt O$ 和 $\\tt X$ 是最优美的两个字母，由 $\\tt O,X$ 组成的串是最优美的串。在这些最优美的串中，如果任意只包含 $\\tt X$ 的子串，长度不超过 $\\max_{\\tt X}$，任意只包含 $\\tt O$ 的子串，长度不超过 $\\max_{\\tt O}$，而整个串最多有 $\\rm count_{\\tt O}$ 个 $\\tt O，\\rm count_{\\tt X}$ 个 $\\tt X$。那么这个就是超级优美无敌串。 现在 Caima 想知道最长的超级优美无敌串有多长，希望你告诉他。 输入输出格式 输入格式 输入包含多行，至文件结束为止。 每行四个数，依次是 $\\rm count_{\\tt O},\\rm count_{\\tt X},\\rm max_{\\tt O},\\rm max_{\\tt X}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:集合 题目描述 Caima 给你了所有 $[a,b]$ 范围内的整数。一开始每个整数都属于各自的集合。每次你需要选择两个属于不同集合的整数，如果这两个整数拥有大于等于 p 的公共质因数，那么把它们所在的集合合并。 重复如上操作，直到没有可以合并的集合为止。 现在 Caima 想知道，最后有多少个集合。 输入输出格式 输入格式 一行，共三个整数 $a,b,p$，用空格隔开。 输出格式 一个数，表示最终集合的个数。 输入输出样例 输入样例 #1 10 20 3 输出样例 #1 7 说明 #### 样例 1 解释 对于样例给定的数据，最后有 $\\{10,20,12,15,18\\},\\{13\\},\\{14\\},\\{16\\},\\{17\\},\\{19\\},\\{11\\}$ 共 7 个集合，所以输出应该为 7。 #### 数据规模与约定 - 对于 $80\\%$ 的数据，$1 \\leq a \\leq b \\leq 10^3$。 - 对于 $100%$ 的数据，$1 \\leq a \\leq b \\leq 10^5,2 \\leq p \\leq b$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:释放囚犯 题目描述 Caima 王国中有一个奇怪的监狱，这个监狱一共有 P 个牢房，这些牢房一字排开，第 i 个紧挨着第 $i+1$ 个（最后一个除外）。现在正好牢房是满的。 上级下发了一个释放名单，要求每天释放名单上的一个人。这可把看守们吓得不轻，因为看守们知道，现在牢房中的 P 个人，可以相互之间传话。如果某个人离开了，那么原来和这个人能说上话的人，都会很气愤，导致他们那天会一直大吼大叫，搞得看守很头疼。如果给这些要发火的人吃上肉，他们就会安静点。 输入输出格式 输入格式 第一行两个整数 P 和 Q，Q 表示释放名单上的人数； 第二行 Q 个整数，表示要释放哪些人，保证按递增的顺序给出。 输出格式 仅一行，表示最少要给多少人次送肉吃。 输入输出样例 输入样例 #1 20 3 3 6 14 输出样例 #1 35 说明 ### 样例说明 #1 先释放 $14$ 号监狱中的罪犯，要给 1 到 $13$ 号监狱和 $15$ 到 $20$ 号监狱中的 $19$ 人送肉吃；再释放 6 号监狱中的罪犯，要给 1 到 5 号监狱和 7 到 $13$ 号监狱中的 $12$ 人送肉吃；最后释放 3 号监狱中的罪犯，要给 1 到 2 号监狱和 4 到 5 号监狱中的 4 人送肉吃。 ### 数据规模与约定 - 对于 $50\\%$ 的数据，$1 \\le P \\le 100，1 \\le Q \\le 5$； - 对于 $100\\%$ 的数据，$1 \\le P \\le 10^3，1 \\le Q \\le 100，Q \\le P$，保证释放的人所在的牢房编号按递增的顺序给出。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[CEOI2007] 树的匹配 Treasury 题目描述 给一棵树，你可以匹配有边相连的两个点，问你这棵树的最大匹配是多少，并且计算出有多少种最大匹配。 输入输出格式 输入格式 第一行一个整数 N，表示有多少个结点。 接下来 N 行，每行第一个整数，表示要描述的那个结点。然后一个整数 m，表示这个结点有 m 个儿子，接下来 m 个整数，表示它的 m   个儿子的编号。 输出格式 输出两行，第一行输出最大匹配数，第二行输出最大匹配方案数。 输入输出样例 输入样例 #1 7 1 3 2 4 7 2 1 3 4 1 6 3 0 7 1 5 5 0 6 0 输出样例 #1 3 4 说明 $1\\leq N\\leq 10^3$，其中 $40\\%$ 的数据答案不超过 $10^8$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:单词缩写 题目描述 树树发现好多计算机中的单词都是缩写，如 GDB 是全称 Gnu DeBug 的缩写。但是，有时候缩写对应的全称会不固定，如缩写 LINUX 可以理解为： 1. LINus’s UniX 2. LINUs’s miniX 3. Linux Is Not UniX 现在树树给出一个单词缩写，以及一个固定的全称（若干个单词组成，空格隔开）。全称中可能会有无效的单词，需要忽略掉，一个合法缩写要求每个有效单词中至少有一个字符出现在缩写中，所写必须按顺序出现在全称中。 对于给定的缩写和一个固定的全称，问有多少种解释方法？解释方法为所写的每个字母在全称每个有效单词中出现的位置，有一个字母位置不同，就认为是不同的解释方法。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:求和 题目描述 高斯还是个小 P 孩的时候就求出 $$\\sum_{i=1}^n i= \\frac{n \\times (n+1)}{2}$$ LT 还是个小 P 孩的时候求出 $$\\sum_{i=1}^{n-1} \\frac{1}{i\\times (i+1)}=1-\\frac{1}{n}$$ 现在，你还是个小 P 孩的时候，你要求出： $$\\sum_{i=1}^n \\frac{1}{\\prod_{j=i}^{i+m-1}j}=S$$ 输入输出格式 输入格式 输入两个整数 $n, m$。 输出格式 输出占两行，第一行一个整数 X，第二行整数 Y，表示 $S=\\frac{X}{Y}$，且 X 和 Y 互质。 输入输出样例 输入样例 #1 1 2 输出样例 #1 1 2 说明 $m>1，n>0$。 $50 \\%$ 的数据满足 $n \\leq 50$。   $100 \\%$ 的数据满足 $n+m \\leq 500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:象棋比赛 题目描述 有 N 个人要参加国际象棋比赛，该比赛要进行 K 场对弈。每个人最多参加两场对弈，最少参加零场对弈。每个人都有一个与其他人不相同的等级（用一个正整数来表示）。 在对弈中，等级高的人必须用黑色的棋子，等级低的人必须用白色的棋子。每个人最多只能用一次黑色的棋子和一次白色的棋子。为增加比赛的可观度，观众希望 K 场对弈中双方的等级差的总和最小。 比如有 7 个选手，他们的等级分别是 $30,17,26,41,19,38,18$，要进行 3 场比赛。最好的安排是选手 2 对选手 7，选手 7 对选手 5，选手 6 对选手 4。此时等级差的总和等于 $(18-17)+(19-18)+(41-38)=5$ 达到最小。 输入输出格式 输入格式 第一行两个正整数 $N,K$。 接下来有 N 行，第 i 行表示第 $i-1$ 个人等级。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[CQOI2009] 中位数 题目描述 给出 $1,2,...,n$ 的一个排列，统计该排列有多少个长度为奇数的连续子序列的中位数是 b。中位数是指把所有元素从小到大排列后，位于中间的数。 输入输出格式 输入格式 第一行为两个正整数 n 和 b，第二行为 $1,2,...,n$ 的排列。 输出格式 输出一个整数，即中位数为 b 的连续子序列个数。 输入输出样例 输入样例 #1 7 4 5 7 2 4 3 1 6  输出样例 #1 4 说明 #### 数据规模与约定 对于 $30\\%$ 的数据中，满足 $n \\le 100$； 对于 $60\\%$ 的数据中，满足 $n \\le 1000$； 对于 $100\\%$ 的数据中，满足 $n \\le 100000,1 \\le b \\le n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:合并序列 题目描述 有 N 个单词和字符串 T，按字典序输出以字符串 T 为前缀的所有单词。 输入输出格式 输入格式 输入文件第一行包含一个正整数 N； 接下来 N 行，每行一个单词，长度不超过 $100$； 最后一行包含字符串 T。 输出格式 按字典序升序输出答案。 输入输出样例 输入样例 #1 6 na no ki ki ka ku k 输出样例 #1 ka ki ki ku 说明 【数据规模】 对于 $60\\%$ 的数据，满足 $1 \\le N \\le 1000$； 对于 $100\\%$ 的数据，满足 $1 \\le N \\le 100000$ 且所有字符均为小写字母。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:邮递员送信 题目描述 有一个邮递员要送东西，邮局在节点 1。他总共要送 $n-1$ 样东西，其目的地分别是节点 2 到节点 n。由于这个城市的交通比较繁忙，因此所有的道路都是单行的，共有 m 条道路。这个邮递员每次只能带一样东西，并且**运送每件物品过后必须返回邮局**。求送完这 $n-1$ 样东西并且**最终回到邮局**最少需要的时间。 输入输出格式 输入格式 第一行包括两个整数，n 和 m，表示城市的节点数量和道路数量。 第二行到第 $(m+1)$ 行，每行三个整数，$u,v,w$，表示从 u 到 v 有一条通过时间为 w 的道路。 输出格式 输出仅一行，包含一个整数，为最少需要的时间。 输入输出样例 输入样例 #1 5 10 2 3 5 1 5 5 3 5 6 1 2 8 1 3 8 5 3 4 4 1 8 4 5 3 3 5 6 5 4 2 输出样例 #1 83 说明 对于 $30\\%$ 的数据，$1 \\leq n \\leq 200$。 对于 $100\\%$ 的数据，$1 \\leq n \\leq 10^3，1 \\leq m \\leq 10^5，1\\leq u,v \\leq n，1 \\leq w \\leq 10^4$，输入保证任意两点都能互相到达。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:求和 题目描述 求 $1^b+2^b+\\cdots + a^b$ 的和除以 $10^4$ 的余数。 输入输出格式 输入格式 **本题有多组数据。** 第一行一个整数 N，表示共有 N 组测试数据。 对于每组数据，一行两个整数 $a,b$。 输出格式 对于每组数据，一行一个整数，表示答案。 输入输出样例 输入样例 #1 1 2 3 输出样例 #1 9 说明 对于 $30\\%$ 的数据，$N \\le 10，a,b \\le 10^3$。 对于 $100\\%$ 的数据，$1 \\le N \\le 100，1 \\le a,b \\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:序列合并 题目描述 有两个长度为 N 的**单调不降**序列 $A,B$，在 $A,B$ 中各取一个数相加可以得到 $N^2$ 个和，求这 $N^2$ 个和中最小的 N 个。 输入输出格式 输入格式 第一行一个正整数 N； 第二行 N 个整数 $A_{1\\dots N}$。 第三行 N 个整数 $B_{1\\dots N}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:点的移动 题目描述 平面上有 N 个整数坐标点。如果将点 $(x_0,y_0)$ 移动到 $(x_1,y_1)$，则需要的代价为 $|x_0-x_1|+|y_0-y_1|$。求使得 $K(K=1, \\cdots ,N)$ 个点在同一位置上最少需要的代价。 输入输出格式 输入格式 第一行一个正整数 N； 接下来 N 行，每行两个正整数 $x_i$ 和 $y_i$，为第 i 个点的坐标，不超过 $10^6$。 【数据规模】。 对于 $100\\%$ 的数据中，满足 $1 \\le N \\le 50$。 输出格式 输出共 N 行，第 i 行为使得有 i 个点在统一位置的最少代价。 输入输出样例 输入样例 #1 4 15 14 15 16 14 15  16 15 输出样例 #1 0 2 3 4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:二进制 题目描述 有三个整数 $A,B,C$，以下用 $N_{(2)}$ 表示 N 的二进制（没有前导 0）。 设 $A_{(2)},B_{(2)},C_{(2)}$ 的最大长度为 L，你需要构造三个正整数 $X,Y,Z$，满足以下条件： 1. $X_{(2)},Y_{(2)},Z_{(2)}$ 的长度都不超过 L。 2. $A_{(2)}$ 与 $X_{(2)}$ 中 1 的个数相同。 3. $B_{(2)}$ 与 $Y_{(2)}$ 中 1 的个数相同。 4. $C_{(2)}$ 与 $Z_{(2)}$ 中 1 的个数相同。 5. $X+Y=Z$。 输入输出格式 输入格式 第一行包含一个正整数 T，表示有 T 组测试数据。 接下来 T 行，每行三个正整数 $A,B,C$。 输出格式 输出共 T 行，每行一个答案。 输出最小的 Z。如果没有合法的 Z 则输出 $-1$。 输入输出样例 输入样例 #1 4  7 6 9  1 1 1  1 1 4  3 3 9 输出样例 #1 10  -1  2  6 说明 ### 数据范围及约定 - 对于 $30\\%$ 的数据，满足 $1 \\le A,B,C \\le 100$； - 对于 $100\\%$ 的数据，满足 $1 \\le T \\le 10，1 \\le A,B,C \\le 2^{30}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 禽兽患传染病了。一个禽兽会每轮传染 x 个禽兽。试问 n 轮传染后有多少禽兽被传染？ 输入输出格式 输入格式 两个非负整数 x 和 n。 输出格式 一个整数，即被传染的禽兽数。 输入输出样例 输入样例 #1 10 2 输出样例 #1 121 说明 保证 $x,n$ 以及答案都在 $64$ 位无符号整数的表示范围内。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:NOIP 即将迎来周年华诞。在这一个春秋的历程里，NOIP 领导全国 oier，建设高效、稳定、快捷、开放的社会主义现代化  OI。在新的一年里，YZOJ 将再接再厉，积极探寻成长之路，更好地为广大 oier 服务。 题目描述 青蛙小 C 听说 NOIP 要办周年庆比赛，兴冲冲得来到了 Z 市，初始时他在坐标 $x_0$ 处，小 C 是一只善于跳跃的青蛙，若当前他处在坐标 x 处，每一次跳跃，他可以跳到 $4x+3$ 或 $8x+7$ 处，且由于体力原因，他最多能跳 $100000$ 次。 根据 Z 市的传说，坐标位置为 $10^9+7$ 的整数倍的位置（如 $10^9+7,2\\times 10^9+14$）可以传送到 YZOJ。 小 C 想知道，最少跳几次能传送到 YZOJ。 输入输出格式 输入格式 输入的第一行包含一个整数 $x_0$ 表示青蛙的初始位置，保证 $x_0$ 在的范围在 $[1,10^9+6]$。 输出格式 输出一个整数，表示最少所需步数，若在 $100000$ 步内还无法传送到 YZOJ，则输出 $-1$。 输入输出样例 输入样例 #1 125000000  输出样例 #1 1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Einstein学画画 题目描述 Einstein 学起了画画。 此人比较懒\\~\\~，他希望用最少的笔画画出一张画…… 给定一个无向图，包含 n 个顶点（编号 $1 \\sim n$），m 条边，求最少用多少笔可以画出图中所有的边。 输入输出格式 输入格式 第一行两个整数 $n, m$。 接下来 m 行，每行两个数 $a, b（a \\ne b$），表示 $a, b$ 两点之间有一条边相连。 一条边不会被描述多次。 输出格式 一个数，即问题的答案。 输入输出样例 输入样例 #1 5 5  2 3  2 4  2 5  3 4  4 5  输出样例 #1 1 说明 对于 $50 \\%$ 的数据，$n \\le 50，m \\le 100$。 对于 $100\\%$ 的数据，$1 \\le n \\le 1000，1 \\le m \\le {10}^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:三元上升子序列 题目描述 Erwin 最近对一种叫 `thair` 的东西巨感兴趣。。。 在含有 n 个整数的序列 $a_1,a_2,\\ldots,a_n$ 中，三个数被称作`thair`当且仅当 $i<j<k$ 且 $a_i<a_j<a_k$。 求一个序列中 `thair` 的个数。 输入输出格式 输入格式 开始一行一个正整数 n, 以后一行 n 个整数 $a_1,a_2,\\ldots,a_n$。 输出格式 一行一个整数表示 `thair` 的个数。 输入输出样例 输入样例 #1 4 2 1 3 4 输出样例 #1 2 输入样例 #2 5 1 2 2 3 4 输出样例 #2 7 说明 #### 样例2 解释 7 个 `thair` 分别是： - 1 2 3 - 1 2 4 - 1 2 3 - 1 2 4 - 1 3 4 - 2 3 4 - 2 3 4 #### 数据规模与约定 - 对于 $30\\%$ 的数据 保证 $n\\le100$； - 对于 $60\\%$ 的数据 保证 $n\\le2000$； - 对于 $100\\%$ 的数据 保证 $1 \\leq n\\le3\\times10^4，1\\le a_i\\leq 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:逛画展 题目描述 博览馆正在展出由世上最佳的 m 位画家所画的图画。 游客在购买门票时必须说明两个数字，a 和 b，代表他要看展览中的第 a 幅至第 b 幅画（包含 $a,b$）之间的所有图画，而门票的价钱就是一张图画一元。 Sept 希望入场后可以看到所有名师的图画。当然，他想最小化购买门票的价格。 请求出他购买门票时应选择的 $a,b$，数据保证一定有解。 若存在多组解，**输出 a 最小的那组**。 输入输出格式 输入格式 第一行两个整数 $n,m$，分别表示博览馆内的图画总数及这些图画是由多少位名师的画所绘画的。 第二行包含 n 个整数 $a_i$，代表画第 i 幅画的名师的编号。 输出格式 一行两个整数 $a,b$。 输入输出样例 输入样例 #1 12 5 2 5 3 1 3 2 4 1 1 5 4 3 输出样例 #1 2 7 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，有 $n\\le200，m\\le20$。 - 对于 $60\\%$ 的数据，有 $n\\le10^5，m\\le10^3$。 - 对于 $100\\%$ 的数据，有 $1\\leq n\\le10^6，1 \\leq a_i \\leq m\\le2\\times10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SCOI2010] 连续攻击游戏 题目描述 lxhgww 最近迷上了一款游戏，在游戏里，他拥有很多的装备，每种装备都有 2 个属性，这些属性的值用 $[1,10000]$ 之间的数表示。当他使用某种装备时，他只能使用该装备的某一个属性。并且每种装备最多只能使用一次。游戏进行到最后，lxhgww 遇到了终极 boss，这个终极 boss 很奇怪，攻击他的装备所使用的属性值必须从 1 开始连续递增地攻击，才能对 boss 产生伤害。也就是说一开始的时候，lxhgww 只能使用某个属性值为 1 的装备攻击 boss，然后只能使用某个属性值为 2 的装备攻击 boss，然后只能使用某个属性值为 3 的装备攻击 boss……以此类推。现在 lxhgww 想知道他最多能连续攻击 boss 多少次？ 输入输出格式 输入格式 输入的第一行是一个整数 N，表示 lxhgww 拥有 N 种装备接下来 N 行，是对这 N 种装备的描述，每行 2 个数字，表示第 i 种装备的 2 个属性值。 输出格式 输出一行，包括 1 个数字，表示 lxhgww 最多能连续攻击的次数。 输入输出样例 输入样例 #1 3 1 2 3 2 4 5 输出样例 #1 2 说明 对于 $30\\%$ 的数据，保证 $N \\le 10^3$。 对于 $100\\%$ 的数据，保证 $N \\le 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SCOI2010] 生成字符串 题目描述 lxhgww 最近接到了一个生成字符串的任务，任务需要他把 n 个 1 和 m 个 0 组成字符串，但是任务还要求在组成的字符串中，在任意的前 k 个字符中，1 的个数不能少于 0 的个数。现在 lxhgww 想要知道满足要求的字符串共有多少个，聪明的程序员们，你们能帮助他吗？ 输入输出格式 输入格式 输入数据只有一行，包括 2 个数字 n 和 m。 输出格式 输出数据是一行，包括 1 个数字，表示满足要求的字符串数目，这个数可能会很大，只需输出这个数除以 $20100403$ 的余数 输入输出样例 输入样例 #1 2 2 输出样例 #1 2 说明 对于 $30\\%$ 的数据，保证 $1\\leq m\\leq n\\leq 10^3$。 对于 $100\\%$ 的数据，保证 $1\\leq m\\leq n\\leq 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:规划 题目描述 某地方有 N 个工厂，有 $N-1$ 条路连接它们，且它们两两都可达。每个工厂都有一个产量值和一个污染值。现在工厂要进行规划，拆除其中的 M 个工厂，使得剩下的工厂依然连成一片且总产量 / 总污染的值最大。 输入输出格式 输入格式 第一行两个整数 $N,M$ 表示工厂个数和要拆除的个数。 第二行 N 个正整数 $w_i$，表示每个工厂的产值 。 第三行 N 个正整数 $c_i$，表示每个工厂的污染值。 接着 $N-1$ 行，每行两个正整数 $a,b\\ (1 \\le a,b \\le N)$ 表示 $a,b$ 之间相连。 输出格式 输出 总产量/总污染 的最大值，保留一位小数。 输入输出样例 输入样例 #1 3 2  2 3 4  1 1 1  1 2  2 3  输出样例 #1 4.0 说明 ### 数据范围及约定 对于全部数据，$1<N<100，1 \\le M<N，1\\le w_i\\le 10000，1\\le c_i\\le 10000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:完美数 题目描述 考古队员小星在一次考察中意外跌入深渊，穿越到了一个神秘的荒漠。这里有许多超越他认识的事物存在，例如许多漂浮在空中的建筑，例如各种奇怪的动物。 在这片荒漠的中央，小星发现了一个巨大的类似神庙的建筑，为了脱离这片空间，小星决定前去探索。 在临近神庙大门时，突然跳出了一个人面狮（不是斯芬达克斯）！它咆哮着： “我是这里的守卫，要想通过这里，必须回答出我的一系列问题，否则，我就吃了你。” 人面狮告诉小星，问题总是这样的模式：比 X 大的第 N 小的回文数是多少。 小星想，这个问题看来不难，于是问答开始了。 “比 1 大的第 1 小回文数数是多少？” “2” “比 $17$ 大的第 2 小的回文数是多少？” “$33$” “比 $98$ 大的第 2 小的回文数是多少？” “$101$” “那比 948237 大的第 2339587 小的回文数是多少？” “\\*（•%（\\*•—#•#￥\\*—%（\\*—%” 为了避免被守卫吃掉，小星只好打开笔记本想借助电脑，却意外地发现可以通过网络（网通？电信？宇宙通？）找到你，于是这个问题就拜托给你了！ 输入输出格式 输入格式 本题每一个数据包含有多组数据。 对于每一个数据包，第一行一个数 T，表示总共有 T 组数据。 对于每一组数据，包括两行，第一行为 X，第二行为 N，表示当前询问是比 X 大的第 N 小的回文数是多少。 输出格式 对于每一组数据输出一行，表示询问的结果。 输入输出样例 输入样例 #1 3  1  1  17  2  98  2  输出样例 #1 2  33  101  说明 **【数据规模】** $20 \\%$ 的数据满足 $X \\le 200000，N \\le 1000$。 $30 \\%$ 的数据满足 $X, N$ 在 `longint` 范围之内，且答案也在 `longint` 范围之内。 $100 \\%$ 的数据满足 $X, N \\le {10}^{10000}$，答案 $\\le {10}^{20001}。T \\le 10$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:序列 题目描述 有一个整数序列，它的每个数各不相同，我们不知道它的长度是多少（即整数个数），但我们知道在某些区间中间至少有多少个整数，用区间（$L_i,R_i,C_i$）来描述，表示这个整数序列中至少有 $C_i$ 个数来自区间 $[L_i,R_i]$，给出若干个这样的区间，问这个整数序列的长度最少能为多少？ 输入输出格式 输入格式 第一行一个整数 N，表示区间个数； 接下来 N 行，每行三个整数 $L_i,R_i,C_i$，描述一个区间。 输出格式 仅一个数，表示该整数序列的最小长度。 输入输出样例 输入样例 #1 4 4 5 1 6 10 3 7 10 3 5 6 1 输出样例 #1 4 说明 ### 数据范围及约定 对于全部数据，$1\\le N \\le 1000，0 \\le L_i \\le R_i \\le 1000，1 \\le C_i \\le R_i-L_i+1$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[国家集训队] happiness 题目描述 高一一班的座位表是个 $n\\times m$ 的矩阵，经过一个学期的相处，每个同学和前后左右相邻的同学互相成为了好朋友。这学期要分文理科了，每个同学对于选择文科与理科有着自己的喜悦值，而一对好朋友如果能同时选文科或者理科，那么他们又将收获一些喜悦值。 作为计算机竞赛教练的 scp 大老板，想知道如何分配可以使得全班的喜悦值总和最大。 输入输出格式 输入格式 第一行两个正整数 n，m。 接下来是六个矩阵。 - 第一个矩阵为 n 行 m 列。此矩阵的第 i 行第 j 列的数字表示座位在第 i 行第 j 列的同学选择文科获得的喜悦值。 - 第二个矩阵为 n 行 m 列。此矩阵的第 i 行第 j 列的数字表示座位在第 i 行第 j 列的同学选择理科获得的喜悦值。 - 第三个矩阵为 $n-1$ 行 m 列。此矩阵的第 i 行第 j 列的数字表示座位在第 i 行第 j 列的同学与第 $i+1$ 行第 j 列的同学同时选择文科获得的额外喜悦值。 - 第四个矩阵为 $n-1$ 行 m 列。此矩阵的第 i 行第 j 列的数字表示座位在第 i 行第 j 列的同学与第 $i+1$ 行第 j 列的同学同时选择理科获得的额外喜悦值。 - 第五个矩阵为 n 行 $m-1$ 列。此矩阵的第 i 行第 j 列的数字表示座位在第 i 行第 j 列的同学与第 i 行第 $j+1$ 列的同学同时选择文科获得的额外喜悦值。 - 第六个矩阵为 n 行 $m-1$ 列。此矩阵的第 i 行第 j 列的数字表示座位在第 i 行第 j 列的同学与第 i 行第 $j+1$ 列的同学同时选择理科获得的额外喜悦值。 输出格式 输出一个整数，表示喜悦值总和的最大值。 输入输出样例 输入样例 #1 1 2 1 1 100 110 1 1000 输出样例 #1 1210 说明 ### 样例解释 两人都选理，则获得 $100+110+1000$ 的喜悦值。 对于 $100\\%$ 的数据，$1\\le n,m \\le 100$，且所有喜悦值均为小于等于 $5000$ 的非负整数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:锁 题目描述 给出 N 和 K，要求生成从 0 到 $2^N-1$ 的一个序列，序列的第一项为 0，并且该序列满足以下三个条件： 1. 序列长度为 $2^N$，保证 0 到 $2^N-1$ 的每个数都用了且只用了一次。 2. 序列中任意两相邻的数都是由前一个数在其二进制下，改变了具有相同值的若干个位而形成的，即把其中若干个 0 变为 1，或把其中若干个 1 变为 0，并且只能二选一。 3. 当存在多个序列满足前两个条件的时候，要保证字典序最小，即由前一个数生成后一个数的时候，要挑值最小的数（当然是满足前两个条件的情况下）。 现问你这个序列前 K 项中的最大值是多少，输出其二进制形式，注意一定要输出 N 位，包括前导零。 输入输出格式 输入格式 仅一行两个整数 $N,K$。 输出格式 一个二进制表示的数，为所求的答案。 输入输出样例 输入样例 #1 3 8 输出样例 #1 111 说明 ### 样例解释 生成的序列为 $[000,001,011,010,110,100,101,111]$。前 8 项当中的最大值为 $111$。 ### 数据范围及约定 对于全部数据，$1 \\le N \\le 50,1 \\le K \\le 2^N$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:看守 题目描述 给出 d 维空间的 n 个点，求曼哈顿距离最大的两个点的曼哈顿距离。 两个 d 维的点 $(x_1,x_2,\\ldots,x_d)，(y_1,y_2,\\ldots,y_d)$ 的曼哈顿距离定义为 $|x_1-y_1|+|x_2-y_2|+\\ldots+|x_d-y_d|$。 输入输出格式 输入格式 第一行两个整数 n，d。 接下来 n 行，每行 d 个整数描述一个点的坐标。 输出格式 输出最大的曼哈顿距离。 输入输出样例 输入样例 #1 4 2 2 1 1 4 4 5 5 3 输出样例 #1 6 说明 #### 数据规模与约定 - 对于 $60\\%$ 的数据，保证 $d\\le2$。 - 对于 $100\\%$ 的数据，保证 $2\\le n\\le10^6，d\\le4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:$N\\times N\\ (1\\le N\\le 100)$ 方格中，$\\verb!x!$ 表示不能行走的格子，$\\verb!.!$ 表示可以行走的格子。卡门很胖，故而不好转弯。现在要从 $A$ 点走到 $B$ 点，请问最少要转 $90$ 度弯多少次？ 题目描述 Consider an N x N (1 <= N <= 100) square field composed of 1 by 1 tiles. Some of these tiles are impassible by cows and are marked with an 'x' in this 5 by 5 field that is challenging to navigate: ```cpp . . B x .  . x x A .  . . . x .  . x . . .  . . x . .  ``` Bessie finds herself in one such field at location A and wants to move to location B in order to lick the salt block there.  Slow, lumbering creatures like cows do not like to turn and, of course, may only move parallel to the edges of the square field. For a given field, determine the minimum number of ninety degree turns in any path from A to B. The path may begin and end with Bessie facing in any direction. Bessie knows she can get to the salt lick."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:田忌赛马 题目描述 我国历史上有个著名的故事： 那是在 $2300$ 年以前。齐国的大将军田忌喜欢赛马。他经常和齐王赛马。他和齐王都有三匹马：常规马，上级马，超级马。一共赛三局，每局的胜者可以从负者这里取得 $200$ 银币。每匹马只能用一次。齐王的马好，同等级的马，齐王的总是比田忌的要好一点。于是每次和齐王赛马，田忌总会输 $600$ 银币。 田忌很沮丧，直到他遇到了著名的军师――孙膑。田忌采用了孙膑的计策之后，三场比赛下来，轻松而优雅地赢了齐王 $200$ 银币。这实在是个很简单的计策。由于齐王总是先出最好的马，再出次好的，所以田忌用常规马对齐王的超级马，用自己的超级马对齐王的上级马，用自己的上级马对齐王的常规马，以两胜一负的战绩赢得 $200$ 银币。实在很简单。 如果不止三匹马怎么办？这个问题很显然可以转化成一个二分图最佳匹配的问题。把田忌的马放左边，把齐王的马放右边。田忌的马 A 和齐王的 B 之间，如果田忌的马胜，则连一条权为 $200$ 的边；如果平局，则连一条权为 0 的边；如果输，则连一条权为 $-200$ 的边……如果你不会求最佳匹配，用最小费用最大流也可以啊。 然而，赛马问题是一种特殊的二分图最佳匹配的问题，上面的算法过于先进了，简直是杀鸡用牛刀。现在，就请你设计一个简单的算法解决这个问题。 输入输出格式 输入格式 第一行一个整数 n ，表示他们各有几匹马（两人拥有的马的数目相同）。第二行 n 个整数，每个整数都代表田忌的某匹马的速度值（$0 \\le $ 速度值 $\\le 100$）。第三行 n 个整数，描述齐王的马的速度值。两马相遇，根据速度值的大小就可以知道哪匹马会胜出。如果速度值相同，则和局，谁也不拿钱。 输出格式 仅一行，一个整数，表示田忌最大能得到多少银币。 输入输出样例 输入样例 #1 3 92 83 71 95 87 74 输出样例 #1 200 说明 ### 数据规模与约定 - 对于 $20\\%$ 的数据，$1\\le N\\le 65$； - 对于 $40\\%$ 的数据，$1\\le N\\le 250$； - 对于 $100\\%$ 的数据，$1\\le N\\le2000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:塔 题目描述 小明很喜欢摆积木，现在他正在玩的积木是由 N 个木块组成的，他想用这些木块搭出两座高度相同的塔，一座塔的高度是搭建它的所有木块的高度和，并且一座塔至少要用一个木块。每个木块只能用一次，也可以不用。目前已知每块木块的高度，小明想知道在最终两个塔的高度相同的情况下，他所能搭的塔的最大高度是多少，你能帮助他吗？ 输入输出格式 输入格式 第一行为一个整数 N，表示木块个数。 第二行是 N 个整数，表示 N 块木块的高度。 输出格式 仅一个整数，表示能搭建的塔的最大高度，若不能搭建两座相同高度的塔，则输出 `-1`。 输入输出样例 输入样例 #1 3  2 3 5 输出样例 #1 5 说明 对于 $100\\%$ 的数据，$N \\le 50$ ，每块木块的高度 h 满足 $1 \\le h \\le 500000$，所有木块的高度总和 $\\le 500000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:圆 题目描述 给出 n 个圆，保证任意两个圆都不相交且不相切。   然后给出两个点 $(x_1,y_1),(x_2,y_2)$，保证均不在某个圆上。现在要从 $(x_1,y_1) \\to (x_2,y_2)$ 画条曲线，问这条曲线最少穿过多少次圆的边界？"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO04DEC] Cow Ski Area G 题目描述 约翰的表哥罗恩生活在科罗拉多州。他近来打算教他的奶牛们滑雪，但是奶牛们非常害羞，不敢在游人如织的度假胜地滑雪。没办法，他只好自己建滑雪场了。罗恩的雪场可以划分为 W 列 L 行 $(1\\le W\\le 500, 1\\le L\\le 500)$，每个方格有一个特定的高度 $H(0\\le H\\le 9999)$。奶牛可以在相临方格间滑雪，而且不能由低到高滑。 为了保证任意方格可以互通，罗恩打算造一些直达缆车。缆车很强大，可以连接任意两个方格，而且是双向的。而且同一个方格也可以造多台缆车。但是缆车的建造费用贵得吓人，所以他希望造尽量少的缆车。那最少需要造多少台呢？ 输入输出格式 输入格式 第 1 行：W，L。 接下来输入宽 W 高 L 的矩阵地图。 输出格式 输出最小需要的缆车数。 输入输出样例 输入样例 #1 9 3 1 1 1 2 2 2 1 1 1 1 2 1 2 3 2 1 2 1 1 1 1 2 2 2 1 1 1 输出样例 #1 3 说明 $1\\le W,L\\le 500，0\\le H\\le 9999$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:原 《产品排序》 参见P2577 题目描述 osu 是一款群众喜闻乐见的休闲软件。  我们可以把 osu 的规则简化与改编成以下的样子:  一共有 n 次操作，每次操作只有成功与失败之分，成功对应 1，失败对应 0，n 次操作对应为 1 个长度为 n 的 01 串。在这个串中连续的  X 个 1 可以贡献 $X^3$ 的分数，这 x 个 1 不能被其他连续的 1 所包含（也就是极长的一串 1，具体见样例解释）  现在给出 n，以及每个操作的成功率，请你输出期望分数，输出四舍五入后保留 1 位小数。 输入输出格式 输入格式 第一行有一个正整数 n，表示操作个数。接下去 n 行每行有一个 $[0,1]$ 之间的实数，表示每个操作的成功率。 输出格式 只有一个实数，表示答案。答案四舍五入后保留 1 位小数。 输入输出样例 输入样例 #1 3  0.5  0.5  0.5 输出样例 #1 6.0 说明 【样例说明】 $000$ 分数为 0，$001$ 分数为 1，$010$ 分数为 1，$100$ 分数为 1，$101$ 分数为 2，$110$ 分数为 8，$011$ 分数为 8，$111$ 分数为 $27$，总和为 $48$，期望为 $\\dfrac{48}8 = 6.0$。 $n \\leq 1 \\times 10 ^ 5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小朋友的球 题目描述 @发源于 小朋友最近特别喜欢球。有一天他脑子抽了，从口袋里拿出了 N 个不同的球，想把它们放到 M 个相同的盒子里，并且要求每个盒子中至少要有一个球，他好奇有几种放法，于是尝试编程实现，但由于他天天不好好学习，只会上 B 站看游泳教练，于是他向你求助。 输入输出格式 输入格式 多组数据，每行两个数 $N,M$。 输出格式 每组数据一行，表示方案数。 输入输出样例 输入样例 #1 4 2 1 1 输出样例 #1 7 1 说明 - 对于 $20\\%$ 的数据，满足 $N,M \\leq 10$； - 对于 $100\\%$ 的数据，满足 $1 \\leq N,M \\leq 100$，一个测试文件最多有 $10$ 组测试数据。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:炸铁路 题目描述 A 国派出将军 uim，对 B 国进行战略性措施，以解救涂炭的生灵。 B 国有 n 个城市，这些城市以铁路相连。任意两个城市都可以通过铁路直接或者间接到达。 uim 发现有些铁路被毁坏之后，某两个城市无法互相通过铁路到达。这样的铁路就被称为 key road。 uim 为了尽快使该国的物流系统瘫痪，希望炸毁铁路，以达到存在某两个城市无法互相通过铁路到达的效果。 然而，只有一发炮弹（A 国国会不给钱了）。所以，他能轰炸哪一条铁路呢？ 输入输出格式 输入格式 第一行 $n,m\\ (1 \\leq n\\leq 150，1 \\leq m \\leq 5000)$，分别表示有 n 个城市，总共 m 条铁路。 以下 m 行，每行两个整数 $a, b$，表示城市 a 和城市 b 之间有铁路直接连接。 输出格式 输出有若干行。 每行包含两个数字 $a,b$，其中 $a<b$，表示 $\\lang a,b\\rang$ 是 key road。 请注意：输出时，所有的数对 $\\lang a,b\\rang$ 必须按照 a 从小到大排序输出；如果a 相同，则根据 b 从小到大排序。 输入输出样例 输入样例 #1 6 6 1 2 2 3 2 4 3 5 4 5 5 6 输出样例 #1 1 2 5 6"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:选书 题目描述 学校放寒假时，信息学奥赛辅导老师有 $1,2,3,\\cdots,x$ 本书，要分给参加培训的 x 个人，每人只能选一本书，但是每人有两本喜欢的书。 老师事先让每个人将自己喜欢的书填写在一张表上。然后根据他们填写的表来分配书本，希望设计一个程序帮助老师求出所有可能的分配方案，使每个学生都满意。 输入输出格式 输入格式 第 1 行一个数 x。 第 2 行至第 $1+x$ 行，每行两个数，表示 $a_i$ 喜欢的书的序号。 输出格式 只有一个数，总方案数 $\\mathit{total}$。 输入输出样例 输入样例 #1 5 1 3 4 5 2 5 1 4 3 5 输出样例 #1 2 说明 ### 数据范围及约定 对于全部数据，$1\\le x\\le 20$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:购物 题目描述 你就要去购物了，现在你手上有 N 种不同面值的硬币，每种硬币有无限多个。为了方便购物，你希望带尽量少的硬币，但要能组合出 1 到 X 之间的任意值。 输入输出格式 输入格式 第一行两个数 $X, N$，以下 N 个数，表示每种硬币的面值。 输出格式 最少需要携带的硬币个数，如果无解输出 `-1`。 输入输出样例 输入样例 #1 20 4 1 2 5 10 输出样例 #1 5 说明 对于 $30\\%$ 的数据，满足 $N \\le 3，X \\le 20$； 对于 $100\\%$ 的数据，满足 $N \\le 10，X \\le 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[国家集训队] 拉拉队排练 题目描述 艾利斯顿商学院篮球队要参加一年一度的市篮球比赛了。拉拉队是篮球比赛的一个看点，好的拉拉队往往能帮助球队增加士气，赢得最终的比赛。所以作为拉拉队队长的楚雨荨同学知道，帮助篮球队训练好拉拉队有多么的重要。 拉拉队的选拔工作已经结束，在雨荨和校长的挑选下，n 位集优秀的身材、舞技于一体的美女从众多报名的女生中脱颖而出。这些女生将随着篮球队的小伙子们一起，和对手抗衡，为艾利斯顿篮球队加油助威。 一个阳光明媚的早晨，雨荨带领拉拉队的队员们开始了排练。n 个女生从左到右排成一行，每个人手中都举了一个写有 $26$ 个小写字母中的某一个的牌子，在比赛的时候挥舞，为小伙子们呐喊、加油。 雨荨发现，如果连续的一段女生，有奇数个，并且他们手中的牌子所写的字母，从左到右和从右到左读起来一样，那么这一段女生就被称作和谐小群体。 现在雨荨想找出所有和谐小群体，并且按照女生的个数降序排序之后，前 K 个和谐小群体的女生个数的乘积是多少。由于答案可能很大，雨荨只要你告诉她，答案除以 $19930726$ 的余数是多少就行了。 输入输出格式 输入格式 第一行为两个正整数 n 和 K，含义如题面所述。 接下来一行为 n 个字符，代表从左到右女生拿的牌子上写的字母。 输出格式 输出一个整数，代表题目描述中所写的乘积除以 $19930726$ 的余数，如果总的和谐小群体个数小于 K，输出一个整数 $-1$。 输入输出样例 输入样例 #1 5 3 ababa 输出样例 #1 45 说明 ### 样例说明 和谐小群体女生所拿牌子上写的字母从左到右按照女生个数降序排序后为 `ababa`，`aba`，`aba`，`bab`，`a`，`a`，`a`，`b`，`b`，前三个长度的乘积为 $5\\times 3\\times 3 = 45$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数位平方和 题目描述 定义 $S(n)$ 表示 n 的各个数位的 k 次方的和。 定义 $H(n)$ 为满足 $H(n) \\le \\min\\{n, H(S(n))\\}$ 的最大值。 求$\\sum_{i=A}^{B} H(i) \\bmod (10^7 + 7)$。 输入输出格式 输入格式 一行三个数 $k, A, B$。 输出格式 一个数，表示 $\\sum_{i=A}^{B} H(i) \\bmod (10^7 + 7)$。 输入输出样例 输入样例 #1 2 1 5 输出样例 #1 14 说明 对于 $20\\%$ 的数据，$A, B \\le 50$。   对于 $100\\%$ 的数据，$1 \\le A, B \\le {10}^6，1 \\le k \\le 6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数7 题目描述 $1337$ 个人排成一个圈，从 1 号人开始报数，初始方向是 $1,2,3\\dots$。如果某个人报的数是 7 的倍数或数字中含有 7，那么报数的方向就反一下。问报数字 X 的是第几号人？ **比如初始 $20$ 个数字的情况是：** | 数字 X | 报的人的编号 | | :----------: | :----------: | | 1 | 1 | | 2 | 2 | | 3 | 3 | | 4 | 4 | | 5 | 5 | | 6 | 6 | | 7 | 7 | | 8 | 6 | | 9 | 5 | | $10$ | 4 | | $11$ | 3 | | $12$ | 2 | | $13$ | 1 | | $14$ | $1337$ | | $15$ | 1 | | $16$ | 2 | | $17$ | 3 | | $18$ | 2 | | $19$ | 1 | | $20$ | $1337$ | 输入输出格式 输入格式 一行一个整数 X。 输出格式 一行一个整数，表示最终报数字 X 的是第几号人。 输入输出样例 输入样例 #1 1000 输出样例 #1 1311 说明 **【数据规模与约定】** 对于 $30\\%$ 的数据，满足 $X\\leq10^6$； 对于 $90\\%$ 的数据，满足 $X\\leq10^8$； 对于 $100\\%$ 的数据，满足 $X\\leq10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:在洛谷中，打卡不只是一个简单的鼠标点击动作，通过每天在洛谷打卡，可以清晰地记录下自己在洛谷学习的足迹。通过每天打卡，来不断地暗示自己：我又在洛谷学习了一天，进而帮助自己培养恒心、耐心、细心。此外，通过打卡，还可以获取经验值奖励，经验值的多少在一定程度上反映了你在洛谷的资历和成就。通过打卡累积活跃值，渐渐升级，会让你感觉“离神犇越来越近了”。 题目描述 洛谷的打卡系统与其他网站的打卡系统一样，连续”打卡天数越多，每次打卡获得的奖励也就越多，同时连续天数加上一天。然而，于其他网站只要一天不打卡，连续天数就要清零。与其他网站不同的是，洛谷的打卡更具有人性化，如果多天不打卡，连续天数仅仅只是减少，当遗漏天数越少，减少的天数也就越少。规则是减少 $2^{n-1}$ 天，n 为连续遗漏天数。连续天数在下一次打卡时清算，打卡连续天数不会小于 0。也就是说，如果每隔一天打卡，那么连续天数就不会变了。 当连续天数达到以下天数时，给予不同的活跃值奖励： 1 天：奖励 1（千里之行，始于足下） 3 天：奖励 2（坚持 3 天了，加油！） 7 天：奖励 3（曜日轮回） $30$ 天：奖励 4（月圆月缺，习惯养成） $120$ 天：奖励 5（坚持四个月了！） $365$ 天：奖励 6（一年四季都坚持下来了！真不容易！） 小 a N天前在洛谷注册了一个账号，虽然当时立志每天都要打卡，但发现这不太容易做到。现在知道他 N 天的的打卡记录，小 a 希望得知他通过打卡，在 N 天能获得多少活跃值？ 输入输出格式 输入格式 第 1 行一个整数 N。 接下来 N 行，每行一个整数 1 或 0，代表当天是否打过卡。 输出格式 一个整数，表示获得的活跃值！ 输入输出样例 输入样例 #1 12 1 1 1 1 1 0 0 0 1 0 1 1 输出样例 #1 12 说明 第 1 天：1//开始打卡！获得 1 点经验，共 1 点，连续 1 天。 第 2 天：1//获得 1 点经验，共 2 点，连续 2 天。 第 3 天：1//获得 2 点经验，共 4 点，连续 3 天。 第 4 天：1//获得 2 点经验，共 6 点，连续 4 天 第 5 天：1//获得 2 点经验，共 8 点，连续 5 天 第 6 天：0//由于要去趟火星，没有网络不得已而断签 第 7 天：0 第 8 天：0 第 9 天：1//我回来了，可惜连续天数变成 $5-4=1$ 天了TQT……获得 1 点经验，共 9 点，连续 2 天 第 $10$ 天：0//啊，事情太多给忘了 第 $11$ 天：1//连续天数变成 $2-1=1$ 天。获得 1 点经验，共 $10$ 点，连续 2 天。 第 $12$ 天：1//获得 2 点经验，共 $12$ 点，连续 3 天。 小a：弄个自动打卡机，怎么样？ kkksc03：这不符合洛谷的规则的！ $1\\leq N\\leq 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:正方形计数 题目描述 给定平面上 N 个点，你需要计算以其中 4 个点为顶点的正方形的个数。注意这里的正方形边不一定需要和坐标轴平行。 输入输出格式 输入格式 第一行一个数 N。 接下来 N 行每行两个数，表示点的坐标。 输出格式 一个数表示正方形的个数。 输入输出样例 输入样例 #1 7  0 0  0 1  1 0  1 1  1 2  2 1  2 2 输出样例 #1 3 说明 对于 $20\\%$ 的数据，满足 $1\\leq N\\leq 20$。 对于 $100\\%$ 的数据，满足 $1\\leq N\\leq 500，-50\\leq X_i, Y_i\\leq 50$，点不会重合。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:前缀单词 题目描述 一组单词是安全的，当且仅当不存在一个单词是另一个单词的前缀，这样才能保证数据不容易被误解。现在你手上有一个单词集合 S，你需要计算有多少个子集是安全的。 注意空集永远是安全的。 输入输出格式 输入格式 第一行一个数 n，表示集合的大小，以下 n 行。每行一个由 $\\verb!a!\\cdots\\verb!z!$ 构成的字符串。 输出格式 安全子集的个数。 输入输出样例 输入样例 #1 3  hello  hell  hi 输出样例 #1 6 说明 ### 数据范围及约定 - 对 $30\\%$ 的数据，满足 $1 \\le n \\le 10$。 - 对于 $100\\%$ 的数据，满足 $1 \\le n \\le 50$，字符串长度 $ \\le 50$，没有两个字符串是完全相同的。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数列 题目描述 给定一个长度是 n 的数列 A ，我们称一个数列是完美的，当且仅当对于其任意连续子序列的和都是正的。 现在你有一个操作可以改变数列，选择一个区间 $[l,r]$ 满足 $\\sum\\limits_{i = l}^r A_i < 0$ ,其中 $1 < l \\le r < n$。 令 $S = \\sum\\limits_{i = l}^r A_i$ ，对于 $A_{l - 1}$ 和 $A_{r + 1}$ 分别加上 S，$A_l$ 和 $A_r$ 分别减去 S（如果 $l = r$ 就减两次）。问最少几次这样的操作使得最终数列是完美的。 输入输出格式 输入格式 第 1 行一个数 n ，以下 n 个数。 第 2 行至第 $n + 1$ 行，第 i 行一个数 $A_i$。 输出格式 一个数表示最少的操作次数，如果无解输出 $-1$。 输入输出样例 输入样例 #1 5  13  -3   -4  -5  62 输出样例 #1 2 说明 ### 样例解释 首先选择区间 $[2,4]$，之后数列变成 $1,9-4,7,50$，然后选择 $[3,3]$，数列变成 $1,5,4,3,50$ ### 限制与约定 对于 $20\\%$ 的数据，满足 $1 \\le N \\le 5$ ; 对于 $100\\%$ 的数据，满足 $1 \\le N \\le 10^5$ ;  $1 \\le |A_i| < 2^{31}$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO04DEC] Cleaning Shifts S 题目描述 一天有 $T(1\\le T\\le 10^6)$ 个时段。约翰正打算安排他的 $N(1\\le N\\le 2.5\\times 10^4)$ 只奶牛来值班，打扫打扫牛棚卫生。每只奶牛都有自己的空闲时间段 $ [S_i,E_i](1\\le S_i\\le E_i\\le T)$，只能把空闲的奶牛安排出来值班。而且，每个时间段必需有奶牛在值班。 那么，最少需要动用多少奶牛参与值班呢？如果没有办法安排出合理的方案，就输出 $-1$。 输入输出格式 输入格式 第 1 行：N，T。 第 2 到 $N+1$ 行：$S_i，E_i$。 输出格式 一行，输出最少安排的奶牛数。 输入输出样例 输入样例 #1 3 10 1 7 3 6 6 10 输出样例 #1 2 说明 $1\\le T\\le 10^6，N\\le 2.5\\times 10^4，1\\le S_i\\le E_i\\le T$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO04DEC] Bad Cowtractors S 题目描述 奶牛贝茜被雇去建设 $N(2\\le N\\le 10^3)$ 个牛棚间的互联网。她已经勘探出 $M(1\\le M\\le 2\\times 10^4)$ 条可建的线路，每条线路连接两个牛棚，而且会花费 $C(1\\le C\\le 10^5)$。农夫约翰吝啬得很，他希望建设费用最少甚至他都不想给贝茜工钱。贝茜得知工钱要告吹，决定报复。她打算选择建一些线路，把所有牛棚连接在一起，让约翰花费最大。但是她不能造出环来，这样约翰就会发现。 输入输出格式 输入格式 第 1 行：N，M。 第 2 到 $M+1$ 行：三个整数，表示一条可能线路的两个端点和费用。 输出格式 一行，表示最大的花费。如果不能建成合理的线路，就输出 $-1$。 输入输出样例 输入样例 #1 5 8 1 2 3 1 3 7 2 3 10 2 4 4 2 5 8 3 4 6 3 5 2 4 5 17 输出样例 #1 42 说明 $2\\le N\\le 10^3，1\\le M\\le 2\\times 10^4，1\\le C\\le 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO04DEC] Tree Cutting S 题目描述 约翰意识到贝茜建设网络花费了他巨额的经费，就把她解雇了。贝茜很愤怒，打算狠狠报复。她打算破坏刚建成的约翰的网络。约翰的网络是树形的，连接着 N 个牛棚。她打算切断某一个牛棚的电源，使和这个牛棚相连的所有电缆全部中断。之后，就会存在若干子网络。为保证破坏够大，每一个子网的牛棚数不得超过总牛棚数的一半，那哪些牛棚值得破坏呢？ 输入输出格式 输入格式 第 1 行：一个整数 N。 第 2 到 $N+1$ 行：每行输入两个整数，表示一条电缆的两个端点。 输出格式 按从小到大的顺序，输出所有值得破坏的牛棚。如果没有一个值得破坏，就输出 `NONE`。 输入输出样例 输入样例 #1 10 1 2 2 3 3 4 4 5 6 7 7 8 8 9 9 10 3 8 输出样例 #1 3 8 说明 $1\\le N\\le 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO05FEB] Rigging the Bovine Election S 题目描述 农场被划分为 $5\\times 5$ 的格子，每个格子中都有一头奶牛，并且只有荷斯坦（标记为 `H`）和杰西（标记为 `J`）两个品种。如果一头奶牛在另一头上下左右四个格子中的任一格里，我们说它们相连。奶牛要大选了。现在有一只杰西奶牛们想选择 7 头相连的奶牛，划成一个竞选区，使得其中它们品种的奶牛比荷斯坦的多。 要求你编写一个程序求出方案总数。 输入输出格式 输入格式 5 行，表示农场的情况。 输出格式 输出划区方案总数。 输入输出样例 输入样例 #1 HHHHH JHJHJ HHHHH HJHHJ HHHHH 输出样例 #1 2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO05FEB] Feed Accounting S 题目描述 约翰想知道上一船饲料是什么时候运到的。在饲料运到之前，他的牛正好把仓库里原来的饲料全吃光了。他收到运来的 $F1(1\\le F1\\le 10^6)$ 千克饲料。遗憾的是，他已经不记得这是哪一天的事情了。到第 $D(1\\le D\\le 2\\times 10^3)$ 天为止，仓库里还剩下 $F2(1\\le F2\\le F1)$ 千克饲料。 约翰养了 $C(1\\le C\\le 100)$ 头牛，每头牛每天都吃掉恰好 1 千克饲料。由于不同的原因，牛们从某一天开始在仓库吃饲料，又在某一天离开仓库，所以不同的两天可能会有差距很大的饲料消耗量。每头牛在来的那天和离开的那天都在仓库吃饲料。给出今天的日期 D，写一个程序，判断饲料最近一次运到是在什么时候。今天牛们已经吃过饲料了，并且饲料运到的那天牛们还没有吃过饲料。 输入输出格式 输入格式 第 1 行：四个整数 C，$F1，F2，D$，用空格隔开。 第 2 到 $C+1$ 行：每行是用空格隔开的两个数字，分别表示一头牛来仓库吃饲料的时间和离开的时间。 输出格式 一个正整数，即上一船饲料运到的时间。 输入输出样例 输入样例 #1 3 14 4 10 1 9 5 8 8 12 输出样例 #1 6 说明 ### 样例解释 上一次运来了 $14$ 千克饲料，现在饲料还剩下 4 千克。最近 $10$ 天里，有 3 头牛来吃过饲料。 约翰在第 6 天收到 $14$ 千克饲料，当天吃掉 2 千克，第 7 天吃掉 2 千克，第 8 天吃掉 3 千克，第 9 天吃掉 2 千克，第 $10$ 天吃掉 1 千克，正好还剩 4 千克。 ### 数据规模 $1\\le F2\\le F1\\le 10^6，1\\le D\\le 2\\times 10^3，1\\le C\\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO05FEB] Part Acquisition S 题目描述 奶牛们接到了寻找一种新型挤奶机的任务，为此它们准备依次经过 $N(1\\le N\\le 5\\times 10^4)$ 颗行星，在行星上进行交易。为了方便，奶牛们已经给可能出现的 $K(1\\le K\\le 10^3)$ 种货物进行了由 1 到 K 的标号。由于这些行星都不是十分发达。没有流通的货币，所以在每个市场里都只能用固定的一种货物去换取另一种货物。奶牛们带着一种上好的饲料从地球出发，希望在使用的物品的种类数量最少的情况下，最终得到所需要的机器。饲料的标号为 1，所需要的机器的标号为 K。如果任务无法完成，输出 $-1$。 输入输出格式 输入格式 第 1 行是两个数字 N 和 K。 第 2 到 $N+1$ 行，每行是两个数字 $A_i$ 和 $B_i$，表示第 i 颗行星为得到 $B_i$ 愿意提供 $A_i$。 输出格式 输出最少经手物品数。 输入输出样例 输入样例 #1 6 5 1 3 3 2 2 3 3 1 2 5 5 4 输出样例 #1 4 说明 奶牛们至少需要 4 种不同标号的物品，先用 1 去交换 3，再用 3 去交换 2，最后用 2 交换得到 5。 $1\\le N\\le 5\\times 10^4，1\\le K\\le 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO05FEB] Secret Milking Machine G 题目描述 约翰正在制造一台新型的挤奶机，但他不希望别人知道。他希望尽可能久地隐藏这个秘密。他把挤奶机藏在他的农场里，使它不被发现。在挤奶机制造的过程中，他需要去挤奶机所在的地方 T 次。他的农场里有秘密的地道，但约翰只在返回的时候用它。农场被划分成 N 块区域，用 1 到 $200$ 标号。这些区域被 P 条道路连接，每条路有一个小于 $10^6$ 的长度 L。两块区域之间可能有多条道路连接。为了减少被发现的可能，约翰不会两次经过农场上的任何一条道路。当然了，他希望走最短的路。请帮助约翰寻找这 T 次从仓库走到挤奶机所在地的路线。仓库是区域 1，挤奶机所在地是区域 N。我们现在要求的是约翰经过的这些道路中最长的路的长度最小是多少，当然他不能重复走某一条路。请注意，我们要求的不是最短的总路程长度，而是所经过的直揍连接两个区域的道路中最长的道路的最小长度。数据保证约翰可以找到 T 条没有重复的从仓库到挤奶机所在区域的路。 输入输出格式 输入格式 第 1 行是 3 个整数 N、P 和 T，用空格隔开。 第 2 到 $P+1$ 行，每行包括 3 个整数，$A_i，B_i，L_i$。表示区域 $A_i、B_i$ 之间有一条长度为 $L_i$ 的道路。 输出格式 输出只有一行，包含一个整数，即约翰经过的这些道路中最长的路的最小长度。 输入输出样例 输入样例 #1 7 9 2 1 2 2 2 3 5 3 7 5 1 4 1 4 3 1 4 5 7 5 7 1 1 6 3 6 7 3 输出样例 #1 5 说明 选择 $1-2-3-7$ 和 $1-6-7$ 两条路线．这些路线中最长路的最小长度是 5。 对于 $100\\%$ 的数据满足：$2\\le N\\le 200，1\\le P\\le 4\\times 10^4，1\\le T\\le 200$，每条路的长度 $\\le 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:# 暂无SPJ，欢迎贡献 题目描述 每个城市有 $1000$ 人，要求把给出的 $3\\times k$ 个城市分为 3 份，每份 $1000\\times k$ 人，每个城市投票人数为 $w_i$，使至少两个城市的票数过半（不包括刚好一半）。 输入输出格式 输入格式 第一行一个整数 k。 然后 $3\\times k$ 行，一行一个整数 $w_i$。 输出格式 输出有三组，第 i 组输出 k 行，表示第 i 个区域的城市编号。 输入输出样例 输入样例 #1 2 510 500 500 670 400 310 输出样例 #1 1 2 3 6 5 4 说明 可能会有多组解，输出任意一组即可。 $1\\le k\\le 60$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO05FEB] Aggressive cows G 题目描述 农夫约翰建造了一座有 n 间牛舍的小屋，牛舍排在一条直线上，第 i 间牛舍在 $x_i$ 的位置，但是约翰的 m 头牛对小屋很不满意，因此经常互相攻击。约翰为了防止牛之间互相伤害，因此决定把每头牛都放在离其它牛尽可能远的牛舍。也就是要最大化最近的两头牛之间的距离。 牛们并不喜欢这种布局，而且几头牛放在一个隔间里，它们就要发生争斗。为了不让牛互相伤害。约翰决定自己给牛分配隔间，使任意两头牛之间的最小距离尽可能的大，那么，这个最大的最小距离是多少呢？ 输入输出格式 输入格式 第一行用空格分隔的两个整数 n 和 m； 第二行为 n 个用空格隔开的整数，表示位置 $x_i$。 输出格式 一行一个整数，表示最大的最小距离值。 输入输出样例 输入样例 #1 5 3 1 2 8 4 9 输出样例 #1 3 说明 把牛放在 1，4，8 这三个位置，距离是 3。容易证明最小距离已经最大。 对于 $100\\%$ 的数据，$2 \\le n \\le 10^5，0 \\le x_i \\le 10^9，2 \\le m \\le n$。 不保证 a 数组单调递增。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 现有 m 所学校，每所学校预计分数线是 $a_i$。有 n 位学生，估分分别为 $b_i$。 根据 n 位学生的估分情况，分别给每位学生推荐一所学校，要求学校的预计分数线和学生的估分相差最小（可高可低，毕竟是估分嘛），这个最小值为不满意度。求所有学生不满意度和的最小值。 输入输出格式 输入格式 第一行读入两个整数 $m,n。m$ 表示学校数，n 表示学生数。 第二行共有 m 个数，表示 m 个学校的预计录取分数。第三行有 n 个数，表示 n 个学生的估分成绩。 输出格式 输出一行，为最小的不满度之和。 输入输出样例 输入样例 #1 4 3 513 598 567 689 500 600 550 输出样例 #1 32 说明 数据范围： 对于 $30\\%$ 的数据，$1\\leq n,m\\leq1000$，估分和录取线 $\\leq10000$； 对于 $100\\%$ 的数据，$1\\leq n,m\\leq100000$，估分和录取线 $\\leq 1000000$ 且均为非负整数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:在你的帮助下，v 神终于帮同学找到了最合适的大学，接下来就要通知同学了。在班级里负责联络网的是 dm 同学，于是 v 神便找到了 dm 同学，可 dm 同学正在忙于研究一道有趣的数学题，为了请 dm 出山，v 神只好请你帮忙解决这道题了。 题目描述 将一个整数 m 分解为 n 个四次方数的和的形式，要求 n 最小。例如，当 $m=706$ 时，因为 $706=5^4+3^4$，所以有 $n=2$。可以证明此时 n 最小。 输入输出格式 输入格式 一行，一个整数 m。 输出格式 一行，一个整数 n。 输入输出样例 输入样例 #1 706 输出样例 #1 2 说明 ### 数据范围及约定 - 对于 $30\\%$ 的数据，$m \\le 5000$； - 对于 $100\\%$ 的数据，$m \\le 100,000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 v 神的班级共有 N 个人，dm 同学想把同学分成 M 组联络，要求第 i 组的人数必须大于给定的正整数 $C_i$，求有多少不同的方案（两个是相同的方案当且仅当对于任意的一队 i，两个方案的第 i组同学数量相等）。由于结果很大，所以你只需要输出模 $10^9+7$ 的值。 输入输出格式 输入格式 第一行两个整数 N 和 M，后面有 M 行，每行一个整数，表示 $C_i$。 输出格式 仅有一行，一个整数，方案数模 $10^9+7$ 的值。 输入输出样例 输入样例 #1 10 3  1  2  3  输出样例 #1 3 说明 ### 样例解释 方案有三种，每组的个数分别是 $(3,3,4)，(2,4,4)，(2,3,5)$。 ### 数据范围约定 对于 $30\\%$ 的数据，$N,M\\le 10$。 对于 $60\\%$ 的数据，$N,M\\le 1000$。 对于 $100\\%$ 的数据，$1\\le N ,M\\le 10^6，1\\le C_i\\le 1000$。 数据保证至少有一个方案。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:忙完了学校的事，v 神终于可以做他的“正事”：陪女朋友散步。一天，他和女朋友走着走着，不知不觉就来到了一个千里无烟的地方。v 神正要往回走，如发现了一块牌子，牌子上有有一行小字和一张图，小字说道：“找到图上最大的交错正方形之后和我联系，这块地就是你的了。”在房价疯长的年代，v 神当然不愿错过这个机会，于是开始找了起来……以 v 神的能力当然找不出来了，你能帮 v 神找出来吗？ 题目描述 图上有一个矩阵，由 $N\\times M$ 个格子组成，这些格子由两种颜色构成，黑色和白色。请找到面积最大的且内部是黑白交错（即两个相连的正方形颜色不能相同）的正方形。 输入输出格式 输入格式 第一行两个整数 N 和 M，分别表示行数和列数。接下来有 N 行，每行 M 个数，0 或 1 分别表示这个格子是黑色或白色。 输出格式 仅有一行，表示满足条件最大正方形的边长。 输入输出样例 输入样例 #1 3 3 0 1 0 1 0 0 1 1 1 输出样例 #1 2 说明 ### 样例解释 $(1,1)$ 到 $(2,2)$ 这个正方形是满足条件的，它的边长是 2。 ### 数据范围及约定 - 对于 $30\\%$ 的数据，$N \\le 20$； - 对于 $60\\%$ 的数据，$N \\le 300$； - 对于 $100\\%$ 的数据，$N \\le 1500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:过家家 题目描述 有 $2n$ 个小学生来玩过家家游戏，其中有 n 个男生，编号为 1 到 n，另外 n 个女生，编号也是 1 到 n。每一个女生可以先选择一个和她不吵嘴的男生来玩，除此之外，如果编号为 X 的女生的朋友（也是女生，且编号为 Y）不和编号为 Z 的男生吵嘴，那么 X 也可以选择 Z。此外，朋友关系是可以传递的，比如 a 和 b 是朋友，b 和 c 是朋友，那么我们可以认为 a 和 c 也是朋友。 当每一位女生都选择了玩伴，那么他们会开始新一轮游戏。在每一轮后，每个女生都会开始去找一个新的男生做玩伴（以前没选过）。而且每一个女生最多能强制 k 个男生接受，无论他们以前是否吵嘴。 现在你的任务就是确定这 $2n$ 个小学生最多能玩几轮游戏。 输入输出格式 输入格式 第一行有四个整数 $n,m,k,f（3 \\le n \\le 250，0 < m < n^{2}，0 \\le f < n$）。 n 表示有 $2n$ 个小学生，其中 n 个男生 n 个女生。 接下来 m 行，每行包含两个数字 $a,b$ 表示编号为 a 的女生和编号为 b 的男生从没吵嘴过。 再接下来 f 行，每行包含两个数字 $c,d$ 表示编号为 c 的女生和编号为 d 的女生是朋友。 输出格式 对于每组数据，输出一个整数，表示 $2n$ 个小学生最多能玩几轮。 输入输出样例 输入样例 #1 4 5 1 2 1 1 2 3 3 2 4 2 4 4 1 4 2 3 输出样例 #1 3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:入门 题目描述 不是任何人都可以进入桃花岛的，黄药师最讨厌像郭靖一样呆头呆脑的人。所以，他在桃花岛的唯一入口处修了一条小路，这条小路全部用正方形瓷砖铺设而成。有的瓷砖可以踩，我们认为是安全的，而有的瓷砖一踩上去就会有喷出要命的毒气，那你就死翘翘了，我们认为是不安全的。你只能从一块安全的瓷砖上走到与他相邻的四块瓷砖中的任何一个上，但它也必须是安全的才行。 由于你是黄蓉的朋友，她事先告诉你哪些砖是安全的、哪些砖是不安全的，并且她会指引你飞到第一块砖上（第一块砖可能在任意安全位置），现在她告诉你进入桃花岛的秘密就是：如果你能走过最多的瓷砖并且没有死，那么桃花岛的大门就会自动打开了，你就可以从当前位置直接飞进大门了。 注意：瓷砖可以重复走过，但不能重复计数。 输入输出格式 输入格式 第一行两个正整数 W 和 H，分别表示小路的宽度和长度。 以下 H 行为一个 $H\\times W$ 的字符矩阵。每一个字符代表一块瓷砖。其中，`.` 代表安全的砖，`#` 代表不安全的砖，`@` 代表第一块砖。 输出格式 输出一行，只包括一个数，即你从第一块砖开始所能安全走过的最多的砖块个数（包括第一块砖）。 输入输出样例 输入样例 #1 11 9 .#......... .#.#######. .#.#.....#. .#.#.###.#. .#.#..@#.#. .#.#####.#. .#.......#. .#########. ........... 输出样例 #1 59 说明 #### 数据规模与约定 对于全部的测试点，保证 $1 \\leq W,H\\le 20$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:考验 题目描述 大家知道，黄药师不仅武功高超，而且酷爱音乐和诗歌。看到桃花岛来了个新客人，而且不是靠真武功进来的，就准备为难为难你。 他写了一首 N 行诗句的诗歌，美中不足的是这些诗句并不押韵，黄药师非常想遵循古诗的押韵。诗歌被分为若干段，每段都是四行诗。每一句诗都有一个韵脚，假如 A 和 B 表示两种不同的韵脚，每段四行诗的韵脚只可能是 `AABB`，`ABAB`，`ABBA` 和 `AAAA` 中的一种。 黄药师将诗句的韵脚都编了号，具有相同编号的句子代表有相同的韵脚。现在，黄药师想删掉一些句子，使得剩下的都是遵循押韵规则的四行诗，而且不允许改变诗句的顺序。 现在就问你：如何找出满足条件最长的诗歌？ 输入输出格式 输入格式 第 1 行为一个整数 $N\\ (1 \\le N \\le 4000)$，代表黄药师写的诗歌的句子数。 第 2 行为 N 个整数，分别表示每一行诗的韵脚，这些数字都是不超过 $10^9$ 的正数，每个数之间用 1 个空格隔开。 输出格式 一行一个整数k，为黄药师最多能够得到的四行诗个数。 输入输出样例 输入样例 #1 15  1 2 3 1 2 1 2 3 3 2 1 1 3 2 2  输出样例 #1 3  说明 提示： 删除第 3、6、$13$ 句诗，就可以分成 3 个四行诗，分别为： - $1,2,4,5$； - $7,8,9,10$； - $11,12,14,15$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:游览 题目描述 顺利通过了黄药师的考验，下面就可以尽情游览桃花岛了！ 你要从桃花岛的西头开始一直玩到东头，然后在东头的码头离开。可是当你游玩了一次后，发现桃花岛的景色实在是非常的美丽！！！于是你还想乘船从桃花岛东头的码头回到西头，再玩一遍，但是桃花岛有个规矩：你可以游览无数遍，但是每次游玩的路线不能完全一样。 我们把桃花岛抽象成了一个图，共 n 个点代表路的相交处，m 条边表示路，边是有向的（只能按照边的方向行走），且可能有连接相同两点的边。输入保证这个图没有环，而且从西头到东头至少存在一条路线。两条路线被认为是不同的当且仅当它们所经过的路不完全相同。 你的任务是：把所有不同的路线游览完一共要花多少时间？ 输入输出格式 输入格式 第一行为 5 个整数 $n,m,s,t,t_0$，分别表示点数，边数，岛西头的编号，岛东头的编号（编号是从 1 到 n）和你乘船从岛东头到西头一次的时间。 以下 m 行，每行 3 个整数 $x,y,t$，表示从点 x 到点 y 有一条行走耗时为 t 的路。 每一行的多个数据之间用一个空格隔开。 输出格式 假设总耗时为 $total$，则输出 $total\\ \\bmod 10000$ 的值（$total$ 对 $10000$ 取余）。 输入输出样例 输入样例 #1 3 4 1 3 7 1 2 5 2 3 7 2 3 10 1 3 15 输出样例 #1 56 说明 【样例说明】 共有 3 条路径可以从点 1 到点 3，分别是 $1-2-3，1-2-3，1-3$。 时间计算为： $(5+7)+7        +(5+10)+7        +(15)=56$ ### 数据范围 $2\\leq n\\leq 10^4，1\\leq m\\leq 5\\times 10^4，t\\leq 10^4，t_0\\leq 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:机器人小Q 题目描述 成功派送完这个大单后，餐厅决定引入一名新成员：机器人小 Q。小 Q 的到来让餐厅的客源增加了不少，但是，一段时间之后，新的问题又出现了，小 Q 和我们可不一样，如果要让他工作的话，我们得给他输入能量以保持体力，而小 Q 的能量菜单表上已经按一定顺序给出了 N 个单位的能量值，但是每个单位的能量由于来源不同，需要消耗一定的时间摄入。已知小 Q 每天充电的时间上限值为 $119$，如果时间超出的话就会自动崩溃，大家都想让小 Q 留下来，经过研究之后，决定派 HWX 和 XYF 去和老板谈判，考虑角度不一样，LXC 老板才不想听什么辛酸流泪史，他只想知道，若是想让小 Q 获得 k 单位的能量（也就是能量表中可以不接受某些能量）最少需要几天来充电。 输入输出格式 输入格式 第一行，两个整数，$N,K$ 分别表示小 Q 的能量菜单上有 N 个单位的能量，想获取其中的 k 个。 第二行，N个整数，分别是第 i 个单位能量需要的充电时间。 输出格式 仅一行，一个整数，为最少需要天数。 如果永远不能达到题目要求，输出 `You can't do it.` 输入输出样例 输入样例 #1 7 3 1 119 119 1 120 120 118 输出样例 #1 2 说明 ### 样例解释 只接收 $1,1,118$。显然这需要 2 天。 ### 数据规模 对于 $30\\%$ 的数据，有 $1\\le K\\le N\\le 20$。 对于 $100\\%$ 的数据，有 $1\\le K\\le N\\le 3000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:新单词接龙问题 题目描述 给定一个包含 n 个单词的字典，从中选择若干个单词，按字典序进行单词接龙，使得接龙的长度最大。 新单词接龙的规则： 1. 单词变换：单词 $w_i$ 添加一个字母，删除一个字母，或修改一个字母可以得到单词 $w_i+1$； 2. 字典序接龙：$w_1,w_2,\\cdots,w_n$，满足字典序。 输入输出格式 输入格式 第一行一个整数 n（$1 \\le n \\le 25,000$），表示字典中单词的总数。接下来 n 行，按字典序输入 n 个单词，每行一个字符串，表示单词，单词仅由小写字母组成，长度在 1 至 $16$ 以内。 输出格式 输出一行一个整数，表示能获得的单词接龙的最大长度。 输入输出样例 输入样例 #1 9  cat  dig  dog  fig  fin  fine  fog  log  wine  输出样例 #1 5 说明 ### 样例解释 长度为 5 的单词接龙为：$\\texttt{dig\\underline afigafin\\underline afine\\underline awine}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:方程求解 题目描述 给一个方程，形如 $X+Y=Z$ 或 $X-Y=Z$。给出了其中两个未知数，请求出第三个数。未知数用 `?` 表示，等式中也许会出现一些多余的空格。 输入输出格式 输入格式 输入一行一个字符出代表方程。 输出格式 一行一个整数表示`?`代表的值。 输入输出样例 输入样例 #1 1+2=? 输出样例 #1 3 输入样例 #2 3 +? =  2 输出样例 #2 -1 输入样例 #3 3-?=2 输出样例 #3 1 说明 #### 数据规模与约定 对于 $100\\%$ 的数，保证 $0\\le X,Y,Z\\lt10^9$，输入的字符串一定为题目给定的形式且长度不超过 $10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:贪婪的Copy 题目描述 Copy 从卢牛那里听说在一片叫 yz 的神的领域埋藏着不少宝藏，于是 Copy 来到了这个被划分为 n 个区域的神地。卢牛告诉了Copy这里共有 n 个宝藏，分别放在第 $P_i$ 个 $(1\\le P_i\\le N)$ 区域。Copy还得知了每个区域之间的距离。现在 Copy 从 1 号区域出发，要获得所有的宝藏并到 n 号区域离开。Copy 很懒，只好来找你为他寻找一条合适的线路，使得他走过的距离最短。 输入输出格式 输入格式 第一行一个正整数 $N(1\\le N\\le 100)$ 接下来一个 $N\\times N$ 的矩阵，第 $i+1$ 行第 j 列的数字表示区域 $i,j$ 之间的距离。每个距离用空格隔开，距离保证 $i\\to j\\le 1000$。请注意的 $i \\to j$ 距离并不一定等于 $j \\to i$ 的距离。 第 $N+2$ 行一个整数 $P(0\\le P\\le 10)$。 第 $N+3$ 行共 P 个用空格隔开的整数，表示有宝藏的区域编号。 输出格式 一个整数，为 Copy 获得全部宝藏需要的最短距离。数据保证答案小于等于 maxlongint。 输入输出样例 输入样例 #1 样例输入1  2  0 4  5 0  2  1 2    样例输入2  3  0 2 6  1 0 4  7 10 0  1  2 输出样例 #1 样例输出1  4    样例输出1  6 说明 - 对 $30\\%$ 的数据，$1\\le n\\le 15$，其余如题所述。 - 对 $100\\%$ 的数据，全部数据范围如题所述。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:部落卫队 题目描述 原始部落 byteland 中的居民们为了争夺有限的资源，经常发生冲突。几乎每个居民都有他的仇敌。部落酋长为了组织一支保卫部落的队伍，希望从部落的居民中选出最多的居民入伍，并保证队伍中任何 2 个人都不是仇敌。 给定 byteland 部落中居民间的仇敌关系，编程计算组成部落卫队的最佳方案。若有多种方案可行，输出字典序最大的方案。 输入输出格式 输入格式 第 1 行有 2 个正整数 n 和 m，表示 byteland 部落中有 n 个居民，居民间有 m 个仇敌关系。居民编号为 $1,2, \\cdots ,n$。接下来的 m 行中，每行有 2 个正整数 u 和 v，表示居民 u 与居民 v 是仇敌。 输出格式 第 1 行是部落卫队的人数；文件的第 2 行是卫队组成 $x_i，1 \\le i \\le n，x_i=0$ 表示居民 i 不在卫队中，$x_i=1$ 表示居民 i 在卫队中。 输入输出样例 输入样例 #1 7  10 1  2 1  4 2  4 2  3 2  5 2  6 3  5 3  6 4  5 5  6 输出样例 #1 3 1 0 1 0 0 0 1 说明 对于 $60\\%$ 数据：$n \\le 20，m \\le 100$。 对于所有数据：$n \\le 100,m \\le 3000$。数据从所有合法数据从随机均匀取样。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:突击考试 题目描述 一日，老师决定进行一次突击考试。已知每个学生都有一个考试能力等级，教室里一共有 N 个课桌，按照顺序排成一列，每张课桌可以坐两个人，第 i 张课桌坐的两个人的能力等级为$A_i,B_i$。现在老师决定对能力等级为 K 的人进行测验。他会从这 N 排中选择连续的 L 排进行测验，要求这 L 排中的每一排至少有一个人考试能力等级为 K。现在我们想知道 L 的最大值以及对应的等级 K。 输入输出格式 输入格式 第 1 行：一个整数 N； 第 2 至第 $N+1$ 行：每行两个整数，表示 $A_i,B_i$。 输出格式 两个整数 L 和 K，要求在 L 最大的条件下 K 最小。 输入输出样例 输入样例 #1 3 3 5 4 5 1 3 输出样例 #1 2 5 说明 ### 数据范围及约定 对于全部数据，$1 \\le N \\le 100,000，1 \\le A[i],B[i] \\le 5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:nodgd 是一个喜欢写程序的同学，前不久（好像还是有点久了）洛谷 OJ 横空出世，nodgd 同学当然第一时间来到洛谷 OJ 刷题。于是发生了一系列有趣的事情，他就打算用这些事情来出题恶心大家…… 题目描述 洛谷 OJ 刷题有个有趣的评测功能，就是系统自动绘制出用户的“做题曲线”。所谓做题曲线就是一条曲线，或者说是折线，是这样定义的：假设某用户在第 $b_i$ 天 AC 了 $c_i$ 道题，并且 $b_i$ 严格递增，那么该用户的做题曲线就是平面上点 $(i,c_i)$ 依次连出的一条折线。比如你在第 1 天做了 3 道题，第 3 天做了 4 道题，第 6 天做了 1 道题，那么你在前 6 天的做题曲线就是从点 $(1,3)$ 到点 $(2,4)$ 到点 $(3,1)$ 的连续折线。 nodgd 同学可以预测出自己未来 N 天每条能够 $AC$ 题目的数量，同时有一个很无趣的爱好，就是单调递增，nodgd 强迫自己的做题曲线保持严格的单调递增。但是出于某些原因，nodgd 在某些日子（共有 K 天）必须刷题，而且刷题数量一定是预计的数量（体现 nodgd 的神预测）。nodgd 同学想知道，在这样的情况下，自己最多有多少天可以刷题，不过 nodgd 同学还有大量的数学竞赛题、物理竞赛题、英语竞赛题、美术竞赛题、体育竞赛题……要做，就拜托你来帮他算算了。 输入输出格式 输入格式 第一行两个正整数，N 和 K，表示 nodgd 预测了未来 N 天每天做题的数量，其中 K 天必须刷题。 第二行 K 个正整数 $p_i$，表示第 $p_i$ 天必须刷题 $(1 \\le p_i\\le N$，保证每个 $p_i$ 不同）。 第三行 N 个正整数 $c_i$，表示在第 i 天 nodgd 可以 $AC$ 的题目数量必须是 $c_i$。 输出格式 输出共一行。 如果能找到严格递增的做题曲线：一个正整数，表示 nodgd 最多有多少天可以刷题。 如果找不到严格递增的做题曲线：直接输出 `impossible`（不加引号，全是小写字母）。 输入输出样例 输入样例 #1 13 4  2 13 8 7  6 10 9 8 9 10 11 16 14 12 13 14 18  输出样例 #1 5 说明 ### 数据范围及约定 对于全部数据， - $1 \\le N \\le 500000，1 \\le K \\le N/2$； - $1 \\le p[i] \\le N$，保证每个 $p[i]$ 不同，不保证 $p[i]$ 按大小顺序输入； - $1 \\le c[i] \\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 到了 Pizza Hut，爱与愁大神由于不爽，所以存心想坑月落乌啼的钱，他点了 m 样菜，每样菜 $a_i$ 元。月落乌啼预计只用 n 元，于是他让爱与愁大神重新从这 m 样菜中选 r 样。 爱与愁大神还是想坑钱，于是他打电话给你，让你编一个程序告诉他有几种方案可以从 m 样菜中点取 r 样菜但是还能超过月落乌啼的预计 n 元。 输入输出格式 输入格式 第一行三个数 m，r，n。 第二行 m 个数，每道菜需要的钱 $a_i$，两个数之间有空格。 输出格式 只有一个整数，表示方案总数。 输入输出样例 输入样例 #1 5 2 8  1 7 2 5 4 输出样例 #1 4 说明 ### 数据范围及约定 对于 $100\\%$ 数据，$m \\le 30，r \\le m，m \\le a_i \\le 90n \\le 2700$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:全排列问题 题目描述 按照字典序输出自然数 1 到 n 所有不重复的排列，即 n 的全排列，要求所产生的任一数字序列中不允许出现重复的数字。 输入输出格式 输入格式 一个整数 n。 输出格式 由 $1 \\sim n$ 组成的所有不重复的数字序列，每行一个序列。 每个数字保留 5 个场宽。 输入输出样例 输入样例 #1 3 输出样例 #1     1    2    3     1    3    2     2    1    3     2    3    1     3    1    2     3    2    1 说明 $1 \\leq n \\leq 9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 洛谷OJ当然算是好地方，nodgd 同学打算和朋友分享一下。于是他就拉上了他的朋友 Ciocio 和 Nicole 两位同学一起刷题。喜欢比赛的他们当然不放过这样一次刷题比赛的机会！ 在第 1 天 nodgd,Coicoi,Nicole 都只做了 1 道题。 在第 2 天 nodgd,Coicoi,Nicole 都只做了 3 道题。 他们都有着严格的刷题规则，并且会在每一天都很遵守规则的刷一定量的题。 1、nodgd 同学第 $k+2$ 天刷题数量     $$a_{k+2}=pa_{k+1}+qa_k+b_{k+1}+c_{k+1}+rk^2+tk+1$$ 2、Ciocio 同学第 $k+2$ 天刷题数量       $$b_{k+2}=ub_{k+1}+vb_k+a_{k+1}+c_{k+1}+w^k$$ 3、Nicole 同学第 $k+2$ 天刷题数量     $$c_{k+2} = xc_{k+1}+yc_k + a_{k+1} + b_{k+1} + z^k+k+2$$ （以上的字母 $p,q,r,t,u,v,w,x,y,z$ 都是给定的常数，并保证是正整数） 于是他们开始了长时间的刷题比赛！一共进行了 n 天 但是时间是可贵的，nodgd 想快速知道第 n 天每个人的刷题数量。   不过 nodgd 同学还有大量的数学竞赛题、物理竞赛题、英语竞赛题、美术竞赛题、体育竞赛题…… 要做，就拜托你来帮他算算了。 由于结果很大，输出结果 $\\bmod \\space m$ 的值即可。 输入输出格式 输入格式 第一行两个正整数 $n,m$。 第二行四个正整数 $p,q,r,t$。 第三行三个正整数 $u,v,w$。 第四行三个正整数 $x,y,z$。 输出格式 共三行，每行一个名字 + 一个空格 + 一个整数。   依次是 nodgd,Ciocio,Nicole 和他们在第 n 天刷题数量 $\\bmod \\space m$ 的值。 输入输出样例 输入样例 #1 4 10007 2 1 1 1 2 2 3 1 1 2 输出样例 #1 nodgd 74 Ciocio 80 Nicole 59 说明 对于 $100\\%$ 的数据，$4\\le n \\le 10^{16}，2\\le m \\le 10^{16}，1\\le p,q,r,t,u,v,w,x,y,z \\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO5.5] 隐藏口令 Hidden Password 题目描述 有时候程序员有很奇怪的方法来隐藏他们的口令。Binny 会选择一个字符串 S（由 N 个小写字母组成，$5 \\le N \\le 5 \\times {10}^6$），然后他把 S 顺时针绕成一个圈，每次取一个做开头字母并顺时针依次取字母而组成一个字符串。这样将得到一些字符串，他把它们排序后取出第一个字符串。把这个字符串的第一个字母在原字符串中的位置减 1 做为口令。 如字符串 `alabala`，按操作的到 7 个字符串，排序后得： `aalabal` `abalaal`   `alaalab`   `alabala`   `balaala`   `laalaba`   `labalaa` 第一个字符串为 `aalabal`，这个 `a` 在原字符串位置为 7，$7-1=6$，则 6 为口令。 输入输出格式 输入格式 第一行：一个数：N 第二行开始：字符串：S（每 $72$ 个字符一个换行符） 输出格式 一行，为得到的口令 输入输出样例 输入样例 #1 7 anabana 输出样例 #1 6 说明 题目满足： $30 \\%$ 的数据 $n \\le {10}^4$。   $70 \\%$ 的数据 $n \\le {10}^5$。   $100 \\%$ 的数据 $1 \\le n \\le 5 \\times {10}^6$。 时限 1s 题目翻译来自NOCOW。 USACO Training Section 5.5 // 20170523 新增数据四组"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:地铁涨价 题目描述 博艾市除了有海底高铁连接中国大陆、台湾与日本，市区里也有很成熟的轨道交通系统。我们可以认为博艾地铁系统是一个无向连通图。博艾有 N 个地铁站，同时有 M 小段地铁连接两个不同的站。 地铁计价方式很简单。从 A 站到 B 站，每经过一小段铁路（连接直接相邻的两个点的一条边），就要收取 1 博艾元。也就是说，从 A 站到 B 站，选择的路径不一样，要价也会不同。 我们认为凡华中学在 1 号地铁站。学生们通过地铁通勤，他们当然知道选择最短路来坐车的话，票价最便宜。 然而博艾地铁公司经营不善，一直亏损，于是他们打算提价。提价一次就是将一小段铁路原来收费 1 元改收 2 元。同一小段的铁路不会多次提价。他们打算提价 Q 次。 学生们知道，如果他们到学校的一条最短路径中的一小段提价了，可以改变路径，使总票价不变。然而随着一条一条的铁路被提价，当居住在某个站附近的学生发现，提价后，没有任何一种方案可以从家到学校的费用和初始费用相等时，就会不满。 现在地铁公司希望知道，对于每一次涨价，有多少个站，学生会因为涨价而不满呢？ 输入输出格式 输入格式 第一行为三个整数 $N,M,Q$。 接下来 M 行，每行 2 个整数 $a_i,b_i,$ 表示第 i 条铁路连接的两个站。i 表示铁路编号。 接下来 Q 行，每行一行整数 $r_j$，表示每次涨价的铁路编号。 输出格式 输出共 Q 行。每行一个整数表示不满的车站数量。 输入输出样例 输入样例 #1 5 6 5 1 2 1 3 4 2 3 2 2 5 5 3 5 2 4 1 3 输出样例 #1 0 2 2 4 4 说明 ### 样例解释 ```plain 次数 车站2 车站3 车站4 车站5 初始 1     1     2     2 1    1     1     2     2 2    1     2     2     3 3    1     2     2     3 4    2     2     3     3 5    2     2     4     3 ``` ### 数据范围及约定 - 对于 $20\\%$ 的数据 $N \\le 100,Q \\le 30$。 - 对于 $40\\%$ 的数据 $Q \\le 30$。 - 对于 $70\\%$ 的数据正确的输出结果中，不会有超过 $50$ 种不一样的整数（数据范围剧透解法系列） - 对于 $100\\%$ 的数据 $N \\le 100000,Q \\le M \\le 200000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:麦当劳叔叔的难题 题目描述 话说我们铭铭小朋友成功的回答了爸爸的问题，自然少不了要去索要些奖励，抠门的爸爸一看报纸，嘿，门口的麦当劳在搞活动，还有免费午餐哦，不过前提条件：得正确回答麦当劳叔叔的问题。 问题是这样描述的： “我面前有很多个小朋友，我希望你帮我找到一个最聪明的小朋友。我心目中最聪明的就是第一个跑进麦当劳大门的，我希望你帮我找出最聪明和最不聪明的小朋友，可能的最大的到达时间差。但是，小朋友只能按照一个特殊的规则前进。小朋友面前有一个 $n\\times n$ 的格子矩阵，左下角的格子是起点，右上角的格子是大门。每个孩子每秒可以走向 上、下、左、右 前进一个格子，每个格子只能经过一次。但矩阵中间有一些障碍区，不能通过，只能绕过。” 例如，$4\\times 4$ 的矩阵，格子 $(1, 1),(2, 3),(4, 2) $ 为障碍区，黑格子就是一条可行的路线。时间为 7。 输入输出格式 输入格式 第一行为两个整数 $n, m$。 第二至第 $m+1$ 行里，每行描述一个障碍区。用两个整数表示 $x, y$。 输出格式 仅一行，那个最大的时间差。 输入输出样例 输入样例 #1 4 3 1 1 2 3 4 2 输出样例 #1 4 说明 $2\\le n\\le 10，0\\le m\\le 100，1\\leq x,y\\leq n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:切蛋糕 题目描述 今天是小 Z 的生日，同学们为他带来了一块蛋糕。这块蛋糕是一个长方体，被用不同色彩分成了 n 个相同的小块，每小块都有对应的幸运值。 小 Z 作为寿星，自然希望吃到的蛋糕的幸运值总和最大，但小 Z 最多又只能吃 $m(m\\le n)$ 小块的蛋糕。 请你帮他从这 n 小块中找出**连续**的 $k(1 \\le k\\le m)$ 块蛋糕，使得其上的总幸运值最大。 **形式化地**，在数列 $\\{p_n\\}$ 中，找出一个子段 $[l,r](r-l+1\\le m)$，最大化 $\\sum\\limits_{i=l}^rp_i$。 输入输出格式 输入格式 第一行两个整数 $n,m$。分别代表共有 n 小块蛋糕，小 Z 最多只能吃 m 小块。 第二行 n 个整数，第 i 个整数 $p_i$ 代表第 i 小块蛋糕的幸运值。 输出格式 仅一行一个整数，即小 Z 能够得到的最大幸运值。 输入输出样例 输入样例 #1 5 2 1 2 3 4 5 输出样例 #1 9 输入样例 #2 6 3 1 -2 3 -4 5 -6 输出样例 #2 5 说明 #### 数据规模与约定 - 对于 $20\\%$ 的数据，有 $1\\le n\\le100$。 - 对于 $100\\%$ 的数据，有 $1\\le n\\le5\\times 10^5，|p_i|≤500$。 保证答案的绝对值在 $[0,2^{31}-1]$ 之内。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO16DEC] Lots of Triangles P 题目描述 Farmer John is thinking of selling some of his land to earn a bit of extra income. His property contains N trees ($3 \\leq N \\leq 300$), each described by a point in the 2D plane, no three of which are collinear. FJ is thinking about selling triangular lots of land defined by having trees at their vertices; there are of course $L = \\binom{N}{3}$ such lots he can consider, based on all possible triples of trees on his property. 农民约翰希望通过卖出他拥有的一部分土地来增加收入。他在这片土地上种了N棵树($3\\le N\\le 300$)，每棵树都可以用一个二维网格图上的一个坐标来表示，没有三棵树是共线的。约翰想以3棵树做顶点围成三角形来分割地，以确定地的大小和形状，基于约翰所有树可能组成的三树组合，当然有$L = \\binom{N}{3}$种可能考虑分割贩卖的土地切块。 A triangular lot has value v if it contains exactly v trees in its interior (the trees on the corners do not count, and note that there are no trees on the boundaries since no three trees are collinear). For every $v = 0 \\ldots N-3$, please help FJ determine how many of his L potential lots have value v. 一块分出的三角形土地有价值v，v的大小决定于土地上树的数量，树的数量=土地价值=v （顶点上的树不算，网格图边界不种树）。当$v=0,1...N-3$时，请帮约翰求出有多少三角形地L拥有价值v。 输入输出格式 输入格式 The first line of input contains N. The following N lines contain the x and y coordinates of a single tree; these are both integers in the range $0 \\ldots 1,000,000$. 输入的第一行为树的棵数N。 接下来的N行分别为不同树在二维网格图上的坐标；它们都是介于0和$1000000$之间的的整数；行和列数间用空格隔开。 输出格式 Output $N-2$ lines, where output line i contains a count of the number of lots having value $i-1$. 输出$N-2$行，其中第i行是价值v等于$i-1$的土地块数量。 输入输出样例 输入样例 #1 7 3 6 17 15 13 15 6 12 9 1 2 7 10 19 输出样例 #1 28 6 1 0 0 说明 感谢@Aaronlxz提供翻译"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:双调序列 题目描述 电脑组的童鞋们经常玩一些智力 PK 小游戏，某月某日，发源于小朋友又发明了一种新的序列：双调序列，所谓的双调呢主要是满足如下条件描述： 假定有 n（$n \\le 1000$）个整数（都在 `long int` 范围内，即 $-2147483648 \\sim 2147483647$），双调序列的第一个数是 n 个整数中的最大数，第二个数是 n 个整数中的最小数，第三个数是 n 个数中的第二大数，第四个数是 n 个数中的第二小数……取过的数不能再取，依次类推，直到结束。 聪明的你听完描述就抿嘴笑了吧？那就请你用程序正确的帮他找出这 n 个数的双调序列。 输入输出格式 输入格式 第一行为一个整数 n。 接下来 n 行给出了题目中所述的 n 个整数，每行包含一个整数。 输出格式 有 n 行，每行为一个整数，是满足条件的双调序列 输入输出样例 输入样例 #1 5 10 -1 3 3 -9 输出样例 #1 10 -9 3 -1 3 说明 对于 $100 \\%$ 的数据，$1 \\le n \\le 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:钓鱼 题目描述 话说发源于小朋友精心设计的游戏被电脑组的童鞋们藐杀之后非常不爽，为了表示安慰和鼓励，VIP999 决定请他吃一次“年年大丰收”，为了表示诚意，他还决定亲自去钓鱼。 但是，因为还要准备 NOIP2013, z老师只给了他 H 个小时的空余时间，假设有 n 个鱼塘都在一条水平路边，从左边到右编号为 1, 2, 3 .. n 。 VIP是个很讲究效率的孩子，他希望用这些时间钓到尽量多的鱼。他从湖1出发，向右走，有选择的在一些湖边停留一定的时间钓鱼，最后在某一个湖边结束钓鱼。他测出从第 i 个湖到 $i+1$个湖需要走 $5 \\times t_i$ 分钟的路，还测出在第 i 个湖边停留，第一个5分钟可以钓到鱼 $f_i$，以后再每钓5分钟鱼，鱼量减少 $d_i$。为了简化问题，他假定没有其他人钓鱼，也不会有其他因素影响他钓到期望数量的鱼。请编程求出能钓最多鱼的数量。 输入输出格式 输入格式 第一行：湖的数量n。 第二行：时间h（小时）。 第三行：n个数，$f_1，f_2$，… $f_n$。 第四行：n个数，$d_1，d_2$，….$d_n$。 第五行：n-1个数，$t_1，t_2$，….$t_{n-1}$ 输出格式 一个数，所能钓鱼的最大数量。 输入输出样例 输入样例 #1 2 1 10  1 2  5 2 输出样例 #1 31 说明 1 <= H <= 16 2 <= n <= 25"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最大加权矩形 题目描述 为了更好的备战 NOIP2013，电脑组的几个女孩子 LYQ,ZSC,ZHQ 认为，我们不光需要机房，我们还需要运动，于是就决定找校长申请一块电脑组的课余运动场地，听说她们都是电脑组的高手，校长没有马上答应他们，而是先给她们出了一道数学题，并且告诉她们：你们能获得的运动场地的面积就是你们能找到的这个最大的数字。 校长先给他们一个 $n\\times n$ 矩阵。要求矩阵中最大加权矩形，即矩阵的每一个元素都有一权值，权值定义在整数集上。从中找一矩形，矩形大小无限制，是其中包含的所有元素的和最大 。矩阵的每个元素属于 $[-127,127]$ ,例如 ```plain  0 –2 –7  0   9  2 –6  2 -4  1 –4  1  -1  8  0 –2 ``` 在左下角： ```plain 9  2 -4  1 -1  8 ``` 和为 $15$。 几个女孩子有点犯难了，于是就找到了电脑组精打细算的 HZH，TZY 小朋友帮忙计算，但是遗憾的是他们的答案都不一样，涉及土地的事情我们可不能含糊，你能帮忙计算出校长所给的矩形中加权和最大的矩形吗？ 输入输出格式 输入格式 第一行：n，接下来是 n 行 n 列的矩阵。 输出格式 最大矩形（子矩阵）的和。 输入输出样例 输入样例 #1 4 0 -2 -7 0  9 2 -6 2 -4 1 -4  1  -1 8  0 -2 输出样例 #1 15 说明 $1 \\leq n\\le 120$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2016] 国王饮水记 题目描述 跳蚤国有 n 个城市，伟大的跳蚤国王居住在跳蚤国首都中，即 1 号城市中。 跳蚤国最大的问题就是饮水问题，由于首都中居住的跳蚤实在太多，跳蚤国王又体恤地将分配给他的水也给跳蚤国居民饮用，这导致跳蚤国王也经常喝不上水。 于是，跳蚤国在每个城市都修建了一个圆柱形水箱，这些水箱完全相同且足够高。一个雨天后，第 i 个城市收集到了高度为 $h_i$ 的水。由于地理和天气因素的影响，任何两个不同城市收集到的水高度互不相同。 跳蚤国王也请来蚂蚁工匠帮忙，建立了一个庞大的地下连通系统。跳蚤国王每次使用地下连通系统时，可以指定任意多的城市，将这些城市的水箱用地下连通系统连接起来足够长的时间之后，再将地下连通系统关闭。由连通器原理，这些城市的水箱中的水在这次操作后会到达同一高度，并且这一高度等于指定的各水箱高度的平均值。 由于地下连通系统的复杂性，跳蚤国王至多只能使用 k 次地下连通系统。 跳蚤国王请你告诉他，首都 1 号城市水箱中的水位最高能有多高？ 输入输出格式 输入格式 输入的第一行包含三个正整数 $n,k,p$ 分别表示跳蚤国中城市的数量，跳蚤国王能使用地下连通系统的最多次数，以及你输出的答案要求的精度。p 的含义将在输出格式中解释。 接下来一行包含 n 个正整数，描述城市的水箱在雨后的水位。其中第 i 个正整数 $h_i$ 表示第 i 个城市的水箱的水位。保证 $h_i$ 互不相同，$1 \\leq h_i \\leq 10^5$。 输出格式 仅一行一个实数，表示 1 号城市的水箱中的最高水位。 这个实数只可以包含非负整数部分、小数点和小数部分。其中非负整数部分为必需部分，不加正负号。若有小数部分，则非负整数部分与小数部分之间以一个小数点隔开。若无小数部分，则不加小数点。 你输出的实数在小数点后不能超过 $2p$ 位，建议保留至少 p 位。数据保证参考答案与真实答案的绝对误差小于 $10^{-2p}$。 你的输出被判定为正确当且仅当你的输出与参考答案的绝对误差小于 $10^{-p}$。 如果你的输出与参考答案的绝对误差不小于 $10^{-p}$ 但小于 $10^{-5}$，你可以获得该测试点 $40\\%$ 的分数。 输入输出样例 输入样例 #1 3 1 3 1 4 3 输出样例 #1 2.666667 输入样例 #2 3 2 3 1 4 3 输出样例 #2 3.000000 说明 ### 样例解释 1 由于至多使用一次地下连通系统，有以下五种方案：   1. 不使用地下连通系统：此时 1 号城市的水箱水位为 1。  2. 使用一次连通系统，连通 1、2 号：此时 1 号城市的水箱水位为 $5/2$。  3. 使用一次连通系统，连通 1、3 号：此时 1 号城市的水箱水位为 2。  4. 使用一次连通系统，连通 2、3 号：此时 1 号城市的水箱水位为 1。  5. 使用一次连通系统，连通 1、2、3 号：此时 1 号城市的水箱水位为 $8/3$。 ### 样例解释 2 此时最优方案为使用两次连通系统，第一次连通 $1,3$ 号，第二次连通 $1,2$ 号。 ### 样例 3 详见附加文件。 ### 提示 为保证答案精度，我们一般需要尽可能地在运算过程中保留超过 p 位小数。我们可以证明，在各个子任务的参考算法中都能保证，在任何时候始终保留 $\\frac{6}{5}p$ 位小数时，对任何输入得到的输出，与参考答案的绝对误差都小于 $10^{-p}$。 为了方便选手处理高精度小数，我们提供了定点高精度小数类。选手可以根据自己的需要参考与使用该类，也可以不使用该类。其具体的使用方法请参考下发的文档 `decimal.pdf`（见附件）。 ### 数据范围 | 测试点编号 | n | k | p | |-|-|-|-| | 1 | $\\le 2$ | $\\le 5$ | $=5$ | | 2 | $\\le 4$ | $\\le 5$ | $=5$ | | 3 | $\\le 4$ | $\\le 5$ | $=5$ | | 4 | $\\le 10$ | $=1$ | $=5$ | | 5 | $\\le 10$ | $=10^9$ | $=5$ | | 6 | $\\le 10$ | $\\le 10$ | $=5$ | | 7 | $\\le 10$ | $\\le 10$ | $=5$ | | 8 | $\\le 100$ | $=1$ | $=5$ | | 9 | $\\le 100$ | $=10^9$ | $=40$ | | $10$ | $\\le 100$ | $\\le 10^9$ | $=40$ | | $11$ | $\\le 100$ | $\\le 10^9$ | $=40$ | | $12$ | $\\le 100$ | $\\le 10^9$ | $=40$ | | $13$ | $\\le 250$ | $\\le 10^9$ | $=100$ | | $14$ | $\\le 500$ | $\\le 10^9$ | $=200$ | | $15$ | $\\le 700$ | $\\le 10^9$ | $=300$ | | $16$ | $\\le 700$ | $\\le 10^9$ | $=300$ | | $17$ | $\\le 700$ | $\\le 10^9$ | $=300$ | | $18$ | $\\le 2500$ | $\\le 10^9$ | $=1000$ | | $19$ | $\\le 4000$ | $\\le 10^9$ | $=1500$ | | $20$ | $\\le 8000$ | $\\le 10^9$ | $=3000$ |"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 如果你在百忙之中抽空看题，请自动跳到第六行。 众所周知，在中国古代算筹中，红为正，黑为负…… 给定一个 $1\\times 2n$ 的矩阵（usqwedf：这不是一个 $2n$ 的队列么），现让你自由地放入红色算筹和黑色算筹，使矩阵平衡[即 $\\forall i \\in[1, 2n]，1\\sim i$ 格中红色算筹个数大于等于黑色算筹]。 问有多少种方案满足矩阵平衡（注意红色算筹和黑色算筹的数量必须相等）。 输入输出格式 输入格式 正整数 n。 输出格式 方案数 t 对 $100$ 取模后的结果。 输入输出样例 输入样例 #1 2 输出样例 #1 2 说明 样例解释：  - 方案一：红，黑，红，黑 - 方案二：红，红，黑，黑 数据范围： $1\\le n\\le 100$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 现在给出 n 个著名的乱七八糟的乱码，高手要知道每条乱码的最美观连续子序列的长度，在高手的心目中，只有回文串才是美观的。这代表着他纯洁的爱情，又有着回环往复的美，最重要的是，对于转回了一年级的高手来说，想要求出这个太难了，因此他找到了你。（OIer 无所不能！） 输入输出格式 输入格式 第一行一个整数 n。 接下来 n 行每行一条乱码。 输出格式 n 行，每行为对应乱码的最美观子串的长度，即最长回文子串长（但是由于高手听不懂，我们不会这样说）。 输入输出样例 输入样例 #1 1  aaaaa 输出样例 #1 5 说明 ### 数据范围及约定 对于全部数据，$1\\le n\\le 10，1\\le |s_i|\\le 10^7$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:东风谷早苗 题目描述 在幻想乡，东风谷早苗是以高达控闻名的高中生宅巫女。某一天，早苗终于入手了最新款的钢达姆模型。作为最新的钢达姆，当然有了与以往不同的功能了，那就是它能够自动行走，厉害吧（好吧，我自重）。早苗的新模型可以按照输入的命令进行移动，命令包含 $\\verb|E|、\\verb|S|、\\verb|W|、\\verb|N|$ 四种，分别对应四个不同的方向，依次为东、南、西、北。执行某个命令时，它会向着对应方向移动一个单位。作为新型机器人，自然不会只单单执行一个命令，它可以执行命令串。对于输入的命令串，每一秒它会按照命令行动一次。而执行完命令串最后一个命令后，会自动从头开始循环。在 0 时刻时早苗将钢达姆放置在了 $(0,0)$ 的位置，并且输入了命令串。她想要知道 T 秒后钢达姆所在的位置坐标。 假设当前钢达姆的位置是 $(x,y)$。那么对于四种方向的移动，它坐标的改变分别为： - 向东移动，坐标改变改变为 $(x+1,y)$； - 向南移动，坐标改变改变为 $(x,y-1)$； - 向西移动，坐标改变改变为 $(x-1,y)$； - 向北移动，坐标改变改变为 $(x,y+1)$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:琪露诺 题目描述 在幻想乡，琪露诺是以笨蛋闻名的冰之妖精。 某一天，琪露诺又在玩速冻青蛙，就是用冰把青蛙瞬间冻起来。但是这只青蛙比以往的要聪明许多，在琪露诺来之前就已经跑到了河的对岸。于是琪露诺决定到河岸去追青蛙。 小河可以看作一列格子依次编号为 0 到 N，琪露诺只能从编号小的格子移动到编号大的格子。而且琪露诺按照一种特殊的方式进行移动，当她在格子 i 时，她只移动到区间 $[i+L,i+R]$ 中的任意一格。你问为什么她这么移动，这还不简单，因为她是笨蛋啊。 每一个格子都有一个冰冻指数 $A_i$，编号为 0 的格子冰冻指数为 0。当琪露诺停留在那一格时就可以得到那一格的冰冻指数 $A_i$。琪露诺希望能够在到达对岸时，获取最大的冰冻指数，这样她才能狠狠地教训那只青蛙。 但是由于她实在是太笨了，所以她决定拜托你帮它决定怎样前进。 开始时，琪露诺在编号 0 的格子上，只要她下一步的位置编号大于 N 就算到达对岸。 输入输出格式 输入格式 第一行三个正整数 $N, L, R$。 第二行共 $N+1$ 个整数，第 i 个数表示编号为 $i-1$ 的格子的冰冻指数 $A_{i-1}$。 输出格式 一个整数，表示最大冰冻指数。 输入输出样例 输入样例 #1 5 2 3 0 12 3 11 7 -2 输出样例 #1 11"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:上白泽慧音 题目描述 在幻想乡，上白泽慧音是以知识渊博闻名的老师。春雪异变导致人间之里的很多道路都被大雪堵塞，使有的学生不能顺利地到达慧音所在的村庄。因此慧音决定换一个能够聚集最多人数的村庄作为新的教学地点。 人间之里由 N 个村庄（编号为 $1\\cdots N$）和 M 条道路组成，道路分为两种一种为单向通行的，一种为双向通行的，分别用 1 和 2 来标记。如果存在由村庄 A 到达村庄 B 的通路，那么我们认为可以从村庄 A 到达村庄 B，记为 $(A,B)$。当 $(A,B)$ 和 $(B,A)$ 同时满足时，我们认为 $A,B$ 是绝对连通的，记为 $\\langle A,B\\rangle$。绝对连通区域是指一个村庄的集合，在这个集合中任意两个村庄 $X,Y$ 都满足 $\\langle X,Y\\rangle$。现在你的任务是，找出最大的绝对连通区域，并将这个绝对连通区域的村庄按编号依次输出。若存在两个最大的，输出字典序最小的，比如当存在 $1,3,4$ 和 $2,5,6$ 这两个最大连通区域时，输出的是 $1,3,4$。 输入输出格式 输入格式 第一行共两个正整数 $N,M$。 第 2 行至第 $M+1$ 行，每行有三个正整数 $a,b,t$。若 $t = 1$ 则表示存在从村庄 a 到 b 的单向道路，若 $t = 2$ 表示村庄 $a,b$ 之间存在双向通行的道路。保证每条道路只出现一次。 输出格式 第一行输出 1 个整数，表示最大的绝对连通区域包含的村庄个数。 第二行输出若干个整数，依次输出最大的绝对连通区域所包含的村庄编号。 输入输出样例 输入样例 #1 5 5 1 2 1 1 3 2 2 4 2 5 1 2 3 5 1 输出样例 #1 3 1 3 5 说明 - 对于 $60\\%$ 的数据，$1\\le N \\le 200$，且 $0\\le M \\le 10^4$； - 对于 $100\\%$ 的数据，$1\\le N \\le 5\\times 10^3$，且 $0\\le M \\le 5\\times 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 中秋至，博饼声铿锵不断。爱与愁大神兴致勃勃地到学校博饼，结果抱回家的只有一秀二举。爱与愁大神十分生气，打电话给月落乌啼：“喂，帮我算出圆周率小数点后n（n<=10000）位，速度……”然后就挂了电话，也不知道月落乌啼正准备去上课。月落乌啼只好请到了你，让你编一个程序求出圆周率小数点后n位。 输入输出格式 输入格式 只有一行：n 输出格式 若干行。 第一行：3. 第二行开始：圆周率的小数部分。10个数一个空格，50个数一次回车。 输入输出样例 输入样例 #1 100 输出样例 #1 3. 1415926535 8979323846 2643383279 5028841971 6939937510 5820974944 5923078164 0628620899 8628034825 3421170679 说明 对于 $30\\%$ 的数据，$n\\leq 10^3$。 对于 $100\\%$ 的数据，$n\\leq 10^4$。 时限：$1\\sim 6$ 点 1 秒，7 点 3 秒，8 点 8 秒，$9\\sim 10$ 点 $12$ 秒。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 月落乌啼竟然这么快就回复了圆周率小数点后10000位？！不可能，他肯定求了别人。爱与愁大神再次为难月落乌啼：“帮我算一算 e 后 $n(n \\le 10000)$ 位，速度！！！”月落乌啼想求别人，结果他发现由于刚才跟你通话已经用完了手机的所有电。关键时刻只能靠自己。如果现在你是他，你会怎么编这个程序？ 输入输出格式 输入格式 只有一行：n 输出格式 若干行。 第一行：2. 第二行开始：e 的小数部分。$10$ 个数一个空格，$50$ 个数一次回车。 输入输出样例 输入样例 #1 100 输出样例 #1 2. 7182818284 5904523536 0287471352 6624977572 4709369995 9574966967 6277240766 3035354759 4571382178 5251664274 说明 $30\\%$ 数据：$n \\le 1000$   $100\\%$ 数据：$n \\le 10000$ 时限：全部1秒"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最小密度路径 题目描述 给出一张有 N 个点 M 条边的加权有向无环图，接下来有 Q 个询问，每个询问包括 2 个节点 X 和 Y，要求算出从 X 到 Y 的一条路径，使得密度最小（密度的定义为，路径上边的权值和除以边的数量）。 输入输出格式 输入格式 第一行包括两个整数 N 和 M。 以下 M 行，每行三个数字 $A,B,W$，表示从 A 到 B 有一条权值为 W 的有向边。 再下一行有一个整数 Q。 以下 Q 行，每行一个询问 X 和 Y，如题意所诉。 输出格式 对于每个询问输出一行，表示该询问的最小密度路径的密度（保留 3 位小数），如果不存在这么一条路径输出“OMG!”（不含引号）。 输入输出样例 输入样例 #1 3 3 1 3 5 2 1 6 2 3 6 2 1 3 2 3 输出样例 #1 5.000 5.500 说明 $1 \\le N \\le 50，1 \\le M \\le 1000，1\\le W \\le 10^5，1 \\le Q \\le 10^5$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[数据加强版 link](https://www.luogu.com.cn/problem/T148457) 题目描述 7 月 17 日是 Mr.W 的生日，ACM-THU 为此要制作一个体积为 $N\\pi$ 的 M 层生日蛋糕，每层都是一个圆柱体。 设从下往上数第 i（$1 \\leq i \\leq M$）层蛋糕是半径为 $R_i$，高度为 $H_i$ 的圆柱。当 $i \\lt M$ 时，要求 $R_i \\gt R_{i+1}$ 且 $H_i \\gt H_{i+1}$。 由于要在蛋糕上抹奶油，为尽可能节约经费，我们希望蛋糕外表面（最下一层的下底面除外）的面积 Q 最小。 请编程对给出的 N 和 M，找出蛋糕的制作方案（适当的 $R_i$ 和 $H_i$ 的值），使 $S=\\dfrac{Q}{\\pi}$ 最小。 （除 Q 外，以上所有数据皆为正整数） 输入输出格式 输入格式 第一行为一个整数 N（$N \\leq 2 \\times 10^4$），表示待制作的蛋糕的体积为 $N\\pi$。 第二行为 M（$M \\leq 15$），表示蛋糕的层数为 M。 输出格式 输出一个整数 S，若无解，输出 0。 输入输出样例 输入样例 #1 100 2 输出样例 #1 68"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[TJOI2011] 序列 题目描述 一数列 $A=\\{a_1,a_2,\\ldots,a_n\\}$，根据数列 A 计算数列 $B=\\{b_1,b_2,\\ldots,b_n\\}$，其中：   $$ b_i= \\begin{cases} a_1 &, i=1 \\\\  \\min_{1 \\leq j < i}\\left|a_i-a_j\\right| &, i\\gt 1  \\end{cases} $$ 求 $\\sum\\limits^n_{i=1}b_i$。 输入输出格式 输入格式 第一行是一个正整数 T，表示测试数据的组数。接下来有 T 行，每行表示一组测试数据。每行以一个正整数 n 开始，表示数列 A 中元素的个数；然后是 n 个非负整数，依次表示 $a_1,a_2,\\ldots,a_n$ 的值。 输出格式 对于每组测试数据，输出数列 B 的所有的元素之和。 输入输出样例 输入样例 #1 2 5 1 2 3 4 5 7 2 9 7 4 6 2 6 输出样例 #1 5 14 说明 $1\\le t\\le 10，1\\le n\\le10^5，0\\le a_i\\le65536$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:猜数（IO交互版） 题目描述 评测机会在区间 $[1,10^9]$ 中选择一个整数，你应该写一个代码来猜测它。你最多可以问评测机 $50$ 个问题。 对于每一次询问，你可以向评测机询问区间 $[1,10^9]$ 中的一个整数，评测机会返回:  - 0，如果它为答案（即评测机所选的数字），且程序应该在此之后停止询问。  - -1，如果它小于答案。  - 1，如果它大于答案。   每次询问，你需要向**标准输出**输出一个 $[1,10^9]$ 中的整数，**然后清空缓冲区**。 你可以使用如下语句来清空缓冲区： - 对于 C/C++：`fflush(stdout)`； - 对于 C++：`std::cout << std::flush`； - 对于 Java：`System.out.flush()`； - 对于 Python：`stdout.flush()`； - 对于 Pascal：`flush(output)`； - 对于其他语言，请自行查阅对应语言的帮助文档。 特别的，对于 C++ 语言，在输出换行时如果你使用 `std::endl` 而不是 `'\\n'`，也可以自动刷新缓冲区。 然后你需要从**标准输入**中输入一个整数，代表评测机返回的结果。 输入输出格式 输入格式"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最大约数和 题目描述 选取和不超过 S 的若干个不同的正整数，使得所有数的约数（不含它本身）之和最大。 输入输出格式 输入格式 输入一个正整数 S。 输出格式 输出最大的约数之和。 输入输出样例 输入样例 #1 11 输出样例 #1 9 说明 **【样例说明】** 取数字 4 和 6，可以得到最大值 $(1+2)+(1+2+3)=9$。 **【数据规模】** 对于 $100 \\%$ 的数据，$1 \\le S \\le 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:## 数据疑似有误。 题目描述 打败了 DIABLO，Mini 进入了迷宫。这是个奇怪的迷宫，迷宫的每一个地点要么有一个用来传送的门，要么是障碍。Mini 现在站在迷宫的原点处，但是眼看远在 $(N,N)$ 的公主就要被转移，Mini 心情焦急万分，为了能最快地到达公主处救出公主，Mini 希望能走一条最快的路径。注意，Mini 可以把迷宫的 $(1,1)$ 或 $(1,N)$ 或 $(N,1)$ 处当作原点。 迷宫里，某些地点会有门，将门激活，Mini 就会被传送到某个地点，当然，魔王 Bill 只创造了三种门，所以迷宫里最多有就只有三种门，而且在这个迷宫中要到达下一个点必须通过门。。（什么逻辑 TUT。。） 在迷宫中，可能会遇到的三种门分别如下： - 时空之门，Mini 可以往上下左右四个方向中的任意一个方向传送一格； - 海洋之门，Mini 可以往上下左右四个方向中的任意一个方向传送两格； - 天堂之门，Mini 需要停留一步，聚气，然后可以往左上左下右上右下四个方向中的任意一个方向传送一格。 当然，使用每一个门都算作一步。 当然还有障碍，如果有障碍，那么这个点没有门且这个点不能被传送到。 但是，魔王 Bill 有可能创造出了一个完全无法到达 $(N,N)$ 的迷宫，所以，当从三个原点出发都无法到达 $(N,N)$ 时，请输出 `No answer`。注意，原点算作一步（Mini 一开始站在 $(1,1)$ 或 $(1,N)$ 或 $(N,1)$ 的位置，然后走一步到原点，所以原点算作一步）。 输入输出格式 输入格式 第一行一个数 N，表示迷宫的大小 $N\\times N$。 以下 N 行，每行 N 个字符，表示迷宫的示意图。字符要么是字母 ABC，要么是障碍。 A 表示时空之门，B 表示海洋之门，C 表示天堂之门，障碍用 * 表示。 输出格式 输出为 Mini 从原点处走到公主处的最快路径长度。无解输出 `No answer`。 输入输出样例 输入样例 #1 3 A*C *AC ACA 输出样例 #1 No answer 输入样例 #2 3 AAA CAA AAA 输出样例 #2 3 说明 对于 $100\\%$ 的数据，$0\\le N\\le 1200$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:感谢@throusea 贡献的两组数据 题目描述 回到家中的猫猫把三桶鱼全部转移到了她那长方形大池子中，然后开始思考：到底要以何种方法吃鱼呢（猫猫就是这么可爱，吃鱼也要想好吃法 ^\\_\\*）。她发现，把大池子视为 $01$ 矩阵（0 表示对应位置无鱼，1 表示对应位置有鱼）有助于决定吃鱼策略。 在代表池子的 $01$ 矩阵中，有很多的正方形子矩阵，如果某个正方形子矩阵的某条对角线上都有鱼，且此正方形子矩阵的其他地方无鱼，猫猫就可以从这个正方形子矩阵“对角线的一端”下口，只一吸，就能把对角线上的那一队鲜鱼吸入口中。 猫猫是个贪婪的家伙，所以她想一口吃掉尽量多的鱼。请你帮猫猫计算一下，她一口下去，最多可以吃掉多少条鱼？ 输入输出格式 输入格式 第一行有两个整数 n 和 m（$n,m≥1$），描述池塘规模。接下来的 n 行，每行有 m 个数字（非 0 即 1）。每两个数字之间用空格隔开。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:洛谷的文件夹 题目描述 kkksc03 是个非凡的空想家！在短时间内他设想了大量网页，然后总是交给可怜的 lzn 去实现。 洛谷的网页端，有很多文件夹，文件夹还套着文件夹。 例如：$\\verb!/luogu/application/controller!$ 表示根目录下有一个名称为 $\\verb!luogu!$ 的文件夹，这个文件夹下有一个名称 $\\verb!application!$ 的文件夹，其中还有名为 $\\verb!controller!$ 的文件夹。 每个路径的第 1 个字符总是 $\\verb!/!$，且没有两个连续的 $\\verb!/!$，最后的字符不是 $\\verb!/!$。所有名称仅包含数字和小写字母。 目前根目录是空的。kkksc03 想好了很多应该有的文件夹路径名。问题是，需要是使这些文件夹都存在，需要新建几个文件夹呢？ 输入输出格式 输入格式 输入文件第 1 行为一个正整数 N。 接下来 N 行，每行为一个描述路径的字符串，长度均不超过 $100$。 输出格式 输出应包含 N 行，每行 1 个正整数，第 i 行输出若要使第 1 个路径到第 i 个路径存在，最少需要新建多少个文件夹。 输入输出样例 输入样例 #1 2 /luogu/application/controller /luogu/application/view 输出样例 #1 3 4 输入样例 #2 3 /chicken /chicken/egg /chicken 输出样例 #2 1 2 2 输入样例 #3 4 /a /a/b /a/c /b/b 输出样例 #3 1 2 3 5 说明 ### 数据范围及约定"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:表达式括号匹配 题目描述 假设一个表达式有英文字母（小写）、运算符（`+`、`-`、`*`、`/`）和左右小（圆）括号构成，以 `@` 作为表达式的结束符。请编写一个程序检查表达式中的左右圆括号是否匹配，若匹配，则输出 `YES`；否则输出 `NO`。表达式长度小于 $255$，左圆括号少于 $20$ 个。 输入输出格式 输入格式 一行：表达式。 输出格式 一行：`YES` 或 `NO`。 输入输出样例 输入样例 #1 2*(x+y)/(1-x)@ 输出样例 #1 YES 输入样例 #2 (25+x)*(a*(a+b+b)@ 输出样例 #2 NO 说明 表达式长度小于 $255$，左圆括号少于 $20$ 个。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 教主上电视了！这个消息绝对是一个爆炸性的新闻。一经传开，大街上瞬间就没人了（都回家看电视去了），商店打烊，工厂停业。大家都把电视机的音量开到最大，教主的声音回响在大街小巷。 小 L 给小 X 慌乱地打开自己家的电视机，发现所有频道都播放的是教主的采访节目（-\\_-bbb）。只见电视屏幕上的教主笑意吟吟，给大家出了一道难题： 一个边长为 n 的大菱形被均匀地划分成了 $n\\times n$ 个边长为 1 的小菱形组成的网格，但是网格中部分边被抹去了，小 L 想知道，大菱形内有多少个平行四边形，这些平行四边形内不存在边（平行四边形内是空的）。 教主说，如果谁写出了程序，移动用户请将程序发送到 xxxx，联通用户请将程序发送到 xxxx……如果答对这个题，将有机会参加抽奖，大奖将是教主签名的 Orz 教主 T-Shirt 一件！这个奖品太具有诱惑力了。于是你需要编一个程序完成这么一道题。 输入输出格式 输入格式 输入的第一行为一个正整数 n，为大菱形的边长。 以下 $2n$ 行，每行 $2n$ 个字符，字符为空格，$\\verb!/!，\\verb!\\!$ 中的一个。 前 n 行，第 i 行中居中有 $2i$ 个字符，这 $2i$ 个字符中位置为奇数的字符只可能为 $\\verb!/!$ 或者空格，位置为偶数的字符只可能为 $\\verb!\\!$ 或空格，若为空格表示这样一条边不存在，其余字符均为空格，描述了大菱形的上半部分。 后 n 行，第 i 行居中有有 $2(n-i+1)$ 个字符，与上半部分类似地描述了菱形的下半部分。 输入文件保证大菱形的轮廓上没有边被抹去。 输出格式 第一行一个整数 n。 以下 $2\\times n+1$ 行，改为矩形后各边的输出，1 表示有边，0 表示无边。 输入输出样例 输入样例 #1 4     /\\       /\\/\\     /\\  /\\   /  \\/  \\  \\/\\/ / /   \\/\\  /     \\ \\/       \\/     输出样例 #1 4  1111  11101  1000  10111  1100  10101  0111  11101  1111  说明 ### 数据范围及约定 - 对于 $20\\%$ 的数据，$n \\le 10$； - 对于 $40\\%$ 的数据，$n \\le 60$； - 对于 $60\\%$ 的数据，$n \\le 200$； - 对于 $100\\%$ 的数据，$n \\le 888$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 教主上电视了！这个消息绝对是一个爆炸性的新闻。一经传开，大街上瞬间就没人了（都回家看电视去了），商店打烊，工厂停业。大家都把电视机的音量开到最大，教主的声音回响在大街小巷。 小 L 给小 X 慌乱地打开自己家的电视机，发现所有频道都播放的是教主的采访节目（-\\_-bbb）。只见电视屏幕上的教主笑意吟吟，给大家出了一道难题： 一个边长为 n 的大菱形被均匀地划分成了 $n\\times n$ 个边长为 1 的小菱形组成的网格，但是网格中部分边被抹去了，小 L 想知道，大菱形内有多少个平行四边形，这些平行四边形内不存在边（平行四边形内是空的）。 教主说，如果谁写出了程序，移动用户请将程序发送到 xxxx，联通用户请将程序发送到 xxxx……如果答对这个题，将有机会参加抽奖，大奖将是教主签名的 Orz 教主 T-Shirt 一件！这个奖品太具有诱惑力了。于是你需要编一个程序完成这么一道题。 输入输出格式 输入格式 输入的第一行为一个正整数 n，为大菱形的边长。 以下 $2n$ 行，每行 $2n$ 个字符，字符为空格，$\\verb!/!，\\verb!\\!$ 中的一个。 前 n 行，第 i 行中居中有 $2i$ 个字符，这 $2i$ 个字符中位置为奇数的字符只可能为 $\\verb!/!$ 或者空格，位置为偶数的字符只可能为 $\\verb!\\!$ 或空格，若为空格表示这样一条边不存在，其余字符均为空格，描述了大菱形的上半部分。 后 n 行，第 i 行居中有有 $2(n-i+1)$ 个字符，与上半部分类似地描述了菱形的下半部分。 输入文件保证大菱形的轮廓上没有边被抹去。 输出格式 输出仅包括一个整数，为满足要求的平行四边形个数。 输入输出样例 输入样例 #1 4  1111  11101  1000  10111  1100  10101  0111  11101  1111  输出样例 #1 3 说明 ### 数据范围及约定 - 对于 $20\\%$ 的数据，$n \\le 10$； - 对于 $40\\%$ 的数据，$n \\le 60$； - 对于 $60\\%$ 的数据，$n \\le 200$； - 对于 $100\\%$ 的数据，$n \\le 888$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最小圆覆盖 题目描述 给出N个点，让你画一个最小的包含所有点的圆。 输入输出格式 输入格式 第一行一个整数 N 表示点的个数。 接下来 N 行每行两个实数 $x_i,y_i$ 表示点的坐标。最多两位小数。 输出格式 第一行一个实数表示圆的半径。 第二行两个实数表示圆心的坐标。 本题开启 spj，您的答案与标准答案误差不超过 $10^{-9}$ 时，视为正确。 输入输出样例 输入样例 #1 6 8.0 9.0 4.0 7.5 1.0 2.0 5.1 8.7 9.0 2.0 4.5 1.0 输出样例 #1 5.0000000000 5.0000000000 5.0000000000 说明 对于 $100\\%$ 的数据，$1\\leq N\\leq 10^5，|x_i|,|y_i|\\leq 10^4$。 2022.2.26 添加 spj"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 给定一个 $n\\times m$ 的矩阵，问从左上角走到右下角有多少条路径，保留 $17$ 位有效数字（也就是从第 $18$ 位有效数字以后均输出 0）。 输入输出格式 输入格式 一行两个正整数 $n,m$。 输出格式 路径数目 t。 输入输出样例 输入样例 #1 6 4 输出样例 #1 210 说明 $1\\le n\\le 10^8,1\\le m\\le 4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:《爱与愁的故事第三弹·shopping》第一章。 题目描述 中山路店山店海，成了购物狂爱与愁大神的“不归之路”。中山路上有 n（$n \\leq 100$）家店，每家店的坐标均在 $-10000$ 至 $10000$ 之间。其中的 m 家店之间有通路。若有通路，则表示可以从一家店走到另一家店，通路的距离为两点间的直线距离。现在爱与愁大神要找出从一家店到另一家店之间的最短距离。你能帮爱与愁大神算出吗？ 输入输出格式 输入格式 共 $n+m+3$ 行： 第一行：整数 n。  接下来 n 行：每行两个整数 x 和 y，描述了一家店的坐标。  接下来一行：整数 m。  接下来 m 行：每行描述一条通路，由两个整数 i 和 j 组成，表示第 i 家店和第 j 家店之间有通路。 接下来一行：两个整数 s 和 t，分别表示原点和目标店。  输出格式 仅一行：一个实数（保留两位小数），表示从 s 到 t 的最短路径长度。 输入输出样例 输入样例 #1 5  0 0  2 0  2 2  0 2  3 1  5  1 2  1 3  1 4  2 5  3 5  1 5 输出样例 #1 3.41 说明 对于 $100 \\%$ 的数据：$2 \\le n \\leq 100，1 \\le i, j, s, t \\le n，1 \\le m \\leq 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数据保证 $2\\leq n\\leq 50,v_{i,j}\\in\\{0,1\\}(1\\leq i\\leq 3,1\\leq j\\leq n)$。 题目描述 Gustav is reading about *2-satisfiability*, a well known problem of assigning truth values to boolean variables in order to satisfy a list of *constraints* — simple logical formulas involving two variables each. We are using n variables $x_1, x_2, \\cdots , x_n$ that can take on values 0 (false) and 1 (true). A constraint is a formula of the form $a\\to b$ where both a and b are possibly negated variables. As usual, $\\to$ denotes logical implication: $a \\to b$ is 0 only when a is 1 and b is 0. The negation of variable a is denoted by $!a$. Given an assignment of values to variables, we say that the constraint is *satisfied* if it evaluates to 1. Gustav has constructed a list of constraints and correctly concluded that there are *exactly three* different assignments of values to variables that satisfy all the constraints. Gustav has wrote down all three assignments but has, unfortunately, lost the list of constraints. Given three assignments of n values to variables, find any list consisting of at most $500$ constrains such that the three given assignments are the *only* assignments that satisfy all the constraints."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 爱与愁大神买完东西后，打算坐车离开中山路。现在爱与愁大神在 $x_1,y_1$ 处，车站在 $x_2,y_2$ 处。现在给出一个 $n \\times n(n \\le 1000)$ 的地图，0 表示马路，1 表示店铺（不能从店铺穿过），爱与愁大神只能垂直或水平着在马路上行进。爱与愁大神为了节省时间，他要求最短到达目的地距离（每两个相邻坐标间距离为 1）。你能帮他解决吗？ 输入输出格式 输入格式 第 1 行包含一个数 n。 第 2 行到第 $n+1$ 行：整个地图描述（0 表示马路，1 表示店铺，注意两个数之间没有空格）。 第 $n+2$ 行：四个数 $x_1,y_1,x_2,y_2$。 输出格式"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 爱与愁大神坐在公交车上无聊，于是玩起了手机。一款奇怪的游戏进入了爱与愁大神的眼帘：\\*\\*\\*（游戏名被打上了马赛克）。这个游戏类似象棋，但是只有黑白马各一匹，在点 $x_1,y_1$ 和 $x_2,y_2$ 上。它们得从点 $x_1,y_1$ 和 $x_2,y_2$ 走到 $(1,1)$。这个游戏与普通象棋不同的地方是：马可以走“日”，也可以像象走“田”。现在爱与愁大神想知道两匹马到 $(1,1)$ 的最少步数，你能帮他解决这个问题么？ 输入输出格式 输入格式 第一行两个整数 $x_1,y_1$。 第二行两个整数 $x_2,y_2$。 输出格式 第一行一个整数，表示黑马到 $(1,1)$ 的步数。 第二行一个整数，表示白马到 $(1,1)$ 的步数。 输入输出样例 输入样例 #1 12 16 18 10 输出样例 #1 8  9 说明 ### 数据范围及约定 对于 $100\\%$ 数据，$x_1,y_1,x_2,y_2 \\le 20$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:H数 题目描述 所谓 H 数，是指只含有 $2,3,5,7$ 这些质因数的数，如 $630$ 是 H 数，而 $22$ 不是。 现在要求输出第 n 个 H 数，为了方便起见将 $H[1]$ 定为 1。已知 n 不超过 $10000$，最后数据在 int64 范围之内。 输入输出格式 输入格式 一个数 n(如题目) 输出格式 第 n 个H数 输入输出样例 输入样例 #1 30 输出样例 #1 49 输入样例 #2 1 输出样例 #2 1 说明 穷举会爆掉，要用生成法，最好加优化，不然空间复杂度比较大"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:出栈序列 题目描述 给定一个由 n 个元素构成的序列，你需要将其中的元素按顺序压入一个大小为 c 的栈并弹出。元素按它们的出栈顺序进行排列，会得到一个新的序列。我们知道，这样的序列会有很多种，请输出所有新序列中第一个元素最小的序列（若第一个元素最小的序列有多个，则令第二个尽可能小；若仍有多个，则令第三个最小，以此类推）。 输入输出格式 输入格式 第一行，两个整数 $n, c$。 第二行，n 个数，为序列中 n 个元素的值。 输出格式 输出 n 个数，为满足要求的序列。 输入输出样例 输入样例 #1 6 3 5 2 3 8 7 4 输出样例 #1 2 3 5 4 7 8 说明 对于 $40 \\%$ 的数据，$n \\le 12$；   对于 $100 \\%$ 的数据，$1 \\le c \\le n \\le 10000$，元素大小均在 $[1, 2 \\times {10}^9]$ 内。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 贪吃虫有 k 条，在一棵有 n 个节点的树上，每只虫子都在不同的节点上。第一个食物到来时，所有的 k 只虫会从它们当前的位置出发，前往食物的位置。它们的移动遵循如下规则： - 这棵树上的任何两个节点之间有且仅有一条路，所有的贪吃虫沿着唯一的路径前往食物所在的位置； - 如果有一只贪吃虫到达了食物所在的位置，食物马上就被吃掉了； - 如果有另外一只贪吃虫在某一只贪吃虫通往食物的道路上，那么距离食物较远的那只虫子会停止移动，停留在当前的节点上； - 如果有多只虫子尝试进入同一个节点，只有编号最小的虫子能够到达，其它的贪吃虫停留在它们当前的位置上； - 吃掉食物的那只虫子会停留在食物的位置上； - 食物被吃掉之后会出现在树上的另外一个节点上。这时所有的贪吃虫会重新出发，尝试再一次吃掉食物。为了简化过程，我们假设从一个节点移动到相邻的节点需要花费一个单位时间。 输入输出格式 输入格式 第 1 行一个整数 n，表示树上的节点个数。 第 2 至 N 行，第 $i+1$ 行包含了一个两个整数 $:A_i,B_i$，表示从节点 $A_i$ 到节点 $B_i$ 有一条边直接相连。 第 $N+1$ 行有一个整数 k，表示树上贪吃虫的个数。 第 $N+2$ 至 $N+1+k$ 行，第 $N+1+i$ 行有一个整数 $P_i$，表示第 i 只贪吃虫开始时的位置，任何两只贪吃虫的初始位置不相同。 第 $N+2+k$ 行：有一个整数 h，表示食物一共在树上出现了多少次。 接下来的 h 行，每行一个整数，表示食物依次出现的位置。 输出格式 输出一共包含 k 行，第 i 行有两个整数 $C_i$ 和 $D_i$。分别表示第 i 只贪吃虫最终停留的位置和这只贪吃虫吃到食物的次数。 输入输出样例 输入样例 #1 4  1 2  1 3  2 4  2  1  2  2  2  4 输出样例 #1 1 0  4 2  说明 ### 数据范围及约定 对于全部数据，$1 \\le n \\le 5000，1 \\le k \\le 1000，k \\le n，1 \\le h \\le 500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:点菜 题目描述 有 n 个人到一家餐馆点菜。这家餐馆总共有 m 道菜，每一道菜都有两个属性——美味度和价格。这 n 个人每周都会来一次，每次只会点一道菜或不点。在这 n 个人中，有 p 个人比较挑剔，他们只能接受美味度大于等于一定值的菜；有 q 个人比较贫穷，他们只能点价格小于等于一定值的菜。现在请你计算：这些人至少要来几周，才可能能把餐馆的所有的菜都点过一遍？ 输入输出格式 输入格式 第 1 行，四个正整数 $n,m,p,q$。 第 $2 \\sim m+1$ 行，每行两个数，表示菜的美味度和价格。 第 $m+2$ 行 p 个数，表示 p 个挑剔的人分别能接受的菜的美味度的下限。 第 $m+3$ 行 q 个数，表示 q 个贫穷的人分别能点的菜的价格的上限。 输出格式 一行一个数，即这些人最少要来的周数。若不论这些人来几周都不可能把菜点过一遍，输出 $-1$。 输入输出样例 输入样例 #1 2 3 1 1  5 2  5 3  6 4  5  1 输出样例 #1 3  说明 ### 数据范围及约定 - 对于 $20\\%$ 的数据，$m \\le 20$； - 对于 $40\\%$ 的数据，$m \\le 2000$； - 对于 $100\\%$ 的数据，$p+q \\le n \\le 50000,m \\le 200000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:球迷购票问题 题目描述 盛况空前的足球赛即将举行。球赛门票售票处排起了球迷购票长龙。 按售票处规定，每位购票者限购一张门票，且每张票售价为 $50$ 元。在排成长龙的球迷中有 n 个人手持面值 $50$ 元的钱币，另有 n 个人手持面值 $100$ 元的钱币。假设售票处在开始售票时没有零钱。试问这 $2n$ 个球迷有多少种排队方式可使售票处不致出现找不出钱的尴尬局面。 例如当 $n=2$ 时，用 A 表示手持 $50$ 元面值的球迷，用 B 表示手持 $100$ 元钱的球迷。则最多可以得到以下两组不同的排队方式，使售票员不至于找不出钱。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:无 题目描述 已知任意一个正整数都可以拆分为若干个斐波纳契数，现在，让你求出 n 的拆分方法。 输入输出格式 输入格式 第一行一个整数 t，表示有 t 组数据。 接下来 t 行，每行一个整数 n（如题）。 输出格式 t 行，每行一个字符串，表示拆分方法（格式：$n=a_1+a_2+a_3+\\ldots+a_n$ ），要求从小到大输出。 输入输出样例 输入样例 #1 1 1 输出样例 #1 1=1 输入样例 #2 1 10 输出样例 #2 10=2+8 说明 若有多组数据，以个数最小的为准，若仍有多组，输出右边尽量大的一组。 对于$100\\%$的数据，$t \\leq 1000，1 \\leq n \\leq 10^{9}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 自 $01$ 背包问世之后，小 A 对此深感兴趣。一天，小 A 去远游，却发现他的背包不同于 $01$ 背包，他的物品大致可分为 k 组，每组中的物品相互冲突，现在，他想知道最大的利用价值是多少。 输入输出格式 输入格式 两个数 $m,n$，表示一共有 n 件物品，总重量为 m。 接下来 n 行，每行 3 个数 $a_i,b_i,c_i$，表示物品的重量，利用价值，所属组数。 输出格式 一个数，最大的利用价值。 输入输出样例 输入样例 #1 45 3 10 10 1 10 5 1 50 400 2 输出样例 #1 10 说明 $1 \\leq m, n \\leq 1000，1\\leq k\\leq 100，a_i, b_i, c_i$ 在 `int` 范围内。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 在猴王的帮助下，小 A 终于走出了这篇荒山，却发现一条波涛汹涌的河拦在了自己的面前。河面上并没有船，但好在小 A 有 n 个潜水工具。由于他还要背重重的背包，所以他只能背 m 重的工具，又因为他的力气并不是无限的，河却很宽，所以他只能背有 v 阻力的工具。但是这条河下有非常重要的数据，所以他希望能够停留的时间最久。于是他找到了你，让你告诉他方案。 输入输出格式 输入格式 三个数 $m, v, n$ 如题目所说。 接下来 n 行，每行三个数 $a_i, b_i, c_i$ 分别表示所含的重力，阻力，能够支撑的时间。 输出格式 第一行一个数，表示最长的时间。 接下来一行，若干个数，表示所选的物品。 输入输出样例 输入样例 #1 100 100 3 50 60 289 40 10 116 50 50 106 输出样例 #1 405  1 2 说明 对于 $100 \\%$ 的数据，$1 \\le m, v \\le 200，1 \\le n \\le 100$。 数据保证一定有方案。 若有多种方案，输出前面尽量小的方案。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 在你的帮助下，小 A 成功收集到了宝贵的数据，他终于来到了传说中连接通天路的通天山。但是这距离通天路仍然有一段距离，但是小 A 突然发现他没有地图！！！但是幸运的是，他在山脚下发现了一个宝箱。根据经验判断（小 A 有经验吗？），地图应该就在其中！ 在宝箱上，有三根柱子以及在一根柱子上的 n 个圆盘。小 A 在经过很长时间判断后，觉得这就是 hanoi 塔！（这都要琢磨）。但是移动是需要时间的，所以小 A 必须要通过制造延寿药水来完成这项任务。现在，他请你告诉他需要多少步完成，以便他造足够的延寿药水。 输入输出格式 输入格式 一个数 n，表示有 n 个圆盘。 输出格式 一个数 s，表示需要 s 步。 输入输出样例 输入样例 #1 31 输出样例 #1 2147483647 输入样例 #2 15 输出样例 #2 32767 说明 ### 数据范围及约定 对于所有数据，$n \\le 15000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:偶数 题目描述 给定一个正整数 n，请输出杨辉三角形前 n 行的偶数个数对 $1000003$ 取模后的结果。 输入输出格式 输入格式 一行一个正整数 n。 输出格式 一行一个整数表示答案。 输入输出样例 输入样例 #1 6 输出样例 #1 6 说明 对于 $30\\%$ 的数据，$n\\le 4\\times 10^3$。 对于 $70\\%$ 的数据，$n\\le 4\\times 10^9$。 对于 $100\\%$ 的数据，$1\\le n\\le 10^{15}$。 杨辉三角形的前七行： ```plain        1       1 1      1 2 1     1 3 3 1    1 4 6 4 1  1 5 10 10 5 1 1 6 15 20 15 6 1 ```"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:翻转游戏 (加强版) 题目描述 kkke 在一个 $n\\ \\times n$ 的棋盘上进行一个翻转游戏。棋盘的每个格子上都放有一个棋子，每个棋子有 2 个面，一面是黑色的，另一面是白色的。初始的时候，棋盘上的棋子有的黑色向上，有的白色向上。现在 kkke 想通过最少次数的翻转，使得棋盘上所有的棋子都是同一个颜色向上的（即全是黑色向上的，或全是白色向上的）。每次翻转的时候，kkke 可以选择任意一个棋子，将它翻转，同时，与它上下左右分别相邻的 4 个棋子也必须同时翻转。 输入输出格式 输入格式 输入的第一行是一个整数 n，表示棋盘的大小是 $n\\times n$。 接下来有 n 行，每行包括 n 个字母，表示初始的棋盘状态。如果字母是 $\\tt w$，则表示这个棋子当前是白色向上的，如果字母是 $\\tt b$，则表示这个棋子当前是黑色向上的。 输出格式 输出为一行，如果无法翻转出目标状态，则输出`Impossible`，否则输出一个整数，表示 kkke 最少需要翻转的次数。 输入输出样例 输入样例 #1 4  bwwb  bbwb  bwwb  bwww  输出样例 #1 4 说明 ### 数据范围及约定 - 对于 $30\\%$ 的数据，$1 \\le n \\le 4$； - 对于 $100\\%$ 的数据，$1 \\le n \\le 16$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:家族 题目描述 在一个与世隔绝的岛屿上，有一个有趣的现象：同一个家族的人家总是相邻的（这里的相邻是指东南西北四个方向），不同的家族之间总会有河流或是山丘隔绝，但同一个家族的人不一定有相同姓氏。现在给你岛上的地图，求出岛上有多少个不同的家族。岛上的地图有 n 行，每行有若干列，每个格子中要么是空格，表示大海，要么是 $\\text{``{\\tt *}''}$，表示河流或山丘，要么是小写字母，表示一户人家的姓氏。 输入输出格式 输入格式 第一行是个数字 N，表示下面信息的行数。接下来是 N 行字符，每行由小写字母和 $\\texttt *$ 号组成，有些行的最前面也可能包含若干连续的空格，表示这些区域是大海，每一行最多不超过 $200$ 个字符。 输出格式 一个数字，表示家族数。 输入输出样例 输入样例 #1 4 *zlw**pxh l*zlwk*hx* w*tyy**yyy         zzl 输出样例 #1 3 说明 ### 数据范围及约定 - $10\\%$ 的数据，$n≤1$。 - $30\\%$ 的数据，$n≤10$。 - $100\\%$ 的数据，$n≤100$，每一行最多不超过 $200$ 个字符。 NOI导刊 2010 普及（10）"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:淘汰赛制 题目描述 淘汰赛制是一种极其残酷的比赛制度。$2^n$ 名选手分别标号 $1,2,3,\\cdots,2^n-1,2^n$，他们将要参加 n 轮的激烈角逐。每一轮中，将所有参加该轮的选手按标号从小到大排序后，第 1 位与第 2 位比赛，第 3 位与第 4 位比赛，第 5 位与第 6 位比赛……只有每场比赛的胜者才有机会参加下一轮的比赛（不会有平局）。这样，每轮将淘汰一半的选手。n 轮过后，只剩下一名选手，该选手即为最终的冠军。 现在已知每位选手分别与其他选手比赛获胜的概率，请你预测一下谁夺冠的概率最大。 输入输出格式 输入格式 第一行是一个整数 $n(1 \\le n \\le 10)$，表示总轮数。接下来 $2^n$ 行，每行 $2^n$ 个整数，第 i 行第 j 个是 $p_{i,j}$。（$0 \\le p_{i_j} \\le 100，p_{i,i}=0，p_{i,j}+p_{j,i}=100$），表示第 i 号选手与第 j 号选手比赛获胜的概率。 输出格式 输出只有一个整数 c，表示夺冠概率最大的选手编号（若有多位选手，输出编号最小者）。 输入输出样例 输入样例 #1 2 0 90 50 50 10 0 10 10 50 90 0 50 50 90 50 0 输出样例 #1  1 说明 - $30\\%$ 的数据满足 $n \\le 3$； - $100\\%$ 的数据满足 $n \\le 10$。 _NOI导刊 2010 提高（01）"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:OIH 的目标是制作出一个适合 OIers 的 app。虽然 OIH 不是 OJ，但是 OIH 的辅助功能能够给 OIers 带来很大的便利。如果您有任何的 idea，请 @soha（oih 的作者）。 题目描述 经过多次谈判，kkksc03 终于取得了 OIH 搜索的接口，现在向 OIH 服务器发送了一个查询请求，返回了一道题目。 查询关键词是一句话，由汉字（我们用它的拼音代替）、空格（每个汉字之间都有空格）、半角标点组成。返回的题目也是这样的。kkksc03 希望将题目中的某些词语加粗。所谓词语，就是连续两个或以上汉字。比如说 `tao tao`,`zhai ping guo` 都是词语，而 `hao`,`ni,hao` 不是词语。如果一个在题目中出现的词语也在关键词中出现的词语，那么加粗。加粗的方法是在词语前加上 `<b>`，在词语后面加上一个 `</b>`。至于标点符号么加不加粗无所谓。kkksc03 希望添加标记（`<b>` `</b>`对）的数量尽可能少，而且每个标记之间的的字符数最少。 输入输出格式 输入格式 两行。第一行为一个字符串 $S_1$，关键词字符串。第二行 $S_2$，是 OIH 返回的题目字符串。 输出格式 一行，处理的结果。 输入输出样例 输入样例 #1 Shang wang dou tmd bei ping ping an an he xie diao le. Tian yao mie he xie, tui he xie bao ping an.  shang Wang sou suo jiu ping cha cha cha ,you       zhen       xiang! 输出样例 #1 Tian yao mie <b>he xie</b>, tui <b>he xie</b> bao <b>ping an.  shang Wang</b> sou suo jiu ping cha cha cha ,you       zhen       xiang! 说明 每个汉字不超过 7 个英文字符。 关键字不超过 $100$ 个汉字。 返回的题目不超过 $1000$ 个汉字。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:方程的解 题目描述 佳佳碰到了一个难题，请你来帮忙解决。对于不定方程 $a_1+a_2+\\cdots +a_{k-1}+a_k=g(x)$，其中 $k\\ge 2$ 且 $k\\in \\mathbb{N}^*，x$ 是正整数，$g(x)=x^x \\bmod 1000$（即 $x^x$ 除以 $1000$ 的余数），$x,k$ 是给定的数。我们要求的是这个不定方程的正整数解组数。 举例来说，当 $k=3,x=2$ 时，方程的解分别为： $$\\begin{cases} a_1=1\\\\ a_2=1\\\\ a_3=2 \\end{cases}$$ $$\\begin{cases} a_1=1\\\\ a_2=2\\\\ a_3=1 \\end{cases}$$ $$\\begin{cases} a_1=2\\\\ a_2=1\\\\ a_3=1 \\end{cases}$$ 输入输出格式 输入格式 输入有且只有一行，为用空格隔开的两个正整数，依次为 $k,x$。 输出格式 输出有且只有一行，为方程的正整数解组数。 输入输出样例 输入样例 #1 3 2 输出样例 #1 3 说明 - 对于 $40\\%$ 的数据，$\\mathit{ans} \\le 10^{16}$； - 对于 $100\\%$ 的数据，$k \\le 100，x \\le 2^{31}-1，k \\le g(x)$。 NOI导刊2010提高（01）"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:传说中珠穆朗玛峰下有座古代人修建的神庙，神庙的地下室里有古代王室的遗产，但数千年来从未有人到达过……探险者小 FF 一直梦想成为世界上最富有的人和最杰出的探险家并被永载史册。在证明了这个洞确实存在后，小 FF 做好了充足准备，来到了神庙。 题目描述 当小 FF 来到神庙时，神庙已经破败不堪了。但神庙的中央有一个光亮如新的石台。小 FF 走近石台，发现石台上有一个数串，而数串的上方刻着一串古老的符文之语。精通古符文之语的小 FF 不费吹灰之力就读懂了文章的意思，其大意是： 对于石台上的一串数字，你可以在适当的位置加入乘号（设加了 k 个，当然也可不加，即分成 $k+1$ 个部分），设这 $k+1$ 个部分的乘积（如果 $k=0$，则乘积即为原数串的值）对 m 的余数（即 $\\bmod\\ m$）为 x； 现求 x 能达到的最小值及该情况下 k 的最小值，以及 x 能达到的最大值及该情况下的 k 的最小值（可以存在 x 的最小值与最大值相同的情况）。 小 FF 还知道，如果他找到了正确的答案，那么就可以通往神庙的下层了。但这个问题似乎不太好解决，小 FF 就找到了你，并答应找到财宝以后和你二八分（当然你拿二……）。 输入输出格式 输入格式 第一行为数串，且数串中不存在 0； 第二行为 m。 输出格式 四个数，分别为 x 的最小值和该情况下的 k，以及 x 的最大值和该情况下的 k，相邻两个数之间用一个空格隔开。 输入输出样例 输入样例 #1 4421  22  输出样例 #1 0 1 21 0 说明 记 L 表示字符串的长度。 - 对于 $30\\%$ 的数据：$2 \\le L \\le 50$； - 对于 $100\\%$ 的数据：$2 \\le L \\le 1000，2 \\le m \\le 50$。 NOI 导刊 $2010$ 提高（$02$）"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最接近神的人 题目描述 破解了符文之语，小 FF 开启了通往地下的道路。当他走到最底层时，发现正前方有一扇巨石门，门上雕刻着一幅古代人进行某种活动的图案。而石门上方用古代文写着“神的殿堂”。小 FF 猜想里面应该就有王室的遗产了。但现在的问题是如何打开这扇门……。 仔细研究后，他发现门上的图案大概是说：古代人认为只有智者才是最容易接近神明的。而最聪明的人往往通过一种仪式选拔出来。仪式大概是指，即将隐退的智者为他的候选人写下一串无序的数字，并让他们进行一种操作，即交换序列中相邻的两个元素。而用最少的交换次数使原序列变成不下降序列的人即是下一任智者。 小 FF 发现门上同样有着 n 个数字。于是他认为打开这扇门的秘诀就是找到让这个序列变成不下降序列所需要的最小次数。但小 FF 不会……只好又找到了你，并答应事成之后与你三七分…… 输入输出格式 输入格式 第一行为一个整数 n，表示序列长度。 第二行为 n 个整数，表示序列中每个元素。 输出格式 一个整数 $\\mathit{ans}$，即最少操作次数。 输入输出样例 输入样例 #1 4 2 8 0 3 输出样例 #1 3 说明 ### 数据范围及约定 - 对于 $30\\%$ 的数据 $1≤n≤10^4$。 - 对于 $100\\%$ 的数据 $1≤n≤5\\times 10^5，A_i\\in [-2^{31}, 2^{31})$。 ### 样例解释 开始序列为 $[2,8,0,3]$，目标序列为 $[0, 2, 3, 8]$，可进行三次操作的目标序列： 1. 交换 $(8,0)$，序列变成 $[2,0,8,3]$； 2. 交换 $(2,0)$，序列变成 $[0,2,8,3]$； 3. 交换 $(8,3)$，序列变成 $[0,2,3,8]$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:石子合并（弱化版） 题目描述 设有 $N(N \\le 300)$ 堆石子排成一排，其编号为 $1,2,3,\\cdots,N$。每堆石子有一定的质量 $m_i\\ (m_i \\le 1000)$。现在要将这 N 堆石子合并成为一堆。每次只能合并相邻的两堆，合并的代价为这两堆石子的质量之和，合并后与这两堆石子相邻的石子将和新堆相邻。合并时由于选择的顺序不同，合并的总代价也不相同。试找出一种合理的方法，使总的代价最小，并输出最小代价。 输入输出格式 输入格式 第一行，一个整数 N。 第二行，N 个整数 $m_i$。 输出格式 输出文件仅一个整数，也就是最小代价。 输入输出样例 输入样例 #1 4 2 5 3 1 输出样例 #1 22"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:宝物筛选 题目描述 终于，破解了千年的难题。小 FF 找到了王室的宝物室，里面堆满了无数价值连城的宝物。 这下小 FF 可发财了，嘎嘎。但是这里的宝物实在是太多了，小 FF 的采集车似乎装不下那么多宝物。看来小 FF 只能含泪舍弃其中的一部分宝物了。 小 FF 对洞穴里的宝物进行了整理，他发现每样宝物都有一件或者多件。他粗略估算了下每样宝物的价值，之后开始了宝物筛选工作：小 FF 有一个最大载重为 W 的采集车，洞穴里总共有 n 种宝物，每种宝物的价值为 $v_i$，重量为 $w_i$，每种宝物有 $m_i$ 件。小 FF 希望在采集车不超载的前提下，选择一些宝物装进采集车，使得它们的价值和最大。 输入输出格式 输入格式 第一行为一个整数 n 和 W，分别表示宝物种数和采集车的最大载重。 接下来 n 行每行三个整数 $v_i,w_i,m_i$。 输出格式 输出仅一个整数，表示在采集车不超载的情况下收集的宝物的最大价值。 输入输出样例 输入样例 #1 4 20 3 9 3 5 9 1 9 4 2 8 1 3 输出样例 #1 47 说明 对于 $30\\%$ 的数据，$n\\leq \\sum m_i\\leq 10^4，0\\le W\\leq 10^3$。 对于 $100\\%$ 的数据，$n\\leq \\sum m_i \\leq 10^5，0\\le W\\leq 4\\times 10^4，1\\leq n\\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:帮助 题目描述 Bubu 的书架乱成一团了！帮他一下吧！ 他的书架上一共有 n 本书。我们定义混乱值是连续相同高度书本的段数。例如，如果书的高度是 $[30,30,31,31,32]$，那么混乱值为 3；$[30,32,32,31]$ 的混乱度也是 3，但 $[31,32,31,32,31]$ 的混乱度是 5，这实在是太乱了。 Bubu 想尽可能地减少混乱度，但他有点累了，所以他决定最多取出 k 本书，再随意将它们放到书架上。你能帮助他吗？ 输入输出格式 输入格式 每个输入文件包含最多 $20$ 组测试数据。 每组测试数据开头为两个整数 $n,k\\ (l \\le k \\le n \\le 100)$，表示总共有 n 本书，最多可以进行 k 次搬书操作。 接下来一行有 n 个整数，表示每本书的高度，从左到右。每本书的高度是 $25$ 到 $32$ 间的整数。 最后一组数据后有一行 $n=k=0$，表示输入结束。 输出格式 对于每一组数据，输出 $\\text{Case}$ 标号和最终最小的混乱度。在每组数据后输出一个空行。 输入输出样例 输入样例 #1 5 2 25 25 32 32 25 5 1 25 26 25 26 25 0 0 输出样例 #1 Case 1: 2 Case 2: 3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:魔鬼杀手 题目描述 你生活在一个怪兽世界里。你需要用魔法反抗这些怪兽。 每个怪兽都有一定的 hit points，表示他们的生命值。你可以靠施魔法，降低怪兽的 hit points。每个魔法都会有一定的 damage，表示会减少被攻击者 damage 的 hit point。一个怪兽被击败了当前仅当它的 hitpoint 小于等于 0。另一方面，魔法是要消耗魔力的。因为你的魔力是有限的，你希望用最少的魔力击败所有的怪兽。写一个程序完成这个任务。 输入输出格式 输入格式 输入按如下的格式给出： | | | | |  | :-: | :-: | :-: | :-: | | N | | | | | $HP_1$ | | | | | $HP_2$ | | | | | ... | | | | | $HP_N$ | | | | | M | | | | | $Name_1$ | $MP_1$ | $Target_1$ | $Damage_1$ | | $Name_2$ | $MP_2$ | $Target_2$ | $Damage_2$ | | ... | | | | | $Name_M$ | $MP_M$ | $Target_M$ | $Damage_M$ | N 是怪兽的数量（$1\\le N\\le 100$），$HP_{i}$ 表示第 i 个怪兽的 hit point（$l\\le HP_i\\le 100000$），M 表示可用的魔法数量（$1\\le M\\le 100$），$Name_j$ 是第 j 种魔法的名字，最长会有 $30$ 个大写或小写字母，$MP_j$ 是这种魔法需要消耗的魔力（$0\\le MP_j\\le 99$），$Target_j$ 要么是  Single ，要么是  All ，表示该魔法只攻击单个怪兽或对全体怪兽同时有效。$Damage_j$ 表示对于所有玫击对象，可以减少攻击对象 $Damage_j$ 的 hit point（$0\\le Damage_j\\le 999999$）。 所有数字都是整数。最少有一种魔法的 $Damage$ 是非零的。 输出格式 输出一行，包含一个整数，表示最小需要消耗的魔力。 输入输出样例 输入样例 #1 3 8000 15000 30000 3 Flare 45 Single 8000 Meteor 62 All 6000 Ultimate 80 All 9999 输出样例 #1 232"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:染色的立方体 题目描述 小胖最近迷上了3D物体，尤其是立方体。他手里有很多个立方体，他想让所有的立方体全都长得一样，所以他决定给某些立方体的表面重涂颜色，使得所有的立方体完全相同。但是小胖是很懒的，他想知道最少涂多少次颜色，可以让所有立方体完全相同。 输入输出格式 输入格式 输入包含多组数据，每组数据第一行 $n\\ (1≤n≤4)$，表示立方体的数量，接下来 n 行，每行 6 个字符串 $\\mathit{color}_1,\\mathit{color}_2,\\mathit{color}_3,\\mathit{color}_4,\\mathit{color}_5,\\mathit{color}_6$，表示立方体 6 个面的颜色。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:宇宙总统 题目描述 地球历公元 6036 年，全宇宙准备竞选一个最贤能的人当总统，共有 n 个非凡拔尖的人竞选总统，现在票数已经统计完毕，请你算出谁能够当上总统。 输入输出格式 输入格式 第一行为一个整数 n，代表竞选总统的人数。 接下来有 n 行，分别为第一个候选人到第 n 个候选人的票数。 输出格式 共两行，第一行是一个整数 m，为当上总统的人的号数。 第二行是当上总统的人的选票。 输入输出样例 输入样例 #1 5 98765 12365 87954 1022356 985678 输出样例 #1 4 1022356 说明 票数可能会很大，可能会到 $100$ 位数字。 $1 \\leq n \\leq 20$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:旅行商的背包 题目描述 小 S 坚信任何问题都可以在多项式时间内解决，于是他准备亲自去当一回旅行商。在出发之前，他购进了一些物品。这些物品共有 n 种，第 i 种体积为 $V_i$，价值为 $W_i$，共有 $D_i$ 件。他的背包体积是 C。怎样装才能获得尽量多的收益呢？作为一名大神犇，他轻而易举的解决了这个问题。   然而，就在他出发前，他又收到了一批奇货。这些货共有 m 件，第 i 件的价值 $Y_i$ 与分配的体积 $X_i$ 之间的关系为：$Y_i=a_iX_i^2+b_iX_i+c_i$。这是件好事，但小 S 却不知道怎么处理了，于是他找到了一位超级神犇（也就是你），请你帮他解决这个问题。 输入输出格式 输入格式 第一行三个数 $n,m,C$，如题中所述；   以下 n 行，每行有三个数 $V_i,W_i,D_i$，如题中所述；   以下 m 行，每行有三个数 $a_i,b_i,c_i$，如题中所述。 输出格式 仅一行，为最大的价值。 输入输出样例 输入样例 #1 2 1 10 1 2 3 3 4 1 -1 8 -16 输出样例 #1 10 说明 ### 样例解释 前两种物品全部选走，最后一个奇货分给 4 的体积，收益为$2 \\times 3+4 \\times 1+(-1) \\times 16+8 \\times 4+(-16)=10$。 ### 限制与约定 对于 $100\\%$ 的数据，$1 \\le n \\le 10^4，1 \\le m \\le 5，1 \\le C \\le 10^4， 1 \\le W_i,V_i,D_i \\le 1000，-1000 \\le a_i,b_i,c_i \\le 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:海滩防御 题目描述 WLP 同学最近迷上了一款网络联机对战游戏（终于知道为毛 JOHNKRAM 每天刷洛谷效率那么低了），但是他却为了这个游戏很苦恼，因为他在海边的造船厂和仓库总是被敌方派人偷袭。于是，WLP 动用了他那丰满且充实的大脑（或许更偏向前者），想出了一个好主意，他把海滩分成垂直于海岸线的若干列，在其中的几列上放置几个信号塔，试图来监视整个海滩。然而，WLP 是一个非常心急的人，他把信号塔建好后才发现还需给信号塔供能，它们才能投入使用（这不是废话么），它们都有一个工作半径，一个圆形区域里的所有敌人都逃不过它们的监视，不过，WLP 发现，敌人们非常狡猾，除非他将道路完全封死，否则 WLP 的敌人可以走过一条任意弯曲的路（不一定走整点，但是不会出第 0 列和第 N 列构成的边界）来偷他的东西。 于是，WLP 就思考了：到底需要给每个信号塔多大的工作半径，才能将从海滩到内地的路径完全封死呢？他再次动用了他那丰满且充实的大脑，想了一堂数学课，终于，还是没想出来。于是，他向 LZZ 神犇求助（额…… CSUNSHINE 的身份是不是暴露了）。 终于，在 WLP：“ %^!\\*@#!\\*(\\*^!\\*#@\\$^&（此处省略无数卖萌场景）”的哀求下，LZZ 神犇写了一个程序，在一秒内就解决了问题。但是，邪恶的 LZZ 神犇决定要将这个难题共享给无数无辜的 OIer，所以，现在轮到你了。 输入输出格式 输入格式 第一行两个整数 N 和 M，表示海滩被 WLP 分成的列数 $0,1,2,\\cdots,N$ 和信号塔个数。 第 2 至第 $M+1$ 行，每行两个数 $X_i，Y_i$ 表示 $1,2,3,\\cdots,M$ 号信号塔所在的列数和离开海滩的距离。 输出格式 一行一个实数，表示最小的工作半径，保留两位小数。 输入输出样例 输入样例 #1 5 5 1 5 3 5 5 5 4 30 2 15 输出样例 #1 1.00 输入样例 #2 100 2 30 50 90 100 输出样例 #2 39.05 说明 ### 数据范围及约定 - 对于 $10\\%$ 的数据：$1 \\le M \\le 10，1 \\le Y_i \\le 100$； - 对于 $30\\%$ 的数据：$1 \\le M \\le 50，1 \\le Y_i \\le 1,000$； - 对于 $80\\%$ 的数据：$1 \\le M \\le 500，1 \\le Y_i \\le 1,000$； - 对于 $100\\%$ 的数据：$1 \\le M \\le 800，1 \\le N \\le 1000，1 \\le X_i \\le N，1 \\le Y_i \\le 100,000$。 ### 提示 注意，封锁海滩是指，敌人的深入程度是有限制的，若敌人绕过了所有的信号塔，并且可以长驱直入，那么就说明道路没有完全封锁。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:不好，这局要输了，企鹅还剩 $4$ 血了 Boss 还有 $392$ 呢，哇，漂亮——红缨枪连击，$280$，$343$（暴击），绝杀！嗜血（$4$ 星，嗜血 $50\\%$），完胜（absi2011 的 $60$ 级企鹅贫血，就 $315$，玩过乐斗的别黑）！ 题目描述 别说这是个巧合，这类绝杀还真不少。 现在假设 Boss 还剩下的血为 x，absi2011 的企鹅剩 y 血，它拿出的武器的伤害最高是 z。它的武器有几率连击。 他问你有无可能绝杀（可连击）。如果能，请先输出一行 `Yes`，否则输出 `No`。如果他给你的数据是错的，请输出 `Wrong Data`。 数据有这么几种情况算错：$y\\leq 0$ 或 $y>315$ 或 $y\\geq x$ 或    $x>1800$（当前斗神塔 Boss 好像没有超过 $1800$ 血的）或 $z\\geq 1000$（红缨枪+天马流星拳+会心一击+残影+武器好手好像都达不到）或 $z\\leq 100$（absi2011 认为小于等于 $100$ 就不算绝杀了）。 （输出 `Yes` 后）接下来，他还想问绝杀（就算最高伤害后）如果触发他的 3 星嗜血 / 4 星嗜血 / 5 星吸星大法各能不能完胜。三星每次的嗜血嗜血量为 $33\\%\\times$ 伤害（下取整），四星每次的嗜血嗜血量为 $50\\%\\times$ 伤害（下取整），五星吸星大法嗜血量为 $100\\%\\times$ 伤害（这还真不用下取整）。两次要分开算。如果超过血上限就不再回血了。 如果三星能就输出一行 `Great`，四星能就输出一行 `Eh..` 和一行 `OK`，五星能就输出两行 `Oh..` 和一行 `Yes , If he can get 5-star.`。 如果都不行，那么输出三行 `No` 和他 4 星嗜血后的血量。 注意，有可能打一下 Boss 就死了，那么不能连击嗜血了。只能算打死 Boss 那下的嗜血。 Boss 死掉当且仅当 Boss 血 $\\leq 0$（其实 $<0$ 会自动当成 0）。 输入输出格式 输入格式"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 目前帮派内共最多有一位帮主，两位副帮主，两位护法，四位长老，七位堂主，二十五名精英，帮众若干。 现在 absi2011 要对帮派内几乎所有人的职位全部调整一番。他发现这是个很难的事情。于是要求你帮他调整。 他给你每个人的以下数据： 他的名字（长度不会超过 $30$），他的原来职位，他的帮贡，他的等级。 他要给帮贡最多的护法的职位，其次长老，以此类推。 可是，乐斗的显示并不按帮贡排序而按职位和等级排序。 他要你求出最后乐斗显示的列表(在他调整过职位后)：职位第一关键字，等级第二关键字。 注意：absi2011 无权调整帮主、副帮主的职位，包括他自己的（这不是废话么..） 他按原来的顺序给你（所以，等级相同的，原来靠前的现在也要靠前，因为经验高低的原因，但此处为了简单点省去经验。） 输入输出格式 输入格式 第一行一个正整数 n，表示星月家园内帮友的人数。 下面 n 行每行两个字符串两个整数，表示每个人的名字、职位、帮贡、等级。 输出格式 一共输出 n 行，每行包括排序后乐斗显示的名字、职位、等级。 输入输出样例 输入样例 #1 9  DrangonflyKang BangZhu 100000 66  RenZaiJiangHu FuBangZhu 80000 60  absi2011 FuBangZhu 90000 60  BingQiLingDeYanLei HuFa 89000 58  Lcey HuFa 30000 49  BangYou3 ZhangLao 1000 1  BangYou1 TangZhu 100 40  BangYou2 JingYing 40000 10  BangYou4 BangZhong 400 1 输出样例 #1 DrangonflyKang BangZhu 66  RenZaiJiangHu FuBangZhu 60  absi2011 FuBangZhu 60  BingQiLingDeYanLei HuFa 58  BangYou2 HuFa 10  Lcey ZhangLao 49  BangYou1 ZhangLao 40  BangYou3 ZhangLao 1  BangYou4 ZhangLao 1 说明 各种职位用汉语拼音代替。 如果职位剩 1 个，而有 2 个帮贡相同的人，则选择原来在前的现在当选此职位。 另： 帮派名号：星月家园 帮主尊号：Dragonfly Kang 帮派ID：2685023 帮派等级：4 帮派人数：101/110 帮派技能： 星月家园资料，欢迎各位豆油加入^\\_^ 【数据范围】 对于 $10\\%$ 的数据，保证 $n=3$。 对于 $40\\%$ 的数据，保证各个人的帮贡均为 0。 对于 $100\\%$ 的数据，保证 $3\\leq n\\leq 110$，各个名字长度$\\leq30，0\\leq$ 各个人的帮贡 $\\leq1000000000$， $1\\leq$ 各个人等级 $\\leq 150$。 保证职位必定为 $\\texttt{BangZhu}，\\texttt{FuBangZhu}，\\texttt{HuFa}，\\texttt{ZhangLao}，\\texttt{TangZhu}，\\texttt{JingYing}，\\texttt{BangZhong}$ 之中的一个 保证有一名帮主，保证有两名副帮主，保证有一名副帮主叫 absi2011 不保证一开始帮派里所有职位都是满人的，但排序后分配职务请先分配高级职位。例如原来设一名护法现在设两名。 保证名字不重复。 【题目来源】 fight.pet.qq.com"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:【Mc生存】插火把 题目描述 话说有一天 linyorson 在“我的世界”开了一个 $n \\times n$ 的方阵，现在他有 m 个火把和 k 个萤石，分别放在 $(x_1, y_1) \\sim (x_m, y_m)$ 和 $(o_1, p_1) \\sim (o_k, p_k)$ 的位置，没有光并且没放东西的地方会生成怪物。请问在这个方阵中有几个点会生成怪物？ P.S. 火把的照亮范围是： ```     |暗|暗| 光 |暗|暗|     |暗|光| 光 |光|暗|     |光|光|火把|光|光|     |暗|光| 光 |光|暗|     |暗|暗| 光 |暗|暗| ``` 萤石： ```     |光|光| 光 |光|光|     |光|光| 光 |光|光|     |光|光|萤石|光|光|     |光|光| 光 |光|光|     |光|光| 光 |光|光| ``` 输入输出格式 输入格式 输入共 $m + k + 1$ 行。   第一行为 $n, m, k$。   第 2 到第 $m + 1$ 行分别是火把的位置 $x_i, y_i$。   第 $m + 2$ 到第 $m + k + 1$ 行分别是萤石的位置 $o_i, p_i$。 注：可能没有萤石，但一定有火把。 输出格式 有几个点会生出怪物。 输入输出样例 输入样例 #1 5 1 0 3 3 输出样例 #1 12 说明 数据保证，$1 \\le n \\le 100，1 \\leq m+k \\leq 25，1 \\leq m \\leq 25，0 \\leq k \\leq 5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:矩形分割 题目描述 有一个长为 a，宽为 b 的矩形（$1 \\le a \\le 6，2 \\le b \\le 6$）。可以把这个矩形看作是 $a\\times b$ 个小方格。 我们现在接到了这样的一个任务：请你计算出，把这个矩形分割成两个部分的方法总数。 你不是可以任意地分割这个大的矩形，必须满足： 分割后，每个部分，至少各自均有一个方格是在大矩形的最外边上（即大矩形最外面一环的方格）。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:原《线段覆盖》请做P1803 题目描述 作为一个富有经营头脑的富翁，小 L 决定从本国最优秀的经理中雇佣一些来经营自己的公司。这些经理相互之间合作有一个贡献指数，（我们用 $E_{i,j}$ 表示 i 经理对 j 经理的了解程度），即当经理 i 和经理 j 同时被雇佣时，经理 i 会对经理 j 做出贡献，使得所赚得的利润增加 $E_{i,j}$。 当然，雇佣每一个经理都需要花费一定的金钱 $A_i$，对于一些经理可能他做出的贡献不值得他的花费，那么作为一个聪明的人，小 L 当然不会雇佣他。然而，那些没有被雇佣的人会被竞争对手所雇佣，这个时候那些人会对你雇佣的经理的工作造成影响，使得所赚得的利润减少 $E_{i,j}$（注意：这里的 $E_{i,j}$ 与上面的 $E_{i,j}$ 是同一个）。 作为一个效率优先的人，小 L 想雇佣一些人使得净利润最大。你可以帮助小 L 解决这个问题吗？ 输入输出格式 输入格式 第一行有一个整数，表示经理的个数。 第二行有 N 个整数 $A_i$ 表示雇佣每个经理需要花费的金钱。 接下来的 N 行中一行包含 N 个数，表示 $E_{i,j}$，即经理 i 对经理 j 的了解程度。满足 $E_{i,j}=E_{j,i}$。 输出格式 第一行包含一个整数，即所求出的最大值。 输入输出样例 输入样例 #1 3 3 5 100 0 6 1 6 0 2 1 2 0 输出样例 #1 1 说明 - $20\\%$ 的数据中 $N\\le 10$； - $50\\%$ 的数据中 $N\\le 100$； - $100\\%$ 的数据中 $N\\le 1000，E_{i,j}<2^{31}，A_i<2^{31}$。 From 林衍凯。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[国家集训队] 种树 题目描述 A城市有一个巨大的圆形广场，为了绿化环境和净化空气，市政府决定沿圆形广场外圈种一圈树。 园林部门得到指令后，初步规划出 n 个种树的位置，顺时针编号 1 到 n。并且每个位置都有一个美观度 $A_i$，如果在这里种树就可以得到这 $A_i$ 的美观度。但由于 A 城市土壤肥力欠佳，两棵树决不能种在相邻的位置（i 号位置和 $i+1$ 号位置叫相邻位置。值得注意的是 1 号和 n 号也算相邻位置）。 最终市政府给园林部门提供了 m 棵树苗并要求全部种上，请你帮忙设计种树方案使得美观度总和最大。如果无法将 m 棵树苗全部种上，给出无解信息。 输入输出格式 输入格式 输入的第一行包含两个正整数 n，m。 第二行 n 个整数，第 i 个代表 $A_i$。 输出格式 输出一个整数，表示最佳植树方案可以得到的美观度。如果无解输出 `Error!`。 输入输出样例 输入样例 #1 7 3 1 2 3 4 5 6 7 输出样例 #1 15 输入样例 #2 7 4 1 2 3 4 5 6 7 输出样例 #2 Error! 说明 数据编号|n 的大小|数据编号| n 的大小 -|-|-|- 1|$30|11|200$ 2|$35|12|2007$ 3|$40|13|2008$ 4|$45|14|2009$ 5|$50|15|2010$ 6|$55|16|2011$ 7|$60|17|2012$ 8|$65|18|199999$ 9|$200|19|199999$ $10|200|20|200000$ 对于全部数据：$m\\le n，-1000\\le A_i\\le1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:跑步 题目描述 新牛到部队，CG 要求它们每天早上搞晨跑，从 A 农场跑到 B 农场。从 A 农场到 B 农场中有 $n-2$ 个路口，分别标上号，A 农场为 1 号，B 农场为 n 号，路口分别为 $2,3,4,\\cdots,n-1$ 号，从 A 农场到 B 农场有很多条路径可以到达，而 CG 发现有的路口是必须经过的，即每条路径都经过的路口，CG 要把它们记录下来，这样 CG 就可以先到那个路口，观察新牛们有没有偷懒，而你的任务就是找出所有必经路口。 输入输出格式 输入格式 第一行两个用空格隔开的整数 $n\\ (3 \\le n \\le 2000)$ 和 $e\\ (1 \\le e \\le 8000)$。 接下来从第 2 到第 $e+1$ 行，每行两个用空格隔开的整数 p 和 q，表示路口 p 和 q 之间有路径直达。 输入数据保证必经路口一定存在，并且每个路口都和 A 农场、B 农场相连通。 输出格式 第一行一个整数 m，表示必经路口的数目。 第二行按从小到大的顺序依次输出每个必经路口的编号，每两个数之间用一个空格隔开。 输入输出样例 输入样例 #1 6 6  1 2  2 4  2 3  3 5  4 5  5 6  输出样例 #1 2  2 5"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:装备运输 题目描述 德国放松对英国的进攻后，把矛头指向了东边——苏联。$1943$ 年初，东线的战斗进行到白热化阶段。据可靠情报，$90$ 余万德国军队在库尔斯克准备发动浩大攻势。因此，朱可夫元帅要求你立即从远东的军工厂运输大量装备支援库尔斯克前线。列车司机告诉你，一趟列车最多可以容纳 V 体积的武器装备，但是你可能不能装满，因为列车承受不了那么大的重量，一趟列车最多可以承载 C 单位的重量。同时，军工厂仓库提供给你一份装备清单，详细记录了每件装备的体积、重量和火力。为了有效支援朱可夫元帅，你要找到一种方案，使得总火力值最大。 输入输出格式 输入格式 第一行两个整数 V 和 G，表示最大体积和重量。 第二行一个整数 N，表示仓库有 N 件装备。 第三到 $N+2$ 行，每行 3 个数 $T_i,V_i,G_i$，表示各装备的火力值、体积和重量。 输出格式 输出一个数，表示可能获得的最大火力值。 输入输出样例 输入样例 #1 6 5  4 10 2 2 20 3 2  40 4 3  30 3 3  输出样例 #1 50 说明 对于 $100\\%$ 的数据，$1\\le V, G, N \\le 500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:无穷的序列 题目描述 有一个无穷序列如下： $\\texttt{110100100010000100000}$… 请你找出这个无穷序列中指定位置上的数字。 输入输出格式 输入格式 第一行一个正整数 N ，表示询问次数； 接下来的 N 行每行一个正整数 $A_i，A_i$ 表示在序列中的位置。 输出格式 输出为 N 行，每行为 0 或 1 ，表示序列第  $A_i$ 位上的数字。 输入输出样例 输入样例 #1 4 3 14 7 6  输出样例 #1 0 0 1 0 说明 对于 $100\\%$ 的数据，$N \\leq 1\\,500\\,000，A_i≤10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小明搬家 题目描述 小明要搬家了，大家都来帮忙。 小明现在住在第 N 楼，总共 K 个人要把 X 个大箱子搬上 N 楼。 最开始 X 个箱子都在 1 楼，但是经过一段混乱的搬运已经乱掉了。最后大家发现这样混乱地搬运过程效率太低了，于是总结出了提高效率的方法。 大家的速度都是每分钟上（或下）一层楼。所有向上走的人手中都拿一个箱子，所有向下走的人手中都不拿箱子。到达第 N 层立刻放下箱子向下走，到达第 1 层立刻拿起箱子向上走。当一个人向上走，另一人向下走而在楼道里相遇时，向上走的人将手中的箱子交给另一人，两人同时反向。即原来拿箱子向上走的人不拿箱子向下走，原来不拿箱子向下走的人现拿着箱子向上走。 求将所有箱子搬完所需的最短时间。 输入输出格式 输入格式 第一行 $N, K, M$，分别表示楼层数、人数、还放在一楼地上的箱子数。 接下来 K 行，每行两个数 $A_i,B_i$。 $A_i$ 表示第 i 人现所在的楼层数，$B_i$ 为 0 或 1，为 0 表示第 i 人正拿着箱子向上走，为 1 表示第 i 人不拿箱子向下走。 输入满足没有任意两人正在同一楼层，在第 1 层的人一定正拿着箱子向上走，在第 N 层的人一定正不拿箱子向下走。 输出格式 仅包含一个整数，为搬完箱子的时间。 输入输出样例 输入样例 #1 5 2 4  1 0  3 0  输出样例 #1 20 说明 对于 $30\\%$ 的数据，$K \\leq 100，M \\leq 100$； 对于 $60\\%$ 的数据，$K \\leq 1000，M \\leq 10^9$; 对于 $100\\%$ 的数据，$N \\le 10^9，K \\le 5 \\times 10^5，M \\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数列 题目描述 虽然 msh 长大了，但她还是很喜欢找点游戏自娱自乐。有一天，她在纸上写了一串数字：$1, 1, 2, 5, 4$。接着她擦掉了一个 1，结果发现剩下 $1, 2, 4$ 都在自己所在的位置上，即 1 在第 1 位，2 在第 2 位，4 在第 4 位。她希望擦掉某些数后，剩下的数列中在自己位置上的数尽量多。她发现这个游戏很好玩，于是开始乐此不疲地玩起来……不过她不能确定最多能有多少个数在自己的位置上，所以找到你，请你帮忙计算一下！ 输入输出格式 输入格式 第一行为一个数 n，表示数列的长度。 接下来一行为 n个用空格隔开的正整数，第 i 行表示数 $A_i$。 输出格式 一行一个整数，表示擦掉某些数后，最后剩下的数列中最多能有多少个数在自己的位置上，即 $A_i=i$ 最多能有多少。 输入输出样例 输入样例 #1 5  1 1 2 5 4  输出样例 #1 3 说明 ### 数据范围及约定 - 对于 $20\\%$ 的数据，$n\\leq 20$； - 对于 $60\\%$ 的数据，$n\\leq 100$； - 对于 $100\\%$ 的数据，$n\\leq 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:software 题目描述 一个软件开发公司同时要开发两个软件，并且要同时交付给用户，现在公司为了尽快完成这一任务，将每个软件划分成 m 个模块，由公司里的技术人员分工完成，每个技术人员完成同一软件的不同模块的所用的天数是相同的，并且是已知的，但完成不同软件的一个模块的时间是不同的，每个技术人员在同一时刻只能做一个模块，一个模块只能由一个人独立完成而不能由多人协同完成。一个技术人员在整个开发期内完成一个模块以后可以接着做任一软件的任一模块。写一个程序，求出公司最早能在什么时候交付软件。 输入输出格式 输入格式 输入文件第一行包含两个由空格隔开的整数 n 和 m，其中 $1 \\le n \\le 100，1 \\le m \\le 100$，接下来的 n 行每行包含两个用空格隔开的整数 $d_1$ 和 $d_2，d_1$ 表示该技术人员完成第一个软件中的一个模块所需的天数，$d_2$ 表示该技术人员完成第二个软件中的一个模块所需的天数，其中 $1 \\le d_1,d_2 \\le 100$。 输出格式 输出文件仅有一行包含一个整数 d，表示公司最早能于 d 天后交付软件。 输入输出样例 输入样例 #1 3 20  1 1  2 4  1 6  输出样例 #1 18 说明 ### 样例解释 最快的方案是第一个技术人员完成第二个软件的 $18$ 个模块，用时 $18$ 天，第三个技术人员完成第一个软件的 $18$ 个模块，用时 $18$ 天，其余的模块由第二个技术人员完成，用时 $12$ 天，做完所有模块需要 $18$ 天。如果第一个技术人员完成第二个软件的 $17$ 个模块，第三个技术人员完成第一个软件的 $17$ 个模块，其余的模块由第二个技术人员完成，需要用时 $18$ 天，做完所有模块仍然需要 $18$ 天，所以少于 $18$ 天不可能做完所有模块。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:黑匣子 题目描述 Black Box 是一种原始的数据库。它可以储存一个整数数组，还有一个特别的变量 i。最开始的时候 Black Box 是空的．而 $i=0$。这个 Black Box 要处理一串命令。 命令只有两种： - `ADD(x)`：把 x 元素放进 Black Box; - `GET`：i 加 1，然后输出 Black Box 中第 i 小的数。 记住：第 i 小的数，就是 Black Box 里的数的按从小到大的顺序排序后的第 i 个元素。 我们来演示一下一个有11个命令的命令串。（如下表所示） | 序号 | 操作 | i | 数据库 | 输出 | | :--: | :--- | :------: | ------ | :----: | |   1  | `ADD(3)`     |   0    |  3  | / | |   2  | `GET` |   1    |  3  | 3 | |   3  |`ADD(1)`|1|$1,3$|/| |   4  |`GET`|2|$1,3|3$| |   5  |`ADD(-4)`|2|$-4,1,3$|/| |   6  |`ADD(2)`|2|$-4,1,2,3$|/| |   7  |`ADD(8)`|2|$-4,1,2,3,8$|/| |   8  |`ADD(-1000)`|2|$-1000,-4,1,2,3,8$|/| |   9  |`GET`|3|$-1000,-4,1,2,3,8|1$| |  10  |`GET`|4|$-1000,-4,1,2,3,8|2$| |  11  |`ADD(2)`|4|$-1000,-4,1,2,2,3,8$|/| 现在要求找出对于给定的命令串的最好的处理方法。`ADD` 命令共有 m 个，`GET` 命令共有 n 个。现在用两个整数数组来表示命令串： 1. $a_1,a_2,\\cdots,a_m$：一串将要被放进 Black Box 的元素。例如上面的例子中 $a=[3,1,-4,2,8,-1000,2]$。 2. $u_1,u_2,\\cdots,u_n$：表示第 $u_i$ 个元素被放进了 Black Box 里后就出现一个 `GET` 命令。例如上面的例子中 $u=[1,2,6,6]$ 。输入数据不用判错。 输入输出格式 输入格式 第一行两个整数 m 和 n，表示元素的个数和 `GET` 命令的个数。 第二行共 m 个整数，从左至右第 i 个整数为 $a_i$，用空格隔开。 第三行共 n 个整数，从左至右第 i 个整数为 $u_i$，用空格隔开。 输出格式 输出 Black Box 根据命令串所得出的输出串，一个数字一行。  输入输出样例 输入样例 #1 7 4 3 1 -4 2 8 -1000 2 1 2 6 6 输出样例 #1 3 3 1 2 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，$1 \\leq n,m \\leq 10^{4}$。 - 对于 $50\\%$ 的数据，$1 \\leq n,m \\leq 10^{5}$。 - 对于 $100\\%$ 的数据，$1 \\leq n,m \\leq 2 \\times 10^{5},|a_i| \\leq 2 \\times 10^{9}$，保证 u 序列单调不降。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:现在乐斗有活动了！每打一个人可以获得 5 倍经验！absi2011 却无奈的看着那一些比他等级高的好友，想着能否把他们干掉。干掉能拿不少经验的。 题目描述 现在 absi2011 拿出了 x 个迷你装药物（嗑药打人可耻…），准备开始与那些人打了。 由于迷你装药物每个只能用一次，所以 absi2011 要谨慎的使用这些药。悲剧的是，用药量没达到最少打败该人所需的属性药药量，则打这个人必输。例如他用 2 个药去打别人，别人却表明 3 个药才能打过，那么相当于你输了并且这两个属性药浪费了。 现在有 n 个好友，给定失败时可获得的经验、胜利时可获得的经验，打败他至少需要的药量。 要求求出最大经验 s，输出 $5s$。 输入输出格式 输入格式 第一行两个数，n 和 x。 后面 n 行每行三个数，分别表示失败时获得的经验 $\\mathit{lose}_i$，胜利时获得的经验 $\\mathit{win}_i$ 和打过要至少使用的药数量 $\\mathit{use}_i$。 输出格式 一个整数，最多获得的经验的五倍。 输入输出样例 输入样例 #1 6 8 21 52 1 21 70 5 21 48 2 14 38 3 14 36 1 14 36 2 输出样例 #1 1060 说明 **【Hint】** 五倍经验活动的时候，absi2011 总是吃体力药水而不是这种属性药。 **【数据范围】** - 对于 $10\\%$ 的数据，保证 $x=0$。 - 对于 $30\\%$ 的数据，保证 $0\\le n\\le 10，0\\le x\\le 20$。 - 对于 $60\\%$ 的数据，保证 $0\\le n,x\\le 100$， $10<lose_i,win_i\\le 100，0\\le use_i\\le 5$。 - 对于 $100\\%$ 的数据，保证 $0\\le n,x\\le 10^3，0<lose_i\\le win_i\\le 10^6，0\\le use_i\\le 10^3$。 **【题目来源】** fight.pet.qq.com absi2011 授权题目"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 现在各大 oj 上有 n 个比赛，每个比赛的开始、结束的时间点是知道的。 yyy 认为，参加越多的比赛，noip 就能考的越好（假的）。 所以，他想知道他最多能参加几个比赛。 由于 yyy 是蒟蒻，如果要参加一个比赛必须善始善终，而且不能同时参加 2 个及以上的比赛。 输入输出格式 输入格式 第一行是一个整数 n，接下来 n 行每行是 2 个整数 $a_{i},b_{i}\\ (a_{i}<b_{i})$，表示比赛开始、结束的时间。 输出格式 一个整数最多参加的比赛数目。 输入输出样例 输入样例 #1 3 0 2 2 4 1 3 输出样例 #1 2 说明 - 对于 $20\\%$ 的数据，$n \\le 10$； - 对于 $50\\%$ 的数据，$n \\le 10^3$； - 对于 $70\\%$ 的数据，$n \\le 10^{5}$； - 对于 $100\\%$ 的数据，$1\\le n \\le 10^{6}，0 \\le a_{i} < b_{i} \\le 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:关灯 题目描述 在某条道路上，有 n 盏灯排成一排，它们有的是开着的，有的是关着的。 由于天马上就要亮了，上级给了你一个任务：把所有的灯都关掉。 只不过，这些灯都比较智能，不会被轻易关掉。它们的开或关遵循如下规则： - 每一步只能开或关一盏灯。 - 编号为 1 的灯可以随意开或关。 - 如果编号为 $1, 2, \\cdots,k-1$ 的灯都关上了了，并且编号为 k 的灯在开着，我们可以随意开或关第 $k+1$ 盏灯。 在关灯之前，请你计算：至少要多少步才能关上所有灯？ 输入输出格式 输入格式 第 1 行一个整数 n，表示灯的个数。 第 2 行有 n 个整数，如果第 i 个整数 $O_i=0$，表示第 i 个盏灯初始的时候是关着的；如果 $O_i=1$，表示第 i 盏灯初始的时候是开着的。 输出格式 共一行一个整数，表示最少需要多少步才能关上所有灯。 输入输出样例 输入样例 #1 4  1 0 1 0 输出样例 #1 6 说明 【输出解释】 - 初始状态 $1010$； - 第 1 步 $1110$； - 第 2 步 $0110$； - 第 3 步 $0100$； - 第 4 步 $1100$； - 第 5 步 $1000$； - 第 6 步 $0000$。 ### 数据范围及约定 - 对于 $40\\%$ 的数据，$n \\le 30$； - 对于 $70\\%$ 的数据，$n \\le 300$； - 对于 $100\\%$ 的数据，$n \\le 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:跑步 题目描述 路人甲准备跑 n 圈来锻炼自己的身体，他准备分多次（$\\gt1$）跑完，每次都跑正整数圈，然后休息下再继续跑。 为了有效地提高自己的体能，他决定每次跑的圈数都必须比上次跑的多。 可以假设他刚开始跑了 0 圈，那么请问他可以有多少种跑完这 n 圈的方案？ 输入输出格式 输入格式 一行一个整数，代表 n。 输出格式 一个整数表示跑完这 n 圈的方案数。 输入输出样例 输入样例 #1 212 输出样例 #1 995645335 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $5\\le n\\le 500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最长路 题目描述 设 G 为有 n 个顶点的带权有向无环图，G 中各顶点的编号为 1 到 n，请设计算法，计算图 G 中 $1, n$ 间的最长路径。 输入输出格式 输入格式 输入的第一行有两个整数，分别代表图的点数 n 和边数 m。 第 2 到第 $(m + 1)$ 行，每行 3 个整数 $u, v, w（u<v$），代表存在一条从 u 到  v 边权为 w 的边。 输出格式 输出一行一个整数，代表 1 到 n 的最长路。 若 1 无法到达 n，请输出 $-1$。 输入输出样例 输入样例 #1 2 1 1 2 1 输出样例 #1 1 说明 **【数据规模与约定】** - 对于 $20\\%$的数据，$n \\leq 100，m \\leq 10^3$。 - 对于 $40\\%$ 的数据，$n \\leq 10^3，m \\leq 10^{4}$。 - 对于 $100\\%$ 的数据，$1 \\leq n \\leq 1500，0 \\leq m \\leq 5 \\times 10^4，1 \\leq u, v \\leq n，-10^5 \\leq w \\leq 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:单词分类 题目描述 Oliver 为了学好英语决定苦背单词，但很快他发现要直接记住杂乱无章的单词非常困难，他决定对单词进行分类。 两个单词可以分为一类当且仅当组成这两个单词的各个字母的数量均相等。 例如 $\\verb!AABAC!$，它和 $\\verb!CBAAA!$ 就可以归为一类，而和 $\\verb!AAABB!$ 就不是一类。 现在Oliver有 N 个单词，所有单词均由大写字母组成，每个单词的长度不超过 $100$。你要告诉 Oliver 这些单词会被分成几类。 输入输出格式 输入格式 输入文件的第一行为单词个数 N，以下 N 行每行为一个单词。 输出格式 输出文件仅包含一个数，表示这 N 个单词分成的类数。 输入输出样例 输入样例 #1 3  AABAC  CBAAA  AAABB 输出样例 #1 2 说明 - 对于 $70\\%$ 的数据满足 $1\\le N \\le 100$； - 对于 $100\\%$ 的数据满足 $1\\le N \\le 10000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:过河问题 题目描述 有一个大晴天，Oliver 与同学们一共 N 人出游，他们走到一条河的东岸边，想要过河到西岸。而东岸边有一条小船。  船太小了，一次只能乘坐两人。每个人都有一个渡河时间 T，船划到对岸的时间等于船上渡河时间较长的人所用时间。  现在已知 N 个人的渡河时间 T，Oliver 想要你告诉他，他们最少要花费多少时间，才能使所有人都过河。  注意，只有船在东岸（西岸）的人才能坐上船划到对岸。 输入输出格式 输入格式 输入文件第一行为人数 N，以下有 N 行，每行一个数。  第 $i+1$ 行的数为第 i 个人的渡河时间。 输出格式 输出文件仅包含一个数，表示所有人都渡过河的最少渡河时间。 输入输出样例 输入样例 #1 4 6 7 10 15 输出样例 #1 42 说明 ### 数据范围 对于 $40\\%$ 的数据满足 $N\\le8$。  对于 $100\\%$ 的数据满足 $N\\le100000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:集合分组【征集 spj】 题目描述 现有 k 个整数集合，第 i 个集合有 $s_i$ 个元素。 集合中的数都为正数，且不大于 n。现定义集合 A 与集合 B 相似，当且仅当满足如下条件之一： 1. B 与 A 相似； 2. 将 A 集合删去一个元素，或更改一个元素的值之后 A 集合与 B 集合相等。 现要将 K 个集合分成至多 M 组（$M>N$），使得每一组内的集合互不相似。要求你给出一种合法的方案。如果无解请输出 `impossible`。 输入输出格式 输入格式 输入文件第一行有三个数 $n, k, m$，意义如题目所述。 接下来有 k 行，每行第一数 $s_i$ 表示序列长度。之后 $s_i$ 个数为些集合的元素。 输出格式 如果存在合法方案，输出 k 个数，表示每个集合（按输入顺序）被分到的组的编号（$1\\sim m$）。否则，若不存在合法方案则输出 `impossible`。 输入输出样例 输入样例 #1 8 20 12  5 1 3 5 6 4  5 1 3 5 6 3  4 5 6 3 3  4 5 6 3 4  4 4 6 5 8  4 7 7 7 7  3 7 7 7  2 2 2  3 2 2 7  3 1 2 3  3 1 2 4  10 1 2 3 4 5 6 7 8 7 6  10 8 7 6 5 4 3 2 1 2 1  20 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 3 5 7  5 4 6 4 6 4  5 6 4 6 4 6  6 6 6 6 6 6 6  3 6 6 6  1 1  1 2 输出样例 #1 2  1  9  1  6  2  4  5  3  7  8  5  4  8 7  9  1  1  2 3 说明 ### 数据范围及约定 - 对于 $30\\%$ 的数据满足 $n \\le 10，m \\le 2，k \\le 10$； - 对于 $100\\%$ 的数据满足 $1\\le n \\le 100，1\\le m \\le 100，1\\le k \\le 50000，1\\le s_i \\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最短路 题目描述 给定一个包含 N 个点，M 条边的无向图，每条边的边权均为 1。 再给定 K 个三元组 $(A,B,C)$，表示从 A 点走到 B 点后不能往 C 点走。注意三元组是有序的，如可以从 B 点走到 A 点再走到 C。 现在你要在 K 个三元组的限制下，找出 1 号点到 N 号点的最短路径，并输出任意一条合法路径，会有 Check 检查你的输出。 输入输出格式 输入格式 输入文件第一行有三个数 N，M，K，意义如题目所述。 接下来 M 行每行两个数 A，B，表示 A，B 间有一条边。 再下面 K 行，每行三个数 $(A,B,C)$ 描述一个三元组。 输出格式 输出文件共两行数，第一行一个数 S 表示最短路径长度。 。 第二行 $S+1$ 个数，表示从 1 到 N 所经过的节点。 。 输入输出样例 输入样例 #1 4 4 2 1 2 2 3 3 4 1 3 1 2 3 1 3 4 输出样例 #1 4  1 3 2 3 4  说明 对于 $40\\%$ 的数据满足 $N \\le 10，M \\le 20，K \\le 5$。 对于 $100\\%$ 的数据满足 $N \\le 3000，M \\le 20000，K \\le 100000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:区间运算 题目描述 区间运算是数学的一个领域。在区间运算中，常量和变量并不表示为一个单独、精确的值，而是表示为一个有着上界和下界的区间或范围。在普通的运算中，一个数量可以表示为数轴上的一个点；而在区间运算中，一个数量表示数轴上的一段，例如 $[3,5]$ 表示数轴上从 3 到 5 的一段。当精确的数值表示为区间时，上界与下界是相同的，如 5 表示为区间即为 $[5,5]$。 两个区间的运算，是指一个区间中的每个点与另一个区间中的每个点所做的运算，通过运算所得的所有点的集合即为运算的结果。例如，$[3,5]+[-10,1]=[-7,6]$。你的任务是写一个可以根据单行表达式进行取相反数、加、减、乘、除等基本的区间运算的程序。下面是一些运算的例子： - 取相反数：$-[-3,5]=[-5,3]$； - 加法：$[3,5]+[-10,1]=[-7,6]$； - 减法：$[3,5]-[-10,1]=[2,15]$； - 乘法：$[3,5]\\times [-10,1]=[-50,5]$； - 除法：$[3,5]\\div [-10,-0.1]=[-50,-0.3]$。 输入输出格式 输入格式 程序的输入包含一行或多行区间运算的中缀表达式，每个区间都表示为 $[\\min,\\max]$，表达式中包括括号、负号（$\\verb!-!$）、加号（$\\verb!+!$）、减号（$\\verb!-!$）、乘号（$\\verb!*!$）和除号（$\\verb!/!$），括号可能是嵌套的。每一行中都有可能有空格，但空格不会在表示区间的括号 $[\\min,\\max]$ 中间或负号后出现。程序不需要处理科学记数法，如 $\\verb!2E6!=2\\times 10^6$。每一行都不超过 $80$ 个字符。运算采用标准的优先级规则。下面按优先级递减的顺序给出各个算符： - $\\verb!(!,\\verb!)!$ 括号； - $\\verb!-!$ 取相反数； - $\\verb!*!,\\verb!/!$，乘法和除法，同级运算按从左到右的顺序； - $\\verb!+!,\\verb!-!$，加法和减法，同级运算按从左到右的顺序。 输出格式 对于输入文件中每一行的表达式，以 $[\\min,\\max]$（均保留 3 位小数）的形式输出运算结果。每个结果占一行。结果中不应有空格。在运算中，如果将一个包含 0 的区间用作除数，则输出 `Division by zero`。 输入输出样例 输入样例 #1 -[-3,5]  [3,5]+[-10,1]  [3,5]-[-10,1]  [3,5]*[-10,1]  (([3,5]/[-10,-0.1])/-[2,2])  输出样例 #1 [-5.000,3.000]  [-7.000,6.000]  [2.000,15.000]  [-50.000,5.000]  [0.150,25.000]"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:拯救小 tim 题目描述 小 tim 在游乐场，有一天终于逃了出来！但是不小心又被游乐场的工作人员发现了…所以你的任务是安全地把小 tim 护送回家。但是，A 市复杂的交通状况给你出了一大难题。  A 市一共有 n 个路口，m 条单行马路。但是，每条马路都只有一段时间是开放的。为了安全，你必须选择一条护送路线，使得小 tim 在路上的时间最短，即到家的时刻减去离开游乐场的时刻最短。 输入输出格式 输入格式 第一行 4 个数，分别是 $n,m,s,t$。基地在路口 s，码头在路口 t。 接下来 m 行每行 5 个数 $x,y,b,e,c$ 表示一条 x 路口到 y 路口的单行线，在 b 时刻到 e 时刻之间开放，需要 c 的时间通过这条路（必须保证行进在路中间时，路一直开放，否则小 tim 会被捉住）。两个路口之间可能会有多条道路。一开始的时刻是 0（当然，你可以不用马上出发，在基地多呆一段时间）。 如果不存在任何一种方案使得小 tim 能成功到达码头，输出 `Impossible`。 输出格式 一行，为小 tim 在路上停留的最短时间。 输入输出样例 输入样例 #1 4 5 1 4   1 2 0 1 1   1 2 0 1 2   1 3 1 3 2   2 4 3 4 1   3 4 3 4 1  输出样例 #1 3 说明 **【样例解释 #1】** 最优方案应该是，在 1 号点停留至时刻 1，然后走到 3 号点，然后走到 4 号点。到达时刻为时刻 4。tim 在路上的时间为 $4-1=3$。 ### 数据范围 对于所有测试数据： - $2\\leqslant n\\leqslant100，0\\leqslant m\\leqslant1000，1\\leqslant s,t\\leqslant n，s\\not=t$； - $1\\leqslant x,y\\leqslant n，0\\leqslant b,e,c\\leqslant10000，b<e$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数的序号 题目描述 我们可以用下面的方案给二叉树标号： - 空树的序号为 0。 - 只有一个根结点的树序号为 1。 - 所有包含 m 个结点的二叉树的序号一定比任何一个包含 $m+1$ 个结点的二叉树的序号小。 - 对于任何一棵二叉树，设其左子树序号为 L，右子树序号为 R，且它有 m 个结点，若它的序号为 n，则所有序号大于 n 的 m 个结点的二叉树，要么左子树序号大于 L，要么左子树序号等于 L 且右子树序号大于 R。 例如，编号为 0 到 5 的六棵树形状如下： ```plain 0   1   2       3   4       5      X   X       X   X       X          \\     /     \\       \\           X   X       X       X                        \\     /                         X   X ``` 你的任务就是对给定的序号，输出该序号所对应的二叉树。 输入输出格式 输入格式 **本题有多组数据。** 输入的每行有一个非负整数 n，$n=0$ 表示输入结束，此时**不需要**输出 $n=0$ 的空树。 输出格式 对于每组数据，输出一行，代表序号 n 对应的树。 一棵二叉树的表示为 `(L)X(R)`，其中 $L,R$ 分别是左子树和右子树的表示，如一侧为空则省略，例如只有左子树则表示为 `(L)X`。 输入输出样例 输入样例 #1 1     20   31117532     0  输出样例 #1 X ((X)X(X))X (X(X(((X(X))X(X))X(X))))X(((X((X)X((X)X)))X)X) 说明 ### 数据规模与约定 对于所有测试点，保证 $1\\le n\\le 5\\times10^8$，数据组数不超过 $50$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:蠕虫游戏 题目描述 蠕虫是一个古老的电脑游戏，它有许多版本。但所有版本都有一个共同的规则：操纵一条蠕虫在屏幕上转圈，并试着去避免撞到自己或障碍物。 这里我们将模拟一个简单的版本。游戏将在 $50 \\times 50$ 的棋盘上进行，棋盘的左上角为 $(1,1)$，蠕虫在初始时是一串 $20$ 个相连的方格。所谓相连是指方格在水平或垂直方向上相接。蠕虫开始时是水平地伸展开的，从 $(25,11)$ 到 $(25,30)$。其中 $(25,30)$ 是它的头。蠕虫只能向东 $\\verb!E!$、西 $\\verb!W!$、南 $\\verb!S!$、北 $\\verb!N!$ 四个方向移动，但不能向自己移动，因此在开始时向西 $\\verb!W!$ 是不允许的。每次移动时，蠕虫向给定的方向移动，一次只移一格，并且保持它的长度不变。因此只有蠕虫的头和尾所占据的方格在移动一步后被改变。注意：蠕虫的头能移动到虫尾刚刚让出的空格。 你将被给定一系列移动指令并模拟虫的移动，直到蠕虫撞上了自己，或者蠕虫越出了棋盘，或者蠕虫成功地完成了这些指令。在前两种情况下你应当忽略剩下的指令。 输入输出格式 输入格式 每个输入文件包含了多组数据，每个数据占两行。 第一行是一个整数 $n\\ (n<100)$，表示移动指令的指令数（以 $n=0$ 表示输入结束）； 第二行包括了 n 个字符，只有可能是 $\\verb!ESWN!$ 中的一种，字符之间没有空格，表示移动的指令。 输出格式 每个数据输出一行，格式为以下 3 种中的一种：  - $\\texttt{The worm ran into itself on move \\textrm{\\it m}.}$ - $\\texttt{The worm ran off the board on move \\textrm{\\it m}.}$ - $\\texttt{The worm successfully made all \\textrm{\\it m} moves.}$ 其中，m 是你要决定输出的步数。 输入输出样例 输入样例 #1 18  NWWWWWWWWWWSESSSWS  20  SSSWWNENNNNNWWWWSSSS  30  EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE  13  SWWWWWWWWWNEE  0 输出样例 #1 The worm successfully made all 18 moves.  The worm ran into itself on move 9.  The worm ran off the board on move 21.  The worm successfully made all 13 moves."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:忠诚 题目描述 老管家是一个聪明能干的人。他为财主工作了整整  $10$ 年。财主为了让自已账目更加清楚，要求管家每天记  k 次账。由于管家聪明能干，因而管家总是让财主十分满意。但是由于一些人的挑拨，财主还是对管家产生了怀疑。于是他决定用一种特别的方法来判断管家的忠诚，他把每次的账目按  $1, 2, 3 \\ldots$ 编号，然后不定时的问管家问题，问题是这样的：在   a 到  b 号账中最少的一笔是多少？为了让管家没时间作假，他总是一次问多个问题。 输入输出格式 输入格式 输入中第一行有两个数  $m, n$，表示有  m 笔账  n 表示有  n 个问题。 第二行为  m 个数，分别是账目的钱数。 后面  n 行分别是  n 个问题，每行有   2 个数字说明开始结束的账目编号。 输出格式 在一行中输出每个问题的答案，以一个空格分割。 输入输出样例 输入样例 #1 10 3 1 2 3 4 5 6 7 8 9 10 2 7 3 9 1 10 输出样例 #1 2 3 1 说明 对于 $100\\%$ 的数据，$m \\leq 10^5，n \\leq 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:棋盘染色 题目描述 给定一个 $N \\times M$ 的网格，每个格子可以染成黑色或者白色，要求所有黑色格子连通，所有白色格子连通，并且至少有一个黑色格子贴边，至少有一个白色格子贴边。问有多少种染色方法？  输入输出格式 输入格式 第一行有两个正整数 $N, M$。 输出格式 只有一个正整数表示答案。 输入输出样例 输入样例 #1 1 2    输出样例 #1 2    输入样例 #2 2 3 输出样例 #2 30 说明 对于 $100 \\%$ 的数据：$1 \\le N \\le 7，1 \\le M \\le 8$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:电影投票 题目描述 有一个投票系统可以给电影评分，规定每票都必须投 1 到 $10$ 的整数。现在希望投尽量少的票让一个电影的平均分数低于某个值。 输入输出格式 输入格式 多组数据，对于每组数据只有一行，有两个带 1 位小数的实数 X 、 Y 和一个正整数 N，表示一部电影的平均得分保留 1 位小数后的结果和 XP 期望的平均得分保留一位小数后的结果，并且该电影已经被投了 N 次票了。保证 Y 小于等于 X。 输出格式 对于每组数据，输出一个正整数 $\\mathit{ans}$，表示最坏情况下只要 XP 投 $\\mathit{ans}$ 张票，一定能让这部电影的平均得分保留一位小数后小于等于 Y。 输入输出样例 输入样例 #1 9.5 2.0 12   4.4 3.4 12478     10 3.4 23577 输出样例 #1 86     5094     63033 说明 ### 数据范围及约定 - 对于 $30\\%$ 的数据，$1\\le N \\le 100，1\\le T \\le 100$； - 对于 $100\\%$ 的数据，$1\\le T \\le 10^4，X,Y\\in[1,10]，1\\le N \\le 10^6$。 ### 注意事项 保留一位小数采取四舍五入保留法。实数可能会有精度误差。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:公共子序列 题目描述 求 3 个字符序列有多少个不同的公共子序列，不包括空序列。 输入输出格式 输入格式 第一行为一个正整数 n，表示 3 个序列的长度。 接下来 3 行，每行一个无空格长度为 n 的字符序列。只包含小写字母 `a` 到 `z`。 输出格式 一行一个正整数 $ans$，对 $10^8$ 取模。 输入输出样例 输入样例 #1 4    aabb    abab    baba 输出样例 #1 5 说明 #### 样例 1解释 对于唯一的一个样例，有 5 种子序列，分别是 `a`，`ab`，`aa`，`bb`，`b`。 #### 数据范围与约定 - 对于 $30\\%$ 的数据，保证 $1 \\le n \\le 10$； - 对于 $70\\%$ 的数据，保证 $1 \\le n \\le 50$； - 对于 $100\\%$ 的数据，保证 $1 \\le n \\le 150$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:魔法指纹 题目描述 对于任意一个至少两位的正整数 n，按如下方式定义 $\\mathrm{magic}(n)$：将 n 按十进制顺序写下来，依次对相邻两个数写下差的绝对值。这样，得到了一个新数，去掉前导 0，则定义为 $\\mathrm{magic}(n)$。特别地，若 n 为一位数，则 $mag_ic(n)=n$。 例如：$\\mathrm{magic}(5913)=482，\\mathrm{magic}(1198)=081=81，\\mathrm{magic}(666)=00=0$。 对任意一个数 n，反复迭代计算 $\\mathrm{magic}$ 值直到 n 变成一个一位数，可以得到一个序列 $[n,\\mathrm{magic}(n),\\mathrm{magic}(\\mathrm{magic}(n)),\\cdots]$。最后的这个值称为数 n 的 $\\mathrm{magic}$ 指纹。 例如，对于 $n=5913$，我们得到序列：$[5913,482,46,2]$。所以 $5913$ 的 $\\mathrm{magic}$ 指纹为 2。 若一个数的 $\\mathrm{magic}$ 指纹为 7，则认为这个数是个幸运数。 现在，给定 $A,B$，计算出 $[A,B]$ 中有多少个数是幸运数。 输入输出格式 输入格式 输入两行，每行一个数。第一行是 A，第二行表示 B。 输出格式 输出 $[A,B]$ 中有多少个数是幸运数。 输入输出样例 输入样例 #1 1 9 输出样例 #1 1 说明 ### 数据范围及约定 - 对于 $30\\%$ 数据，$B \\le 10^4$。 - 对于 $100\\%$ 数据，$0<A \\le B \\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[COI2007] Patrik 音乐会的等待 题目描述 n 个人正在排队进入一个音乐会。人们等得很无聊，于是他们开始转来转去，想在队伍里寻找自己的熟人。 队列中任意两个人 a 和 b，如果他们是相邻或他们之间没有人比 a 或 b 高，那么他们是可以互相看得见的。 写一个程序计算出有多少对人可以互相看见。 输入输出格式 输入格式 输入的第一行包含一个整数 n，表示队伍中共有 n 个人。 接下来的 n 行中，每行包含一个整数，表示人的高度，以毫微米(等于 $10^{-9}$ 米)为单位，这些高度分别表示队伍中人的身高。 输出格式 输出仅有一行，包含一个数 s，表示队伍中共有 s 对人可以互相看见。 输入输出样例 输入样例 #1 7  2  4  1  2  2  5  1 输出样例 #1 10 说明 #### 数据规模与约定 对于全部的测试点，保证 $1\\le$ 每个人的高度 $< 2^{31}，1 \\le n \\le 5\\times 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:进击的奶牛 题目描述 Farmer John 建造了一个有 N（$2 \\leq N \\leq 10 ^ 5$) 个隔间的牛棚，这些隔间分布在一条直线上，坐标是 $x _ 1, x _ 2, \\cdots, x _ N（0 \\leq x _ i \\leq 10 ^ 9$）。 他的 C（$2 \\leq C \\leq N$）头牛不满于隔间的位置分布，它们为牛棚里其他的牛的存在而愤怒。为了防止牛之间的互相打斗，Farmer John 想把这些牛安置在指定的隔间，所有牛中相邻两头的最近距离越大越好。那么，这个最大的最近距离是多少呢？ 输入输出格式 输入格式 第 1 行：两个用空格隔开的数字 N 和 C。 第 $2 \\sim N+1$ 行：每行一个整数，表示每个隔间的坐标。 输出格式 输出只有一行，即相邻两头牛最大的最近距离。 输入输出样例 输入样例 #1 5 3 1 2 8 4 9 输出样例 #1 3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:奶牛能在一格草地上可能存在的四个相邻的格子移动，花费 $1$ 个单位时间。从装置的一个结点到另一个结点不花时间。 题目描述 This past fall, Farmer John took the cows to visit a corn maze. But this wasn't just any corn maze: it featured several gravity-powered teleporter slides, which cause cows to teleport instantly from one point in the maze to another. The slides work in both directions: a cow can slide from the slide's start to the end instantly, or from the end to the start. If a cow steps on a space that hosts either end of a slide, she must use the slide. The outside of the corn maze is entirely corn except for a single exit. The maze can be represented by an N x M (2 <= N <= 300; 2 <= M <= 300) grid. Each grid element contains one of these items: \\* Corn (corn grid elements are impassable)  \\* Grass (easy to pass through!)  \\* A slide endpoint (which will transport a cow to the other endpoint)  \\* The exit A cow can only move from one space to the next if they are adjacent and neither contains corn. Each grassy space has four potential neighbors to which a cow can travel. It takes 1 unit of time to move from a grassy space to an adjacent space; it takes 0 units of time to move from one slide endpoint to the other. Corn-filled spaces are denoted with an octothorpe (#). Grassy spaces are denoted with a period (.). Pairs of slide endpoints are denoted with the same uppercase letter (A-Z), and no two different slides have endpoints denoted with the same letter. The exit is denoted with the equals sign (=). Bessie got lost. She knows where she is on the grid, and marked her current grassy space with the 'at' symbol (@). What is the minimum time she needs to move to the exit space? 输入输出格式 输入格式 第一行：两个用空格隔开的整数 N 和 M。 第 $2\\sim N+1$ 行：第 $i+1$ 行描述了迷宫中的第 i 行的情况（共有M个字符，每个字符中间没有空格）。 输出格式 一个整数，表示起点到出口所需的最短时间。 输入输出样例 输入样例 #1 5 6 ###=## #.W.## #.#### #.@W## ###### 输出样例 #1 3 说明 例如以下矩阵，$N=5,M=6$。 ```plain ###=## #.W.## #.#### #.@W## ###### ``` 唯一的一个装置的结点用大写字母 $\\tt{W}$ 表示。 最优方案为：先向右走到装置的结点，花费一个单位时间，再到装置的另一个结点上，花费 0 个单位时间，然后再向右走一个，再向上走一个，到达出口处，总共花费了 3 个单位时间。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:猴子选大王数据再加强版 题目描述 已知一群猴子的数量在 $a \\sim b$ 之间（$a \\leq b$），同时又知每次 m 只猴子出圈（注意不是隔！！）。已知，求所有出圈可能中当猴王可能性最大的猴子的当大王的次数以及编号，若有多只，输出所有的猴子编号，中间用空格隔开。 输入输出格式 输入格式 输入共一行三个数 $a, b, m$，如题。 输出格式 输出共两行。 第一行为在 $a \\sim b$ 之间隔 m 个出圈可能当大王的编号的总数的最大值。 第二行为若干个数，即猴子的编号。 输入输出样例 输入样例 #1 1 10 3 输出样例 #1 4  1 说明 ### 样例解释 | $n=$ | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | $10$ | | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | | **大王编号** | 1 | 2 | 2 | 1 | 4 | 1 | 4 | 7 | 1 | 4 | 因此最多的是 1 号，共做了 4 回大王。 ### 数据规模与约定 对于 $100\\%$ 的数据，保证 $1 \\leq a \\leq b \\leq 10 ^ 6，m \\leq 3000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO3.4] 美国血统 American Heritage 题目描述 农夫约翰非常认真地对待他的奶牛们的血统。然而他不是一个真正优秀的记帐员。他把他的奶牛 们的家谱作成二叉树，并且把二叉树以更线性的“树的中序遍历”和“树的前序遍历”的符号加以记录而 不是用图形的方法。 你的任务是在被给予奶牛家谱的“树中序遍历”和“树前序遍历”的符号后，创建奶牛家谱的“树的 后序遍历”的符号。每一头奶牛的姓名被译为一个唯一的字母。（你可能已经知道你可以在知道树的两 种遍历以后可以经常地重建这棵树。）显然，这里的树不会有多于 $26$ 个的顶点。 这是在样例输入和样例输出中的树的图形表达方式："}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO3.2] 香甜的黄油 Sweet Butter 题目描述 Farmer John 发现了做出全威斯康辛州最甜的黄油的方法：糖。 把糖放在一片牧场上，他知道 N 只奶牛会过来舔它，这样就能做出能卖好价钱的超甜黄油。当然，他将付出额外的费用在奶牛上。 Farmer John 很狡猾。像以前的 Pavlov，他知道他可以训练这些奶牛，让它们在听到铃声时去一个特定的牧场。他打算将糖放在那里然后下午发出铃声，以至他可以在晚上挤奶。 Farmer John 知道每只奶牛都在各自喜欢的牧场（一个牧场不一定只有一头牛）。给出各头牛在的牧场和牧场间的路线，找出使所有牛到达的路程和最短的牧场（他将把糖放在那）。 输入输出格式 输入格式 第一行包含三个整数 $N,P,C$，分别表示奶牛数、牧场数和牧场间道路数。 第二行到第 $N+1$ 行，每行一个整数，其中第 i 行的整数表示第 $i-1$ 头奶牛所在的牧场号。 第 $N+2$ 行到第 $N+C+1$ 行，每行包含三个整数 $A,B,D$，表示牧场号为 A 和 B 的两个牧场之间有一条长度为 D 的双向道路相连。 输出格式 输出一行一个整数，表示奶牛必须行走的最小的距离和。 输入输出样例 输入样例 #1 3 4 5 2 3 4 1 2 1 1 3 5 2 3 7 2 4 3 3 4 5 输出样例 #1 8 说明 **数据范围** 对于所有数据，$1 \\le N \\le 500，2 \\le P \\le 800，1 \\le A,B \\le P，1 \\le C \\le 1450，1 \\le D \\le 255$。 --- **样例解释** 作图如下： ```cpp           P2   P1 @--1--@ C1          |          |         5  7  3          |             |     C3        C2 @--5--@           P3    P4 ``` 把糖放在4号牧场最优。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[国家集训队] Crash的数字表格 / JZPTAB 题目描述 今天的数学课上，Crash 小朋友学习了最小公倍数（Least Common Multiple）。对于两个正整数 a 和 b，$\\text{lcm}(a,b)$ 表示能同时整除 a 和 b 的最小正整数。例如，$\\text{lcm}(6, 8) = 24$。 回到家后，Crash 还在想着课上学的东西，为了研究最小公倍数，他画了一张 $ n \\times m$ 的表格。每个格子里写了一个数字，其中第 i 行第 j 列的那个格子里写着数为 $\\text{lcm}(i, j)$。 看着这个表格，Crash 想到了很多可以思考的问题。不过他最想解决的问题却是一个十分简单的问题：这个表格中所有数的和是多少。当 n 和 m 很大时，Crash 就束手无策了，因此他找到了聪明的你用程序帮他解决这个问题。由于最终结果可能会很大，Crash 只想知道表格里所有数的和 $\\bmod 20101009$ 的值。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 在轰炸后，有 y 个关键点，指挥官想知道，它们有没有受到过轰炸，如果有，被炸了几次，最后一次是第几轮。 输入输出格式 输入格式 第一行共四个整数，分别为 $n,m,x,y$。 接下来 x 行，每行四个整数 $x_1,y_1,x_2,y_2$，表示被轰炸的矩形的左上角坐标和右下角坐标（比如 $1,3,7,10$ 就表示被轰炸的地方是从 $(1,3)$ 到 $(7,10)$ 的矩形）。 接下来 y 行，每行两个整数，表示这个关键点的坐标。 输出格式 输出共 y 行，每行第一个字符为 `Y` 或 `N`，表示是否被轰炸；若为 `Y`，在一个空格后为两个整数，表示被炸了几次和最后一次是第几轮。 输入输出样例 输入样例 #1 10 10 2 3 1 1 5 5 5 5 10 10 3 2 5 5 7 1 输出样例 #1 Y 1 1 Y 2 2 N 说明 对于 $100\\%$ 数据，满足 $1\\le n,m\\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:杠杆数 题目描述 如果把一个数的某一位当成支点，且左边的数字到这个点的力矩和等于右边的数字到这个点的力矩和，那么这个数就可以被叫成杠杆数。 比如 $4139$ 就是杠杆数，把 3 当成支点，我们有这样的等式：$4\\times 2+1\\times 1=9\\times 1$。 给定区间 $[x,y]$，求出在 $[x,y]$ 中有几个杠杆数。 输入输出格式 输入格式 两个数，表示 $x,y$。 输出格式 一个输出，表示区间 $[x,y]$ 中杠杆数的个数。 输入输出样例 输入样例 #1 7604 24324 输出样例 #1 897 说明 ### 数据范围及约定 - 对于 $40\\%$ 的数据，$x \\le y \\le x+10^5$； - 对于 $100\\%$ 的数据，$1 \\le x \\le y \\le 10^{18}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 爱与愁大神后院里种了 n 棵樱花树，每棵都有美学值 $C_i(0 \\le C_i \\le 200)$。爱与愁大神在每天上学前都会来赏花。爱与愁大神可是生物学霸，他懂得如何欣赏樱花：一种樱花树看一遍过，一种樱花树最多看 $P_i(0 \\le P_i \\le 100)$ 遍，一种樱花树可以看无数遍。但是看每棵樱花树都有一定的时间 $T_i(0 \\le T_i \\le 100)$。爱与愁大神离去上学的时间只剩下一小会儿了。求解看哪几棵樱花树能使美学值最高且爱与愁大神能准时（或提早）去上学。 输入输出格式 输入格式 共 $n+1$行： 第 1 行：现在时间 $T_s$（几时：几分），去上学的时间 $T_e$（几时：几分），爱与愁大神院子里有几棵樱花树 n。这里的 $T_s，T_e$ 格式为：`hh:mm`，其中 $0 \\leq hh \\leq 23，0 \\leq mm \\leq 59$，且 $hh,mm,n$ 均为正整数。 第 2 行到第 $n+1$ 行，每行三个正整数：看完第 i 棵树的耗费时间 $T_i$，第 i 棵树的美学值 $C_i$，看第 i 棵树的次数 $P_i（P_i=0$ 表示无数次，$P_i$ 是其他数字表示最多可看的次数 $P_i$）。 输出格式 只有一个整数，表示最大美学值。 输入输出样例 输入样例 #1 6:50 7:00 3 2 1 0 3 3 1 4 5 4 输出样例 #1 11 说明 $100\\%$ 数据：$T_e-T_s \\leq 1000$（即开始时间距离结束时间不超过 $1000$ 分钟），$n \\leq 10000$。保证 $T_e,T_s$ 为同一天内的时间。 样例解释：赏第一棵樱花树一次，赏第三棵樱花树 2 次。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:速算游戏 题目描述 jyx 和 cyy 打赌，比谁 $24$ 点算得快，算得慢的那个人请客。$24$ 点的规则是这样的：给定 4 个 $1\\sim 9$ 的整数，用括号改变运算顺序，通过加、减、乘、除中的一系列运算，得到整数 $24$。 注意所有中间结果必须是整数（例如 $(2\\times 2)/4$ 是允许的，而 $2\\times (2/4)$ 是不允许的）。 为了赢得这个比赛，请写一个程序帮助我作弊，快速地计算出 $24$ 点。 输入输出格式 输入格式 一行 4 个整数，为给定的 4 个数字。输入数据保证有解。 输出格式 一行，以字符串的形式输出结果。注意将每一步的运算的括号补齐（例如 $(3+5)+6$ 和 $3\\times(5+6)$）。如果有多种解答，输出字典顺序最小的一个。 输入输出样例 输入样例 #1 2 3 5 7  输出样例 #1 (((3*5)+2)+7)"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:素数密度 题目描述 给定区间 $[L,R]（1\\leq L\\leq R < 2^{31}，R-L\\leq 10^6$），请计算区间中素数的个数。 输入输出格式 输入格式 第一行，两个正整数 L 和 R。 输出格式 一行，一个整数，表示区间中素数的个数。 输入输出样例 输入样例 #1 2 11 输出样例 #1 5"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数页码 题目描述 一本书的页码是从 $1\\sim n$ 编号的连续整数：$1,2,3,\\cdots,n$。请你求出全部页码中所有单个数字的和，例如第 $123$ 页，它的和就是 $ 1+2+3=6$。 输入输出格式 输入格式 一行一个整数 n。 输出格式 一行，代表所有单个数字的和。 输入输出样例 输入样例 #1 3456789 输出样例 #1 96342015  说明 $1\\le n\\le 10^9$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:单人纸牌 题目描述 单人纸牌游戏，共 $36$ 张牌分成 9 叠，每叠 4 张牌面向上。每次，游戏者可以从某两个不同的牌堆最顶上取出两张牌面相同的牌（如黑桃 $10$ 和梅花 $10$）并且一起拿走。如果最后所有纸牌都被取走，则游戏者就赢了，否则游戏者就输了。 George 很热衷于玩这个游戏，但是一旦有时有多种选择的方法，George 就不知道取哪一种好了，George 会从中随机地选择一种走，例如：顶上的 9 张牌为 $\\tt KS,\\tt KH,\\tt KD,\\tt 9H,\\tt 8S,\\tt 8D,\\tt 7C,\\tt 7D,\\tt 6H$，显然有 5 种取法：$\\tt (KS,KH),(KS,KD),(KH,KD),(8S,8D),(7C,7D)$，当然 George 取到每一种取法的概率都是 $1/5$。 有一次，George 的朋友 Andrew 告诉他，这样做是很愚蠢的，不过 George 不相信，他认为如此玩最后成功的概率是非常大的。请写一个程序帮助 George 证明他的结论：计算按照他的策略，最后胜利的概率。 输入输出格式 输入格式 输入共 9 行，每行 4 组用空格分开的字串，每个字串两个字符，分别表示牌面和花色，按照从堆底到堆顶的顺序给出。 输出格式 一行，最后胜利的概率，精确到小数点后 6 位。 输入输出样例 输入样例 #1 AS 9S 6C KS   JC QH AC KH   7S QD JD KD   QS TS JS 9H   6D TD AD 8S   QC TH KC 8D   8C 9D TC 7C   9C 7H JH 7D   8H 6S AH 6H  输出样例 #1 0.589314"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:三子棋I 题目描述 小 a 和 uim 喜欢互相切磋三子棋。三子棋大家都玩过是吗？就是在九宫格里面 OOXX（别想歪了），谁连成 3 个就赢了。 由于小 a 比较愚蠢，uim 总是让他先。 我们用 9 个数字表示棋盘位置： $$ \\def\\arraystretch{1.5} \\begin{array}{|c|c|c|}\\hline 1 & 2 & 3 \\\\\\hline 4 & 5 & 6 \\\\\\hline 7 & 8 & 9 \\\\\\hline \\end{array}$$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Play with Power 题目描述 Masha 和 Stas 正在玩一个游戏。在游戏的开始，给出一个数  n，同时有两个正整数  $a,b$，初始时满足 $a^b\\le n$。 Masha 先手。每一回合，玩家要将 $a,b$ 的其中一个数加上  1，但不能使 $a^b>n$，否则该玩家输。 现在，Masha 想知道，假如两人都使用最优策略，对于同一个 n 和不同的 $a,b$，谁将获胜呢？ 输入输出格式 输入格式 第一行一个数  n。 第二行一个数  t，表示数据组数。 接下来  t 行，每行两个数  $a,b$，描述每组数据。 输出格式 共  t 行，对于每组数据： - 若 Masha 获胜，输出 `Masha`。 - 若 Stas 获胜，输出 `Stas`。 - 若平手，输出 `Missing`。 输入输出样例 输入样例 #1 9   2   2  2   1  4  输出样例 #1 Masha   Missing 说明 #### 数据规模与约定 - 对于  $30\\%$ 的数据，有  $1\\le n\\le 2\\cdot10^3$。 - 对于  $100\\%$ 的数据，有  $1\\le n\\le 10^8$， $1\\le t\\le 100$， $1\\le a,b,a^b\\le n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Color the Axis 题目描述 在一条数轴上有 n 个点，分别是 $1,2,\\ldots,n$。一开始所有的点都被染成黑色。接着我们进行 m 次操作，第 i 次操作将 $[l_i,r_i]$ 这些点染成白色。请输出每个操作执行后剩余黑色点的个数。 输入输出格式 输入格式 输入一行为 n 和 m。下面 m 行每行两个数 $l_i，r_i$。 输出格式 输出 m 行，为每次操作后剩余黑色点的个数。 输入输出样例 输入样例 #1 10 3    3 3    5 7    2 8      输出样例 #1 9      6      3 说明 - 对于 $30\\%$ 的数据，有 $1\\le n\\le2000，1\\le m\\le2000$； - 对于 $100\\%$ 的数据，有 $1\\le l_i\\le r_i\\le n\\le 2\\times 10^5，1\\le m\\le 2\\times10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[JSOI2007] 重要的城市 题目描述 参加jsoi冬令营的同学最近发现，由于南航校内修路截断了原来通向计算中心的路，导致去的路程比原先增加了近一公里。而食堂门前施工虽然也截断了原来通向计算中心的路，却没有使路程增加，因为可以找到同样长度的路作替代。其实，问题的关键在于，路截断的地方是交通要点。 同样的情况也出现在城市间的交通中。某些城市如果出了问题，可能会引起其他很多城市的交通不便。另一些城市则影响不到别的城市的交通。jsoi冬令营的同学发现这是一个有趣的问题，于是决定研究这个问题。 他们认为这样的城市是重要的：如果一个城市c被破坏后，存在两个不同的城市a和b（a, b均不等于c），a到b的最短距离增长了（或不通），则城市c是重要的。 jsoi冬令营的同学面对着一张教练组交给他们的城市间交通图，他们希望能找出所有重要的城市。现在就请你来解决这个问题。 输入输出格式 输入格式 第一行两个整数N,M,N为城市数，M为道路数 接下来M行，每行三个整数，表示两个城市之间的无向边，以及之间的路的长度 输出格式 一行，按递增次序输出若干的数，表示重要的城市。 输入输出样例 输入样例 #1 4 4 1 2 1 2 3 1 4 1 2 4 3 2 输出样例 #1 2 说明 30%的数据：$N\\le 20$； 60%的数据：$N\\le 100$； 100%的数据：$N\\le 200,M\\le \\frac{N\\times (N-1)}{2},0<c\\le 10000$。c即路的长度。 保证不出现重边和自环 感谢@赵昕鹏 和@qq2477259579 提供程序"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Farmer John 养了 $N$ 头牛，她们已经按 $1\\sim N$ 依次编上了号。FJ 所不知道的是，他的所有牛都梦想着从农场逃走，去参加马戏团的演出。可奶牛们很快发现她们那笨拙的蹄子根本无法在钢丝或晃动的的秋千上站稳（她们还尝试过把自己装在大炮里发射出去，但可想而知，结果是悲惨的） 。最终，她们决定练习一种最简单的杂技：把所有牛都摞在一起， 比如说， 第一头牛站在第二头的身上， 同时第二头牛又站在第三头牛的身上...最底下的是第 $N$ 头牛。 题目描述 每头牛都有自己的体重以及力量，编号为 i 的奶牛的体重为 $W_i$，力量为 $S_i$。 当某头牛身上站着另一些牛时它就会在一定程度上被压扁，我们不妨把它被压扁的程度叫做它的压扁指数。对于任意的牛，她的压扁指数等于摞在她上面的所有奶牛的总重（当然不包括她自己）减去它的力量。奶牛们按照一定的顺序摞在一起后， 她们的总压扁指数就是被压得最扁的那头奶牛的压扁指数。 你的任务就是帮助奶牛们找出一个摞在一起的顺序，使得总压扁指数最小。 输入输出格式 输入格式 第一行一个整数 N。 接下来 N 行，每行两个整数 $W_i$ 和 $S_i$。 输出格式 一行一个整数表示最小总压扁指数。 输入输出样例 输入样例 #1 3 10 3 2 5 3 3 输出样例 #1 2 说明 对于 $100\\%$ 的数据，$1 \\le N \\le 5\\times 10^4，1 \\le W_i \\le 10^4，1 \\le S_i \\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 一件衣服在自然条件下用一秒的时间可以晒干 a 点湿度。抠门的熊大妈只买了一台烘衣机 。使用用一秒烘衣机可以让一件衣服额外烘干 b 点湿度（一秒晒干 $a+b$ 湿度），但在同一时间内只能烘一件衣服。现在有 n 件衣服，第 i 衣服的湿度为 $w_i$（保证互不相同），要你求出弄干所有衣服的最少时间（湿度为 0 为干 ）。 输入输出格式 输入格式 第一行三个整数，分别为 $n,a,b$。   接下来 2 到 $n+1$ 行，第 i 行输入 $w_i$。 输出格式 一行，弄干所有衣服的最少时间。 输入输出样例 输入样例 #1 3 2 1 1 2 3 输出样例 #1 1 说明 ### 样例解释 让机器烘第三件衣服即可一秒完成。 ### 数据范围 $1 \\le w_i,a,b,n \\le 5 \\times 10^5$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:阅览室 题目描述 一个阅览室每天都要接待大批读者。阅览室开门时间是 O，关门时间是 T。每位读者的到达时间都不一样，并且想要阅读的刊物不超过 5 本。 每位读者心里对自己想看的刊物都有一个排位，到达之后他会先去找自己最想看的刊物，如果找不到则去找其次想看的刊物。如果找不到任何他想看的刊物，他会开始等待，直到有一本以上的他想看的刊物被人放回原处。当然，他会先去拿其中自己最想看的刊物。当他看完某一本刊物后，就把它放回原处，接着去找自己没看过的最想看的刊物。如此下去，直到看完所有他想看的刊物为止。 矛盾出现在两个人同时想要拿同一本刊物的时候。阅览室为了避免读者之间出现争执，作了一个规定，读者每次在开始等待时先去服务台做一次登记。如果两个人都同时想要一本刊物，那么先登记的读者将得到这本刊物。如果两个人同时登记，那么先到达阅览室的读者将得到刊物。没得到的人就只能去找其他的刊物看。 阅览室关门时，所有读者都将被强迫离开阅览室，不再允许继续阅读。 现在阅览室想做一个统计调查，你被要求写一个程序来模拟这个过程计算出所有刊物被阅读的总次数。当某个读者开始阅读某本刊物时，该刊物的被阅读次数就加 1，无论这本刊物最后有没有被读完。 输入输出格式 输入格式 输入包含多组测试数据。 每个测试数据开头是两个整数 T 和 $n\\ (1 \\le n \\le 100)$，分别表示图书馆关门时间和读者总数。接下来按照读者的到达时间先后依次给出了每位读者的具体描述。 每个读者描述开头是一个整数 $t\\ (0 \\le t<T)$，表示该读者到达时间。接下来一行开头是一个整数 $k\\ (1 \\le k \\le 5)$，表示该读者想要看的刊物数目。之后跟着 $2k$ 个整数按照读者想要阅读的刊物的顺序依次给出了刊物的描述。其中第 $2i-1$ 个整数表示刊物的编号 $s\\ (0 \\le s<1000)$，第 $2i$ 个整数表示该读者读完这本刊物所需的时间。 输出格式 对于每个测试数据，在单独一行里输出所有刊物被阅读的总次数。 输入输出样例 输入样例 #1 10 4  1 2 1 4 2 5  3  1 2 4  7  3 2 2 1 3 3 2  9  1 4 2  输出样例 #1 5"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:游戏 题目描述 给定两个正整数数列，你要用它们来做一个游戏：你需要对数列进行若干次操作，每一次操作，应选择两个正整数 $k_1$ 和 $k_2$，并删除第一个数列的最后 $k_1$ 个数，计算出它们的和 $s_1$；删除第二个数列的最后 $k_2$ 个数，计算出它们的和 $s_2$。这一次操作的得分就是 $(s_2-k_2)\\times(s_1-k_1)$。两个数列应同时被清空，不允许一个数列空了，而另一个数列中还有数。游戏的总得分就是每一次操作的得分总和。 求最小的总得分。 输入输出格式 输入格式 第一行是两个整数 n 和 m，分别表示第一个数列和第二个数列的初始长度。 第二行有 n 个正整数，是第一个数列的数。 第三行有 m 个正整数，是第二个数列的数。 数列中的数都不超过 $1000$。 输出格式 一个整数，表示最小的总得分。 输入输出样例 输入样例 #1 3 2 1 2 3  1 2  输出样例 #1 2 说明 - 对于 $20\\%$ 的数据，$n,m\\le20$； - 对于 $40\\%$ 的数据，$n,m\\le200$； - 对于 $100\\%$ 的数据，$n,m\\le2000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:轰炸II 题目描述 一个城市遭到了 M 次轰炸，每次都炸了一个每条边都与边界平行的矩形。 在轰炸后，有 N 个关键点，指挥官想知道，它们有没有受到过轰炸，如果有，被炸了几次，最后一次是第几轮。 输入输出格式 输入格式 第一行，两个整数：$M,N$。 以下 M 行，每行四个整数：$x_1、y_1、x_2、y_2$，表示被轰炸的矩形的左上角坐标和右下角坐标（比如`1 3 7 10`就表示被轰炸的地方是从$(1,3)到(7,10)$ 的矩形）。 再以下 N 行，每行两个整数，表示这个关键点的坐标。 输出格式 共 N 行， 每行第一个字符为 `YES` 或 `NO`，表示是否被轰炸，若为 `YES`，在一个空格后为两个整数，表示被炸了几次和最后一次是第几轮。 输入输出样例 输入样例 #1 1 1  1 1 10 10 11 11 输出样例 #1 NO 说明 $1 \\le N,M\\le 2000$ $1<=x_1,y_1,x_2,y_2<=2^{32}-1$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:将所有书放入书架后，求所有书架的高度和的最小值。 题目描述 When Farmer John isn't milking cows, stacking haybales, lining up his cows, or building fences, he enjoys sitting down with a good book.  Over the years, he has collected N books (1 <= N <= 100,000), and he wants to build a new set of bookshelves to hold them all. Each book i has a width W(i) and height H(i).  The books need to be added to a set of shelves in order; for example, the first shelf should contain books 1...k for some k, the second shelf should start with book k+1, and so on.  Each shelf can have a total width of at most L (1 <= L <= 1,000,000,000).  The height of a shelf is equal to the height of the tallest book on that shelf, and the height of the entire set of bookshelves is the sum of the heights of all the individual shelves, since they are all stacked vertically. Please help FJ compute the minimum possible height for the entire set of bookshelves. 输入输出格式 输入格式 第一行：两个数 N 和 L 。 接下来 N 行每行两个数 $H_i$ 和 $W_i$ 。 输出格式 一个数，书架高度的最小值。 输入输出样例 输入样例 #1 5 10 5 7 9 2 8 5 13 2 3 8 输出样例 #1 21"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO12MAR] Tractor S 题目描述 经过一天漫长的工作，农场主 John 完全忘记了他的拖拉机还在场地中央。他的奶牛们总喜欢和他搞些恶作剧，它们在场地的不同位置丢下 n 堆干草。这样 John 就必须先移走一些干草堆才能将拖拉机开走。 拖拉机和干草堆都可以看作是二维平面上的点，它们的坐标都是整数，没有哪堆干草的坐标和拖拉机的初始坐标一致。John 驾驶拖拉机只能沿着坐标轴的方向移动若干单位长度，比如说，他可以先朝北移动 2 个单位长度，再向东移动 3 个单位长度等等。拖拉机不能移动到干草堆所占据的点。 请你帮助 John 计算一下，最少要移动多少堆干草才能将拖拉机开回坐标原点。 输入输出格式 输入格式 输入的第一行是三个用空格隔开的整数，依次代表干草的堆数 n 和拖拉机的起始坐标 $(x_0, y_0)$。 第 2 行到第 $(n+1)$ 行，每行有两个用空格隔开的整数，第 $(i + 1)$ 行的整数 $x_i, y_i$ 代表第 i 堆干草的坐标为 $(x_i, y_i)$。 输出格式 一行一个整数，表示最少要移动多少堆干草 John 才能将拖拉机开回坐标原点。 输入输出样例 输入样例 #1 7 6 3  6 2  5 2  4 3  2 1  7 3  5 4  6 4  输出样例 #1 1  说明 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 5 \\times 10^4，1 \\leq x_i, y_i \\leq 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小可可和所有其他同学的手腕上都戴有一个射频识别序列号码牌，这样老师就可以方便的计算出他们的人数。很多同学都有一个“好朋友” 。如果 $A$ 的序列号的约数之和恰好等于 $B$ 的序列号，那么 $A$ 的好朋友就是 $B$。在这里，一个数的约数不包括这个数本身。因为一些同学的号码约数和大于其他任何同学的号码，所以这些同学没有好朋友。一些同学有一个“非常好友” 。当两个同学互为“好朋友”时，他们就是一对“非常好友” 。注意在这道题中，忽略那些自己是自己的“非常好友”的情况。 题目描述 给定一个序列号 s，找出序列号不小于 s 的第一对“非常好友” 。 输入输出格式 输入格式 只有一行一个整数 s，即给定的序列号下界。 输出格式 输出一行两个用空格隔开的整数 a 和 b。 a 表示第一个序列号不小于 s 的有“非常好友”的同学，b 是 a 的“非常好友” 。（注：允许 $b<s$） 输入输出样例 输入样例 #1 206 输出样例 #1 220 284 说明 #### 数据规模与约定 - 对于 $100\\%$ 的数据，保证 $6\\le s\\le1.8\\times10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 例如：有如下两种不同的债券： 1. 投资额 \\4000$，年利息 \\400$； 2. 投资额 \\3000$，年利息 \\250$。 初始时，有 \\10000$ 的总资产，可以投资两份债券 1 债券，一年获得 \\800$ 的利息；而投资一份债券 1 和两份债券 2，一年可获得 \\900$ 的利息，两年后，可获得 \\1800$ 的利息；而所有的资产达到 \\11800$，然后将卖掉一份债券 2，换购债券 1，年利息可达到 \\1050$；第三年后，总资产达到 \\12850$，可以购买三份债券 1，年利息可达到 \\1200$，第四年后，总资产可达到 \\14050$。 现给定若干种债券、最初的总资产，帮助约翰先生计算，经过 n 年的投资，总资产的最大值。 输入输出格式 输入格式 第一行为三个正整数 $s, n, d$，分别表示最初的总资产、年数和债券的种类。 接下来 d 行，每行表示一种债券，两个正整数 $a, b$ 分别表示债券的投资额和年利息。 输出格式 仅一个整数，表示 n 年后的最大总资产。 输入输出样例 输入样例 #1 10000 4 2  4000 400  3000 250 输出样例 #1 14050 说明 对于 $100 \\%$ 的数据，$1 \\le s \\le {10}^6，2 \\le n \\le 40，1 \\le d \\le 10，1 \\le a \\le {10}^4$，且 a 是 $1000$ 的倍数，b 不超过 a 的 $10\\%$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:花店橱窗布置 题目描述 某花店现有 F 束花，每一束花的品种都不一样。至少有同样数量的花瓶，被按顺序摆成一行。花瓶的位置是固定的，从左到右按 $1\\sim V$ 顺序编号，V 是花瓶的数目。 花束可以移动，并且每束花用 $1\\sim F$ 的整数标识。所有花束在放入花瓶时必须保持其标识数的顺序。例如，假设杜鹃花的标识数为 1，秋海棠的标识数为 2，康乃馨的标识数为 3，即杜鹃花必须放在秋海棠左边的花瓶中，秋海棠必须放在康乃馨左边的花瓶中。每个花瓶只能放一束花。 每个花瓶的形状和颜色也不相同，因此，当各个花瓶中放入不同的花束时，会产生不同的美学效果，并以美学值（一个整数 $a_{i,j}$）来表示，空置花瓶的美学值为 0。在上述的例子中，花瓶与花束的不同搭配所具有的美学值，可以用如下的表格来表示： |        | 花瓶 1 | 花瓶 2 | 花瓶 3 | 花瓶 4 | 花瓶 5 | | ------ | ----- | ----- | ----- | ----- | ----- | | 杜鹃花 | 7     | $23$    | $-5$    | $-24$   | $16$    | | 秋海棠 | 5     | $21$    | $-4$    | $10$    | $23$    | | 康乃馨 | $-21$   | 5     | $-4$    | $-20$   | $20$    | 根据表格，杜鹃花放在花瓶 2 中，会显得非常好看，但若放在花瓶 4 中，则显得很难看。 为了取得最佳的美学效果，必须在保持花束顺序的前提下，使花的摆放取得最大的美学值，如果具有最大美学值的摆放方式不止一种，则输出任何一种方案即可。 输入输出格式 输入格式 输入文件的第一行是两个整数 F 和 V，分别为花束数和花瓶数。 接下来是矩阵 $a_{i,j}$，共 F 行，每行 V 个整数，$a_{i,j}$ 表示花束 i 摆放在花瓶 j 中的美学值。 输出格式 输出文件的第一行是一个整数，为最大的美学值；接下来一行 F 个整数，为那束花放入那个花瓶的编号。 输入输出样例 输入样例 #1 3 5 7 23 -5 -24 16 5 21 -4 10 23 -21 5 -4 -20 20 输出样例 #1 53 2 4 5 说明 对于 $100\\%$ 的数据，$1\\le F\\le V\\le 100$。 感谢 @罗恺 提供 SPJ"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:质数取石子 题目描述 桌上有若干个石子，每次可以取质数个。谁先取不了，谁就输。问最少几步能赢？（一个人取一次算一步）假设双方都使用最优策略，且必胜方会尽量快地取胜，必败方会尽可能拖延步数。 输入输出格式 输入格式 第一行 N，表示有 N 组数据 接下来 N 行为石子数 输出格式 每组数据一个数，若必胜，则输出最少步数，否则输出 $-1$。 输入输出样例 输入样例 #1 3  8  9  16 输出样例 #1 1  -1  3 说明 石子数 $\\leq 20000，N\\leq 10$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:多人背包 题目描述 求01背包前k优解的价值和 DD 和好朋友们要去爬山啦！ 他们一共有 K 个人，每个人都会背一个包。这些包 的容量是相同的，都是 V。可以装进背包里的一共有 N 种物品，每种物品都有 给定的体积和价值。 在 DD 看来，合理的背包安排方案是这样的： 每个人背包里装的物品的总体积恰等于包的容量。 每个包里的每种物品最多只有一件，但两个不同的包中可以存在相同的物品。  任意两个人，他们包里的物品清单不能完全相同。 在满足以上要求的前提下，所有包里的所有物品的总价值最大是多少呢？  输入输出格式 输入格式 第一行三个数K、V、N 接下来每行两个数，表示体积和价值 输出格式 前k优解的价值和 输入输出样例 输入样例 #1 2 10 5 3 12 7 20 2 4 5 6 1 1 输出样例 #1 57 说明 对于100%的数据,$K\\le 50,V\\le 5000,N\\le 200$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:不听话的机器人 题目描述 机器人收到 N 条指令，但它不想走到障碍物上或走出边界，所以决定拒绝一些指令。求最少拒绝多少条指令？ `FORWARD` 前进 1 `BACK` 后退 1 `LEFT` 左转 $90$ 度 `RIGHT` 右转 $90$ 度 输入输出格式 输入格式 第一行 $M,N,X_0,Y_0$ ($M\\le 100,N\\le 1000$)，表示场地大小为 $M\\times M$，共有 N 条指令，起点 $(X_0,Y_0)$ 接下来一个 $M\\times M$ 矩阵，表示场地。其中 `.` 为场地，`*`为障碍物 接下来 N 行，表示 N 条命令 输出格式 一个数，表示最少拒绝多少条命令 输入输出样例 输入样例 #1 4 7 3 3 .*** ..** *..* **** LEFT FORWARD LEFT BACK FORWARD RIGHT FORWARD 输出样例 #1 1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:新魔法药水 题目描述 商店里有 N 种药水，每种药水都有一个售价和回收价。小 S 攒了 V 元钱，还会 M 种魔法，可以把一些药水合成另一种药水。他一天可以使用 K 次魔法，问他一天最多赚多少钱？ 输入输出格式 输入格式 第一行四个数N、M、V、K 接下来N行，每行两个数，表示药水的售价和回收价。 接下来M行，每行若干个数，第一个数表示魔法的成品，第二个数是原料的种数，接下来为各种原料的编号 输出格式 第一行四个数 $N,M,V,K$。 接下来 N 行，每行两个数，表示药水的售价和回收价。 接下来 M 行，每行若干个数，第一个数表示魔法的成品，第二个数是原料的种数，接下来为各种原料的编号。 输入输出样例 输入样例 #1 4 2 6 3 1 0 1 0 5 3 20 15 3 2 1 2 4 3 1 2 3 输出样例 #1 12 说明 ### 数据范围及约定 对于全部数据，$N \\le 60，M \\le 240，V \\le 1000，k \\le 30$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:现在，人们谈论着一个传说：从前，他们的祖先来到了一个位于东方的岛屿，那里简直就是另外一个世界。善于分析与构造的 Magic Land 上的人们总是不明白那里的人们是如何不借助精确的实验与计算驱动和操纵魔法。 题目描述 偶然地，一个魔法使（Magician）来到了 Magic Land，在临走的时候留下了一个神奇的盒子，叫做星之器（Casket of star）。 虽然不知道这个盒子是做什么的，但是经过了大量的实验和计算后，人们已经清楚它的一些事实： 1. 星之器之中有 $N\\times M$ 个区域，可看作分成 N 行和 M 列的格子，每个区域之中有若干单位的称为“星”的对象，这个对象的最小单位已经被确定，所以，这个数量总是整数。 2. 魔法使可以驱动星之器中位于同一行或同一列的不相邻（有公共边的区域称为相邻的）两个区域中各 1 单位的“星”，使得它们分别向中心移动 1 格。 3. 每一次使用 2 中的方法驱动“星”，将会产生魔力，魔法使会得到这一部分魔力。魔力的量等于这个两个区域之间所间隔的区域数。 这样，我们可以用一个 $N\\times M$ 的数表来表示星之器的状态，比如 $N=2,M=3$ 时： ```plain 2 0 1                                     1 2 0 5 1 4                                     5 1 4 ``` 当星之器为左侧的状态时，通过操纵第一行的第 1 和 3 个区域中的“星”，变为右侧所示的状态，同时，将产生 1 单位的魔力（因为这两个区域之间恰好隔了 1 个区域）。 在经过了进一步的研究之后，人们知道了这个星之器最初的状态（Ini）以及最终被他们得到时的状态（Fin）。 你希望知道，星之器最多帮助它的拥有者提供了多少的魔力。即：经过一系列上述操作由初态（Ini）变为终态（Fin），至多产生多少魔力。 需要注意的是，显然操作过程中每个区域内“星”的数量不能是负的，即：如果那个区域已经没有“星”了，当然就不能继续操作了。 输入输出格式 输入格式 第一行包含两个正整数 $N,M$ 表示星之器的大小。 接下来的 N 行，每行包含 M 个自然数：$\\mathit{Ini}_{i,j}$，描绘了初态（Ini）。 在一个空行后的 N 行，每行包含 M 个自然数：$\\mathit{Fin}_{i,j}$，描绘了终态（Fin）。 输出格式 输出一个正整数，表示至多产生的魔力。 输入输出样例 输入样例 #1 5 5  1 0 0 0 1  0 0 0 0 0  0 0 0 0 0  0 1 0 1 1  1 0 0 0 0  0 0 0 0 0  0 0 0 0 1  2 0 0 0 1  0 0 2 0 0  0 0 0 0 0 输出样例 #1 7 说明 对于 $100\\%$ 的数据，$1\\le N,M\\le200，\\mathit{Ini}_{i,j},\\mathit{Fin}_{i,j}\\le1000$。 所有数据保证了至少存在一个操作方法使得星之器由初态变为终态，同时保证了初态与终态不是完全相同的。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 某石油公司计划建造一条由东向西的主要输油管道。 该管道要穿过一个有 n 口油井的油田。从每口油井都要有一条输油管道沿最短路径（或南或北）与主管道相连。 如果给定 n 口油井的位置，及它们的 x 坐标（东西向）和 y 坐标（南北向），应如何确定主管道的最优位置，即使各油井到主管道之间的输油管道长度总和最小的位置？证明可规定时间内确定主管道的最优位置。 输入输出格式 输入格式 第一行是油井数 n。 接下来 n 行是油井的位置，每行 2 个整数 x 和 y。 输出格式 只有一行，表示油井到主管道之间的输油管道最小长度总和。 输入输出样例 输入样例 #1 5 1 2 2 2 1 3 3 -2 3 3 输出样例 #1 6 说明 ### 数据范围及约定 对于全部数据，$1 \\le n \\le 10000，-10^4 \\le x,y \\le 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:独眼兔 题目描述 太郎有一只特殊的兔子，它只有一只左眼，所以当它移动时是不能向右转弯的。一天，太郎跟独眼兔做一个游戏，太郎在平面内放了 n 个萝卜，每个萝卜有个位置 $(x_i,y_i)$，且任意两个萝卜的 $x_i，y_i$ 都是不相同的，独眼兔要去吃这些萝卜。设萝卜 $A(x_i,y_i)$ 是所有萝卜中最小的，那独眼兔会从 $(0,y_i)$ 出发，走向萝卜 A，然后开始吃萝卜。当它吃完一个萝卜后，独眼兔会确定下一个萝卜作为目标，然后径直向萝卜走去，当然当它移动的时候是不能向右转弯的。独眼兔还有一个特点，它走过的路径上会留下特殊的气味，所以独眼兔不希望它将要走的路与前面它走过的路相交。太郎想知道独眼兔如何才能吃到最多的萝卜。 输入输出格式 输入格式 第一行是个整数 n； 接下来 n 行，每行两个整数。第 $i+1$ 行表示第 i 号萝卜的位置 $(x_i,y_i)$。 输出格式 一行，输出最多能吃到的萝卜数，后面输出吃萝卜的顺序。 输入输出样例 输入样例 #1 10 4 5 9 8 5 9 1 7 3 2 6 3 10 10 8 1 2 4 7 6 输出样例 #1 10 8 7 3 4 9 5 6 2 1 10 说明 - $40\\%$ 的数据，$n\\le100$； - $100\\%$ 的数据，$n\\le1000，0\\lt x_i\\le10^4，0\\lt y_i\\le10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:实际上该题还是很水的。 题目描述 给定 $l, r$，求区间 $[l, r]$ 内质数的个数。 输入输出格式 输入格式 第一行有两个整数，分别代表询问次数 n 和 给定区间的右端点最大值 m。 接下来 n 行，每行两个整数 $l, r$，代表一次查询。 输出格式 对于每次查询输出一行，若 $l, r \\in [1, m]$，则输出区间质数个数，否则输出 `Crossing the line`。 输入输出样例 输入样例 #1 2 5 1 3 2 6 输出样例 #1 2 Crossing the line 说明 #### 数据范围与约定 - 对于 $20\\%$ 的数据，保证 $n,m\\le 10$。 - 对于 $100\\%$ 的数据，保证 $1\\le n\\le1000，1\\le m\\le10^6，-10^9\\le l\\le r\\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:编号 题目描述 太郎有 N 只兔子，现在为了方便识别它们，太郎要给他们编号。兔子们向太郎表达了它们对号码的喜好，每个兔子 i 想要一个整数，介于 1 和 $M_i$ 之间（可以为 1 或 $M_i$）。当然，每个兔子的编号是不同的。现在太郎想知道一共有多少种编号的方法。 你只用输出答案对 $10^9+7$ 取余的结果即可。如果这是不可能的，就输出 0。 输入输出格式 输入格式 第一行是一个整数 N。 第二行 N 个整数 $M_i$。 输出格式 一个整数，表示方案总数。 输入输出样例 输入样例 #1 2 5 8 输出样例 #1 35 说明 ### 数据范围及约定 对于全部数据，$1 \\le N \\le 50，1\\le M_i\\le 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 话说 clearman 在 MC 世界开了个祥艺奶牛场，用熔浆、TNT 等丧心病狂的折磨牛，获取牛肉、牛奶等刷经验。他想知道他到底达到什么层次。 他总共进行了 n 项操作，每次操作要付出 x 生命值（初始生命是 $10$ 点，初一党都知道！并且要先计算付出的生命值，如果小于等于 0，则死亡，本次及以下操作都无效。但切记：付出生命值可以是负数，也就是说可以回复 $−x$ 点生命值，但上限只能是 $10$！切记！），每次操作可以获得 a 经验值（不能为负），他最后能达到 m 级 t 经验。 P.S. 关于等级 初始等级为 0。每加 $2^m（m$ 为当前等级）点经验可升一级。   1、假设 clearman 一共得到 $15$ 点经验，那么他应该为 4 级（ $15-1-2-4-8=0$）加 0 点经验。     2、假设 clearman 一共获得 $39$ 点经验，那么他应该为 5 级（ $39-1-2-4-8-16=8$）加 8 点经验。 输入输出格式 输入格式 第一行一个正整数 n，表示操作个数。 接下来 n 行，每行两个数，为 clearman 的一次操作。 输出格式 一行，为等级和经验值。 输入输出样例 输入样例 #1 2 5.5 15 4.5 24 输出样例 #1 4 0 说明 数据很弱，人肉输的，但是很坑。。。 【数据范围】   对于 $100\\%$ 的数据，$1\\le n \\le 20$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:饥饿的奶牛 题目描述 有一条奶牛冲出了围栏，来到了一处圣地（对于奶牛来说），上面用牛语写着一段文字。 现用汉语翻译为： 有 N 个区间，每个区间 $x,y$ 表示提供的 $x\\sim y$ 共 $y-x+1$ 堆优质牧草。你可以选择任意区间但不能有重复的部分。 对于奶牛来说，自然是吃的越多越好，然而奶牛智商有限，现在请你帮助他。 输入输出格式 输入格式 第一行一个整数 N。 接下来 N 行，每行两个数 $x,y$，描述一个区间。 输出格式 输出最多能吃到的牧草堆数。 输入输出样例 输入样例 #1 3 1 3 7 8 3 4 输出样例 #1 5 说明 $1 \\leq n \\leq 1.5 \\times 10^5，0 \\leq x \\leq y \\leq 3 \\times 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:愚蠢的组合数 题目描述 最近老师教了狗狗怎么算组合数，狗狗又想到了一个问题。。。 狗狗定义 $C(N,K)$ 表示从 N 个元素中不重复地选取 K 个元素的方案数。 狗狗想知道的是 $C(N,K)$ 的奇偶性。 当然，这个整天都老是用竖式算 $123456789 \\times 987654321=?$ 的人不会让你那么让自己那么轻松，它说：“ N 和 K 都可能相当大”。 但是狗狗也犯难了，所以它就找到了你，想请你帮他解决这个问题。 输入输出格式 输入格式 第一行一个正整数 t，表示数据的组数。 第 2 至第 $2+t-1$ 行，每行有两个非负整数 N 和 K，描述每组数据。数据保证 $k\\le n$。 输出格式 每一组输入，如果 $C(N,K)$ 是奇数则输出 1，否则输出 0。 输入输出样例 输入样例 #1 3 1 1 1 0 2 1 输出样例 #1 1 1 0 说明 ### 数据范围及约定 对于 $100\\%$ 的数据，$1\\le n\\le 10^5，1\\le t\\le 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:公交车 题目描述 某城市有个能容纳 n 辆公交车的停车场。每一天，这些公交车都要依次有序离开停车库去另一个终点站。这终点站距离停车场有 d 米的路程。当然第 i 辆公交车离开停车场的时间是 $t_i$ 秒，并以最大速度不超过 $v_i$ 米/秒行驶，加速度最大值为 a。一辆公交车能瞬间减速，也能瞬间改变它的加速度。当然每辆车的最大加速度都一样为 a。 不管有多大的马力，一辆公交车都不能超过其他另外的公交车，如果一辆公交车追上另一辆公交车，那么后面追上的车跟前面被追的车一起并排行驶同时到达终点站。当然司机都是尽可能快的驾车到达终点站的。 作为公交公司老板的你，希望每辆公交车都尽可能快的到达终点站。当然，公交车到达终点站时，速度可以没必要达到 0。当一辆公交车离开停车场时，它的起始速度等于 0。通过物理的观点解释的话，公交车可以看成是抽象的一个物体而已，除了能加速和减速，其他对速度的影响都可以忽略掉。 输入输出格式 输入格式 第一行三个空格隔开的整数 $n, a, d（1 \\leq n \\leq 10^5，1 \\leq a, d \\leq 10^6$），分别表示公交车的数量，最大加速度。离终点站的距离。 接下来 n 行，每行有一对整数 $t_i, v_i（0 \\leq t_1 < t_2 < \\cdots < t_{n-1} < tn \\leq 10^6，1 \\leq v_i \\leq 10^6$），分别表示每辆车离开停车场的时刻和能够行驶的最大速度。 输出格式 输出每辆公交车到达终点站的时刻。一行表示一辆公交车的到达时刻，输出时刻的公交车顺序按照输入的公交车顺序。输出答案的相对或绝对误差不能超过 $10^{-4}$（即末尾保留 4 位小数）。 输入输出样例 输入样例 #1 3 10 10000  0 10  5 11  1000 1  输出样例 #1 1000.5000  1000.5000  11000.0500  说明 【样例解释】 第二辆公交车能追上第一辆公交车，在行驶到距离终点 $510.5$ 公里处。然后还剩 $9489.5$ 公里的路程，两辆车都以 $10$ km/h 的速度，一起到达终点的，它们到达终点的时刻是 $1000.5$ 秒，第三辆公交车不能赶上其他的公交车，他到达终点的时刻是 $11000.05$ 秒。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:对撞机 题目描述 在2312年，宇宙中发现了 n 台巨型对撞机，这些对撞机分别用 $1 \\sim n$ 的自然数标识。科学家们不知道启动这些对撞机会发生什么危险事故，所以这些机器，刚开始都是出于关闭的状态。 随着科学家们的研究发现，第 i 台对撞机启动是安全的，当且仅当其他已经启动的对撞机的标识数都跟这台对撞机标识数互质。（例如假设前面启动的对撞机标识数是 j，如果 i 能启动，那么 $i,j$ 互质，即 $\\gcd(i,j) = 1$）。如果两台对撞机的标识数不为互质数就启动，那么就会发生爆炸事故。 基于前面的研究，科学家们准备做各种启动和关闭对撞机的实验。为了确保科学家们的生命安全，你要设计一个远程遥控的软件。 刚开始，所有的对撞机都是关闭状态。你的程序将会收到许多询问，格式为“启动、关闭第 i 台对撞机”。这个程序应该能处理这些询问（根据收到询问的先后顺序处理）。程序按照如下的格式输出处理结果。 如果询问为 `+ i`（表示启动第 i 台对撞机），程序应该按照下面三种情况之一输出结果。 - `Success`，表示启动第 i 台是安全的。 - `Already on`，表示第 i 台在询问之前就已经启动了。 - `Conflict with j`，表示第 i 台与前面已经启动的第 j 台冲突。如果前面有多台对撞机跟 i 冲突，那么只输出其中任何一台即可。 如果询问为 `- i`（表示关闭第 i 台对撞机），程序应该按照下面两种情况之一输出结果。 - `Success`，表示关闭第 i 台对撞机。 - `Already off`，表示第 i 台对撞机在询问之前就已经关闭了。 输入输出格式 输入格式 第一行输入两个以空格隔开的整数 n 和 m，分别表示对撞机的数量和询问数。 接下来 m 行，表示询问，每行仅可能是 `+ i` 或 `- i`，表示开启或关闭第 i 台对撞机。 输出格式 输出 m 行，输出结果按照上面题目给定格式输出。 输入输出样例 输入样例 #1 10 10  + 6 + 10 + 5 - 10 - 5 - 6 + 10  + 3 + 6 + 3 输出样例 #1 Success Conflict with 6 Success Already off Success Success Success Success Conflict with 3 Already on 说明 **数据范围** $1 \\le n,m \\le 10^5，1 \\le i \\le n$。 --- 感谢 @cn：苏卿念 提供 Special Judge"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:回文串计数 题目描述 小 a 虽然是一名理科生，但他常常称自己是一名真正的文科生。不知为何，他对于背诵总有一种莫名其妙的热爱，这也促使他走向了以记忆量大而闻名的生物竞赛。然而，他很快发现这并不能满足他热爱背诵的心，但是作为一名强大的 OIER，他找到了这么一个方法——背诵基因序列。然而这实在是太困难了，小啊感觉有些招架不住。 不过他发现，如果他能事先知道这个序列里有多少对互不相交的回文串，他或许可以找到记忆的妙法。为了进一步验证这个想法，小 a 决定选取一个由小写字母构成的字符串 $SS$ 来实验。由于互不相关的回文串实在过多，他很快就数晕了。不过他相信，在你的面前这个问题不过是小菜一碟。 1. 对于字符串 $SS$，设其长度为 Len，那么下文用 $S_i$ 表示 $SS$ 中第 i 个字符（$1 \\le i \\le Le_n$）。 2. $S[i,j]$ 表示 $SS$ 的一个子串，$S[i,j]=S_i S_{i+1}S_{i+2} \\cdots S_{j-2}S_{j-1}S_{j}$，比如当 $SS$ 为 `abcgfd` 时，$S[2,5]$ 就是 `bcgf`，$S[1,5]$ 是 `abcgf`。 3. 当一个串被称为一个回文串当且仅当将这个串反写后与原串相同，如`abcba`。 4. 考虑一个四元组 $(l,r,L,R)$，当 $S[l,r]$ 和 $S[L,R]$ 均为回文串时，且满足 $1 \\le l \\le r<L \\le R \\le \\text{Len}$ 时，我们称 $S[l,r]$ 和 $S[L,R]$ 为一对互不相交的回文串。即本题所求，也即为这种四元组的个数。两个四元组相同当且仅当对应的 $l,r,L,R$ 都相同。 输入输出格式 输入格式 输入仅一行，为字符串 $SS$，保证全部由小写字母构成，由换行符标志结束。 $50$ ％的数据满足 $SS$ 的长度不超过 $200$； $100$ ％的数据满足 $SS$ 的长度不超过 $2000$。 输出格式 仅一行，为一个整数，表示互不相关的回文串的对数。 输入输出样例 输入样例 #1 aaa 输出样例 #1 5 说明 【样例数据说明】 SS= aaa ，SS 的任意一个字符串均为回文串，其中总计有 5 对互不相关的回文串： (1,1,2,2)，(1,1,2,3)，(1,1,3,3)，(1,2,3,3)，(2,2,3,3)。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[COCI2011-2012#5] EKO / 砍树 题目描述 伐木工人 Mirko 需要砍 M 米长的木材。对 Mirko 来说这是很简单的工作，因为他有一个漂亮的新伐木机，可以如野火一般砍伐森林。不过，Mirko 只被允许砍伐一排树。 Mirko 的伐木机工作流程如下：Mirko 设置一个高度参数 H（米），伐木机升起一个巨大的锯片到高度 H，并锯掉所有树比 H 高的部分（当然，树木不高于 H 米的部分保持不变）。Mirko 就得到树木被锯下的部分。例如，如果一排树的高度分别为 $20,15,10$ 和 $17$，Mirko 把锯片升到 $15$ 米的高度，切割后树木剩下的高度将是 $15,15,10$ 和 $15$，而 Mirko 将从第 1 棵树得到 5 米，从第 4 棵树得到 2 米，共得到 7 米木材。 Mirko 非常关注生态保护，所以他不会砍掉过多的木材。这也是他尽可能高地设定伐木机锯片的原因。请帮助 Mirko 找到伐木机锯片的最大的整数高度 H，使得他能得到的木材至少为 M 米。换句话说，如果再升高 1 米，他将得不到 M 米木材。 输入输出格式 输入格式 第 1 行 2 个整数 N 和 M，N 表示树木的数量，M 表示需要的木材总长度。 第 2 行 N 个整数表示每棵树的高度。 输出格式 1 个整数，表示锯片的最高高度。 输入输出样例 输入样例 #1 4 7 20 15 10 17 输出样例 #1 15 输入样例 #2 5 20 4 42 40 26 46 输出样例 #2 36 说明 对于 $100\\%$ 的测试数据，$1\\le N\\le10^6，1\\le M\\le2\\times10^9$，树的高度 $<10^9$，所有树的高度总和 $>M$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:快速求和 题目描述 给定一个数字字符串，用最小次数的加法让字符串等于一个给定的目标数字。每次加法就是在字符串的某个位置插入一个加号。在里面要的所有加号都插入后，就像做普通加法那样来求值。 例如，考虑字符串`12`，做 0 次加法，我们得到数字 $12$。如果插入 1 个加号，我们得到 3，因此，这个例子中，最少用 1 次加法就得到数字 3。 再举一例，考虑字符串`303`和目标数字 6，最佳方法不是`3+0+3`。而是`3+03`。能这样做是因为一个数的前导 0 不会改变它的大小。 输入输出格式 输入格式 第一行：一个字符串 s。 第二行：一个整数 n。 输出格式 一行一个整数表示最少的加法次数让 s 等于 n。如果怎么做都不能让 s 等于 n ，则输出 $-1$。 输入输出样例 输入样例 #1 99999 45 输出样例 #1 4 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $1\\le \\operatorname{len}(s)\\le40，1 \\leq n\\le10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:发完了 $k$ 张照片，佳佳却得到了一个坏消息：他的 MM 得病了！佳佳和大家一样焦急万分！治好 MM 的病只有一种办法，那就是传说中的 $0$ 号药水…… 怎么样才能得到 $0$ 号药水呢？你要知道佳佳的家境也不是很好，成本得足够低才行…… 题目描述 **存在 ab 相同 c 不同的情况，与题意相悖**。题还是可以做，但数据待修正。 得到一种药水有两种方法：可以按照魔法书上的指导自己配置，也可以到魔法商店里去买——那里对于每种药水都有供应，虽然有可能价格很贵。在魔法书上有很多这样的记载： 1 份 A 药水混合 1 份 B 药水就可以得到 1 份 C 药水。（至于为什么 $1 + 1 = 1$，因为……这是魔法世界）好了，现在你知道了需要得到某种药水，还知道所有可能涉及到的药水的价格以及魔法书上所有的配置方法，现在要问的就是： 1. 最少花多少钱可以配制成功这种珍贵的药水； 2. 共有多少种不同的花费最少的方案（两种可行的配置方案如果有任何一个步骤不同则视为不同的）。假定初始时你手中并没有任何可以用的药水。 输入输出格式 输入格式 第一行有一个整数 N（$N \\le 1000$），表示一共涉及到的药水总数。药水从 $0 \\sim N-1$ 顺序编号，0 号药水就是最终要配制的药水。 第二行有 N 个整数，分别表示从 $0 \\sim N-1$ 顺序编号的所有药水在魔法商店的价格（都表示 1 份的价格）。 第三行开始，每行有三个整数 A、B、C，表示 1 份 A 药水混合 1 份 B 药水就可以得到 1 份 C 药水。注意，某两种特定的药水搭配如果能配成新药水的话，那么结果是唯一的。也就是说不会出现某两行的 A、B 相同但 C 不同的情况。 输入以一个空行结束。 输出格式 输出两个用空格隔开的整数，分别表示得到 0 号药水的最小花费以及花费最少的方案的个数。 保证方案数不超过 $2^{63} - 1$。 输入输出样例 输入样例 #1 7  10 5 6 3 2 2 3  1 2 0  4 5 1  3 6 2 输出样例 #1 10 3 说明 样例说明： 最优方案有 3 种，分别是： - 直接买 0 号药水； - 买 4 号药水、5 号药水配制成 1 号药水，直接买 2 号药水，然后配制成 0 号药水； - 买 4 号药水、5 号药水配制成 1 号药水，买 3 号药水、6 号药水配制成 2 号药水，然后配制成 0 号药水。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:但是如果你不懂得呢？那。。。（自己去想） 题目描述 首先所有的灯都是关的（注意是关！），编号为 1 的人走过来，把是 1 的倍数的灯全部打开，编号为 2 的人把是 2 的倍数的灯全部关上，编号为 3 的人又把是 3 的倍数的灯开的关上，关的开起来……直到第 N 个人为止。 给定 N，求 N 轮之后，还有哪几盏是开着的。 输入输出格式 输入格式 一个数 N，表示灯的个数和操作的轮数。 输出格式 若干数，表示开着的电灯编号。 输入输出样例 输入样例 #1 5 输出样例 #1 1 4 说明 **【数据范围】** 对于 $100 \\%$ 的数据，$1 \\le N \\le 2^{40}$。 **【其他说明】** 数学题！"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[HAOI2012] 音量调节 题目描述 一个吉他手准备参加一场演出。他不喜欢在演出时始终使用同一个音量，所以他决定每一首歌之前他都需要改变一次音量。在演出开始之前，他已经做好一个列表，里面写着每首歌开始之前他想要改变的音量是多少。每一次改变音量，他可以选择调高也可以调低。 音量用一个整数描述。输入文件中整数 $beginLevel$，代表吉他刚开始的音量，整数 $maxLevel$，代表吉他的最大音量。音量不能小于 0 也不能大于 $maxLevel$。输入中还给定了 n 个整数 $c_1,c_2,c_3,\\cdots,c_n$，表示在第 i 首歌开始之前吉他手想要改变的音量是多少。 吉他手想以最大的音量演奏最后一首歌，你的任务是找到这个最大音量是多少。 输入输出格式 输入格式 第一行依次为三个整数 n，$beginLevel$ 和 $maxLevel$。 第二行依次为 n 个整数 $c_1,c_2,c_3,\\cdots,c_n$。 输出格式 输出演奏最后一首歌的最大音量。如果吉他手无法避免音量低于 0 或者高于 $maxLevel$，输出 `-1`。 输入输出样例 输入样例 #1 3 5 10 5 3 7 输出样例 #1 10 说明 $1\\le n\\le 50，1\\le c_i\\le maxLevel，1\\le maxLevel\\le 1000，0\\le beginLevel\\le maxLevel$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:舞蹈课 题目描述 有 n 个人参加一个舞蹈课。每个人的舞蹈技术由整数来决定。在舞蹈课的开始，他们从左到右站成一排。当这一排中至少有一对相邻的异性时，舞蹈技术相差最小的那一对会出列并开始跳舞。如果不止一对，那么最左边的那一对出列。一对异性出列之后，队伍中的空白按原顺序补上（即：若队伍为 `ABCD`，那么 `BC` 出列之后队伍变为 `AD`）。舞蹈技术相差最小即是 $a_i$ 的绝对值最小。 任务是模拟以上过程，确定跳舞的配对及顺序。 输入输出格式 输入格式 第一行一个正整数 n 表示队伍中的人数。 第二行包含 n 个字符 `B` 或者 `G`，`B` 代表男，`G` 代表女。 第三行为 n 个整数 $a_i$。所有信息按照从左到右的顺序给出。 输出格式 第一行一个整数表示出列的总对数 k。 接下来 k 行，每行是两个整数。按跳舞顺序输出，两个整数代表这一对舞伴的编号（按输入顺序从左往右 1 至 n 编号）。请先输出较小的整数，再输出较大的整数。 输入输出样例 输入样例 #1 4  BGBG  4 2 4 3  输出样例 #1 2  3 4  1 2  说明 对于 $50\\%$ 的数据，$1\\leq n\\leq 200$。 对于 $100\\%$ 的数据，$1\\leq n\\leq 2\\times 10^5，1\\le a_i\\le 10^7$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO06NOV] Corn Fields G 题目描述 Farmer John has purchased a lush new rectangular pasture composed of M by N (1 ≤ M ≤ 12; 1 ≤ N ≤ 12) square parcels. He wants to grow some yummy corn for the cows on a number of squares. Regrettably, some of the squares are infertile and can't be planted. Canny FJ knows that the cows dislike eating close to each other, so when choosing which squares to plant, he avoids choosing squares that are adjacent; no two chosen squares share an edge. He has not yet made the final choice as to which squares to plant. Being a very open-minded man, Farmer John wants to consider all possible options for how to choose the squares for planting. He is so open-minded that he considers choosing no squares as a valid option! Please help Farmer John determine the number of ways he can choose the squares to plant. 农场主 $\\rm John$ 新买了一块长方形的新牧场，这块牧场被划分成 M 行 N 列 $(1 \\le M \\le 12; 1 \\le  N \\le 12)$，每一格都是一块正方形的土地。 $\\rm John$ 打算在牧场上的某几格里种上美味的草，供他的奶牛们享用。 遗憾的是，有些土地相当贫瘠，不能用来种草。并且，奶牛们喜欢独占一块草地的感觉，于是 $\\rm John$ 不会选择两块相邻的土地，也就是说，没有哪两块草地有公共边。 $\\rm John$ 想知道，如果不考虑草地的总块数，那么，一共有多少种种植方案可供他选择？（当然，把新牧场完全荒废也是一种方案） 输入输出格式 输入格式 第一行：两个整数 M 和 N，用空格隔开。 第 2 到第 $M+1$ 行：每行包含 N 个用空格隔开的整数，描述了每块土地的状态。第 $i+1$ 行描述了第 i 行的土地，所有整数均为 0 或 1 ，是 1 的话，表示这块土地足够肥沃，0 则表示这块土地不适合种草。 输出格式 一个整数，即牧场分配总方案数除以 $100,000,000$ 的余数。 输入输出样例 输入样例 #1 2 3 1 1 1 0 1 0 输出样例 #1 9"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI1995] 石子合并 题目描述 在一个圆形操场的四周摆放 N 堆石子，现要将石子有次序地合并成一堆，规定每次只能选相邻的 2 堆合并成新的一堆，并将新的一堆的石子数，记为该次合并的得分。 试设计出一个算法,计算出将 N 堆石子合并成 1 堆的最小得分和最大得分。 输入输出格式 输入格式 数据的第 1 行是正整数 N，表示有 N 堆石子。 第 2 行有 N 个整数，第 i 个整数 $a_i$ 表示第 i 堆石子的个数。 输出格式 输出共 2 行，第 1 行为最小得分，第 2 行为最大得分。 输入输出样例 输入样例 #1 4 4 5 9 4 输出样例 #1 43 54 说明 $1\\leq N\\leq 100，0\\leq a_i\\leq 20$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:接力赛跑 题目描述 $N (1\\le N\\le 1000)$ 只奶牛（编号为 1 到 N）在进行一个特别的接力赛跑，这个比赛特别之处在于，若干只奶牛可以同时跑。 在 $t=0$ 时刻，牛 1 开始沿着跑道跑。 通常，牛 i 跑完一圈需要的时间为 $L_i (1\\le L_i\\le 1000)$ 秒。当它重新越过起点线的瞬间，它会通知另外 $M_i (1\\le M_i\\le N)$ 只奶牛 $A_{ij} (1\\le j\\le M_i)$ 起跑。注意可能出现 $M_i=0$ 并且 $A_i$ 不存在的情况。 每一只开始赛跑的奶牛，等到它回到起点时，都会通知其他奶牛起跑。可能出现多只奶牛通知同一只奶牛起跑的情况，但是每一只奶牛只愿意跑一圈，所以它被第二次叫到的时候就不愿意再跑了。 农场主希望你帮他确定总的赛跑时间（也就是从比赛开始到最后一只奶牛越过终点的时间）。 输入输出格式 输入格式 第一行一个整数 N，表示参赛的牛的数量。 第 2 行到第 $N+1$ 行：第 $i+1$ 行包含多个用空格隔开的整数：$L_i、M_i$ 和 $M_i$ 个整数 $A_{ij}$。 输出格式 一个整数，表示整个比赛结束的时间。 输入输出样例 输入样例 #1 5 4 2 2 4 3 3 1 3 4 7 1 5 4 2 3 5 1 0 输出样例 #1 14"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:函数 题目描述 给定 n 个二次函数 $f_1(x),f_2(x),\\dots,f_n(x)$（均形如 $ax^2+bx+c$），设 $F(x)=\\max\\{f_1(x),f_2(x),...,f_n(x)\\}$，求 $F(x)$ 在区间 $[0,1000]$ 上的最小值。 输入输出格式 输入格式 输入第一行为正整数 T，表示有 T 组数据。 每组数据第一行一个正整数 n，接着 n 行，每行 3 个整数 $a,b,c$，用来表示每个二次函数的 3 个系数，注意二次函数有可能退化成一次。 输出格式 每组数据输出一行，表示 $F(x)$ 的在区间 $[0,1000]$ 上的最小值。答案精确到小数点后四位，四舍五入。 输入输出样例 输入样例 #1 2 1 2 0 0 2 2 0 0 2 -4 2 输出样例 #1 0.0000 0.5000 说明 对于 $50\\%$ 的数据，$n\\le 100$。 对于 $100\\%$ 的数据，$T<10，\\ n\\le 10^4，0\\le a\\le 100，|b| \\le 5\\times 10^3，|c| \\le 5\\times 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO12FEB] Overplanting S 题目描述 Farmer John has purchased a new machine that is capable of planting grass within any rectangular region of his farm that is  axially aligned  (i.e., with vertical and horizontal sides).  Unfortunately, the machine malfunctions one day and plants grass in not one, but N (1 <= N <= 1000) different rectangular regions, some of which may even overlap. Given the rectangular regions planted with grass, please help FJ compute the total area in his farm that is now covered with grass. 在一个笛卡尔平面坐标系里（则X轴向右是正方向，Y轴向上是正方向），有N($1<=N<=1000$)个矩形，第i个矩形的左上角坐标是(x1, y1),右下角坐标是（x2,y2）。问这N个矩形所覆盖的面积是多少？注意：被重复覆盖的区域的面积只算一次。 输入输出格式 输入格式 第一行，一个整数Ｎ。 ($1<=N<=1000$)。 接下来有N行，每行描述一个矩形的信息，分别是矩形的x1、y1、x2、y2。 其中 $-10^8<=x1,y1,x2,y2<=10^8$。 输出格式 一个整数，被N个矩形覆盖的区域的面积。 输入输出样例 输入样例 #1 2 0 5 4 1 2 4 6 2 输出样例 #1 20"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Moo 题目描述 奶牛 Bessie 最近在学习字符串操作，它用如下的规则逐一的构造出新的字符串： $S(0) =$ `moo` $S(1) = S(0) +$ `m` + `ooo` $+ S(0) =$ `moo` + `m` + `ooo` + `moo` = `moomooomoo` $S(2) = S(1) +$ `m` + `oooo` $+ S(1) =$ `moomooomoo` + `m` + `oooo` +  `moomooomoo` = `moomooomoomoooomoomooomoo` $\\dots$ Bessie 就这样产生字符串，直到最后产生的那个字符串长度不小于读入的整数 N 才停止。 通过上面观察，可以发现第 k 个字符串是由：第 $k-1$ 个字符串 + `m` +  $(k+2$ 个 $o) +$ 第 $k-1$ 个字符串连接起来的。 现在的问题是：给出一个整数 $N (1 \\leq N \\leq 10^9)$，问第 N 个字符是字母 `m` 还是 `o`？ 输入输出格式 输入格式 一个正整数 N。 输出格式 一个字符，`m` 或者 `o`。 输入输出样例 输入样例 #1 11 输出样例 #1 m 说明 样例解释： 由题目所知：字符串 $S(0)$ 是 `moo`, 现在要求第 $11$ 个字符，显然字符串 $S(0)$ 不够长； 同样 $S(1)$ 的长度是 $10$，也不够长；$S(2)$ 的长度是 $25$，够长了，$S(2)$ 的第 $11$ 个字符是 `m`，所以答案就输出 `m`。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:乘积最大3 题目描述 请你找出 M 个和为 N 的正整数，他们的乘积要尽可能的大。 输出字典序最小的一种方案。 输入输出格式 输入格式 一行，两个正整数 $N,M$ 输出格式 M 个和为 N 的，乘积尽可能的大的正整数。 输入输出样例 输入样例 #1 6 3 输出样例 #1 2 2 2 说明 对于100%的数据，$1 \\le N \\le 10^{9},1 \\le M \\le 10^{6}$。数据保证 $N \\geq M$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:三角函数 题目描述 输入一组勾股数 $a,b,c（a\\neq b\\neq c）$，用分数格式输出其较小锐角的正弦值。（要求约分。） 输入输出格式 输入格式 一行，包含三个正整数，即勾股数 $a,b,c$（无大小顺序）。 输出格式 一行，包含一个分数，即较小锐角的正弦值 输入输出样例 输入样例 #1 3 5 4 输出样例 #1 3/5 说明 数据保证：$a,b,c$ 为正整数且 $\\in [1,10^9]$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:士兵站队 题目描述 在一个划分成网格的操场上， n 个士兵散乱地站在网格点上，由整数坐标 $(x,y)$ 表示。 士兵们可以沿网格边上、下左右移动一步，但在同时刻任一网格点上只能有 1 名士兵。 按照军官的命令，他们要整齐地列成一个水平队列，即排成队列，即排成 $(x,y),(x+1,y),\\ldots,(x+n-1,y)$。请求出如何选择 x 和 y 的值才能使士兵们以最少的总移动步数排成一列。 输入输出格式 输入格式 输入的第一行是一个整数，代表士兵数 n。 第 2 到 $(n + 1)$ 行，每行 2 个整数，第 $(i + 1)$ 行的整数 $x_i, y_i$ 代表第 i 个士兵的坐标。 输出格式 输出一行一个整数，代表答案。 输入输出样例 输入样例 #1 5 1 2 2 2 1 3 3 -2 3 3 输出样例 #1 8 说明 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 10000，-10000 \\leq x,y \\leq 10000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:gcd区间 题目描述 给定 n 个正整数 $a_1,a_2,\\dots,a_n$。 m 次询问，每次询问给定一个区间 $[l,r]$，输出 $a_l,a_{l+1},\\dots,a_r$ 的最大公因数。 输入输出格式 输入格式 第一行两个整数 $n,m$。   第二行 n 个整数表示 $a_1,a_2,\\dots,a_n$。   以下 m 行，每行两个整数 $l, r$ 表示询问区间的左右端点。 输出格式 共 m 行，每行表示一个询问的答案。 输入输出样例 输入样例 #1 5 3  4 12 3 6 7  1 3  2 3  5 5  输出样例 #1 1  3  7  说明 - 对于 $30\\%$ 的数据，$1\\leq n \\leq 100，1\\leq m \\leq 10$；   - 对于 $60\\%$ 的数据，$1\\leq m \\leq 1000$； - 对于 $100\\%$ 的数据，$1 \\leq l \\leq r \\leq n \\leq 1000，1\\leq m \\leq 10^6，1 \\leq a_i \\leq 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:众所周知，czmppppp 是数学大神犇。一天，他给众蒟蒻们出了一道数论题，蒟蒻们都惊呆了。 题目描述 给定 n，求 $$\\sum_{i = 1}^n \\operatorname{lcm}(i, n)$$ 其中 $\\operatorname{lcm}(i, j)$ 表示 i 和 j 的最小公倍数。 输入输出格式 输入格式 **本题单测试点内有多组数据**。 输入的第一行是一个整数 T，表示数据组数。 接下来 T 行，每行一个整数，表示一组数据的 n。 输出格式 对于每组数据，输出一行一个整数表示答案。 输入输出样例 输入样例 #1 3 1 2 5 输出样例 #1 1  4  55 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $T \\leq 5，n \\leq 10^5$。 - 对于 $100\\%$ 的数据，$1 \\leq T \\leq 3 \\times 10^5，1 \\leq n \\leq 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[BOI2003] 团伙 题目描述 现在有 n 个人，他们之间有两种关系：朋友和敌人。我们知道： - 一个人的朋友的朋友是朋友 - 一个人的敌人的敌人是朋友 现在要对这些人进行组团。两个人在一个团体内当且仅当这两个人是朋友。请求出这些人中最多可能有的团体数。 输入输出格式 输入格式 第一行输入一个整数 n 代表人数。 第二行输入一个整数 m 表示接下来要列出 m 个关系。 接下来 m 行，每行一个字符 $opt$ 和两个整数 $p,q$，分别代表关系（朋友或敌人），有关系的两个人之中的第一个人和第二个人。其中 $opt$ 有两种可能： - 如果 $opt$ 为 `F`，则表明 p 和 q 是朋友。 - 如果 $opt$ 为 `E`，则表明 p 和 q 是敌人。 输出格式 一行一个整数代表最多的团体数。 输入输出样例 输入样例 #1 6 4 E 1 4 F 3 5 F 4 6 E 1 2 输出样例 #1 3 说明 对于 $100\\%$ 的数据，$2 \\le n \\le 1000，1 \\le m \\le 5000，1 \\le p,q \\le n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:山峰暸望 题目描述 一天，Bessie 在眺望美丽的威斯康星的群山的时候，她突然产生了疑问：哪座山是最宽的？ 她决定在地平线上，利用她的新式大量程山峰高度测量仪依次做 N（$1 \\le N \\le 10,000$）次高度测量，每次的高度值为 $H_i（1 \\le H_i \\le 1,000,000,000$）。 一座山定义为一段连续的高度序列，序列中的高度一开始单调上升（或者不变），然后单调下降（或者不变）。举例来说，$2, 3, 3, 5, 4, 4, 1$ 这一段高度序列就是一座山。如果在她的视线范围内有一段单调上升或者单调下降的序列，也算是一座山。注意，两座山之间可能会有部分重叠。 山的宽度定义为在这个山上进行的测量的次数（也就是序列的长度）。例如序列 $2, 3, 3, 5, 4, 4, 1$ 的宽度为 7。 请帮 Bessie 找到最宽的山。 下图是一个比较典型的的例子： ```plain山的形状 3211112333677777776543332111112344456765432111212111112343232111111211  高度值 aaaaa                    ccccccccccccccccccccc eeeeeee ggggggggg   bbbbbbbbbbbbbbbbbbbbbbbbbbbb             ddddd          ffffffffff                                                                hhhhhhhhh  山的编号 ``` 山标记为 `a`、`b` 等等。显然，山 `b` 有着最大的宽度，宽度为 $28$。 输入输出格式 输入格式 第一行包含一个单独的整数 N，表示高度测量的次数。 接下来的 N 行，每行一个整数，第 i 行表示第 i 次测量的高度值 $H_i$。 输出格式 仅一行，包含一个单独的整数，表示最宽的山的宽度。 输入输出样例 输入样例 #1 7 3 2 3 5 4 1 6 输出样例 #1 5 说明 **【样例说明】** 在最宽的山处测量到的高度为 $2, 3, 5, 4, 1$。其他的山包括 $3, 2$ 和 $1, 6$。 --- **【提示】** 如果你知道一座山的最高的部分（也就是山峰），你会发现，找到这座山的宽度是很容易的哦。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO4.2] 完美的牛栏The Perfect Stall 题目描述 农夫约翰上个星期刚刚建好了他的新牛棚，他使用了最新的挤奶技术。 不幸的是，由于工程问题，每个牛栏都不一样。 第一个星期，农夫约翰随便地让奶牛们进入牛栏，但是问题很快地显露出来：每头奶牛都只愿意在她们喜欢的那些牛栏中产奶。 上个星期，农夫约翰刚刚收集到了奶牛们的爱好的信息（每头奶牛喜欢在哪些牛栏产奶）。 一个牛栏只能容纳一头奶牛，当然，一头奶牛只能在一个牛栏中产奶。 给出奶牛们的爱好的信息，计算最大分配方案。 输入输出格式 输入格式 第一行为两个整数，n 和 m。n 是农夫约翰的奶牛数量，m 是新牛棚的牛栏数量。 第二行到第 $n+1$ 行 一共 n 行，每行对应若干个整数一只奶牛。第一个数字 $s_i$ 是这头奶牛愿意在其中产奶的牛栏的数目。后面的 $s_i$ 个数表示这些牛栏的编号。牛栏的编号限定在区间 $[1,m]$ 中，在同一行，一个牛栏不会被列出两次。 输出格式 只有一行，为一个整数，表示最多能分配到的牛栏的数量。 输入输出样例 输入样例 #1 5 5 2 2 5 3 2 3 4 2 1 5 3 1 2 5 1 2 输出样例 #1 4 说明 $0\\le n,m\\le 200，0\\le s_i\\le m$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数字序列 题目描述 定义函数 $\\mathrm{tostring}(n)$ 表示将数字 n 按照 $10$ 进制写成字符串。例如，$\\mathrm{tostring}(12345)={\\tt 12345}$。由此， - 定义字符串 $S_n={\\tt 1+2+3+4+\\cdots}+\\mathrm{tostring}(n)$； - 定义字符串 $S_{\\infin}=S_1+S_2+S_3+S_4+\\cdots$ 例如，$S_{\\infty}$ 的前若干项为： $$\\tt 112123123412345123456123456712345678123456789123456789101234567891011\\cdots$$ 现在询问 $S_{\\infin}$ 的第 i 位是什么字符。 输入输出格式 输入格式 第一行为正整数 $t\\ (1 \\le t \\le 10)$，表示测试数据组数。 接下来 t 行，每行一个正整数 $i\\ (1 \\le i \\le 2^{31}-1)$，表示一次询问。 输出格式 对于每一个 i，输出对应位置上的数字。 输入输出样例 输入样例 #1 2 3 8 输出样例 #1 2 2"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SCOI2005] 互不侵犯 题目描述 在 $N \\times N$ 的棋盘里面放 K 个国王，使他们互不攻击，共有多少种摆放方案。国王能攻击到它上下左右，以及左上左下右上右下八个方向上附近的各一个格子，共 8 个格子。 输入输出格式 输入格式 只有一行，包含两个数 $N,K$。 输出格式 所得的方案数 输入输出样例 输入样例 #1 3 2 输出样例 #1 16 说明 ### 数据范围及约定 对于全部数据，$1 \\le N \\le 9，0 \\le K \\le N\\times N$。 --- $\\text{upd 2018.4.25}$：数据有加强。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 细心的同事发现，小 W 最近喜欢乘电梯上上下下，究其原因，也许只有小W自己知道：在电梯里经常可以遇到他心中的女神 PR。 电梯其实是个很暧昧的地方，只有在电梯里，小 W 才有勇气如此近距离接近女神，虽然觉得有点不自在，但次数多了，女神也习惯了小 W 的存在，甚至熟悉到仿佛不说上句话自己也都觉得不合适了。可是，他们的谈话也仅仅限于今天天气不错啊或是你吃了吗之类的，往往在对方微笑点头后就再次陷入难堪的沉默之中。 于是，小 W 便在陪伴女神的同时，也关注着电梯中显示的楼层数字，并且他注意到电梯每向上运行一层需要 6 秒钟，向下运行一层需要 4 秒钟，每开门一次需要 5 秒（如果有人到达才开门），并且每下一个人需要加 1 秒。 特别指出，电梯最开始在 0 层，并且最后必须再回到 0 层才算一趟任务结束。假设在开始的时候已知电梯内的每个人要去的楼层，你能计算出完成本趟任务需要的总时间吗? 这是个很简单的问题，要知道，小 W 已经修炼到快速心算出结果的境界，现在你来编程试试吧！ 输入输出格式 输入格式 共 2 行 第 1 行，一个正整数 n，表示乘坐电梯的人数。 第 2 行，n 个正整数，$a_{i}$ 表示第 i 个人要去的楼层。 输出格式 仅 1 行，一个正整数，表示完成这趟任务需要的时间。 输入输出样例 输入样例 #1 4 2 4 3 2  输出样例 #1 59 说明 对于 $60\\%$ 的数据 $0<n<10^4$ 对于 $100\\%$ 的数据 $0<n<10^5，0<a_{i}\\leq 2\\times 10^7$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:不幸的是，644 也是这样。有天，她问 DL：“甜心，可以算一下我们的缘分吗？”唉，DL 真的很讨厌这问题，但他无法拒绝。还好，DL 是个程序设计师，所以他只要找到一个看来不错的算法并写成一个缘分计算器就可以了。在网络上搜寻了几个小时后，他决定采用以下的缘分算法： 题目描述 第一步：取出姓名的缩写（abbreviation）并接在一起。例如，如果这对恋人叫 JiangYunFan 和 TangYuRou，他们的缩写就是 JYFTYR。第二步：将每个字母用数字字符串取代。用 $\\mathrm{ST}$ 来取代 $\\tt A，\\mathrm{ST}+1$ 来取代 $\\tt B，\\mathrm{ST}+2$ 来取代 $\\tt C$，……，$\\mathrm{ST}+25$ 来取代 Z，其中 $\\mathrm{ST}$ 为一个已知的正整数。例如，如果 $\\mathrm{ST}=81，\\tt A$ 就被 $81$ 取代，$\\tt B$ 就被 $82$ 取代，……，$\\tt Z$ 则被 $106$ 取代。上面的例子 JYFTYR 则被 $901058610010598$ 取代。 第三步：重复以下操作：将相邻的两位数相加，并写下和的个位数。不难发现这个操作每进行一次，这个数字字符串就会少一位数。当这个数字变成 $100$ 或不超过两位数（第一位是 0 也算两位数）时，这个程序便停止。所得的数字就是两人的缘分。用上面的例子来说，处理的过程如下： - $901058610010598$； - $91153471011547$； - $0268718112691$； - …… - $374$； - $01$。 所以如果 $\\mathrm{ST}=81$，JiangYunFan 和 TangYuRou 的缘分便只有 1。 惨了！DL 很了解 644。他知道即使这个程序计算出的缘分高达 $99$ 她仍然会不高兴。更何况 644 还对其余很多对恋人间的缘分感兴趣，要是他一个个计算会太繁琐。如果告诉你一对恋人的姓名和一个 $\\mathrm{ST}$ 值，你能编一个程序算出他们的缘分吗？ 输入输出格式 输入格式 第一行包含一个仅含大写字母且长度为 L 的字符串。 第二行包含一个正整数 $\\mathrm{ST}$，含义如题目所述。 输出格式 输出仅一行，包含一个整数，表示两人的缘分。 输入输出样例 输入样例 #1 DLLSS 478 输出样例 #1 100 说明 ### 数据范围及约定 对于 $100\\%$ 的数据，$4 ≤ L ≤ 10，1 ≤ \\mathrm{ST} ≤ 10000$。 ### 注意 如果你和你的恋人的缘分不是 $100$，不要伤心。这没有什么大不了的。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 在 1949 年印度数学家 D. R. Daprekar 发现了一类称作 Self-Numbers 的数。对于每一个正整数 n，我们定义 $d(n)$ 为 n 加上它每一位数字的和。例如， $d(75) = 75 + 7 + 5 = 87$。给定任意正整数 n 作为一个起点，都能构造出一个无限递增的序列：$n, d(n), d(d(n)), d(d(d(n))), \\ldots$ 例如，如果你从 $33$ 开始，下一个数是 $33 + 3 + 3 = 39$，再下一个为 $39 + 3 + 9 = 51$，再再下一个为 $51 + 5 + 1 = 57$，因此你所产生的序列就像这样：$33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, \\ldots$。数字 n 被称作 $d(n)$ 的发生器。在上面的这个序列中，$33$ 是 $39$ 的发生器，$39$ 是 $51$ 的发生器，$51$ 是 $57$ 的发生器等等。有一些数有超过一个发生器，如 $101$ 的发生器可以是 $91$ 和 $100$。一个没有发生器的数被称作 Self-Number。如前 $13$ 个 Self-Number 为 $1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97$。我们将第 i 个 Self-Number 表示为 $a_i$，所以 $a_1 = 1, a_2 = 3, a_3 = 5, \\ldots$。 输入输出格式 输入格式 输入包含整数 $N, K, s_1, \\ldots, s_K$，其中 $1 \\le N \\le {10}^7、1 \\le K \\le 5000$，以空格和换行分割。 输出格式 在第一行你需要输出一个数，这个数表示在闭区间 $[1, N]$ 中 Self-Number 的数量。第二行必须包含以空格划分的 K 个数，表示 $a_{s_1}, \\ldots, a_{s_K}$，这里保证所有的 $a_{s_1}, \\ldots, a_{s_K}$ 都小于 N。（例如，如果 $N = 100，s_k$ 可以为 $1 \\sim 13$，但不能为 $14$，因为 $a_{14} = 108 > 100$） 输入输出样例 输入样例 #1 100 10 1 2 3 4 5 6 7 11 12 13  输出样例 #1 13 1 3 5 7 9 20 31 75 86 97 说明 对于 $100 \\%$ 的数据，$1 \\le N \\le {10}^7，1 \\le K \\le 5000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:发射站 题目描述 某地有 N 个能量发射站排成一行，每个发射站 i 都有不相同的高度 $H_i$，并能向两边（两端的发射站只能向一边）同时发射能量值为 $V_i$ 的能量，发出的能量只被两边**最近的且比它高**的发射站接收。显然，每个发射站发来的能量有可能被 0 或 1 或 2 个其他发射站所接受。 请计算出接收最多能量的发射站接收的能量是多少。 输入输出格式 输入格式 第 1 行一个整数 N。 第 2 到 $N+1$ 行，第 $i+1$ 行有两个整数 $H_i$ 和 $V_i$，表示第 i 个发射站的高度和发射的能量值。 输出格式 输出仅一行，表示接收最多能量的发射站接收到的能量值。答案不超过 32 位带符号整数的表示范围。 输入输出样例 输入样例 #1 3 4 2  3 5  6 10 输出样例 #1 7 说明 对于 $40\\%$ 的数据，$1\\le N\\le 5000,1\\le H_i\\le 10^5,1\\le V_i\\le 10^4$。 对于 $70\\%$ 的数据，$1\\le N\\le 10^5,1\\le H_i\\le 2\\times 10^9,1\\le V_i\\le 10^4$。 对于 $100\\%$ 的数据，$1\\le N\\le 10^6,1\\le H_i\\le 2\\times 10^9,1\\le V_i\\le 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:刺杀大使 题目描述 某组织正在策划一起对某大使的刺杀行动。他们来到了使馆，准备完成此次刺杀，要进入使馆首先必须通过使馆前的防御迷阵。 迷阵由 $n\\times m$ 个相同的小房间组成，每个房间与相邻四个房间之间有门可通行。在第 n 行的 m 个房间里有 m 个机关，这些机关必须全部打开才可以进入大使馆。而第 1 行的 m 个房间有 m 扇向外打开的门，是迷阵的入口。除了第 1 行和第 n 行的房间外，每个房间都被使馆的安保人员安装了激光杀伤装置，将会对进入房间的人造成一定的伤害。第 i 行第 j 列 造成的伤害值为 $p_{i,j}$（第 1 行和第 n 行的 p 值全部为 0）。 现在某组织打算以最小伤害代价进入迷阵，打开全部机关，显然，他们可以选 择任意多的人从任意的门进入，但必须到达第 n 行的每个房间。一个士兵受到的伤害值为他到达某个机关的路径上所有房间的伤害值中的最大值，整个部队受到的伤害值为所有士兵的伤害值中的最大值。现在，这个恐怖组织掌握了迷阵的情况，他们需要提前知道怎么安排士兵的行进路线可以使得整个部队的伤害值最小。 输入输出格式 输入格式 第一行有两个整数 $n,m$，表示迷阵的大小。 接下来 n 行，每行 m 个数，第 i 行第 j 列的数表示 $p_{i,j}$。 输出格式 输出一个数，表示最小伤害代价。 输入输出样例 输入样例 #1 4 2 0 0  3 5  2 4  0 0  输出样例 #1 3 说明 - $50\\%$ 的数据，$n,m \\leq 100$； - $100\\%$ 的数据，$n,m \\leq 1000，p_{i,j} \\leq 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:在花费 $500$ 第纳尔开通了至 Capua 的商路后，来自 Capua 的船只源源不断地驶来，Genoa 急需建立一个仓库来临时存放送往 Capua 的货物。 题目描述 Genoa 的货物有三种：陶器，家具，大理石，共有 n 个。他们的重量分别为 1，2，3 个单位。现在，有 p 艘 Capua 的船只在等待着仓库的货物，你应该将仓库里的货物分成 p 堆，堆放规则如下： - 同一堆中，重量从下至上应该是递减的（显然不能把大理石堆放在陶器或家具上）。 - 任意两堆重量之差不能超过 3 个单位，否则会因分配过于不均发生船只间的冲突。 请你完成这个任务，给出一种可行的方案。 输入输出格式 输入格式 第一行有一个整数，表示货物的个数 n。   第二行有一个整数，表示堆数 p。   第三行有 n 个整数，第 i 个整数表示第 i 个货物的重量 $a_i$。 输出格式 **本题存在 Special Judge**。 输出 p 行，每行若干个整数描述一堆货物，按照每堆**从下到上**的顺序列出该堆中每个货物的数量。 输入输出样例 输入样例 #1 6 3 3 2 2 1 1 1 输出样例 #1 3 1 2 1 2 1 说明 #### 数据规模与约定 对于全部的测试点，保证 $2 \\leq n \\leq 10^3，1 \\leq p \\leq \\lfloor\\frac n 2 \\rfloor，1 \\leq a_i \\leq 3$。 #### 说明 感谢 @cn：苏卿念 提供spj。 spj说明： ``` score:ouo：你的输出里面有不是'1','2','3',' ','\\n','\\r'的东西，具体以ASCII的第X号字符 score:pvp：你在第x组的时候装下了超过规定数量的'3'|'2'|'1'。 score:TAT：蛇皮judge没能读入到想要读入的东东(类似于你直接提交了一个puts(  / 特别特别多的空格/ )) score:qaq：你把重量为w1的货物放到了w2上面(w1>w2)在第i组的第j个货物 score:ovo：你没有装足够的x score:qwq：你第i组和第j组的差的绝对值>3了，(要打架了)，第i组的重量和为x，第j组的重量和为y。 score:pwp：答案正确，恭喜你嘤嘤嘤 ```"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:凯撒密码 题目描述 在元老院的支持下，Caesar率领罗马军团进攻高卢地区。但是他的军事行动并不顺利，他急需你的支持。 一天，你突然受到Caesar从前线写来的信。为了防止敌军偷窃情报，Caesar决定用自创的密码来写这封信。但是面对满纸的乱码，你也无从下手。于是你前往元老院询问这种密码的玄机。 元老们告诉你，这是凯撒移位密码（世界上最早的加密术——编者注），解读它非常的简单： 对于明文中的每个字母，Caesar会用它后面的第t个字母代替。例如，当t=3时，字母A将变成C，字母B将变成D，……，字母Y将变成A，字母Z将变成B（假设字母表是循环的）。 这样一来，字母表：A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 将变成： C D E F G H I J K L M N O P Q R S T U V W X Y Z A B 明文：  I Need Soldiers  将加密为 密文：  K Pggf Uqnfkgtu 如此一来，需要传达的信息在外人看来就如同天书了。加上Caesar会不时更换t的值，使得密码变得更加难以捉摸。 你的任务是将Caesar的密码翻译为明文。 输入输出格式 输入格式 你将得到若干段Caesar的密码，我们保证这是一句成文的英文句子。输入文件将保证小于50KB。 每个句子以一行“START”开始，下一行描述这个句子，再下一行以“END”结束。整个输入文件以“ENDOFINPUT”结束。 输出格式 对于每个句子，输出翻译后的明文 输出全部转为大写！ 输入输出样例 输入样例 #1 START  NS BFW, JAJSYX TK NRUTWYFSHJ FWJ YMJ WJXZQY TK YWNANFQ HFZXJX  END  START  N BTZQI WFYMJW GJ KNWXY NS F QNYYQJ NGJWNFS ANQQFLJ YMFS XJHTSI NS WTRJ  END  START  IFSLJW PSTBX KZQQ BJQQ YMFY HFJXFW NX RTWJ IFSLJWTZX YMFS MJ  END  ENDOFINPUT  输出样例 #1 IN WAR, EVENTS OF IMPORTANCE ARE THE RESULT OF TRIVIAL CAUSES  I WOULD RATHER BE FIRST IN A LITTLE IBERIAN VILLAGE THAN SECOND IN ROME  DANGER KNOWS FULL WELL THAT CAESAR IS MORE DANGEROUS THAN HE  说明 1.如果你有看过《福尔摩斯探案集》的话，请回忆“跳舞娃娃”密码破译第一步； 2.我想这些可能会对你有帮助： e 0.1268 t 0.0978 a 0.0788 o 0.0766 i 0.0707 n 0.0706 s 0.0634 r 0.0594"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:设计道路 题目描述 Caesar远征高卢回来后，对你大加赞赏，他亲自来到Genoa视察。 Genoa在你的建设下变得无比繁荣，由于财政收入的增加，你为城市修建了交通系统。古罗马的交通系统由两部分组成——Dirt Road和Rome Road。两个路口间只可能是其中一种道路。在Rome Road上可以驾驶马车，而在Dirt Road上则不行。由于修建道路是一项浩大的工程，使得你无法将整个城市用Rome Road连接起来。 现在Caesar已经到达码头，他要求去你家参观。Caesar由一个癖好，喜欢坐车而不喜欢走路。所以Caesar走Dirt Road时的不满值要比走Rome Road时大。 为了不让Caesar过于不满而罢免你的职位，请设计路线使得Caesar的不满值最小。 输入输出格式 输入格式 输入数据第一行有两个实数，分别表示走Dirt Road和Rome Road一个单位长度时Caesar的不满值。接下来是一个整数N（N<=1000），代表路口总数。接下来有N行，每行一组实数(x,y)分别描述这N个路口的坐标。接下来有若干行，每行一组整数（i,j），表示第i个路口与第j个路口间为Rome Road，以0 0结束。最后两行，每行一对实数，分别描述码头和你家的坐标。 输出格式 输出Caesar从码头到你家的最小不满值，保留4位小数 输入输出样例 输入样例 #1 100.0 2.0  2  1.0 0.0  2.0 1.0  1 2  0 0  0.0 0.0  2.0 2.0  输出样例 #1 202.8284"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:逆序对 题目描述 猫猫 TOM 和小老鼠 JERRY 最近又较量上了，但是毕竟都是成年人，他们已经不喜欢再玩那种你追我赶的游戏，现在他们喜欢玩统计。 最近，TOM 老猫查阅到一个人类称之为“逆序对”的东西，这东西是这样定义的：对于给定的一段正整数序列，逆序对就是序列中 $a_i>a_j$ 且 $i<j$ 的有序对。知道这概念后，他们就比赛谁先算出给定的一段正整数序列中逆序对的数目。注意序列中可能有重复数字。 **Update:数据已加强。** 输入输出格式 输入格式 第一行，一个数 n，表示序列中有 n个数。 第二行 n 个数，表示给定的序列。序列中每个数字不超过 $10^9$。 输出格式 输出序列中逆序对的数目。 输入输出样例 输入样例 #1 6 5 4 2 6 3 1 输出样例 #1 11 说明 对于 $25\\%$ 的数据，$n \\leq 2500$ 对于 $50\\%$ 的数据，$n \\leq 4 \\times 10^4$。 对于所有数据，$n \\leq 5 \\times 10^5$ 请使用较快的输入输出 应该不会 $O(n^2)$ 过 50 万吧 by chen_zhe"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:NOIP2016 普及组 T1 题目描述 P 老师需要去商店买 n 支铅笔作为小朋友们参加 NOIP 的礼物。她发现商店一共有 3 种包装的铅笔，不同包装内的铅笔数量有可能不同，价格也有可能不同。为了公平起 见，P 老师决定只买同一种包装的铅笔。 商店不允许将铅笔的包装拆开，因此 P 老师可能需要购买超过 n 支铅笔才够给小朋友们发礼物。 现在 P 老师想知道，在商店每种包装的数量都足够的情况下，要买够至少 n 支铅笔最少需要花费多少钱。 输入输出格式 输入格式 第一行包含一个正整数 n，表示需要的铅笔数量。 接下来三行，每行用 2 个正整数描述一种包装的铅笔：其中第 1 个整数表示这种包装内铅笔的数量，第 2 个整数表示这种包装的价格。 保证所有的 7 个数都是不超过 $10000$ 的正整数。 输出格式 1 个整数，表示 P 老师最少需要花费的钱。 输入输出样例 输入样例 #1 57 2 2 50 30 30 27 输出样例 #1 54 输入样例 #2 9998 128 233 128 2333 128 666 输出样例 #2 18407 输入样例 #3 9999 101 1111 1 9999 1111 9999 输出样例 #3 89991 说明 铅笔的三种包装分别是： - 2 支装，价格为 2; - $50$ 支装，价格为 $30$; - $30$ 支装，价格为 $27$。 P老师需要购买至少 $57$ 支铅笔。 如果她选择购买第一种包装，那么她需要购买 $29$ 份，共计 $2 \\times 29 = 58$ 支，需要花费的钱为 $2 \\times 29 = 58$。 实际上，P 老师会选择购买第三种包装，这样需要买 2 份。虽然最后买到的铅笔数量更多了，为 $30 \\times 2 = 60$ 支，但花费却减少为 $27 \\times 2 = 54$，比第一种少。 对于第二种包装，虽然每支铅笔的价格是最低的，但要够发必须买 2 份，实际的花费达到了 $30  \\times 2 = 60$，因此 P 老师也不会选择。 所以最后输出的答案是 $54$。 【数据范围】 保证所有的 7 个数都是不超过 $10000$ 的正整数。 【子任务】 子任务会给出部分测试数据的特点。如果你在解决题目中遇到了困难，可以尝试只解决一部分测试数据。 每个测试点的数据规模及特点如下表："}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 俗话说的好：“知己知彼，百战不殆”。L 国的指挥官想派出间谍前往I国，于是，选人工作就落到了你身上。 你现在有 N 个人选，每个人都有这样一些数据：A（能得到多少资料）、B（伪装能力有多差）、C（要多少工资）。已知敌人的探查间谍能力为 M（即去的所有人 B 的和要小于等于 M）和手头有 X 元钱，请问能拿到多少资料？ 输入输出格式 输入格式 第一行三个整数 $N, M, X$ 代表总人数，敌国侦察能力和总钱数。 第二行至第 $N-1$ 行，每行三个整数 $A_i, B_i, C_i$ 分别表示第 i 个人能得到的资料，他的伪装能力有多差和他要的工资。 输出格式 一行一个整数表示能得到的资料总数。 输入输出样例 输入样例 #1 3 10 12 10 1 11 1 9 1 7 10 12 输出样例 #1 11 说明 数据范围：$1\\le n\\le 100，1\\le m\\le 1000，1\\leq x\\leq 1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:L 国即将与 I 国发动战争！！ 题目描述 L 国的指挥官想让他的每一个军营都呈现出国徽形——L 形（方向无所谓）。当然，他的指挥营除外（这叫做个性），他想不出该怎么排，就这样，这任务又变成了你的······ 输入输出格式 输入格式 一行三个数：n，x，y 表示军营大小为  $2^n$，指挥营在 $(x,y)$ 的位置上。 输出格式 $2^n$ 行，每行 $2^n$ 个数，表示军营号（按先行后列顺序）指挥营用 0 表示。 输入输出样例 输入样例 #1 4 1 3 输出样例 #1 1 1 0 2 3 3 4 4 5 5 6 6 7 7 8 8 1 9 2 2 3 10 10 4 5 11 11 6 7 12 12 8 13 9 9 14 15 15 10 16 17 11 18 18 19 19 12 20 13 13 14 14 21 15 16 16 17 17 18 22 22 19 20 20 23 23 24 21 21 25 26 26 27 27 28 28 22 29 30 30 23 31 24 24 25 25 32 26 27 33 33 28 29 29 34 30 35 31 31 36 37 32 32 38 39 39 33 40 41 34 34 42 35 35 36 36 37 37 38 38 43 39 40 40 41 41 42 42 44 44 45 45 46 46 47 43 43 48 49 49 50 50 51 51 44 52 52 45 46 53 47 47 48 48 54 49 50 55 55 51 56 52 57 57 58 53 53 59 60 54 54 61 62 62 55 63 56 56 57 64 58 58 59 59 60 60 61 61 65 62 63 63 66 66 67 64 64 68 69 69 70 70 71 65 65 72 73 73 66 74 67 67 68 68 75 69 70 76 71 71 72 72 77 73 78 74 74 79 80 75 75 81 82 76 76 83 84 77 77 85 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 说明 $1\\le n\\le10，1\\le x,y\\le2^n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2009] 诗人小G 题目描述 小 G 是一个出色的诗人，经常作诗自娱自乐。但是，他一直被一件事情所困扰，那就是诗的排版问题。 一首诗包含了若干个句子，对于一些连续的短句，可以将它们用空格隔开并放在一行中，注意一行中可以放的句子数目是没有限制的。小 G 给每首诗定义了一个行标准长度（行的长度为一行中符号的总个数），他希望排版后每行的长度都和行标准长度相差不远。显然排版时，不应改变原有的句子顺序，并且小 G 不允许把一个句子分在两行或者更多的行内。在满足上面两个条件的情况下，小 G 对于排版中的每行定义了一个不协调度, 为这行的实际长度与行标准长度差值绝对值的 P 次方，而一个排版的不协调度为所有行不协调度的总和。 小 G 最近又作了几首诗，现在请你对这首诗进行排版，使得排版后的诗尽量协调（即不协调度尽量小），并把排版的结果告诉他。 输入输出格式 输入格式 输入文件中的第一行为一个整数 T，表示诗的数量。 接下来为 T 首诗，这里一首诗即为一组测试数据。每组测试数据中的第一行为三个由空格分隔的正整数 $N,L,P$，其中：N 表示这首诗句子的数目，L 表示这首诗的行标准长度，P 的含义见问题描述。 从第二行开始，每行为一个句子，句子由英文字母、数字、标点符号等符号组成（ASCII 码 $33 \\sim 127$，但不包含 `-`）。 输出格式 于每组测试数据，若最小的不协调度不超过 $10^{18}$，则第一行为一个数，表示不协调度。接下来若干行，表示你排版之后的诗。注意：在同一行的相邻两个句子之间需要用一个空格分开。 如果有多个可行解，它们的不协调度都是最小值，则输出任意一个解均可。若最小的不协调度超过 $10^{18}$，则输出 `Too hard to arrange`。每组测试数据结束后输出 `--------------------`，共 20 个 `-`，`-` 的 ASCII 码为 45，请勿输出多余的空行或者空格。 输入输出样例 输入样例 #1 4 4 9 3 brysj, hhrhl. yqqlm, gsycl. 4 9 2 brysj, hhrhl. yqqlm, gsycl. 1 1005 6 poet 1 1004 6 poet 输出样例 #1 108 brysj, hhrhl. yqqlm, gsycl. -------------------- 32 brysj, hhrhl. yqqlm, gsycl. -------------------- Too hard to arrange -------------------- 1000000000000000000 poet -------------------- 说明 #### 样例输入输出 1 解释 前两组输入数据中每行的实际长度均为 6，后两组输入数据每行的实际长度均为 4。一个排版方案中每行相邻两个句子之间的空格也算在这行的长度中（可参见样例中第二组数据）。每行末尾没有空格。 #### 数据规模与约定 | 测试点 | T | N | L | P | | - | - | - | - | - | | 1 | $\\le 10$ | $\\le18$ | $\\le 100$ | $\\le5$ | | 2 | $\\le 10$ | $\\le 2\\times 10^3$ |  $\\le 6\\times 10^4$| $\\le10$ | | 3 | $\\le 10$ | $\\le 2\\times 10^3$ |  $\\le 6\\times 10^4$| $\\le10$ | | 4 | $\\le 5$ | $\\le 10^5$ | $\\le 200$ | $\\le10$ | | 5 | $\\le 5$ | $\\le 10^5$ | $\\le 200$ | $\\le10$ | | 6 | $\\le 5$ | $\\le 10^5$ | $\\le 3\\times 10^6$ | 2 | | 7 | $\\le 5$ | $\\le 10^5$ | $\\le 3\\times 10^6$ | 2 | | 8 | $\\le 5$ | $\\le 10^5$ | $\\le 3\\times 10^6$ | $\\le10$ | | 9 | $\\le 5$ | $\\le 10^5$ | $\\le 3\\times 10^6$ | $\\le10$ | | $10$ | $\\le 5$ | $\\le 10^5$ | $\\le 3\\times 10^6$ | $\\le10$ | 所有句子的长度不超过 $30$ 。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 为了在敌国渗透作战，指挥官决定：派出伞兵前往敌国！然而敌国的风十分强烈，能让伞兵在同一高度不停转悠，直到被刮到一个无风区……（可怜的小兵） 输入输出格式 输入格式 第一行：n、m两个正整数，表示敌国的大小。 以下n行，每行m个字符，“u”表示风向北吹；“d”表示风向南吹；“l”表示风向西吹；“r”表示风向东吹；“o”表示无风。（上北下南，左西右东) 输出格式 一个数：表示有几个点可以放下伞兵。 输入输出样例 输入样例 #1 5 5 rrrrr rdddr rroll uuuuu uuuuu 输出样例 #1 19 说明 数据范围： 1≤n≤1000,1≤m≤1000."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 蒟蒻虽然忘记密码，但他还记得密码是由一个字符串组成。密码是由原文字符串（由不超过 50 个小写字母组成）中每个字母向后移动 n 位形成的。`z` 的下一个字母是 `a`，如此循环。他现在找到了移动前的原文字符串及 n，请你求出密码。 输入输出格式 输入格式 第一行：n。第二行：未移动前的一串字母。 输出格式 一行，是此蒟蒻的密码。 输入输出样例 输入样例 #1 1 qwe 输出样例 #1 rxf 说明 字符串长度 $\\le 50$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:三子棋II 题目描述 小 a 和 uim 喜欢互相切磋三子棋。三子棋大家都玩过是吗？就是在九宫格里面 $\\verb!OOXX!$（别想歪了），谁连成 3 个就赢了。 虽然小 a 很努力地记录棋谱，可还是下不过 uim。 由于小 a 比较愚蠢，uim 总是让他先。小 a 下的第一个子一定是在中心。 这回小 a 希望使用计策。目前棋局刚开始，棋盘上不到 3 颗棋子，小 a 想知道，根据目前的局势，他有没有必胜策略（也就是自己以最佳方案下棋，无论对手怎么下，自己必胜）。 输入输出格式 输入格式 共三行，表示棋局，$\\verb!O!$ 表示小 a，$\\verb!X!$ 表示uim，$\\verb!-!$ 表示没有落子。保证棋子数不超过三个。 输出格式 共两行。 第一行，如果小 a 赢，输出 `xiaoa will win.`。如果小 a 必败，输出 `uim will win.`。如果不知道，输出 `Dont know.`。 第二行，输出他们已经下了几个棋子。 输入输出样例 输入样例 #1 --- -O- --- 输出样例 #1 Dont know. 1 输入样例 #2 --- -O- -XO 输出样例 #2 xiaoa will win. 3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:保龄球 题目描述 DL 算缘分算得很烦闷，所以常常到体育馆去打保龄球解闷。因为他保龄球已经打了几十年了，所以技术上不成问题，于是他就想玩点新花招。 DL 的视力真的很不错，竟然能够数清楚在他前方十米左右每个位置的瓶子的数量。他突然发现这是一个炫耀自己好视力的借口——他看清远方瓶子的个数后从某个位置发球，这样就能打倒一定数量的瓶子。 1. $\\bigcirc \\bigcirc \\bigcirc$ 2. $\\bigcirc \\bigcirc \\bigcirc\\ \\bigcirc$ 3. $\\bigcirc$ 4. $\\bigcirc\\ \\bigcirc$ 如上图，每个 “$\\bigcirc$” 代表一个瓶子。如果 DL 想要打倒 3 个瓶子就在 1 位置发球，想要打倒 4 个瓶子就在 2 位置发球。 现在他想要打倒 m 个瓶子。他告诉你每个位置的瓶子数，请你给他一个发球位置。 输入输出格式 输入格式 第一行包含一个正整数 n，表示位置数。 第二行包含 n 个正整数 $a_i$ ，表示第 i 个位置的瓶子数，保证各个位置的瓶子数不同。 第三行包含一个正整数 Q，表示 DL 发球的次数。 第四行至文件末尾，每行包含一个正整数 m，表示 DL 需要打倒 m 个瓶子。 输出格式 共 Q 行。每行包含一个整数，第 i 行的整数表示 DL 第 i 次的发球位置。若无解，则输出 0。 输入输出样例 输入样例 #1 5 1 2 4 3 5 2 4 7 输出样例 #1 3 0 说明 【数据范围】 对于 $50\\%$ 的数据，$1 \\leq n, Q \\leq 1000, 1 \\leq a_i, m \\leq 10^5$。 对于 $100\\%$ 的数据，$1 \\leq n,Q \\leq 100000, 1 \\leq a_i, m \\leq 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:本题数据已加强，请使用 FFT/NTT，不要再交 Python 代码浪费评测资源。 题目描述 给你两个正整数 $a,b$，求 $a \\times b$。 输入输出格式 输入格式 第一行一个正整数，表示 a；   第二行一个正整数，表示 b。 输出格式 输出一行一个整数表示答案。 输入输出样例 输入样例 #1 83517934 327830610 输出样例 #1 27379735249159740 说明 【数据范围】    $1\\le a,b \\le 10^{1000000}$ 可能需要一定程度的常数优化。   数据由 NaCly_Fish 重造"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:成功密码 题目描述 void\\_rank匪别人的书来看，原本想看杂志颓废的，结果不小心拿错拿成了被导师称作旁门左道的高中数学杂志《成功密码》。数学差得不行的void\\_rank实在不会用数学方法处理这些奇怪的题目，于是来问你了。 求 $\\sum_{i=1}^{N}\\frac{x^{i}}{i}$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:赌场是暴利的。大赌场通过游戏规则控制游戏的公平来赚钱。虽然规则看似很公平，但实际上是稍微有点不公平的，而大赌场由于客流量大，资金流量大，这点稍微的不公平就被放大到能让赌场得到很可观的收入。同时，这些个不公平有时并不是规则的不公平，而是道具不公平。比如说灌铅的骰子，它和正常骰子不一样，它投出 $Q$ 种点数的概率并不一样。有时，为了不让顾客察觉，他们每一次游戏结束后都有可能更换骰子。 题目描述 作弊的赌场有 N 个骰子，在这个赌场可能发生了 M 次游戏，每次游戏包括一个骰子投出的点数，我们并不知道这个骰子的编号，但知道第 i 次游戏投出的点数 $O(i)$。 第 i 个骰子投出点数 j 的概率是 $A(i,j)$，用完第 i 个骰子，下一次用第 j 个骰子的概率为 $B(i,j)$。特别地，对于第一次游戏，用第 i 个骰子的概率为 $\\pi(i)$。 好奇的小 v 来问你，在这个赌场发生这 M 次游戏的概率。 输入输出格式 输入格式 第一行两个正整数 $N,M,Q$。 第二行 N 个浮点数，表示 $\\pi(i)$。 第三行至 $2+N$ 行有 $N\\times Q$ 个浮点数，第 $i+2$ 行 j 列表示 $A(i,j)$。 第 $N+3$ 至 $2\\times N+2$ 行有 $N\\times N$ 个浮点数，第 $N+2+i$ 行 j 列表示 $B(i,j)$。 第 $2\\times N+3$ 行有 M 个正整数，表示 M 次游戏的结果 $O_i$，也就是每次游戏投出的点数。 输出格式 表示所求概率，保留四位位小数。 输入输出样例 输入样例 #1 3 10 3 1 0 0 0.03 0.03 0.94 0.02 0.02 0.96 0.99 0.005 0.005 0.01 0.99 0 0.05 0.05 0.90 0.98 0.002 0.008  2 2 0 2 2 0 2 2 0 2 输出样例 #1 0.4483 说明 ### 数据范围及约定 - 对于 $30\\%$ 的数据：$M \\le 100，1 \\le N，Q \\le 10$； - 对于 $100\\%$ 的数据：$1 \\le M \\le 1000，1 \\le N，Q \\le 50$。 对于矩阵 $A,B$，向量 $\\pi$ 都具备概率转移的特征条件。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:于是小 v 为了自己一天的幸福，来向你求助。 题目描述 小 v 所在的世界被规划成了树形结构，每一个节点上都可以建一个女仆咖啡厅或者桌游吧或者什么都不建。在确定点 1 为根节点之后，规划局要求：对于每一个非叶子的节点 i，设它子树（包括自己）中所有的女仆咖啡厅的数量为 $cafe_i$，桌游吧数目为 $table_i$，都有 $cafe_i=table_i$。 妹妹的问题是：这颗树最多能放多少个女仆咖啡厅。 输入输出格式 输入格式 输入的第一行是，一个正整数 n，表示世界节点数。 第 2 至 n 行，每行两个正整数 u，v，表示 u 与 v 间有一条边。 输出格式 只有一行，最多能放的女仆咖啡厅的个数。 输入输出样例 输入样例 #1 5 1 2 2 3 3 4 2 5 输出样例 #1 2 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $n\\le20$。 - 对于 $100\\%$ 的数据，保证 $1\\le n\\le10^5，1 \\leq u, v \\le n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:【深基9.例4】求第 k 小的数 题目描述 输入 n（$1 \\le n < 5000000$ 且 n 为奇数）个数字 $a_i（1 \\le a_i < {10}^9$），输出这些数字的第 k 小的数。最小的数是第 0 小。 请尽量不要使用 `nth_element` 来写本题，因为本题的重点在于练习分治算法。 输入输出格式 输入格式"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 Let N be a positive integer and let N be split into k equal parts, r = N/k, so that N = r + r + ... + r. Let P be the product of these parts, P = r ×r × ... × r = rk."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 小 A “刷题”十分猖狂，明目张胆地“刷题”。他现在在小书童里发现了 n 样他喜欢的“题目”，每“题”都有他的需要时间，而老师布置了 m 项作业，每项作业都有它的需要时间及分值，老师规定 k 分以上算及格。小 A 只剩 r 个单位时间，他想在及格的基础上更多地“刷题”。 输入输出格式 输入格式 第一行四个整数 $n,m,k,r$。 第二行有 n 个数，代表每“题”他的需要时间。 第三行有 m 个数，表示每项作业它的需要时间。 第四行有 m 个数，代表每项作业它的分值。 输出格式 一个数，代表小 A 能刷几道题。 输入输出样例 输入样例 #1 3 4 20 100 15 20 50 10 15 40 40 5 5 10 15 输出样例 #1 2 说明 ### 数据范围及约定"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:防护伞 题目描述 据说 $2012$ 的灾难和太阳黑子的爆发有关。于是地球防卫小队决定制造一个特殊防护伞，挡住太阳黑子爆发的区域，减少其对地球的影响。由于太阳相对于地球来说实在是太大了，我们可以把太阳表面看作一个平面，中心定为 $(0,0)$。根据情报，在 $2012$ 年时，太阳表面上会产生 N 个黑子区域，每个黑子视为一个点。特殊防护伞可以看作一个巨大的圆面，现在地球防卫小队决定将它的中心定位于某个黑子，然后用伞面挡住其他黑子。因为制造防护伞的材料成本特别高，所以我们希望伞面尽可能的小。 输入输出格式 输入格式 第一行：一个整数 N，表示黑子个数。 第 2 到 $N-1$ 行：每行两个整数，表示黑子的坐标 $(x,y)$。 输出格式 第一行：一个实数，表示伞的面积。 输入输出样例 输入样例 #1 3  0  1   -8  -4   -1  4   输出样例 #1 279.6017 说明 ### 数据范围及约定 - 对于 $50\\%$ 的数据：$2 \\le N \\le 100$。 - 对于 $100\\%$ 的数据：$2 \\le N \\le 1000，-10000\\le x,y\\le 10000$。 ### 注意 - 精确到小数点后 4 位。 - $\\pi$ 取 $3.1415926535$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:外星密码 题目描述 有了防护伞，并不能完全避免 2012 的灾难。地球防卫小队决定去求助外星种族的帮助。经过很长时间的努力，小队终于收到了外星生命的回信。但是外星人发过来的却是一串密码。只有解开密码，才能知道外星人给的准确回复。解开密码的第一道工序就是解压缩密码，外星人对于连续的若干个相同的子串 $\\texttt{X}$ 会压缩为 $\\texttt{[DX]}$ 的形式（D 是一个整数且 $1\\leq D\\leq99$），比如说字符串 $\\texttt{CBCBCBCB}$ 就压缩为 $\\texttt{[4CB]}$ 或者$\\texttt{[2[2CB]]}$，类似于后面这种压缩之后再压缩的称为二重压缩。如果是 $\\texttt{[2[2[2CB]]]}$ 则是三重的。现在我们给你外星人发送的密码，请你对其进行解压缩。 输入输出格式 输入格式 输入一行，一个字符串，表示外星人发送的密码。 输出格式 输出一行，一个字符串，表示解压缩后的结果。 输入输出样例 输入样例 #1 AC[3FUN] 输出样例 #1 ACFUNFUNFUN 说明 【数据范围】 对于 $50\\%$ 的数据：解压后的字符串长度在 $1000$ 以内，最多只有三重压缩。 对于 $100\\%$ 的数据：解压后的字符串长度在 $20000$ 以内，最多只有十重压缩。保证只包含数字、大写字母、`[` 和 `]`。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:迷之阶梯 题目描述 在经过地球防卫小队的数学家连续多日的工作后，外星人发的密码终于得以破解。它 告诉我们在地球某一处的古老遗迹中，存在有对抗这次灾难的秘密武器。防卫小队立即赶 到这处遗迹。要进入遗迹，需要通过一段迷之阶梯。登上阶梯必须要按照它要求的方法， 否则就无法登上阶梯。它要求的方法有以下三个限制： 1. 如果下一步阶梯的高度只比当前阶梯高 1，则可以直接登上。 2. 除了第一步阶梯外，都可以从当前阶梯退到前一步阶梯。 3. 当你连续退下 k 后，你可以一次跳上不超过当前阶梯高度 $2^{k}$的阶梯。比如说你现 在位于第 j 步阶梯，并且是从第 j+k 步阶梯退下来的，那么你可以跳到高度不超过当前阶 梯高度+$2^{k}$的任何一步阶梯。跳跃这一次只算一次移动。 开始时我们在第一步阶梯，由于时间紧迫，我们需要用最少的移动次数登上迷之阶梯。 请你计算出最少的移动步数。 输入输出格式 输入格式 第一行：一个整数 N，表示阶梯步数。 第二行：N 个整数，依次为每层阶梯的高度，保证递增。 输出格式 第一行：一个整数，如果能登上阶梯，输出最小步数，否则输出-1。 输入输出样例 输入样例 #1 5 0  1  2  3  6  输出样例 #1 7 说明 【样例解释】 连续登 3 步，再后退 3 步，然后直接跳上去。 【数据范围】 对于 50%的数据：1≤N≤20。 对于 100%的数据：1≤N≤200。 对于 100%的数据：每步阶梯高度不超过 2^31-1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:套利 题目描述 套利是利用汇率差异实现货币增值。例如，1美元可以兑换0.5英镑、1英镑可以兑换10法郎、1法郎可以兑换0.21美元。接下来，一个聪明的交易商就可以从1美元开始，0.5 \\* 10.0 \\* 0.21 =1.05美元，获得了5%的利润。 你的任务是写一个程序，从输入文件读入汇率清单，然后决定套利是有可能的或没有可能的。 输入输出格式 输入格式 输入文件包含多组数据，每组数据的第一行是一个整数n( 1<=n<=30 )。代表有多少种货币。接下来n行字符串，每行表示一种货币的名称（名称中不会出现空格）。下一行是一个整数m，约定了汇率表的长度。随后的m行中，每行有三部分组成。The last m lines each contain the name ci of a source currency, a real number rij which represents the exchange rate from ci to cj and a name cj of the destination currency. Exchanges which do not appear in the table are impossible. 每组数据之间空一行。当n=0时表示输入数据结束。 输出格式 第i组数据，输出Case i: 后，如果可以套利，输出Yes,否则输出No。 输入输出样例 输入样例 #1 3 USDollar BritishPound FrenchFranc 3 USDollar 0.5 BritishPound BritishPound 10.0 FrenchFranc FrenchFranc 0.21 USDollar 3 USDollar BritishPound FrenchFranc 6 USDollar 0.5 BritishPound USDollar 4.9 FrenchFranc BritishPound 10.0 FrenchFranc BritishPound 1.99 USDollar FrenchFranc 0.09 BritishPound FrenchFranc 0.19 USDollar 0 输出样例 #1 Case 1: Yes Case 2: No"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2010] 旅行路线 题目描述 2010 年，世博会在中国上海举办，吸引了数以千万计的中外游客前来参观。暑假期间小 Z 也来到了上海世博园， 她对世博园的拥挤早有所闻，对有的展馆甚至要排上好几个小时的队才能进入也做好了充分准备，但为了使得自己的世博之旅更加顺利舒畅，小 Z 决定在游玩之前先制定一份详细的旅行路线。 小 Z 搜集到了世博园的地图，她发现从整体上看世博园是一块非常狭长的区域，而每一个展馆占用了其中一个几乎相同大小的方块。因此可以将整个园区看成一个 $n \\times m$ 的矩阵（$n \\leq 3$），其中每一个格子为一个主题展馆。 由于不同展馆受到的关注度会有一些差别，因此排队时间的长短也不尽相同。小 Z 根据统计信息给每一个展馆 $(x, y)$ 标记了 $T_{x,y} = 0$ 或 1，如果 $T_{x,y} = 1$，表示这个展馆非常热门，需要排很长时间的队；如果 $T_{x,y} = 0$，表示这个展馆相对比较普通，几乎不需要排队即可进入参观。小 Z 希望能够制定一份合理的路线，使得能交替参观热门馆和普通馆，既不会因为总是参观热门馆而长时间在排队，也不会因为总是参观普通馆而使得游览过于平淡。同时，小 Z 办事很讲究效率，她希望在游遍所有展馆的同时，又不会走冤枉路浪费体力。因此她希望旅行路线满足以下几个限制： 1. 在参观完位于 $(x, y)$ 的展馆后，下一个参观的是一个相邻的且未被参观过的展馆 $(x^\\prime, y^\\prime)$，即 $|x-x^\\prime|+|y-y^\\prime|=1$； 2. 路线的起点位于整个矩阵的边界上，即 $x = 1$ 或 $x = n$ 或 $y = 1$ 或 $y = m$； 她制定了一个长度为 $n \\times m$ 的 01 序列 L，她希望第 i 个参观的展馆 $(x,y)$ 满足 $T_{x,y}=L_i$。 小 Z 想知道有多少条不同的旅行路线能够满足她的要求。由于最终的结果可能很大，小 Z 只想知道可行的旅行路线总数 $\\bmod\\space 11\\,192\\,869$ 的值。 输入输出格式 输入格式 第一行包含两个正整数 $n, m$。 第 2 行至第 $n+1$ 行，每行有 m 个 01 整数，其中第 $i+1$ 行第 j 个数表示 $T_{i,j}$。 第 $n+2$ 行有 $n \\times m$ 个 01 整数，其中第 i 个数表示 $L_i$ 的值。 输出格式 仅包含一个整数，表示可行的旅行路线总数 $\\bmod \\space 11\\,192\\,869$ 的值。 输入输出样例 输入样例 #1 2 2 1 0 0 1 1 0 1 0 输出样例 #1 4 说明 【样例说明】 这四条可行的旅行路线分别为： $$ \\begin{aligned} (1,1) \\to (1,2) \\to (2,2) \\to (2,1)\\\\ (1,1) \\to (2,1) \\to (2,2) \\to (1,2)\\\\ (2,2) \\to (1,2) \\to (1,1) \\to (2,1)\\\\ (2,2) \\to (2,1) \\to (1,1) \\to (1,2) \\end{aligned} $$ 【数据规模和约定】 - 对于 $10\\%$ 的数据：$n=1$； - 对于 $30\\%$ 的数据：$n=2$； - 对于 $60\\%$ 的数据：$n=3$，其中 $20\\%$ 的数据 $T_{i,j}$ 全为 0； - 对于 $100\\%$ 的数据：$m \\leq 50，L_i,T_{i,j} = 0$ 或 1。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:很久以前，魔界大旱，水井全部干涸，温度也越来越高。为了拯救居民，夜叉族国王龙溟希望能打破神魔之井，进入人界“窃取”水灵珠，以修复大地水脉。可是六界之间皆有封印，神魔之井的封印由蜀山控制，并施有封印。龙溟作为魔界王族，习有穿行之术，可任意穿行至任何留有空隙的位置。然而封印不留有任何空隙！ 龙溟无奈之下只能强行破除封印。破除封印必然消耗一定的元气。为了寻找水灵珠，龙溟必须减少体力消耗。他可以在破除封印的同时使用越行术。 题目描述 神魔之井的封印共有  n 层，每层封印都有一个坚固值。身为魔族的龙溟单独打破一层封印时需要消耗的元气为该层封印的坚固值和封印总层数  n 的平方的乘积； 但他也可以打破第 i 层到第 j 层之间的所有封印( $i<j$)，总元气消耗为第  $i,j$ 层封印的坚固值之和与第  $i,j$ 层之间所有封印层（包括第  $i,j$ 层）的坚固值之和的乘积，但为了不惊动蜀山，第  $i,j$ 层封印的坚固值之和不能大于  t （单独打破可以不遵守）。 输入输出格式 输入格式 第一行包含两个正整数  n 和  t。   第二行有  n 个正整数，第  i 个数为  $a_i$，表示第  i 层封印的坚固值。 输出格式 仅一行，包含一个正整数，表示最小消耗元气。 输入输出样例 输入样例 #1 6 10  8 5 7 9 3 5 输出样例 #1 578  说明 #### 样例解释 先单独打破第一层，再用越行术从第二层直接打破到最后一层。 这样消耗元气  $8 \\times 6^2 + (5 + 5) \\times (5 + 7 + 9 + 3 + 5) = 578$。 #### 数据范围 对于  $10\\%$ 的数据， $n\\le10$；   对于  $50\\%$ 的数据， $n\\le100$；   对于  $70\\%$ 的数据， $n\\le500$；   对于  $100\\%$ 的数据， $n\\le1000$， $a_i(1 \\le i \\le n) , t \\le 20000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[国家集训队] 圈地计划 题目描述 最近房地产商 GDOI(Group of Dumbbells Or Idiots) 从 NOI(Nuts Old Idiots) 手中得到了一块开发土地。据了解，这块土地是一块矩形的区域，可以纵横划分为 $N\\times M$ 块小区域。GDOI 要求将这些区域分为商业区和工业区来开发。根据不同的地形环境，每块小区域建造商业区和工业区能取得不同的经济价值。更具体点，对于第 i 行第 j 列的区域，建造商业区将得到 $A_{i,j}$ 收益，建造工业区将得到 $B_{i,j}$ 收益。另外不同的区域连在一起可以得到额外的收益，即如果区域 $(i,j)$ 相邻（相邻是指两个格子有公共边）有 k 块（显然 k 不超过 4）类型不同于 $(i,j)$ 的区域，则这块区域能增加 $k\\times C_{i,j}$ 收益。经过 Tiger.S 教授的勘察，收益矩阵 $A,B,C$ 都已经知道了。你能帮 GDOI 求出一个收益最大的方案么？ 输入输出格式 输入格式 输入第一行为两个整数，分别为正整数 N 和 M，分别表示区域的行数和列数； 第 2 到 $N+1$ 行，每行 M 个整数，表示商业区收益矩阵 A； 第 $N+2$ 到 $2N+1$ 行，每行 M 个整数，表示工业区收益矩阵 B； 第 $2N+2$ 到 $3N+1$ 行，每行 M 个整数，表示相邻额外收益矩阵 C。 输出格式 输出只有一行，包含一个整数，为最大收益值。 输入输出样例 输入样例 #1 3 3 1 2 3 4 5 6 7 8 9 9 8 7 6 5 4 3 2 1 1 1 1 1 3 1 1 1 1 输出样例 #1 81 说明 $N,M\\leq 100，0\\leq A_{i,j},B_{i,j},C_{i,j}\\leq 10^3$。 对于 $30\\%$ 的数据有 $N, M\\leq 6$； 对于 $50\\%$ 的数据有 $N, M \\leq 20$； 对于 $100\\%$ 的数据有 $N,M\\leq 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 爱与愁大神兴高采烈地踏出妖精系道馆——他已经获得了妖精系徽章（鼓掌）！可是一出门就遇到一群パンプジン（Because today is Halloween）！仲谋半？没事，爱与愁大神手上还仅存着一只水晶灯火灵（完克パンプジン）。或许是因为这是爱与愁大神存活的最后一只精灵，水晶灯火灵十分振奋，一击打垮了一群パンプジン。水晶灯火灵使用了一招***（被打上了马赛克？！），刚好符合以下③条规则： 1. $m,n \\in \\{1,2,\\cdots ,k\\}$； 2. $(n^2-m\\times n-m^2)^2=1$； 3. $m,n$ 为整数。 爱与愁大神非常高兴，他想要知道 $m^2+n^2$ 的最大值，以及在什么情况下可以取得最大值。你能帮助他吗？请输出 m 和 n。 输入输出格式 输入格式 输入共一个整数 k。 输出格式 共两行，第一行是 m 的最大值，第二行是 n 的最大值。 输入输出样例 输入样例 #1 1995 输出样例 #1 m=987 n=1597 说明 ### 数据范围及约定 - 对于 $20\\%$ 数据，$k \\le 100$； - 对于 $100\\%$ 数据，$k \\le 10^8$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO10MAR] Barn Allocation G 题目描述 Farmer John recently opened up a new barn and is now accepting stall allocation requests from the cows since some of the stalls have a better view of the pastures. The barn comprises N (1 <= N <= 100,000) stalls conveniently numbered 1..N; stall i has capacity C\\_i cows (1 <= C\\_i <= 100,000). Cow i may request a contiguous interval of stalls (A\\_i, B\\_i) in which to roam (1 <= A\\_i <= N; A\\_i <= B\\_i <= N), i.e., the cow would like to wander among all the stalls in the range A\\_i..B\\_i (and the stalls must always have the capacity for her to wander). Given M (1 <= M <= 100,000) stall requests, determine the maximum number of them that can be satisfied without exceeding stall capacities.   农夫约翰最近开了一个新的牲口棚屋，并且现在接受来自奶牛的分配畜栏请求因为其中的一些畜栏有更好风景。 畜栏包括N个畜栏(1 ≤ N ≤ 100,000)，方便起见，我们把它们编号为1..N，畜栏i能容纳Ci只牛(1 ≤ Ci ≤ 100,000)，第i只牛需要连续编号畜栏（从Ai到Bi）来漫步其中， (1 ≤ Ai ≤ N; Ai ≤ Bi ≤ N)，换言之，这只牛想要在编号范围为Ai..Bi的畜栏漫步（所有它想要畜栏必须实施为它空出位置来供它散步） 给出M个畜栏分配请求（1 ≤ M ≤ 100,000），回答最多能满足多少只牛的要求（不增加另外畜栏） 考虑以下例子： ```cpp 畜栏号:    1   2   3   4   5            +---+---+---+---+---+ 容纳空间:  | 1 | 3 | 2 | 1 | 3 |              +---+---+---+---+---+ Cow 1       XXXXXXXXXXX             (1, 3) Cow 2           XXXXXXXXXXXXXXX     (2, 5) Cow 3           XXXXXXX             (2, 3) Cow 4                   XXXXXXX     (4, 5) ``` 约翰显然不能满足所有的牛，因为畜栏3，4请求太多了 经过试验，我们发现，我们能满足牛1，3，4需要，所以这组数据答案为3 输入输出格式 输入格式 第一行包括两个以空格隔开的正整数：N,M 第二行到第N+1行：第i+1行包括一个整数：Ci 第N+2到第N+M+1行：第i+N+1 包括两个整数Ai、Bi 输出格式 仅一行：能满足的最大需要 输入输出样例 输入样例 #1 5 4 1 3 2 1 3 1 3 2 5 2 3 4 5 输出样例 #1 3 说明 Source: USACO 2010 March Gold Translator: @chrome01"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO09NOV] Job Hunt S 题目描述 Bessie is running out of money and is searching for jobs. Farmer John knows this and wants the cows to travel around so he has imposed a rule that his cows can only make D (1 <= D <= 1,000) dollars in a city before they must work in another city. Bessie can, however, return to a city after working elsewhere for a while and again earn the D dollars maximum in that city. There is no limit on the number of times Bessie can do this. Bessie's world comprises P (1 <= P <= 150) one-way paths connecting C (2 <= C <= 220) cities conveniently numbered 1..C. Bessie is currently in city S (1 <= S <= C). Path i runs one-way from city A\\_i to city B\\_i (1 <= A\\_i <= C; 1 <= B\\_i <= C) and costs nothing to traverse. To help Bessie, Farmer John will give her access to his private jet service. This service features F (1 <= F <= 350) routes, each of which is a one way flight from one city J\\_i to a another K\\_i (1 <= J\\_i <= C; 1 <= K\\_i <= C) and which costs T\\_i (1 <= T\\_i <= 50,000) dollars. Bessie can pay for the tickets from future earnings if she doesn't have the cash on hand. Bessie can opt to retire whenever and wherever she wants. Given an unlimited amount of time, what is the most money that Bessie can make presuming she can make the full D dollars in each city she can travel to?  Print -1 if there is no limit to this amount. 奶牛们正在找工作。农场主约翰知道后，鼓励奶牛们四处碰碰运气。而且他还加了一条要求：一头牛在一个城市最多只能赚D（1≤D≤1000）美元，然后它必须到另一座城市工作。当然，它可以在别处工作一阵子后又回到原来的城市再最多赚D美元。而且这样的往返次数没有限制。 城市间有P（1≤P≤150）条单向路径连接，共有C（2≤C≤220）座城市，编号从1到C。奶牛贝茜当前处在城市S（1≤S≤C）。路径i从城市A\\_i到城市B\\_i（1≤A\\_i≤C，1≤B\\_i≤C），在路径上行走不用任何花费。 为了帮助贝茜，约翰让它使用他的私人飞机服务。这项服务有F条（1≤F≤350）单向航线，每条航线是从城市J\\_i飞到另一座城市K\\_i（1≤J\\_i≤C，1≤K\\_i≤C），费用是T\\_i（1≤T\\_i≤50000）美元。如果贝茜手中没有现钱，可以用以后赚的钱来付机票钱。 贝茜可以选择在任何时候，在任何城市退休。如果在工作时间上不做限制，贝茜总共可以赚多少钱呢？如果赚的钱也不会出现限制，就输出-1。 输入输出格式 输入格式 第一行：5个用空格分开的整数D，P，C，F，S。 第2到第P+1行：第i+1行包含2个用空格分开的整数，表示一条从城市A\\_i到城市B\\_i的单向路径。 接下来F行，每行3个用空格分开的整数，表示一条从城市J\\_i到城市K\\_i的单向航线，费用是T\\_i。 输出格式 一个整数，在上述规则下最多可以赚到的钱数。 输入输出样例 输入样例 #1 100 3 5 2 1 1 5 2 3 1 4 5 2 150 2 5 120 输出样例 #1 250 说明 This world has five cities, three paths and two jet routes. Bessie starts out in city 1, and she can only make 100 dollars in each city before moving on."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:【模板】矩阵加速（数列） 题目描述 已知一个数列 a，它满足：   $$ a_x= \\begin{cases}  1 & x \\in\\{1,2,3\\}\\\\   a_{x-1}+a_{x-3} & x \\geq 4 \\end{cases} $$ 求 a 数列的第 n 项对 $10^9+7$ 取余的值。 输入输出格式 输入格式 第一行一个整数 T，表示询问个数。 以下 T 行，每行一个正整数 n。 输出格式 每行输出一个非负整数表示答案。 输入输出样例 输入样例 #1 3 6 8 10 输出样例 #1 4 9 19 说明 - 对于 $30\\%$ 的数据 $n \\leq 100$； - 对于 $60\\%$ 的数据 $n \\leq2 \\times 10^7$； - 对于 $100\\%$ 的数据 $1 \\leq T \\leq 100，1 \\leq n \\leq 2 \\times 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 Some positive integers n have the property that the sum [ n + reverse(n) ] consists entirely of odd (decimal) digits. For instance, 36 + 63 = 99 and 409 + 904 = 1313. We will call such numbers reversible; so 36, 63, 409, and 904 are reversible. Leading zeroes are not allowed in either n or reverse(n)."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 飞扬的小鸟 题目描述 Flappy Bird 是一款风靡一时的休闲手机游戏。玩家需要不断控制点击手机屏幕的频率来调节小鸟的飞行高度，让小鸟顺利通过画面右方的管道缝隙。如果小鸟一不小心撞到了水管或者掉在地上的话，便宣告失败。 为了简化问题，我们对游戏规则进行了简化和改编: 游戏界面是一个长为 n，高为 m 的二维平面，其中有 k 个管道（忽略管道的宽度）。  小鸟始终在游戏界面内移动。小鸟从游戏界面最左边任意整数高度位置出发，到达游戏界面最右边时，游戏完成。 小鸟每个单位时间沿横坐标方向右移的距离为 1，竖直移动的距离由玩家控制。如果点击屏幕，小鸟就会上升一定高度 x，每个单位时间可以点击多次，效果叠加；如果不点击屏幕，小鸟就会下降一定高度 y。小鸟位于横坐标方向不同位置时，上升的高度 x 和下降的高度 y 可能互不相同。 小鸟高度等于 0 或者小鸟碰到管道时，游戏失败。小鸟高度为 m 时，无法再上升。 现在,请你判断是否可以完成游戏。如果可以，输出最少点击屏幕数；否则，输出小鸟最多可以通过多少个管道缝隙。 输入输出格式 输入格式 第 1 行有 3 个整数 $n, m, k$，分别表示游戏界面的长度，高度和水管的数量，每两个整数之间用一个空格隔开； 接下来的 n 行，每行 2 个用一个空格隔开的整数 x 和 y，依次表示在横坐标位置 $0 \\sim n-1$ 上玩家点击屏幕后，小鸟在下一位置上升的高度 x，以及在这个位置上玩家不点击屏幕时，小鸟在下一位置下降的高度 y。 接下来 k 行，每行 3 个整数 $p,l,h$，每两个整数之间用一个空格隔开。每行表示一个管道，其中 p 表示管道的横坐标，l 表示此管道缝隙的下边沿高度，h 表示管道缝隙上边沿的高度（输入数据保证 p 各不相同，但不保证按照大小顺序给出）。 输出格式 共两行。 第一行，包含一个整数，如果可以成功完成游戏，则输出 1，否则输出 0。 第二行，包含一个整数，如果第一行为 1，则输出成功完成游戏需要最少点击屏幕数，否则，输出小鸟最多可以通过多少个管道缝隙。 输入输出样例 输入样例 #1 10 10 6  3 9   9 9   1 2   1 3   1 2   1 1   2 1   2 1   1 6   2 2   1 2 7  5 1 5  6 3 5  7 5 8  8 7 9  9 1 3  输出样例 #1 1 6"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:词编码 题目描述 一个发送机可以通过一条隧道发送一些以二进制代码组成的单词。在其尽头的接收机可以使用特殊技术恢复到最初的单词。每个单词最初都由0和1组成。所有的单词最初长度都为n（4<=n<=1000）。当穿过隧道之后单词可能发生以下几种情况之一： 1. 任意（一个）0被1取代 2. 任意（一个）符号被删除 3. 一个符号（0或1）被插入到任何位置 4. 不改变 我们知道最初的单词都具有以下性质：有1的位置号的总和是n+1的倍数，或者是0. 输入输出格式 输入格式 n和转换后的单词，每个单词占一行。单词数不大于2001，不会有其他任何东西，除了一些空格和空行。 输出格式 你的程序应该打印输出原始序列的词，注意换行。 若有多解，操作4优先，不行则按操作1，2，3优先。同一操作，按操作位置最优的优先（从左到右数起1,2,3……n），还有操作2时，被删数列，先在被删数列添0，不行再添1。 如果没答案输出-1。 输入输出样例 输入样例 #1 4 0000 011 1011 11011 输出样例 #1 0000 0110 1001 1111"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:LocalMaxima 题目描述 给出一个排列，如果其中一个数比它前面的数都大，则称为 Local Maxima。现在问在一个随机给出的排列中，期望有多少个数为 Local Maxima。 输入输出格式 输入格式 一行一个正整数 n。 输出格式 输出一行一个实数表示答案，保留八位小数。 输入输出样例 输入样例 #1 2 输出样例 #1 1.50000000 说明 长度为 2 的排列共 2 种，为 $(1,2)$ 和 $(2,1)$。前者两个数都为 Local Maxima，后者仅有第一个数 2 为 Local Maxima。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最长括号匹配 题目描述 对一个由(,),[,]括号组成的字符串，求出其中最长的括号匹配子串。具体来说，满足如下条件的字符串成为括号匹配的字符串：   1.(),[]是括号匹配的字符串。 2.若A是括号匹配的串，则(A),[A]是括号匹配的字符串。 3.若A,B是括号匹配的字符串，则AB也是括号匹配的字符串。 例如：(),[],([]),()()都是括号匹配的字符串，而][,[(])则不是。 字符串A的子串是指由A中连续若干个字符组成的字符串。 例如，A,B,C,ABC,CAB,ABCABCd都是ABCABC的子串。空串是任何字符串的子串。 输入输出格式 输入格式 输入一行，为一个仅由()[]组成的非空字符串。 输出格式 输出也仅有一行，为最长的括号匹配子串。若有相同长度的子串，输出位置靠前的子串。 输入输出样例 输入样例 #1 ([(][()]]() 输出样例 #1 [()] 输入样例 #2 ())[] 输出样例 #2 () 说明 【数据范围】 对20%的数据，字符串长度<=100. 对50%的数据，字符串长度<=10000. 对100%的数据，字符串长度<=1000000."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Olympic 题目描述 奥运会正在如火如荼的进行着，金牌榜上也有许多队伍需要排名。你需要选择三个整数 $P_g,P_s$ 和 $P_b$，分别表示每获得一块金、银、铜牌所对应得分。并且满足 $1000 \\ge P_g \\ge P_s \\ge P_b \\ge 1$。队伍将依据他们获得的分数进行排序（高分在前）。现在，为了使你所在的队伍排名尽可能的靠前，由你来选择 $P_g,P_s,P_b$。 输入输出格式 输入格式 第一行一个整数 $n\\ (1\\le n\\le 15)$，表示有 n 支队伍进行排名。 以下 n 行，每行三个整数 $G,S,B\\ (0\\le G,S,B\\le 10^5)$，表示每只队伍获得的金、银、铜牌个数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO08JAN] Telephone Lines S 题目描述 Farmer John wants to set up a telephone line at his farm. Unfortunately, the phone company is uncooperative, so he needs to pay for some of the cables required to connect his farm to the phone system. There are N (1 ≤ N ≤ 1,000) forlorn telephone poles conveniently numbered 1..N that are scattered around Farmer John's property; no cables connect any them. A total of P (1 ≤ P ≤ 10,000) pairs of poles can be connected by a cable; the rest are too far apart. The i-th cable can connect the two distinct poles Ai and Bi, with length Li (1 ≤ Li ≤ 1,000,000) units if used. The input data set never names any {Ai, Bi} pair more than once. Pole 1 is already connected to the phone system, and pole N is at the farm. Poles 1 and N need to be connected by a path of cables; the rest of the poles might be used or might not be used. As it turns out, the phone company is willing to provide Farmer John with K (0 ≤ K < N) lengths of cable for free. Beyond that he will have to pay a price equal to the length of the longest remaining cable he requires (each pair of poles is connected with a separate cable), or 0 if he does not need any additional cables. Determine the minimum amount that Farmer John must pay. 多年以后，笨笨长大了，成为了电话线布置师。由于地震使得某市的电话线全部损坏，笨笨是负责接到震中市的负责人。该市周围分布着 $1\\le N\\le1000$ 根据 $1\\cdots N$ 顺序编号的废弃的电话线杆，任意两根线杆之间没有电话线连接，一共有 $1\\le p\\le10000$ 对电话杆可以拉电话线。其他的由于地震使得无法连接。 第i对电线杆的两个端点分别是 $a_i$ ，$b_i$，它们的距离为 $1\\le l_i\\le1000000$。数据中每对 $(a_i,b_i)$ 只出现一次。编号为 1 的电话杆已经接入了全国的电话网络，整个市的电话线全都连到了编号 N 的电话线杆上。也就是说，笨笨的任务仅仅是找一条将 1 号和 N 号电线杆连起来的路径，其余的电话杆并不一定要连入电话网络。 电信公司决定支援灾区免费为此市连接 k 对由笨笨指定的电话线杆，对于此外的那些电话线，需要为它们付费，总费用决定于其中最长的电话线的长度（每根电话线仅连接一对电话线杆）。如果需要连接的电话线杆不超过 k 对，那么支出为 0。 请你计算一下，将电话线引导震中市最少需要在电话线上花多少钱？ 输入输出格式 输入格式 输入文件的第一行包含三个数字 $n,p,k$。 第二行到第 $p+1$ 行，每行分别都为三个整数 $a_i,b_i,l_i$。 输出格式 一个整数，表示该项工程的最小支出，如果不可能完成则输出 `-1`。 输入输出样例 输入样例 #1 5 7 1 1 2 5 3 1 4 2 4 8 3 2 3 5 2 9 3 4 7 4 5 6 输出样例 #1 4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2001] 聪明的打字员 题目描述 阿兰是某机密部门的打字员，她现在接到一个任务：需要在一天之内输入几百个长度固定为6的密码。当然，她希望输入的过程中敲击键盘的总次数越少越好。 不幸的是，出于保密的需要，该部门用于输入密码的键盘是特殊设计的，键盘上没有数字键，而只有以下六个键：swap0,swap1,up,down,left,right。为了说明这6个键的作用，我们先定义录入区的6个位置的编号，从左至右依次为1,2,3,4,5,6。下面列出每个键的作用： swap0：按swap0，光标位置不变，将光标所在的位置的数字与录入区的1号位置的数字(左起第一个数字)交换。如果光标已经处在录入区的1号位置，则按swap0键之后录入区的数字不变。 swap1：按swap1，光标位置不变，将光标所在位置的数字与录入区的6号位置的数字（左起第六个数字）交换。如果光标已经处在录入区的6号位置，则按swap1键之后录入区的数字不变。 up：按up，光标位置不变，讲光标所在位置的数字加1（除非该数字是9）。例如，如果光标所在位置的数字为2，按up之后，该处的数字变为3；如果光标所在位置的数字为9，按up之后，该处的数字不变，光标位置也不变； down：按down，光标位置不变，讲光标所在位置的数字减1（除非该数字是0）。如果光标所在位置的数字为0，按down之后，该处的数字不变，光标位置也不变； left：按left，光标左移一个位置，如果光标已在录入区的1号位置（左起第一个位置）上，则光标不动； right：按right，光标右移一个位置，如果光标已在录入区的6号位置（左起第六个位置）上，则光标不动； 当然，为了使这样的键盘发挥作用，每次录入密码之前，录入区总会随机出现一个长度为6的初始密码，而且光标会固定出现在1号位置上。当巧妙的使用上述六个特殊键之后，可以得到目标密码，这时光标允许停留在任何一个位置。 现在，阿兰需要你的帮助，编写一个程序，求出录入一个密码需要的最少的击键次数。 输入输出格式 输入格式 仅一行，含有两个长度为6的数，前者为初始密码，后者为目标密码，两个密码之间用一个空格隔开。 输出格式 仅一行，含有一个正整数，为最少需要的击键次数。 输入输出样例 输入样例 #1 123456 654321 输出样例 #1 11"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:长方形 题目描述 小明今天突发奇想，想从一张用过的纸中剪出一个长方形。 为了简化问题，小明做出如下规定： （1）这张纸的长宽分别为 $n,m$。小明将这张纸看成是由$n\\times m$个格子组成，在剪的时候，只能沿着格子的边缘剪。 （2）这张纸有些地方小明以前在上面画过，剪出来的长方形不能含有以前画过的地方。 （3）剪出来的长方形的大小没有限制。 小明看着这张纸，想了好多种剪的方法，可是到底有几种呢？小明数不过来，你能帮帮他吗？ 输入输出格式 输入格式 第一行两个正整数 $n,m$，表示这张纸的长度和宽度。 接下来有 n 行，每行 m 个字符，每个字符为 `*` 或者 `.`。 字符 `*` 表示以前在这个格子上画过，字符 `.` 表示以前在这个格子上没画过。 输出格式 仅一个整数，表示方案数。 输入输出样例 输入样例 #1 6 4 .... .*** .*.. .*** ...* .*** 输出样例 #1 38 说明 【数据规模】 对 $10\\%$ 的数据，满足 $1\\leq n\\leq 10,1\\leq m\\leq 10$ 对 $30\\%$ 的数据，满足 $1\\leq n\\leq 50,1\\leq m\\leq 50$ 对 $100\\%$ 的数据，满足 $1\\leq n\\leq 1000,1\\leq m\\leq 1000$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:火星上的加法运算 题目描述 最近欢欢看到一本有关火星的书籍，其中她被一个加法运算所困惑，由于她的运算水平有限.她想向你求助，作为一位优秀的程序员，你当然不会拒绝。 输入输出格式 输入格式 第一行先输入一个运算的进制N(2<=N<=36)，接下来两行为需要进行运算的字符，其中每个字符串的长度不超过200位，其为N进制的数。其中包括0-9及a-z（代表10-35）。 输出格式 在N进制下它们的和 输入输出样例 输入样例 #1 20 1234567890 abcdefghij 输出样例 #1 bdfi02467j"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:易语言 题目描述 老师近段时间正在研究易语言，这是一款 Windows 下的可视化编程系统，由大连大有吴涛软件开发公司开发的、具有中国知识产权的系统。为了更好地学习该套系统，老师总是有意识地在实践中运用这套系统来开发程序。 这不，今天老师碰到了一个问题，那就是“当把数据放置到 KOJ 上去时，需要把测试数据改成相应的文件名”。举个例子说，如果原始测试数据文件名是 $\\text{e0.in,\\,e1.in\\;...\\;e9.in}$ 和 $\\text{e0.out,\\,e1.out\\;...\\;e9.out}$，则老师需要把文件全部改为 $\\text{data1.in,\\,data2.in\\;...\\;data10.in}$ 和 $\\text{data1.out,\\,data2.out\\;...\\;data10.out}$。程序界面如下图所示： *（注：此处似乎缺少一张图片，但不影响对题意的理解）* 当然了，老师是编程的菜鸟，比起你可是差多了，所以他的程序不是很好，现在想请你帮老师改进这个程序。 事先，老师会告诉你所需要生成的目标文件名格式，比如，他告诉你 $\\text{enger0.in}$ 和 $\\text{ans}$ ，则表示目标文件中输入文件的主名是 $\\text{enger}$，扩展名是 $\\text{in}$，编号从 0 开始而且跟在主名后面，当然了，输出文件名就依次是 $\\text{enger0.ans,\\,enger1.ans\\;...\\;enger}x\\text{.ans}$，其中的 x 你可以统计老师告诉你的原始文件名的个数来确定。另外，老师也会告诉你原始的所有输入数据的文件名全称，比如 $\\text{a1.txt,\\,a2.txt\\;...\\;a}x\\text{.txt}$。但老师是一个粗心的人，你不要期望老师给你的文件名是按照编号从小到大给出的，但给出的文件名肯定是正确的而且满足一般输入输出文件名的规律的(编号数字肯定出现在文件主名末尾或者扩展名末尾，而且除了这个编号数字外，在原始文件名和生成的目标文件名其他的任何地方都不会出现数字)。 有些原始的输入输出文件名并不需要改变主名和扩展名，而只需改变文件编号即可，此时，老师首先会告诉你一个数字 1（或者 0），表示最终生成的目标文件的主名和扩展名不必改变，而只需把编号改为从 1（或者 0）开始即可。 输入输出格式 输入格式 输入的第一行有两种情况，第一种情况是两个字符串，分别表示最终生成的目标文件名的格式（第一个表示生成的目标文件中的第一个输入文件的名字）；第二种情况是只有一个数字 1（或者 0），表示文件名主名和扩展名不必更改，只需修改成从 1（或者 0）开始编号的文件名即可。接下来 n 行（$1 \\le n \\le 10^5$），每行两个用一个空格分隔的字符串，分别表示原始输入和输出文件的文件名（对于输入和输出文件中所有文件名的主名和扩展名都不超过 $10$ 个字符，而且文件的最大编号不会超过 $2 \\times 10^5$）。 输出格式 输出包含 n 行，每行两个用一个空格分隔的字符串，分别表示最终生成的目标文件的文件名。第一个表示输入文件，第二个表示输出文件。按照编号从小到大输出。 输入输出样例 输入样例 #1 enger0.in ans abc1.in abc1.out abc2.in abc2.out abc3.in abc3.out abc4.in abc4.out 输出样例 #1 enger0.in enger0.ans enger1.in enger1.ans enger2.in enger2.ans enger3.in enger3.ans 输入样例 #2 1 aa.in0 aa.ou0 aa.in1 aa.ou1 aa.in2 aa.ou2 输出样例 #2 aa.in1 aa.ou1 aa.in2 aa.ou2 aa.in3 aa.ou3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2010] 航空管制 题目描述 世博期间，上海的航空客运量大大超过了平时，随之而来的航空管制也频频发生。最近，小 X 就因为航空管制，连续两次在机场被延误超过了两小时。对此，小 X 表示很不满意。 在这次来烟台的路上，小 X 不幸又一次碰上了航空管制。于是小 X 开始思考关于航空管制的问题。 假设目前被延误航班共有 n 个，编号为 1 至 n。机场只有一条起飞跑道，所有的航班需按某个顺序依次起飞（称这个顺序为起飞序列）。定义一个航班的起飞序号为该航班在起飞序列中的位置，即是第几个起飞的航班。 起飞序列还存在两类限制条件： - 第一类（最晚起飞时间限制）：编号为 i 的航班起飞序号不得超过 $k_i$。 - 第二类（相对起飞顺序限制）：存在一些相对起飞顺序限制 $(a,b)$，表示航班 a 的起飞时间必须早于航班 b，即航班 a 的起飞序号必须小于航班 b 的起飞序号。 小 X 思考的第一个问题是，若给定以上两类限制条件，是否可以计算出一个可行的起飞序列。第二个问题则是，在考虑两类限制条件的情况下，如何求出每个航班在所有可行的起飞序列中的最小起飞序号。 输入输出格式 输入格式 第一行包含两个正整数 n 和 m，n 表示航班数目，m 表示第二类限制条件（相对起飞顺序限制）的数目。 第二行包含 n 个正整数 $k_1,k_2,\\cdots,k_n$。 接下来 m 行，每行两个正整数 a 和 b，表示一对相对起飞顺序限制 $(a,b)$，其中 $1\\leq a,b\\leq n$，表示航班 a 必须先于航班 b 起飞。 输出格式 第一行包含 n 个整数，表示一个可行的起飞序列，相邻两个整数用空格分隔。输入数据保证至少存在一个可行的起飞序列。如果存在多个可行的方案，输出任意一个即可。 第二行包含 n 个整数 $t_1,t_2,\\cdots,t_n$，其中 $t_i$ 表示航班 i 可能的最小起飞序号，相邻两个整数用空格分隔。 输入输出样例 输入样例 #1 5 5 4 5 2 5 4 1 2 3 2 5 1 3 4 3 1 输出样例 #1 3 5 1 4 2 3 4 1 2 1 输入样例 #2 5 0 3 3 3 5 5 输出样例 #2 3 2 1 5 4 1 1 1 4 4 说明 ### 样例解释 在样例 1 中： 起飞序列 $3\\ 5\\ 1\\ 4\\ 2$ 满足了所有的限制条件，所有满足条件的起飞序列有： $$ \\begin{aligned} 3\\ 4\\ 5\\ 1\\ 2\\\\ 3\\ 5\\ 1\\ 2\\ 4\\\\ 3\\ 5\\ 1\\ 4\\ 2\\\\ 3\\ 5\\ 4\\ 1\\ 2\\\\ 5\\ 3\\ 1\\ 2\\ 4\\\\ 5\\ 3\\ 1\\ 4\\ 2\\\\ 5\\ 3\\ 4\\ 1\\ 2 \\end{aligned} $$ 由于存在 $(5,1)$ 和 $(3,1)$ 两个限制，航班 1 只能安排在航班 5 和 3 之后，故最早起飞时间为 3，其他航班类似。 在样例 2 中： 虽然航班 $4,5$ 没有相对起飞顺序限制，但是由于航班 $1,2,3$ 都必须安排在前 3 个起飞，所以 $4,5$ 最早只能安排在第 4 个起飞。 ### 数据范围 对于 $30\\%$ 数据：$n\\leq 10$。 对于 $60\\%$ 数据：$n\\leq 500$。 对于 $100\\%$ 数据：$n\\leq 2\\times 10^3,m\\leq 10^4$。 感谢 @FlierKing 提供 spj"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Sum 题目描述 给出一个数列  $a_1,a_2,\\cdots,a_n$ 和  $k,p$； 设  $S_{i,j}=\\sum\\limits_{k=i}^ja_k$，则：  $$\\mathit{Answer}=\\min\\{S_{i,j}\\bmod p\\ |\\ S_{i,j}\\bmod p\\ge k\\}$$ 其中， $i\\le j, \\{S_{i,j}\\bmod p\\ |\\ S_{i,j}\\bmod p\\ge k\\}\\ne\\varnothing$。 输入输出格式 输入格式 第一行三个正整数  $n,k,p$。 第二行  n 个正整数，表示  $a_1,a_2,\\cdots,a_n$。 输出格式 一行一个正整数，表示  $\\mathit{Answer}$。 输入输出样例 输入样例 #1 7 2 17 12 13 15 11 16 26 11 输出样例 #1 2 说明 ### 数据范围 对于 $100\\%$ 的数据， $1\\le n\\le10^5，1\\le k,p,a_i\\le10^{18}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:口算练习题 题目描述 王老师正在教简单算术运算。细心的王老师收集了i道学生经常做错的口算题，并且想整理编写成一份练习。 编排这些题目是一件繁琐的事情，为此他想用计算机程序来提高工作效率。王老师希望尽量减少输入的工作量，比如 $\\texttt{5+8}$ 的算式最好只要输入 $\\texttt 5$ 和 $\\texttt 8$，输出的结果要尽量详细以方便后期排版的使用，比如对于上述输入进行处理后输出 $\\texttt{5+8=13}$ 以及该算式的总长度 6。王老师把这个光荣的任务交给你，请你帮他编程实现以上功能。 输入输出格式 输入格式 第一行为数值 i 接着的 i 行为需要输入的算式，每行可能有三个数据或两个数据。 若该行为三个数据则第一个数据表示运算类型，$\\texttt a$ 表示加法运算，$\\texttt b$ 表示减法运算，$\\texttt c$ 表示乘法运算，接着的两个数据表示参加运算的运算数。 若该行为两个数据，则表示本题的运算类型与上一题的运算类型相同，而这两个数据为运算数。 输出格式 输出 $2\\times i$ 行。对于每个输入的算式，输出完整的运算式及结果，第二行输出该运算式的总长度 输入输出样例 输入样例 #1 4 a 64 46 275 125 c 11 99 b 46 64 输出样例 #1 64+46=110 9 275+125=400 11 11*99=1089 10 46-64=-18 9 说明 数据规模与约定 对于 $50\\%$ 的数据，输入的算式都有三个数据，第一个算式一定有三个数据。 对于所有数据，$0<i\\leq 50$，运算数为非负整数且小于 $10000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:郁闷的记者 题目描述 你是一个体育报社的记者，你接受到一个艰难的任务：有N支足球队参加足球比赛，现在给你一些比赛的结果，需要你给出各支球队的排名，从1到N。 以下是给你的一些信息： (1)没有平局； (2)不同的球队排名不能相同； (3)对于所有满足l≤a<b≤n，第a名的球队一定可以打败第b名的球队。 给你部分比赛结果，要求给出排名，并且判断是否存在另一种排名方法满足给你的比赛结果。 输入输出格式 输入格式 第一行输入N(1≤N≤5000)，表示球队的数量，编号为l到N。第二行输入M(1≤M≤100,000)，表示给出的比赛场数。接下来M行，每行两个整数X\\_i，Y\\_i，表示X\\_i能打败Y\\_i。 输出格式 输出包含N+1行，前N行描述球队的排名，第i个数表示第i名的球队，第N+1行包含一个整数，如果为0表示不存在其他的排名方法，如果为1表示还有其他的排名方法。 输入输出样例 输入样例 #1 3 2 2  1 2  3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:斐波那契数列 题目描述 大家都知道，斐波那契数列是满足如下性质的一个数列： $$F_n = \\left\\{\\begin{aligned} 1 \\space (n \\le 2) \\\\ F_{n-1}+F_{n-2} \\space (n\\ge 3) \\end{aligned}\\right.$$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2009] 变换序列 题目描述 对于N个整数$0, 1, \\cdots, N-1$，一个变换序列T可以将i变成$T_i$，其中 $T_i \\in \\{ 0,1,\\cdots, N-1\\}$ 且 $\\bigcup_{i=0}^{N-1} \\{T_i\\} = \\{0,1,\\cdots , N-1\\}$。 ，$\\forall x,y \\in  \\{0,1,\\cdots , N-1\\}$，定义x和y之间的距离$D(x,y)=min\\{|x-y|,N-|x-y|\\}$ 。给定每个i和$T_i$之间的距离$D(i,T_i)$，你需要求出一个满足要求的变换序列T。如果有多个满足条件的序列，输出其中字典序最小的一个。 说明：对于两个变换序列S和T，如果存在$p<N$，满足对于$i=0,1,\\cdots p-1，S_i=T_i且S_p<T_p$，我们称S比T字典序小。 输入输出格式 输入格式 第一行包含一个整数N，表示序列的长度。接下来的一行包含N个整数$D_i$，其中$D_i$表示i和$T_i$之间的距离。 输出格式 如果至少存在一个满足要求的变换序列T，则输出文件中包含一行N个整数，表示你计算得到的字典序最小的T；否则输出`No Answer`（不含引号）。注意：输出文件中相邻两个数之间用一个空格分开，行末不包含多余空格。 输入输出样例 输入样例 #1 5 1 1 2 2 1 输出样例 #1 1 2 4 0 3 说明 对于30%的数据，满足：N<=50； 对于60%的数据，满足：N<=500； 对于100%的数据，满足：N<=10000。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:服务器好好玩。 题目描述 lcy0x1 去服务器的系统商店买东西。 一个人的背包有 $21$ 格。 一开始他的背包里有 m 件不同的物品（**不能卖**）。 他要买 n 种物品，第 i 件物品的名字为 $st_i$，有 $a_i$ 件，价值为 $b_i$，一格可以放 $c_i$ 个。 相同的物品可以放同一格（只要没放满）。 问：他跑一次最多能卖多少钱。 输入输出格式 输入格式 第一行两个整数 $m,n$。 下面 n 行，第 $i+1$ 行三个整数 $a_i,b_i,c_i$ 与一个字符串 $st_i$。 输出格式 最多卖的钱 s。 输入输出样例 输入样例 #1 20 3  63 1 64 yinshifen  1 10 1 men  1 1 64 yinshifen 输出样例 #1 64 说明 数据保证： - $0\\leq m\\leq 21$； - $0\\leq n\\leq 100$； - $0\\leq a_i\\leq 1344$； - $0\\leq b_i\\leq 10^4$； - $0<c_i\\leq 64$； - $0<|st_i|<100$； - $0\\leq s\\leq 10^6$。 **注：数据强大，搜索 0 分，请使用多重背包。**"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 转圈游戏 题目描述 n 个小伙伴（编号从 0 到 $n-1$）围坐一圈玩游戏。按照顺时针方向给 n 个位置编号，从 0 到 $n-1$。最初，第 0 号小伙伴在第 0 号位置，第 1 号小伙伴在第 1 号位置，……，依此类推。游戏规则如下：每一轮第 0 号位置上的小伙伴顺时针走到第 m 号位置，第 1 号位置小伙伴走到第 $m+1$ 号位置，……，依此类推，第 $n - m$ 号位置上的小伙伴走到第 0 号位置，第 $n - m+1$ 号位置上的小伙伴走到第 1 号位置，……，第 $n-1$ 号位置上的小伙伴顺时针走到第 $m-1$ 号位置。 现在，一共进行了 ${10}^k$ 轮，请问 x 号小伙伴最后走到了第几号位置。 输入输出格式 输入格式 共一行，包含四个整数 $n, m, k, x$，每两个整数之间用一个空格隔开。 输出格式 一个整数，表示 ${10}^k$ 轮后 x 号小伙伴所在的位置编号。 输入输出样例 输入样例 #1 10 3 4 5 输出样例 #1 5 说明 对于 $30\\%$ 的数据，$0 < k < 7$； 对于 $80\\%$ 的数据，$0 < k < {10}^7$； 对于 $100\\%$ 的数据，$1 < n < {10}^6，0 < m < n，1 \\le x \\le n，0 < k < {10}^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 火柴排队 题目描述 涵涵有两盒火柴，每盒装有 n 根火柴，每根火柴都有一个高度。 现在将每盒中的火柴各自排成一列， 同一列火柴的高度互不相同， 两列火柴之间的距离定义为：$ \\sum (a_i-b_i)^2$ 其中 $a_i$ 表示第一列火柴中第 i 个火柴的高度，$b_i$ 表示第二列火柴中第  i 个火柴的高度。 每列火柴中相邻两根火柴的位置都可以交换，请你通过交换使得两列火柴之间的距离最小。请问得到这个最小的距离，最少需要交换多少次？如果这个数字太大，请输出这个最小交换次数对 $10^8-3$ 取模的结果。 输入输出格式 输入格式 共三行，第一行包含一个整数 n，表示每盒中火柴的数目。 第二行有 n 个整数，每两个整数之间用一个空格隔开，表示第一列火柴的高度。 第三行有 n 个整数，每两个整数之间用一个空格隔开，表示第二列火柴的高度。 输出格式 一个整数，表示最少交换次数对 $10^8-3$ 取模的结果。 输入输出样例 输入样例 #1 4 2 3 1 4 3 2 1 4 输出样例 #1 1 输入样例 #2 4 1 3 4 2 1 7 2 4 输出样例 #2 2 说明 【输入输出样例说明一】 最小距离是$ 0$，最少需要交换 1 次，比如：交换第 $1 $列的前$ 2$ 根火柴或者交换第 2 列的前 $2 $根火柴。 【输入输出样例说明二】 最小距离是 $10$，最少需要交换 2 次，比如：交换第 1 列的中间 2 根火柴的位置，再交换第 2 列中后 2 根火柴的位置。 【数据范围】 对于 $10\\%$ 的数据， $1 \\leq n \\leq 10$； 对于 $30\\%$ 的数据，$1 \\leq n \\leq 100$； 对于 $60\\%$ 的数据，$1 \\leq n \\leq 10^3$； 对于 $100\\%$ 的数据，$1 \\leq n \\leq 10^5，0 \\leq$ 火柴高度 $< 2^{31}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 货车运输 题目描述 A 国有 n 座城市，编号从 1 到 n，城市之间有 m 条双向道路。每一条道路对车辆都有重量限制，简称限重。   现在有 q 辆货车在运输货物， 司机们想知道每辆车在不超过车辆限重的情况下，最多能运多重的货物。 输入输出格式 输入格式 第一行有两个用一个空格隔开的整数 $ n,m$，表示 A 国有 $ n$ 座城市和 m 条道路。   接下来 m 行每行三个整数 $x, y, z$，每两个整数之间用一个空格隔开，表示从 $x $ 号城市到 $ y $ 号城市有一条限重为 z 的道路。     注意： $x \\neq y$，两座城市之间可能有多条道路 。 接下来一行有一个整数 q，表示有 q 辆货车需要运货。 接下来 q 行，每行两个整数 $x,y$，之间用一个空格隔开，表示一辆货车需要从 x 城市运输货物到 y 城市，保证 $x \\neq y$ 输出格式 共有 q 行，每行一个整数，表示对于每一辆货车，它的最大载重是多少。   如果货车不能到达目的地，输出 $-1$。 输入输出样例 输入样例 #1 4 3 1 2 4 2 3 3 3 1 1 3 1 3 1 4 1 3 输出样例 #1 3 -1 3 说明 对于 $30\\%$ 的数据，$1 \\le n < 1000，1 \\le m < 10,000，1\\le q< 1000$； 对于 $60\\%$ 的数据，$1 \\le n < 1000，1 \\le m < 5\\times 10^4，1 \\le q< 1000$； 对于 $100\\%$ 的数据，$1 \\le n < 10^4，1 \\le m < 5\\times 10^4，1 \\le q< 3\\times 10^4 ，0 \\le z \\le 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:此处省略 `MAX_INT+1` 个数。 题目描述 在以后的若干天里戴维将学习美元与德国马克的汇率。编写程序帮助戴维何时应买或卖马克或美元，使他从 $100$ 美元开始，最后能获得最高可能的价值。 输入输出格式 输入格式 输入文件的第一行是一个自然数 N，$1≤N≤100$，表示戴维学习汇率的天数。 接下来的 N 行中每行是一个自然数 A，$1≤A≤1000$。第 $i+1$ 行的 A 表示预先知道的第 $i+1$ 天的平均汇率，在这一天中，戴维既能用 $100$ 美元买 A 马克也能用 A 马克购买 $100$ 美元。 输出格式 输出文件的第一行也是唯一的一行应输出要求的钱数（单位为美元，保留两位小数）。 注意：考虑到实数算术运算中进位的误差，结果在正确结果 $0.05$ 美元范围内的被认为是正确的，戴维必须在最后一天结束之前将他的钱都换成美元。 输入输出样例 输入样例 #1 5 400 300 500 300 250 输出样例 #1 266.67 说明 **样例解释** ```cpp Day 1 ... changing 100.0000 美元= 400.0000 马克 Day 2 ... changing 400.0000 马克= 133.3333 美元 Day 3 ... changing 133.3333 美元= 666.6666 马克 Day 5 ... changing 666.6666 马克= 266.6666 美元 ``` update on 2017/08/18： 1. 样例正确答案为 $266.67$ 2. 已经把测试点 1 改成样例。 3. SPJ 原先误差是 $0.01$，按照题目要求，重新改为 $0.05$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 积木大赛 题目描述 春春幼儿园举办了一年一度的“积木大赛”。今年比赛的内容是搭建一座宽度为 n 的大厦，大厦可以看成由 n 块宽度为 1 的积木组成，第 i 块积木的最终高度需要是 $h_i$。 在搭建开始之前，没有任何积木（可以看成 n 块高度为 0 的积木）。接下来每次操作，小朋友们可以选择一段连续区间 $[l, r]$，然后将第 L 块到第 R 块之间（含第 L 块和第 R 块）所有积木的高度分别增加 1。 小 M 是个聪明的小朋友，她很快想出了建造大厦的最佳策略，使得建造所需的操作次数最少。但她不是一个勤于动手的孩子，所以想请你帮忙实现这个策略，并求出最少的操作次数。 输入输出格式 输入格式 包含两行，第一行包含一个整数 n，表示大厦的宽度。 第二行包含 n 个整数，第 i 个整数为 $h_i$。 输出格式 建造所需的最少操作数。 输入输出样例 输入样例 #1 5 2 3 4 1 2 输出样例 #1 5 说明 【样例解释】 其中一种可行的最佳方案，依次选择：$[1,5]， [1,3]，[2,3]，[3,3]， [5,5]$。 【数据范围】 - 对于 $30\\%$ 的数据，有 $1 \\leq n \\leq 10$； - 对于 $70\\%$ 的数据，有 $1 \\leq n \\leq 1000$； - 对于 $100\\%$ 的数据，有 $1 \\leq n \\leq 100000，0 \\leq h_i \\leq 10000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 花匠 题目描述 花匠栋栋种了一排花，每株花都有自己的高度。花儿越长越大，也越来越挤。栋栋决定把这排中的一部分花移走，将剩下的留在原地，使得剩下的花能有空间长大，同时，栋栋希望剩下的花排列得比较别致。 具体而言，栋栋的花的高度可以看成一列整数 $h_1,h_2,\\ldots,h_n$。设当一部分花被移走后，剩下的花的高度依次为 $g_1,g_2,\\ldots,g_m$，则栋栋希望下面两个条件中至少有一个满足： 条件 A：对于所有的 $1 \\le i \\le \\frac{m}{2}$，有 $g_{2 i} > g_{2 i - 1}$，同时对于所有的 $1 \\le i \\le \\frac{m}{2}$，有 $g_{2 i} > g_{2 i + 1}$；   条件 B：对于所有的 $1 \\le i \\le \\frac{m}{2}$，有 $g_{2 i} < g_{2 i - 1}$，同时对于所有的 $1 \\le i \\le \\frac{m}{2}$，有 $g_{2 i} < g_{2 i + 1}$。 注意上面两个条件在 $m = 1$ 时同时满足，当 $m > 1 $时最多有一个能满足。 请问，栋栋最多能将多少株花留在原地。 输入输出格式 输入格式 第一行包含一个整数 n，表示开始时花的株数。 第二行包含 n 个整数，依次为 $h_1,h_2,\\ldots,h_n$，表示每株花的高度。 输出格式 输出一行，包含一个整数，表示最多能留在原地的花的株数。 输入输出样例 输入样例 #1 5 5 3 2 1 2 输出样例 #1 3 说明 【输入输出样例说明】 有多种方法可以正好保留 3 株花，例如，留下第 1、4、5 株，高度分别为 5、1、2，满足条件 B。 【数据范围】 对于 $20\\%$的数据，$n \\le 10$； 对于 $30\\%$的数据，$n \\le 25$； 对于 $70\\%$的数据，$n \\le 1000，0 \\le h_i \\le 1000$； 对于 $100\\%$的数据，$1 \\le n \\le {10}^5，0 \\le h_i \\le {10}^6$，所有的 $h_i$ 随机生成，所有随机数服从某区间内的均匀分布。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SDOI2009] HH的项链 题目描述 HH 有一串由各种漂亮的贝壳组成的项链。HH 相信不同的贝壳会带来好运，所以每次散步完后，他都会随意取出一段贝壳，思考它们所表达的含义。HH 不断地收集新的贝壳，因此，他的项链变得越来越长。   有一天，他突然提出了一个问题：某一段贝壳中，包含了多少种不同的贝壳？这个问题很难回答…… 因为项链实在是太长了。于是，他只好求助睿智的你，来解决这个问题。 输入输出格式 输入格式 一行一个正整数 n，表示项链长度。    第二行 n 个正整数 $a_i$，表示项链中第 i 个贝壳的种类。 第三行一个整数 m，表示 HH 询问的个数。    接下来 m 行，每行两个整数 $l,r$，表示询问的区间。 输出格式 输出 m 行，每行一个整数，依次表示询问对应的答案。 输入输出样例 输入样例 #1 6 1 2 3 4 3 5 3 1 2 3 5 2 6 输出样例 #1 2 2 4 说明 【数据范围】   对于 $20\\%$ 的数据，$1\\le n,m\\leq 5000$；    对于 $40\\%$ 的数据，$1\\le n,m\\leq 10^5$；    对于 $60\\%$ 的数据，$1\\le n,m\\leq 5\\times 10^5$；   对于 $100\\%$ 的数据，$1\\le n,m,a_i \\leq 10^6，1\\le l \\le r \\le n$。 本题可能需要较快的读入方式，最大数据点读入数据约 20MB"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2011] NOI 嘉年华 题目描述 NOI2011 在吉林大学开始啦！为了迎接来自全国各地最优秀的信息学选手，吉林大学决定举办两场盛大的 NOI 嘉年华活动，分在两个不同的地点举办。每个嘉年华可能包含很多个活动，而每个活动只能在一个嘉年华中举办。 现在嘉年华活动的组织者小安一共收到了 n 个活动的举办申请，其中第 i 个活动的起始时间为 $S_i$，活动的持续时间为 $T_i$。这些活动都可以安排到任意一个嘉年华的会场，也可以不安排。 小安通过广泛的调查发现，如果某个时刻，两个嘉年华会场同时有活动在进行（不包括活动的开始瞬间和结束瞬间），那么有的选手就会纠结于到底去哪个会场，从而变得不开心。所以，为了避免这样不开心的事情发生，小安要求不能有两个活动在两个会场同时进行（同一会场内的活动可以任意进行）。 另外，可以想象，如果某一个嘉年华会场的活动太少，那么这个嘉年华的吸引力就会不足，容易导致场面冷清。所以小安希望通过合理的安排，使得活动相对较少的嘉年华的活动数量最大。 此外，有一些活动非常有意义，小安希望能举办，他希望知道，如果第 i 个活动必须举办（可以安排在两场嘉年华中的任何一个），活动相对较少的嘉年华的活动数量的最大值。 输入输出格式 输入格式 输入的第一行包含一个整数 n，表示申请的活动个数。 接下来 n 行描述所有活动，其中第 i 行包含两个整数 $S_i,T_i$，表示第 i 个活动从时刻 $S_i$ 开始，持续 $T_i$ 的时间。 输出格式 输出的第一行包含一个整数，表示在没有任何限制的情况下，活动较少的嘉年华的活动数的最大值。 接下来 n 行每行一个整数，其中第 i 行的整数表示在必须选择第 i 个活动的前提下，活动较少的嘉年华的活动数的最大值。 输入输出样例 输入样例 #1 5  8 2  1 5  5 3  3 2  5 3  输出样例 #1 2  2  1  2  2  2  说明 ### 样例解释 在没有任何限制的情况下，最优安排可以在一个嘉年华安排活动 $1, 4$，而在另一个嘉年华安排活动 $3, 5$，活动 2 不安排。 对于 $10\\%$ 的数据，$1\\leq n\\leq 10$。 对于 $30\\%$ 的数据，$1\\leq n\\leq 40$。 对于 $100\\%$ 的数据，$1\\leq n\\leq 200，0\\leq S_i\\leq 10^9，1\\leq T_i\\leq 10^9$。 如果输出格式不正确（比如输出不足 $n+1$ 行），得 0 分； 如果输出文件第一行不正确，而且后 n 行至少有一行不正确，得 0 分； 如果输出文件第一行正确，但后 n 行至少有一行不正确，得 4 分； 如果输出文件第一行不正确，但后 n 行均正确，得 6 分； 如果输出文件中的 $n+1$ 行均正确，得 $10$ 分。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:基因聚合 题目描述 德国科学家总是对非洲野猴的抵抗力感到惊奇，因为他们发现在没有医疗条件的情况下，非洲野猴总是比其他所有野生动物少生病。最近的研究有了新发现，科学家Dr.Smith从非洲野猴身上发现了一种罕见的抗体，他猜测可能正是该罕见的抗体在帮助非洲野猴抵抗外来病毒的侵害。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[国家集训队] 排队 题目描述 排排坐，吃果果，生果甜嗦嗦，大家笑呵呵。你一个，我一个，大的分给你，小的留给我，吃完果果唱支歌，大家乐和和。 红星幼儿园的小朋友们排起了长长地队伍，准备吃果果。不过因为小朋友们的身高有所区别，排成的队伍高低错乱，极不美观。设第 i 个小朋友的身高为 $h_i$。 幼儿园阿姨每次会选出两个小朋友，交换他们的位置，请你帮忙计算出每次交换后，序列的逆序对数。为方便幼儿园阿姨统计，在未进行任何交换操作时，你也应该输出该序列的逆序对数。 输入输出格式 输入格式 第一行为一个正整数 n，表示小朋友的数量； 第二行包含 n 个由空格分隔的正整数 $h_1,h_2,\\dots,h_n$，依次表示初始队列中小朋友的身高； 第三行为一个正整数 m，表示交换操作的次数； 以下m行每行包含两个正整数 $a_i,b_i$，表示交换位置 $a_i$ 和 $b_i$ 的小朋友。 输出格式 输出文件共 $m+1$ 行，第 i 行一个正整数表示交换操作 i 结束后，序列的逆序对数。 输入输出样例 输入样例 #1 3 130 150 140 2 2 3 1 3 输出样例 #1 1 0 3 说明 【样例说明】   未进行任何操作时，$(2,3)$ 为逆序对；   操作一结束后，序列为 $130 \\ 140 \\ 150$，不存在逆序对；   操作二结束后，序列为 $150 \\ 140 \\ 130，(1,2),(1,3),(2,3)$ 共 3 个逆序对。 【数据范围】   对于 $15%$ 的数据，$n,m \\le 15$；   对于 $30%$ 的数据，$n,m \\le 200$；     另有 $15\\%$ 的数据，$h_i$ 各不相同；   另有 $15\\%$ 的数据，$110 \\le h_i \\le 160$；   以上两类数据交集为空。 对于100%的数据，$1 \\le m \\le 2\\times 10^3，1 \\le n \\le 2 \\times 10^4，1 \\le h_i \\le 10^9，a_i \\ne b_i，1 \\le a_i,b_i \\le n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 最近小 x 又发现了一个关于圆的有趣的问题：在圆上有 $2N$ 个不同的点，小 x 想用 N 条线段把这些点连接起来（每个点只能连一条线段）， 使所有的线段都不相交，他想知道这样的连接方案有多少种？ 输入输出格式 输入格式 有且仅有一个正整数 N 。 （$N \\le 2999$） 输出格式 要求的方案数（结果 $\\bmod 100000007$）。 输入输出样例 输入样例 #1 24 输出样例 #1 4057031"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 假设 N 位 Oier 准备拼车，此时为 0 时刻，从校门到目的地需要支付给出租 车师傅 D 元（按车次算，不管里面坐了多少 Oier），假如 S 分钟后恰能赶上比赛， 那么 S 分钟后经过校门口的出租车自然可以忽略不计了。现在给出在这 S 分钟当 中经过校门的所有的 K 辆出租车先后到达校门口的时间 T i  及里面剩余的座位 Zi (1 <= Zi <= 4)，Oier 可以选择上车几个人（不能超过），当然，也可以选择上 0 个 人，那就是不坐这辆车。 俗话说，时间就是金钱，这里小 x 把每个 Oier 在校门等待出租车的分钟数 等同于花了相同多的钱（例如小 x 等待了 20 分钟，那相当于他额外花了 20 元钱）。 在保证所有 Oier 都能在比赛开始前到达比赛地点的情况下，聪明的你能计 算出他们最少需要花多少元钱么？ 输入输出格式 输入格式 每组数据以四个整数 N , K , D , S 开始，具体含义参见题目描述。 接着 K 行，表示第 i 辆出租车在第 Ti 分钟到达校门，其空余的座位数为 Zi （时间按照先后顺序）。 N <= 100，K <= 100，D <= 100，S <= 100，1 <= Zi <= 4，1<= T(i) <= T(i+1) <= S 输出格式 对于每组测试数据，输出占一行，如果他们所有人能在比赛前到达比赛地点， 则输出一个整数，代表他们最少需要花的钱（单位：元），否则请输出“impossible”。 输入输出样例 输入样例 #1 2 2 10 5  1 1  2 2  输出样例 #1 14"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:集合 题目描述 集合是数学中的一个概念，用通俗的话来讲就是：一大堆数在一起就构成了集合。 集合有如下的特性： - 无序性：任一个集合中，每个元素的地位都是相同的，元素之间是无序的。 - 互异性：一个集合中，任何两个元素都认为是不相同的，即每个元素只能出现一次。 - 确定性：给定一个集合，任给一个元素，该元素或者属于或者不属于该集合，二者必居其一，不允许有模棱两可的情况出现。 例如 $A = \\{ 1, 2, 3 \\}$ 就是一个集合。我们可以知道，1 属于 A，即 $1 \\in A；4$ 不属于 A，即 $4 \\notin A$。一个集合的大小，就是其中元素的个数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 计数问题 题目描述 试计算在区间 1 到 n 的所有整数中，数字 x（$0\\le x\\le9$）共出现了多少次？例如，在 1 到 $11$ 中，即在 $1,2,3,4,5,6,7,8,9,10,11$ 中，数字 1 出现了 4 次。 输入输出格式 输入格式 2 个整数 $n,x$，之间用一个空格隔开。 输出格式 1 个整数，表示 x 出现的次数。 输入输出样例 输入样例 #1 11 1 输出样例 #1 4 说明 对于 $100\\%$ 的数据，$1\\le n\\le 10^6，0\\le x \\le 9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 表达式求值 题目描述 给定一个只包含加法和乘法的算术表达式，请你编程计算表达式的值。 输入输出格式 输入格式 一行，为需要你计算的表达式，表达式中只包含数字、加法运算符 “+” 和乘法运算符 “$ \\times $”，且没有括号，所有参与运算的数字均为 0 到   $2^{31}-1$ 之间的整数。   输入数据保证这一行只有 $ 0-9、+、 \\times $ 这 $12 $种字符。 输出格式 一个整数，表示这个表达式的值。   注意：当答案长度多于 4 位时，请只输出最后 $ 4$ 位，前导 $ 0$ 不输出。 输入输出样例 输入样例 #1 1+1*3+4 输出样例 #1 8 输入样例 #2 1+1234567890*1 输出样例 #2 7891 输入样例 #3 1+1000000003*1 输出样例 #3 4 说明 对于 $30\\%$ 的数据，$0≤$ 表达式中加法运算符和乘法运算符的总数 $≤100$。 对于 $80\\%$ 的数据，$0≤$ 表达式中加法运算符和乘法运算符的总数 $≤1000$。 对于 $100\\%$ 的数据，$0≤$ 表达式中加法运算符和乘法运算符的总数 $≤100000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 小朋友的数字 题目描述 有 n 个小朋友排成一列。每个小朋友手上都有一个数字，这个数字可正可负。规定每个小朋友的特征值等于排在他前面（包括他本人）的小朋友中连续若干个（最少有一个）小朋友手上的数字之和的最大值。 作为这些小朋友的老师，你需要给每个小朋友一个分数，分数是这样规定的：第一个小朋友的分数是他的特征值，其它小朋友的分数为排在他前面的所有小朋友中（不包括他本人），小朋友分数加上其特征值的最大值。 请计算所有小朋友分数的最大值，输出时保持最大值的符号，将其绝对值对 p 取模后输出。 输入输出格式 输入格式 第一行包含两个正整数 $n,p$，之间用一个空格隔开。 第二行包含 n 个数，每两个整数之间用一个空格隔开，表示每个小朋友手上的数字。 输出格式 一个整数，表示最大分数对 p 取模的结果。 输入输出样例 输入样例 #1 5 997 1 2 3 4 5 输出样例 #1 21 输入样例 #2 5 7 -1 -1 -1 -1 -1 输出样例 #2 -1 说明 **【样例解释 \\#1】** 小朋友的特征值分别为 $1,3,6,10,15$，分数分别为 $ 1,2,5,11,21$，最大值 $21$ 对 $997$ 的模是 $21$。 **【样例解释 \\#2】** 小朋友的特征值分别为 $-1,-1,-1,-1,-1$，分数分别为$-1,-2,-2,-2,-2$，最大值 $-1$ 对 7 的模为 $-1$，输出 $-1$。 **【数据范围】** 对于 $50\\%$ 的数据，$1 \\le n \\le 1000，1 \\le p \\le 1000$，所有数字的绝对值不超过 $1000$； 对于 $100\\%$ 的数据，$1 \\le n \\le {10}^6，1 \\le p \\le {10}^9$，其他数字的绝对值均不超过 ${10}^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 车站分级 题目描述 一条单向的铁路线上，依次有编号为 $1, 2, …, n $的 $n $个火车站。每个火车站都有一个级别，最低为 1 级。现有若干趟车次在这条线路上行驶，每一趟都满足如下要求：如果这趟车次停靠了火车站 x，则始发站、终点站之间所有级别大于等于火车站$ x$ 的都必须停靠。（注意：起始站和终点站自然也算作事先已知需要停靠的站点） 例如，下表是$ 5 $趟车次的运行情况。其中，前$ 4$ 趟车次均满足要求，而第 5 趟车次由于停靠了 3 号火车站（2 级）却未停靠途经的 6 号火车站（亦为 2 级）而不满足要求。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SDOI2008] 烧水问题 题目描述 把总质量为 $1\\ \\rm kg$ 的水分装在 n 个杯子里，每杯水的质量均为 $(1/n)\\ \\rm kg$，初始温度均为 0 度。现需要把每一杯水都烧开。我们可以对任意一杯水进行加热。把一杯水的温度升高 t 度所需的能量为 $(4200\\times t/n)\\rm J$，其中，$\\rm J$ 是能量单位“焦耳”。如果一旦某杯水的温度达到 $100$ 度，那么这杯水的温度就不能再继续升高，此时我们认为这杯水已经被烧开。显然地，如果直接把水一杯一杯地烧开，所需的总能量为 $(4200\\times 100)\\rm J$。 在烧水的过程中，我们随时可以在两杯温度不同的水之间进行热传递操作。热量只能从温度较高的那杯水传递到温度较低的那杯水。由于两杯水的质量相同，所以进行热传递操作之后，原来温度较高的那杯水所降低的温度总是等于原来温度较低的那杯水所升高的温度。 一旦两杯水的温度相同，热传递立刻停止。 为了把问题简化，我们假设： 1. 没有进行加热或热传递操作时，水的温度不会变化。 2. 加热时所花费的能量全部被水吸收，杯子不吸收能量。 3. 热传递总是隔着杯子进行，n 杯水永远不会互相混合。 4. 热传递符合能量守恒，而且没有任何的热量损耗。 在这个问题里，只要求把每杯水都至少烧开一遍就可以了，而不要求最终每杯水的温度都是 $100$ 度。我们可以用如下操作把两杯水烧开：先把一杯水加热到 $100$ 度，花费能量 $(4200\\times 100/2)\\rm J$，然后两杯水进行热传递，直到它们的温度都变成 $50$ 度为止，最后把原来没有加热到 $100$ 度的那杯水加热到 $100$ 度，花费能量 $(4200\\times 50/2)\\rm J$，此时两杯水都被烧开过了，当前温度一杯 $100$ 度，一杯 $50$ 度，花费的总能量为 $(4200\\times 75)\\rm J$，比直接烧开所需的 $(4200\\times 100)\\rm J$ 少花费了 $25\\%$ 的能量。 你的任务是设计一个最佳的操作方案使得 n 杯水都至少被烧开一遍所需的总能量最少。 输入输出格式 输入格式 数据数据共一行，一个整数 n。 输出格式 输出 n 杯水都至少被烧开一遍所需的最少的总能量，单位为 J，四舍五入到小数点后两位。 输入输出样例 输入样例 #1 2 输出样例 #1 315000.00 说明 ### 数据范围及约定 对于全部数据，$1 \\le n \\le 3000000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO07OPEN] 翻转棋 Fliptile S 题目描述 FJ 知道，智商高的奶牛产奶量也大，所以他为奶牛们准备了一个翻动瓦片的益智游戏。 在一个 $M \\times N$ 的方阵上（$1 \\leq M,N \\leq 15$），每个格子都有一个可以翻转的瓦片。瓦片的一面是黑色，另一面是白色。对一个瓦片翻转，可以让它的颜色由黑到白，或是由白到黑。 然而奶牛们很笨拙，它们翻转一个格子的瓦片时，与其有公共边的所有瓦片也会翻转。 现在奶牛们想知道，至少需要多少次翻转，使所有的瓦片都变成白色朝上呢？ 输入输出格式 输入格式 第一行两个整数 $M,N$。 接下来 M 行，每行 N 个整数，表示初始状态，0 表示白面朝上，1 表示黑面朝上。 输出格式 如果不能将所有瓦片都翻转为白面朝上的话，输出 `IMPOSSIBLE`。 否则输出 M 行，每行 N 个整数，第 i 行的第 j 个数代表第 i 行第 j 列的瓦片被翻转了多少次。 你的输出应该确保翻转次数最少。如果存在多种方案，输出字典序最小的方案。 这里的字典序最小指将输出中的所有空白字符去掉后，形成的字符串字典序最小。 输入输出样例 输入样例 #1 4 4   1 0 0 1   0 1 1 0   0 1 1 0   1 0 0 1 输出样例 #1 0 0 0 0   1 0 0 1   1 0 0 1   0 0 0 0 说明 下面的方案操作次数同样是最小的，但是字典序不是最小的。 ```plain 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 ```"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 Brett 班的节目是这样的：全班 n个同学排成一排，同学们手拿话筒，齐唱《喜洋洋与灰太狼》。（这个节目看起来有点二） 。 Brett班的同学分成了m个声部，一个声部由连续的同学组成，第i个声部由a[i]到b[i]之间的同学组成（包括a[i] b[i]） 但是一个同学有可能同时属于多个声部，且有可能有同学不属于任何一个声部。 为了保证演唱效果，第 i 个声部必须至少有c[i]个同学持有话筒。（即第i个声部持有话筒的同学数大于等于 c[i]） 请你算出Brett班最少需要几个话筒。 输入输出格式 输入格式 第一行 2 个正整数 n,m 以下m行，每行3个正整数 a[i] b[i] c[i]  输出格式 一个正整数 满足要求的最少话筒数 输入输出样例 输入样例 #1 11 5  3 7 3  8 10 3  6 8 1  1 3 1  10 11 1  输出样例 #1 6  说明 n<=30000 m<=5000 1≤a[i]<b[i]≤n  ;c[i]≤b[i]-a[i]+1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:摇钱树 题目描述 Cpg 正在游览一个梦中之城，在这个城市中有 n 棵摇钱树。这下，可让 Cpg 看傻了。可是 Cpg 只能在这个城市中呆 k 天，但是现在摇钱树已经成熟了，每天每棵都会掉下不同的金币（不属于 Cpg！）。Cpg 每天可以砍掉其中一颗，并获得其树上所有的金币（怎么会有这种好事）。请你帮助 Cpg 算出他在这 k 天中最多能获得多少金币。 输入输出格式 输入格式 **本题单测试点内有多组数据**。 每个测试点中有不超过 $10$ 组的测试数据。 每组测试数据： 第一行两个整数 $n,k$。 第二行包含 n 个整数 $m_i$，表示 Cpg 刚看到这 n 棵树时每刻树上的金币数。 第三行 n 个整数 $b_i$，表示每颗摇钱树，每天将会掉落的金币。 以 `0 0` 结束。 输出格式 对每组测试数据，输出仅一行，Cpg 在 k 天中能获得的最大金币数。 输入输出样例 输入样例 #1 3 3 10 20 30 4 5 6 4 3 20 30 40 50 2 7 6 5 0 0 输出样例 #1 47 104 说明 #### 数据范围与约定 - 对于 $100\\%$ 的数据，$1 \\le k \\le n \\le 10^3，1 \\le m_i \\le 10^5，1 \\le b_i \\le 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:火炬 题目描述 2008 北京奥运会，你想成为四川汶川的一名火炬手，经过层层选拔，终于到了最后一关。 这一关是一道很难的题：任意给定一个正整数 N，求一个最小的正整数 M，使得 $N \\times M$ 的十进制表示形式里只含有 `1` 和 `0`。 输入输出格式 输入格式 一行一个正整数 N。 输出格式 输出一行，如果有解，输出一个整数，表示最小的 M，否则输出 `No Solution`。 输入输出样例 输入样例 #1 12 输出样例 #1 925 说明 $1\\le N\\le 10^5$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:无向图 $G$ 的三元环指的是一个 $G$ 的一个子图 $G_0$，满足 $G_0$ 有且仅有三个点 $u, v, w$，有且仅有三条边 $\\langle u, v \\rangle, \\langle v, w \\rangle, \\langle w, u \\rangle$。两个三元环 $G_1, G_2$ 不同当且仅当存在一个点 $u$，满足 $u \\in G_1$ 且 $u \\notin G_2$。 题目描述 给定一个 n 个点 m 条边的简单无向图，求其三元环个数。 输入输出格式 输入格式 每个测试点有且仅有一组测试数据。 输入的第一行是用一个空格隔开的两个整数，分别代表图的点数 n 和边数 m。 第 2 到第 $(m + 1)$ 行，每行两个用空格隔开的整数 $u, v$，代表有一条连接节点 u 和节点 v 的边。 输出格式 输出一行一个整数，代表该图的三元环个数。 输入输出样例 输入样例 #1 3 3 1 2 2 3 3 1 输出样例 #1 1 输入样例 #2 5 8 1 2 2 3 3 5 5 4 4 2 5 2 1 4 3 4 输出样例 #2 5 说明 **【样例 2 解释】** 共有 5 个三元环，每个三元环包含的点分别是 $\\{1, 2, 4\\}, \\{2, 3, 4\\}, \\{2, 3, 5\\}, \\{2, 4, 5\\}, \\{3, 4, 5\\}$。 **【数据规模与约定】** **本题采用多测试点捆绑测试，共有两个子任务**。 - Subtask 1（30 points）：$n \\le 500，m \\le {10}^3$。 - Subtask 2（70 points）：无特殊性质。 对于 $100\\%$ 的数据，$1 \\le n \\le 10^5，1 \\le m \\le 2 \\times {10}^5，1 \\le u, v \\le n$，给出的图不存在重边和自环，**但不保证图连通**。 **【提示】** - 请注意常数因子对程序效率造成的影响。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:覆盖墙壁 题目描述 你有一个长为 N 宽为 2 的墙壁，给你两种砖头：一个长 2 宽 1，另一个是 L 型覆盖 3 个单元的砖头。如下图： ``` 0  0 0  00 ``` 砖头可以旋转，两种砖头可以无限制提供。你的任务是计算用这两种来覆盖 $N\\times 2$ 的墙壁的覆盖方法。例如一个 $2\\times3$ 的墙可以有 5 种覆盖方法，如下： ``` 012 002 011 001 011   012 112 022 011 001 ``` 注意可以使用两种砖头混合起来覆盖，如 $2\\times4$ 的墙可以这样覆盖： ``` 0112 0012 ``` 给定 N，要求计算 $2\\times N$ 的墙壁的覆盖方法。由于结果很大，所以只要求输出最后 4 位。例如 $2\\times 13$ 的覆盖方法为 $13465$，只需输出 $3465$ 即可。如果答案少于 4 位，就直接输出就可以，不用加前导 0，如 $N=3$ 时输出 5。 输入输出格式 输入格式 一个整数 N，表示墙壁的长。 输出格式 输出覆盖方法的最后 4 位，如果不足 4 位就输出整个答案。 输入输出样例 输入样例 #1 13 输出样例 #1 3465 说明 数据保证，$1\\leq N\\leq 1000000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:无线通讯网 题目描述 国防部计划用无线网络连接若干个边防哨所。2 种不同的通讯技术用来搭建无线网络； 每个边防哨所都要配备无线电收发器；有一些哨所还可以增配卫星电话。 任意两个配备了一条卫星电话线路的哨所（两边都有卫星电话）均可以通话，无论他们相距多远。而只通过无线电收发器通话的哨所之间的距离不能超过 D，这是受收发器的功率限制。收发器的功率越高，通话距离 D 会更远，但同时价格也会更贵。 收发器需要统一购买和安装，所以全部哨所只能选择安装一种型号的收发器。换句话说，每一对哨所之间的通话距离都是同一个 D。你的任务是确定收发器必须的最小通话距离 D，使得每一对哨所之间至少有一条通话路径（直接的或者间接的）。 输入输出格式 输入格式 第一行，2 个整数 S 和 P，S 表示可安装的卫星电话的哨所数，P 表示边防哨所的数量。 接下里 P 行，每行两个整数 $x，y$ 描述一个哨所的平面坐标 $(x, y)$，以 km 为单位。 输出格式 第一行，1 个实数 D，表示无线电收发器的最小传输距离，精确到小数点后两位。 输入输出样例 输入样例 #1 2 4 0 100 0 300 0 600 150 750 输出样例 #1 212.13 说明 ### 数据范围及约定 - 对于 $20\\%$ 的数据：$P = 2，S = 1$； - 对于另外 $20\\%$ 的数据：$P = 4，S = 2$； - 对于 $100\\%$ 的数据保证：$1 ≤ S ≤ 100，S < P ≤ 500，0 ≤ x,y ≤ 10000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:不想兜圈的老爷爷 题目描述 一位年过古稀的老爷爷在乡间行走 而他不想兜圈子 因为那会使他昏沉 偶然路过小A发扬助人为乐优良传统 带上地图 想知道路况是否一定使他清醒 usqwedf补充：为了让欢乐赛充满欢乐 小A还想问你一些数学作业…… 输入输出格式 输入格式 一行 n m k 表示乡间共有 n 个村庄 m 条道路 接下来 m 行 每行两个整数 x y 表示 村 x -> 村 y 单向连通 输出格式 第一行 输出 Yes/No [清醒/不清醒] 第二行 若为 Yes 输出 2^k对9997取模 反之 输出 k^2 输入输出样例 输入样例 #1 3 3 3  1 2  2 3  3 1 输出样例 #1 No  9  说明 [数据范围] 对于70%的数据 1<=n<=100 1<=m<=1000 1<=k<=30 对于100%的数据 1<=n<=1000 1<=m<=10000 1<=k<=10^9 另外，基于欢乐赛性质，我们保证数据当中至少有 20% 答案为 No"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小 K 的农场 题目描述 小 K 在 MC 里面建立很多很多的农场，总共 n 个，以至于他自己都忘记了每个农场中种植作物的具体数量了，他只记得一些含糊的信息（共 m 个），以下列三种形式描述：   - 农场 a 比农场 b 至少多种植了 c 个单位的作物； - 农场 a 比农场 b 至多多种植了 c 个单位的作物； - 农场 a 与农场 b 种植的作物数一样多。   但是，由于小 K 的记忆有些偏差，所以他想要知道存不存在一种情况，使得农场的种植作物数量与他记忆中的所有信息吻合。   输入输出格式 输入格式 第一行包括两个整数 n 和 m，分别表示农场数目和小 K 记忆中的信息数目。   接下来 m 行：   - 如果每行的第一个数是 1，接下来有三个整数 $a,b,c$，表示农场 a 比农场 b 至少多种植了 c 个单位的作物；   - 如果每行的第一个数是 2，接下来有三个整数 $a,b,c$，表示农场 a 比农场 b 至多多种植了 c 个单位的作物;   - 如果每行的第一个数是 3，接下来有两个整数 $a,b$，表示农场 a 种植的的数量和 b 一样多。   输出格式 如果存在某种情况与小 K 的记忆吻合，输出 `Yes`，否则输出 `No`。   输入输出样例 输入样例 #1 3 3 3 1 2 1 1 3 1 2 2 3 2 输出样例 #1 Yes 说明 对于 $100\\%$ 的数据，保证 $1 \\le n,m,a,b,c \\le 5 \\times 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 输入一种有机物，输出与氧气反应化学方程式中CO2和H2O的系数 输入输出格式 输入格式 一行，一个字符串，表示有机物 输出格式 两个数，分别为CO2和H2O的系数 输入输出样例 输入样例 #1 C2H5OH 输出样例 #1 2 3 说明 只含有C、H、O三种元素"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:约瑟夫问题 题目描述 n 个人围成一圈，从第一个人开始报数,数到 m 的人出列，再由下一个人重新从 1 开始报数，数到 m 的人再出圈，依次类推，直到所有的人都出圈，请输出依次出圈人的编号。 **注意：本题和《深入浅出-基础篇》上例题的表述稍有不同。书上表述是给出淘汰 $n-1$ 名小朋友，而该题是全部出圈。** 输入输出格式 输入格式 输入两个整数 $n,m$。 输出格式 输出一行 n 个整数，按顺序输出每个出圈人的编号。 输入输出样例 输入样例 #1 10 3 输出样例 #1 3 6 9 2 7 1 8 5 10 4 说明 $1 \\le m, n \\le 100$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:鸟哥（faebdc）自从虐暴 NOIP2013 以来依然勤奋学习，每天上各种 OJ 刷题，各种比赛更是不在话下。但这天他遇到了一点小小的麻烦：在一届“Orz 鸟哥杯”上，题目是在是太多了！鸟哥看得头晕眼花，他需要你的帮助。 题目描述 这场比赛共有 n 道题，每道题都有一个难度值 $a_i$，由于 wangxz 神犇已经提前帮助鸟哥将这些难度值升序排列，所以鸟哥并不想知道哪些题难度低或者高，他只想知道在某些题目 $a_l,a_{l+1},\\ldots,a_r$中，出现最多的难度值出现的次数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:高维正方体 题目描述 0 维空间的元素是点，这个毋庸置疑。 - 2 个 0 维空间的元素可以围成一个 1 维空间的元素，线段。 - 4 个 1 维空间的元素可以围成一个 2 维空间的元素，正方形。 - 6 个 2 维空间的元素可以围成一个 3 维空间的元素，正方体。 - 8 个 3 维空间的元素可以围成一个 4 维空间的元素，超正方体。 …… - 一个正方形中，有 4 个（顶）点，4 条线段（边），1 个正方形。 - 一个正方体中，有 8 个（顶）点，$12$ 条线段（棱），6 个正方形（面），1 个正方体。 …… 我们的问题是：给出 a 与 b，请求出：在 a 维空间的元素中，包含着多少个 b 维空间的元素。答案可能很大，只需要输出它除以 $10^9+7$ 的余数。 输入输出格式 输入格式 两个整数 $a,b$，以空格隔开。 输出格式 一个整数，即答案。 输入输出样例 输入样例 #1 3 1 输出样例 #1 12 说明 ### 样例解释 3 维空间的元素是正方体，1 维空间的元素是线段。所求即是一个正方体中棱的数量，为 $12$。 ### 数据范围及约定 - 对于 $5\\%$ 的数据，$a,b \\le 1$； - 对于 $10\\%$ 的数据，$a,b \\le 2$； - 对于 $20\\%$ 的数据，$a,b \\le 3$； - 对于 $35\\%$ 的数据，$a,b \\le 4$； - 对于 $70\\%$ 的数据，$a,b \\le 1000$； - 对于 $100\\%$ 的数据，$0\\le a,b \\le 100000$。 此外，对于 $15\\%$ 的数据，$b=0$，对于各 $10\\%$ 的数据，$b=1$ 或 $b=2$。 ### 提示 不保证 $a \\ge b$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 为了拯救世界，小 a 和 uim 决定召唤出 kkksc03 大神和 lzn 大神。根据古籍记载，召唤出任何一位大神，都需要使用金木水火土五种五行神石来摆一个特定的大阵。而在古籍中，记载是这样的： kkksc03 大神召唤方法： - 金神石的块数必须是 6 的倍数； - 木神石最多用 9 块； - 水神石最多用 5 块； - 火神石的块数必须是 4 的倍数； - 土神石最多用 7 块。 lzn 大神召唤方法: - 金神石的块数必须是 2 的倍数； - 木神石最多用 1 块； - 水神石的块数必须是 8 的倍数； - 火神石的块数必须是 $10$ 的倍数； - 土神石最多用 3 块。 现在是公元 $1999$ 年 $12$ 月 $31$ 日，小 a 和 uim 从 $00{:}00{:}00$ 开始找，一直找到 $23{:}00{:}00$，终于，还是没找到神石。 不过，他们在回到家后在自家地窖里发现了一些奇怪的东西，一查古籍，哎呦妈呀，怎么不早点来呢？这里有一些混沌之石，可以通过敲击而衰变成五行神石。于是，他们拼命地敲，终于敲出了 n 块神石，在 $23{:}59{:}59$ 完成了两座大阵。 然而，kkksc03 大神和 lzn 大神确实出现了，但是由于能量不够，无法发挥神力。只有把所有用 n 块神石可能摆出的大阵都摆出来，才能给他们充满能量。这下小 a 和 uim 傻了眼了，赶快联系上了你，让你帮忙算一下，一共有多少种大阵。 输入输出格式 输入格式 输入一个正整数 n。 输出格式 输出用 n 块混沌之石能摆出的大阵的种数。 输入输出样例 输入样例 #1 2 输出样例 #1 15 说明 ### 数据范围及约定 对于全部数据，$10^{99999}\\leq n\\lt 10^{100000}$。 ### 提示 由于现在已经是 $23{:}59{:}59$，所以你只有 $0.5$ 秒时间。（小 a 与 uim 需要 $0.5\\texttt s$ 排出所有阵法）。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:硬币的面值 题目描述 小 A 有 n 种硬币，现在要买一样不超过 m 元的商品，他不想得到找钱（多脏啊），同时又不想带太多的硬币，且硬币可以重复，现在已知这 n 种硬币的价值，请问最少需要多少硬币就能组合成所有可能的价格？ 输入输出格式 输入格式 第一行两个数：$n, m$。 下一行，共 n 个数字，表示硬币的面值。 输出格式 一行一个数，表示最少需要多少硬币。如果无解请输出 `No answer!!!`。 输入输出样例 输入样例 #1 5 31  1 2 8 4 16  输出样例 #1 5  说明 【数据范围】 只有 9、10 会卡人，放心贪 对于 $20\\%$ 的数据，$1 \\le n \\le 10，1 \\le m \\le 100$。   对于 $60\\%$ 的数据，$1 \\le n \\le 1000，1 \\le m \\le 10000$。   对于 $80\\%$ 的数据，$1 \\le n \\le 30000，1 \\le m \\le 2 \\times {10}^9$。   对于 $100\\%$ 的数据，$1 \\le n \\le 2 \\times {10}^5，1 \\le m \\le 2^{63}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:本场比赛第一题，给个简单的吧，这 100 分先拿着。 题目描述 有 n 个城市，中间有单向道路连接，消息会沿着道路扩散，现在给出 n 个城市及其之间的道路，问至少需要在几个城市发布消息才能让这所有 n 个城市都得到消息。 输入输出格式 输入格式 第一行两个整数 $n, m$，表示 n 个城市，m 条单向道路。 以下 m 行，每行两个整数 $b, e$ 表示有一条从 b 到 e 的道路，道路可以重复或存在自环。 输出格式 一行一个整数，表示至少要在几个城市中发布消息。 输入输出样例 输入样例 #1 5 4 1 2 2 1 2 3 5 1 输出样例 #1 2 说明 **【样例解释 #1】** 样例中在 $4, 5$ 号城市中发布消息。 **【数据范围】** 对于 $20 \\%$ 的数据，$n \\le 200$；   对于 $40 \\%$ 的数据，$n \\le 2000$；   对于 $100 \\%$ 的数据，$1 \\le n \\le {10}^5，1 \\le m \\le 5 \\times {10}^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:领地选择 题目描述 作为在虚拟世界里统帅千军万马的领袖，小 Z 认为天时、地利、人和三者是缺一不可的，所以，谨慎地选择首都的位置对于小 Z 来说是非常重要的。 首都被认为是一个占地 $C\\times C$ 的正方形。小 Z 希望你寻找到一个合适的位置，使得首都所占领的位置的土地价值和最高。 输入输出格式 输入格式 第一行三个整数 $N,M,C$，表示地图的宽和长以及首都的边长。 接下来 N 行每行 M 个整数，表示了地图上每个地块的价值。价值可能为负数。 输出格式 一行两个整数 $X,Y$，表示首都左上角的坐标。 输入输出样例 输入样例 #1 3 4 2 1 2 3 1 -1 9 0 2 2 0 1 1 输出样例 #1 1 2 说明 对于 $60\\%$ 的数据，$N,M\\le 50$。 对于 $90\\%$ 的数据，$N,M\\le 300$。 对于 $100\\%$ 的数据，$1\\le N,M\\le 10^3，1\\le C\\le \\min(N,M)$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 给出正整数 N 和 M，请你计算 $N \\div M（N / M$ 的下取整）。 输入输出格式 输入格式 两行，两个正整数，N 和 M。 输出格式 一行，一个整数，表示 $N \\div M$。 输入输出样例 输入样例 #1 1000  333 输出样例 #1 3 说明 - 对于 $60 \\%$ 的数据：$ N,M \\le 750!$，答案 $ \\le 7!$。 - 对于 $100 \\%$ 的数据：$N,M \\le 6250!$，答案 $ \\le 13!$。 请注意：上面的两句话并不是感叹句，而是陈述句。标点符号使用没有错误。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:赵神牛的游戏 题目描述 在 DNF 中，赵神牛有一个缔造者，他一共有 k 点法力值，一共有 m 个技能，每个技能耗费的法力值为 $a_i$，可以造成的伤害为 $b_i$，而 boss 的体力值为 n，请你求出它放哪个技能，才可以打死 boss。 当然，赵神牛技术很菜，他一局只放一个技能,不过每个技能都可以放无数次。 输入输出格式 输入格式 第一行有三个整数，分别表示 $k,m,n$。 后面 m 行，每行两个整数，第 $(i + 1)$ 行的整数表示耗费的法力值 $a_i$ 和造成的伤害 $b_i$。 输出格式 输出仅一行，既可以杀死 boss 的技能序号，如果有多个，按从小到大的顺序输出，中间用一个空格隔开；如果没有技能能杀死 boss，输出 `-1`。 输入输出样例 输入样例 #1 100 3 5000 20 1000 90 1 110 10000 输出样例 #1 1 输入样例 #2 50 4 10 60 100 70 1000 80 1000 90 0 输出样例 #2 -1 说明 #### 数据规模与约定 对于全部的测试点，满足： - $0\\le n,m,k\\le 3\\times 10^4$, - $0 \\leq a_i,b_i\\le 2147483647$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:在 NOIP2013 的赛场上，常神牛华丽丽的手残了，小朋友的数字一题只得了 $10$ 分。于是，他要恶搞一下这道题。 题目描述 有一批大朋友（年龄 $15$ 岁以上），他们每人手上拿着一个数字，当然这个数字只有 1 位，也就是 0 到 9 之间。每个大朋友的分数为在他之前的最长不下降子序列中所有数之和。（这个序列必须以它作为结尾！）如有多个最长不下降子序列，那么取编号字典序最小的。现在告诉你有 n 个大朋友，以及他们各自的数字，请你求出他们每个人的分数。 输入输出格式 输入格式 第一行，1 个数 n。 第二行，n 个数，分别表示每个人的数字。 输出格式 一行，n 个数，分别表示每个人的分数。 输入输出样例 输入样例 #1 5 1 2 5 3 4 输出样例 #1 1 3 8 6 10 输入样例 #2 5 1 7 5 9 6 输出样例 #2 1 8 6 17 12 说明 【样例解释 1】 五个人分数分别为 $(1),(1+2),(1+2+5),(1+2+3),(1+2+3+4)$。 【样例解释 2】 五个人分数分别为 $(1),(1+7),(1+5),(1+7+9)$ （还有一个 $(1,5,9)$），$(1+5+6)$。 【数据规模】 对于 $50\\%$ 的数据，$1\\le n\\le 500$； 对于 $80\\%$ 的数据，$1\\le n\\le 10^3$； 对于 $100\\%$ 的数据，$1\\le n\\le 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:NOIP2016 普及组 T2 题目描述 在日常生活中，通过年、月、日这三个要素可以表示出一个唯一确定的日期。 牛牛习惯用 8 位数字表示一个日期，其中，前 4 位代表年份，接下来 2 位代表月份，最后 2 位代表日期。显然：一个日期只有一种表示方法，而两个不同的日期的表 示方法不会相同。 牛牛认为，一个日期是回文的，当且仅当表示这个日期的 8 位数字是回文的。现在，牛牛想知道：在他指定的两个日期之间包含这两个日期本身），有多少个真实存在的日期是回文的。 一个 8 位数字是回文的，当且仅当对于所有的 i（$1  \\le i \\le 8$）从左向右数的第 i 个数字和第 $9-i$ 个数字（即从右向左数的第 i 个数字）是相同的。 例如： - 对于 2016 年 11 月 19 日，用 8 位数字 $20161119$ 表示，它不是回文的。 - 对于 2010 年 1 月 2 日，用 8 位数字 $20100102$ 表示，它是回文的。 - 对于 2010 年 10 月 2 日，用 8 位数字 $20101002$ 表示，它不是回文的。 每一年中都有 $12$ 个月份： 其中，$1, 3, 5, 7, 8, 10, 12$ 月每个月有 $31$ 天；$4, 6, 9, 11$ 月每个月有 $30$ 天；而对于 2 月，闰年时有 $29$ 天，平年时有 $28$ 天。 一个年份是闰年当且仅当它满足下列两种情况其中的一种： 1. 这个年份是 4 的整数倍，但不是 $100$ 的整数倍； 2. 这个年份是 $400$ 的整数倍。 例如： - 以下几个年份都是闰年：$2000, 2012, 2016$。 - 以下几个年份是平年：$1900, 2011, 2014$。 输入输出格式 输入格式 两行，每行包括一个 8 位数字。 第一行表示牛牛指定的起始日期。 第二行表示牛牛指定的终止日期。 保证 $\\mathit{date}_1$ 和 $\\mathit{date}_2$ 都是真实存在的日期，且年份部分一定为 4 位数字，且首位数字不为 0。 保证 $\\mathit{date}_1$ 一定不晚于 $\\mathit{date}_2$。 输出格式 一个整数，表示在 $\\mathit{date}_1$ 和 $\\mathit{date}_2$ 之间，有多少个日期是回文的。 输入输出样例 输入样例 #1 20110101 20111231 输出样例 #1 1 输入样例 #2 20000101 20101231 输出样例 #2 2 说明 **【样例说明】** 对于样例 1，符合条件的日期是 $20111102$。 对于样例 2，符合条件的日期是 $20011002$ 和 $20100102$。 **【子任务】** 对于 $60 \\%$ 的数据，满足 $\\mathit{date}_1 = \\mathit{date}_2$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 经过 12 年的韬光养晦，世界末日再次来临（众人：什么鬼逻辑......）。 这次，小a 和 uim 已经做好了一切准备，顺利召唤出了 kkksc03 大神和 lzn 大神。然而，kkksc03 和 lzn 告诉他们，这次世界末日太过强大，他们已无法挽回，只有创世神 JOHNKRAM 能拯救这个世界。 然而，创世神 JOHNKRAM 是无法召唤的，除非把整个宇宙按照 $E=mc^2$ 全部转化成能量。因为根据 C\\_SUNSHINE 大神随手推算出的召唤定律，至少需要被召唤者百万亿分之一的能量才能召唤（众人：什么鬼定律......）。 **** 当然，还有一种方法，那就是找出创世神 JOHNKRAM 的基因序列。普通人基因序列由 A、C、G、T 构成，创世神 JOHNKRAM 不是普通人（是个胖纸），基因序列也不一样。除了这四种普通的，还有乾、兑、离、震、巽、坎、艮、坤八种特殊基因。其中乾、坎、艮、震属阳，只能出现奇数次；坤、兑、离、巽属阴，只能出现偶数次。 现在只知道创世神 JOHNKRAM 的基因序列共有 n 位，其他一概不知。小a 和 uim 想知道他们最多要试多少次，才能召唤出创世神 JOHNKRAM 。这个数字有可能很大，所以输出答案模 $10^9$ 即可（C\\_SUNSHINE 的忠告：远离八卦，远离肥胖）。 输入输出格式 输入格式 输入由多组数据组成，每组数据一行，输入一个数 n，输入以 0 结束。 输出格式 对于每组数据，输出一行一个整数，表示答案对 $10^9$ 取模的结果。 输入输出样例 输入样例 #1 3 10 20 6 0 输出样例 #1 0 225116160 53238784 7680 说明 【数据范围】      对于 $10\\%$ 的数据：$1\\le n < 25$，数据不超过 $10$ 组；   对于 $50\\%$ 的数据：$1\\le n < 2^{31}$，数据不超过 $10^3$ 组；    对于 $100\\%$ 的数据：$1\\le n < 2^{63}$，数据不超过 $2\\times 10^5$ 组。 【样例解释】   第一个数据解释：   只有 3 位，没有合法方案，故答案为 0。 【备注】 附件：聊天记录（纯粹扯淡） JOHNKRAM 8:50:33 喂喂，坑神之赛2可以开始了吧 C_SUNSHINE 8:50:34 [自动回复]恩！ JOHNKRAM 8:51:12 我准备把最后一题数据从 $50$ 放到 $2^{63}$。 C_SUNSHINE 8:51:12 [自动回复]恩！ JOHNKRAM 8:51:45 你同意喽？ C_SUNSHINE 8:51:46 [自动回复]恩！ C_SUNSHINE 11:58:50 你疯了吗？！ JOHNKRAM 11:58:52 [自动回复]您好，我现在有事不在，一会再和您联系。 不再提醒"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:无线电测向 题目描述 艘有天线定位装置的船能通过接收当地灯塔信号来确定自己的位置。每个灯塔固定在已知点上并发出特有的信号。当船检测到信号，它可通过旋转天线直到信号达到最大强度。这样就可确定自身与该灯塔的位置关系。只要接收到两个灯塔的信息，就有可能确定船当前的位置。 编程任务：通过一对灯塔信息来确定船的位置。 灯塔和船的位置被确定在一个直角坐标系内。X 轴正向指向东，Y 轴正向指向北。船的航行路线从正北开始按顺时针用度表示。北是 0°，东是 90°，南是 180°，西是 270°。灯塔与船的位置关系用相对于船的航行方向顺时针用度表示。 输入输出格式 输入格式 文件的第一行是一个整数，表示灯塔的数目 N(N<=30)。以下 N 行,每行表示一个灯塔,为灯塔名称（名称是 20 个以下的字母），X 坐标和 Y坐标。它们都用空格隔开。 灯塔信息下面是船的信息包括三行，一行是船的方向，其余两行是所接收到的灯塔信号。 具体如下： 输入数据            数据的含义 方向                船的航行方向； 名称１ 角度１       第一个灯塔信息的名称，灯塔的方位； 名称２ 角度２       第二个灯塔信息的名称，灯塔的方位。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[CTSC1997] 选课 题目描述 在大学里每个学生，为了达到一定的学分，必须从很多课程里选择一些课程来学习，在课程里有些课程必须在某些课程之前学习，如高等数学总是在其它课程之前学习。现在有 N 门功课，每门课有个学分，每门课有一门或没有直接先修课（若课程 a 是课程 b 的先修课即只有学完了课程 a，才能学习课程 b）。一个学生要从这些课程里选择 M 门课程学习，问他能获得的最大学分是多少？ 输入输出格式 输入格式 第一行有两个整数 N , M 用空格隔开。( $1 \\leq N \\leq 300$ , $1 \\leq M \\leq 300$ ) 接下来的 N 行,第 $I+1$ 行包含两个整数 $k_i $和 $s_i$, $k_i$ 表示第I门课的直接先修课，$s_i$ 表示第I门课的学分。若 $k_i=0$ 表示没有直接先修课（$1 \\leq {k_i} \\leq N$ , $1 \\leq {s_i} \\leq 20$）。 输出格式 只有一行，选 M 门课程的最大得分。 输入输出样例 输入样例 #1 7  4 2  2 0  1 0  4 2  1 7  1 7  6 2  2 输出样例 #1 13"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:二叉苹果树 题目描述 有一棵苹果树，如果树枝有分叉，一定是分二叉（就是说没有只有一个儿子的结点） 这棵树共有 N 个结点（叶子点或者树枝分叉点），编号为 $1 \\sim N$，树根编号一定是 1。 我们用一根树枝两端连接的结点的编号来描述一根树枝的位置。下面是一颗有 4 个树枝的树： ``` 2   5  \\ /    3   4    \\ /     1 ``` 现在这颗树枝条太多了，需要剪枝。但是一些树枝上长有苹果。 给定需要保留的树枝数量，求出最多能留住多少苹果。 输入输出格式 输入格式 第一行 2 个整数 N 和 Q，分别表示表示树的结点数，和要保留的树枝数量。 接下来 $N-1$ 行，每行 3 个整数，描述一根树枝的信息：前 2 个数是它连接的结点的编号，第 3 个数是这根树枝上苹果的数量。 输出格式 一个数，最多能留住的苹果的数量。 输入输出样例 输入样例 #1 5 2 1 3 1 1 4 10 2 3 20 3 5 20 输出样例 #1 21 说明 $1 \\leqslant Q < N \\leqslant 100$，每根树枝上的苹果 $\\leqslant 3 \\times 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 他要建立一个古城堡，城堡中的路形成一棵无根树。他要在这棵树的结点上放置最少数目的士兵，使得这些士兵能瞭望到所有的路。 注意，某个士兵在一个结点上时，与该结点相连的所有边将都可以被瞭望到。 请你编一程序，给定一树，帮 Bob 计算出他需要放置最少的士兵。 输入输出格式 输入格式 第一行一个整数 n，表示树中结点的数目。 第二行至第 $n+1$ 行，每行描述每个结点信息，依次为：一个整数 i，代表该结点标号，一个自然数 k，代表后面有 k 条无向边与结点 i 相连。接下来 k 个整数，分别是每条边的另一个结点标号 $r_1,r_2,\\cdots,r_k$，表示 i 与这些点间各有一条无向边相连。 对于一个n 个结点的树，结点标号在 0 到 $n-1$ 之间，在输入数据中每条边只出现一次。保证输入是一棵树。 输出格式 输出文件仅包含一个整数，为所求的最少的士兵数目。 输入输出样例 输入样例 #1 4 0 1 1 1 2 2 3 2 0 3 0 输出样例 #1 1 说明 #### 数据规模与约定 对于全部的测试点，保证 $1 \\leq n \\leq 1500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 The cows have taken to racing each other around the farm but they get very dizzy when running in circles, and everyone knows that dizzy cows don't produce any milk. Farmer John wants to convert all of the two-way cow paths in the farm to one-way paths in order to eliminate any 'cycles' and prevent the cows from getting dizzy.  A 'cycle' enables a cow to traverse one or more cow paths and arrive back at her starting point, thus completing a loop or circle. The farm comprises N pastures (1 <= N <= 100,000) conveniently numbered 1..N. M1 (1 <= M1 <= 100,000) one-way cow paths and M2 two-way cow paths (1 <= M2 <= 100,000) connect the pastures. No path directly connects a pasture to itself, although multiple paths might connect two different pastures. A cow may or may not be able to travel between any two given pastures by following a sequence of cow paths. Your job is to assign a direction to the two-way cow paths such that the entire farm (ultimately with only one-way paths) has no cycles. That is, there should be no sequence of one-way cow paths which leads back to its starting position. The existing one-way cow paths do not form a cycle and should be left as they are. One-way cow paths run from pasture A\\_i (1 <= A\\_i <= N) to pasture B\\_i (1 <= B\\_i <= N). Two-way cow paths connect pastures X\\_i (1 <= X\\_i <= N) and Y\\_i (1 <= Y\\_i <= N). Consider this example: ```cpp 1-->2  |  /|  | / |  |/  |  3<--4  ``` The cow paths between pastures 1 and 3, 2 and 3, and 2 and 4 are two-way paths. One-way paths connect 1 to 2 and also 4 to 3. One valid way to convert the two-way paths into one-way paths in such a way that there are no cycles would be to direct them from 1 to 3, from 2 to 3, and from 3 to 4: ```cpp 1-->2  |  /|  | / |  vL  v  3<--4  ``` 输入输出格式 输入格式 第一行三个整数 $n,m_1,m_2$，分别表示点数，有向边的数量，无向边的数量。 第二行起输入 $m_1$ 行，每行 2 个整数 $a,b$，表示 a 到 b 有一条有向边。 接下来输入 $p_2$ 行，每行 2 个整数 $a,b$，表示 a 和 b 中间有一条无向边。 输出格式 对于每条无向边，我们要求按输入顺序输出你定向的结果，也就是如果你输出 $a\\ b$，那表示你将 a 和 b 中间的无向边定向为 $a \\to b$。 注意，也许存在很多可行的解。你只要输出其中任意一个就好。 输入输出样例 输入样例 #1 4 2 3 1 2 4 3 1 3 4 2 3 2 输出样例 #1 1 3 4 2 2 3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:消息传递 题目描述 巴蜀国的社会等级森严，除了国王之外，每个人均有且只有一个直接上级，当然国王没有上级。如果A是B的上级，B是C的上级，那么A就是C的上级。绝对不会出现这样的关系：A是B的上级，B也是A的上级。 最开始的时刻是0，你要做的就是用1单位的时间把一个消息告诉某一个人，让他们自行散布消息。在任意一个时间单位中，任何一个已经接到消息的人，都可以把消息告诉他的一个直接上级或者直接下属。 现在，你想知道： 1.到底需要多长时间，消息才能传遍整个巴蜀国的所有人？ 2.要使消息在传递过程中消耗的时间最短，可供选择的人有那些？ 输入输出格式 输入格式 输入文件的第一行为一个整数N（N≤1000），表示巴蜀国人的总数，假如人按照1到n编上了号码，国王的编号是1。第2行到第N行（共N-1行），每一行一个整数，第i行的整数表示编号为i的人直接上级的编号。 输出格式 文件输出共计两行： 第一行为一个整数，表示最后一个人接到消息的最早时间。 第二行有若干个数，表示可供选择人的编号，按照编号从小到大的顺序输出，中间用空格分开。 输入输出样例 输入样例 #1 8  1  1  3  4  4  4  3 输出样例 #1 5  3 4 5 6 7"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2011] 兔农 题目描述 农夫栋栋近年收入不景气，正在他发愁如何能多赚点钱时，他听到隔壁的小朋友在讨论兔子繁殖的问题。 问题是这样的：第一个月初有一对刚出生的小兔子，经过两个月长大后，这对兔子从第三个月开始，每个月初生一对小兔子。新出生的小兔子生长两个月后又能每个月生出一对小兔子。问第 n 个月有多少只兔子？ 聪明的你可能已经发现，第 n 个月的兔子数正好是第 n 个 Fibonacci（斐波那契）数。栋栋不懂什么是 Fibonacci 数，但他也发现了规律：第 $i+2$ 个月的兔子数等于第 i 个月的兔子数加上第 $i+1$ 个月的兔子数。前几个月的兔子数依次为： $$1,1,2,3,5,8,13,21,34,\\ldots$$ 栋栋发现越到后面兔子数增长的越快，期待养兔子一定能赚大钱，于是栋栋在第一个月初买了一对小兔子开始饲养。 每天，栋栋都要给兔子们喂食，兔子们吃食时非常特别，总是每 k 对兔子围成一圈，最后剩下的不足 k 对的围成一圈，由于兔子特别害怕孤独，从第三个月开始，如果吃食时围成某一个圈的只有一对兔子，这对兔子就会很快死掉。 我们假设死去的总是刚出生的兔子，那么每个月的兔子数仍然是可以计算的。例如，当 $k=7$ 时，前几个月的兔子数依次为： $$1,1,2,3,5,7,12,19,31,49,80,\\ldots$$ 给定 n，你能帮助栋栋计算第 n 个月他有多少对兔子么？由于答案可能非常大，你只需要告诉栋栋第 n 个月的兔子对数除 p 的余数即可。 输入输出格式 输入格式 输入一行，包含三个正整数 $n, k, p$。 输出格式 输出一行，包含一个整数，表示栋栋第 n 个月的兔子对数除 p 的余数。 输入输出样例 输入样例 #1 6 7 100 输出样例 #1 7 输入样例 #2 7 7 5 输出样例 #2 2 说明 |测试点编号|n|$k,p$| |:-:|:-:|:-:| |$1\\sim 10|1\\leq n\\leq 50|2\\leq k,p\\leq1000$| |$11|1\\leq n\\leq 80|2\\leq k,p\\leq 10^4$| |$12,13|1\\leq n\\leq 1000|2\\leq k,p\\leq 10^4$| |$14,15|1\\leq n\\leq 10^6|2\\leq k,p\\leq 10^6$| |$16,17|1\\leq n\\leq 10^{18}|2\\leq k,p\\leq1000$| |$18\\sim 20|1\\leq n\\leq 10^{18}|2\\leq k\\leq 10^6，2\\leq p\\leq 10^9$| 对于 $100\\%$ 的数据，$1\\leq n\\leq 10^{18}，2\\leq k\\leq 10^6，2\\leq p\\leq 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 zky 有 n 个扑克牌，编号从 1 到 n，zky 把它排成一个序列，每次把最上方的扑克牌放在牌堆底，然后把下一张扑克牌拿出来输出，最终输出的序列恰好是从 1 到 n，faebdc 问你原序列是什么，因为 faebdc 神犇早已在 $\\mathcal O (1)$ 的时间得出结果，如果你在 1 s 内答不出来，faebdc 会吃了你。 输入输出格式 输入格式 一个整数 n，表示扑克数目。 输出格式 n 个数，表示扑克序列。 输入输出样例 输入样例 #1 13 输出样例 #1 7 1 12 2 8 3 11 4 9 5 13 6 10  说明 对于 $100\\%$ 的数据，$1 \\le n \\le {10}^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:有趣的数 题目描述 让我们来考虑1到N的正整数集合。让我们把集合中的元素按照字典序排列，例如当N=11时，其顺序应该为：1,10,11,2,3,4,5,6,7,8,9。 定义K在N个数中的位置为Q(N,K)，例如Q(11,2)=4。现在给出整数K和M，要求找到最小的N，使得Q(N,K)=M。 输入输出格式 输入格式 输入文件只有一行，是两个整数K和M。 输出格式 输出文件只有一行，是最小的N，如果不存在这样的N就输出0。 输入输出样例 输入样例 #1 2 4 输出样例 #1 11 输入样例 #2 100000001 1000000000 输出样例 #2 100000000888888879 说明 【数据约定】 40%的数据，1<=K,M<=10^5； 100%的数据，1<=K,M<=10^9。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:老师交给小可可一个维护数列的任务，现在小可可希望你来帮他完成。 题目描述 有一个长为 n 的数列 $\\{a_n\\}$，有如下三种操作形式： 1. 格式 `1 t g c`，表示把所有满足 $t\\le i\\le g$ 的 $a_i$ 改为 $a_i\\times c$ ; 2. 格式 `2 t g c` 表示把所有满足 $t\\le i\\le g$ 的 $a_i$ 改为 $a_i+c$ ; 3. 格式 `3 t g` 询问所有满足 $t\\le i\\le g$ 的 $a_i$ 的和，由于答案可能很大，你只需输出这个数模 p 的值。 输入输出格式 输入格式 第一行两个整数 n 和 p。 第二行含有 n 个非负整数，表示数列 $\\{a_i\\}$ 。 第三行有一个整数 m，表示操作总数。 从第四行开始每行描述一个操作，同一行相邻两数之间用一个空格隔开，每行开头和末尾没有多余空格。 输出格式 对每个操作 3，按照它在输入中出现的顺序，依次输出**一行一个整数**表示询问结果。 输入输出样例 输入样例 #1 7 43 1 2 3 4 5 6 7 5 1 2 5 5 3 2 4 2 3 7 9 3 1 3 3 4 7 输出样例 #1 2 35 8 说明 #### 样例输入输出 1 解释 - 初始时数列为 $\\{1,2,3,4,5,6,7\\}$。 - 经过第 1 次操作后，数列为 $\\{1,10,15,20,25,6,7\\}$。 - 对第 2 次操作，和为 $10+15+20=45$，模 $43$ 的结果是 2。 - 经过第 3 次操作后，数列为 $\\{1,10,24,29,34,15,16\\}$。 - 对第 4 次操作，和为 $1+10+24=35$，模 $43$ 的结果是 $35$。 - 对第 5 次操作，和为 $29+34+15+16=94$，模 $43$ 的结果是8。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2001] 食物链 题目描述 动物王国中有三类动物 $A,B,C$，这三类动物的食物链构成了有趣的环形。A 吃 B，B 吃 C，C 吃 A。 现有 N 个动物，以 $1 \\sim N$ 编号。每个动物都是 $A,B,C$ 中的一种，但是我们并不知道它到底是哪一种。 有人用两种说法对这 N 个动物所构成的食物链关系进行描述： - 第一种说法是 `1 X Y`，表示 X 和 Y 是同类。 - 第二种说法是`2 X Y`，表示 X 吃 Y。 此人对 N 个动物，用上述两种说法，一句接一句地说出 K 句话，这 K 句话有的是真的，有的是假的。当一句话满足下列三条之一时，这句话就是假话，否则就是真话。 - 当前的话与前面的某些真的话冲突，就是假话； - 当前的话中 X 或 Y 比 N 大，就是假话； - 当前的话表示 X 吃 X，就是假话。 你的任务是根据给定的 N 和 K 句话，输出假话的总数。 输入输出格式 输入格式 第一行两个整数，$N,K$，表示有 N 个动物，K 句话。 第二行开始每行一句话（按照题目要求，见样例） 输出格式 一行，一个整数，表示假话的总数。 输入输出样例 输入样例 #1 100 7 1 101 1 2 1 2 2 2 3 2 3 3 1 1 3 2 3 1 1 5 5 输出样例 #1 3 说明 对于全部数据，$1\\le N\\le 5 \\times 10^4，1\\le K \\le 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 给定两个整点的坐标，求它们所在直线的函数解析式（一次函数）。 输入输出格式 输入格式 输入共两行。 第一行有两个整数x1,y1。表示第一个整点的坐标为(x1,y1) 第二行有两个整数x2,y2。表示第二个整点的坐标为(x2,y2) 输出格式 输出共一行，即这个函数解析式。 输入输出样例 输入样例 #1 3 6 2 4"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:bf 题目描述 bf是一种编程语言，全称为BrainFuck，因为题目名称不能太露骨，所以就简写成bf了。 这种语言的运行机制十分简单，只有一个大小为30000的有符号8位整数（范围[-128,127]）的内存槽，和一个指向内存槽中位置的指针，在最初的时候指向内存槽的第一个整数。 这种语言的字符集也是十分的简单，只有+-,.><[]。 ```cpp 字符|意义 < 　|指针所指向的内存地址减一。 > 　|指针所指向的内存地址加一。 + 　|指针所指向的内存里面的数值加一。 - 　|指针所指向的内存里面的数值减一。 . 　|输出当前指针所指向的内存里面的数值（以字符形式输出）。 , 　|将读入缓冲区中的一个字节送入当前指针指向的内存里面。如果读入缓冲区为空则送入-1。 [ 　|当前指针指向的内存里面的数值不为0时，重复执行与之相匹配的]之间的语句，直到回到[时当前指针指向的内存中的数值为0。 ] 　|如上。 ``` 输入输出格式 输入格式 输入数据若干行，代码有注释。直到一个$为代码截止。 $后面紧跟一个空格（不属于输入缓冲区），空格后面是输入缓冲区里面的内容，以一个空格和一个$截止。 输出格式 输出这段代码的执行结果。 输入输出样例 输入样例 #1 write whatever u c ,.,.,.,. $ asdf $ 输出样例 #1 asdf 说明 【数据范围】 对于10%的数据，没有循环。 对于另外10%的数据，循环没有嵌套。 对于100%的数据，输入的程序不会访问越界，输入的程序能够在10^6步内运行结束，|输入的字符串|<=30000。 字符在内存中的数值为字符所对应的Ascii码。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:龙兄摘苹果 题目描述 龙兄在淘淘摘苹果的那个果园里摘了 n 个完全互不相同的苹果，好客的园主为他提供了 k 个篮子，他想把苹果装在篮子里拎回家（由于龙兄的手是无限大的，所以你不必考虑他能不能同时拎这么多篮子）。 同时，他不希望有任何一个篮子里是空的，因为这样就做不到物尽其用。因此他想知道一共有多少种放苹果的方法，由于他的大脑运算过慢，所以找到了聪明机智的你，他在摘苹果上已经花了很长时间，所以他只能等 1 秒。 由于方法很可能非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常多，龙兄的大脑无法存储，所以他会给你一个数 p，输出方法数除以 p 的余数就可以了。 输入输出格式 输入格式 一行三个数，依次为 n，k，p，含义如题面所示。 输出格式 一个数，方法数除以 p 的余数，行末有回车。 输入输出样例 输入样例 #1 4 2 3 输出样例 #1 1 说明 ### 样例解释 一共有 4 个苹果，2 个篮子。 有以下 7 种方法。 - $\\{1\\},\\{2,3,4\\}$； - $\\{2\\},\\{1,3,4\\}$； - $\\{3\\},\\{1,2,4\\}$； - $\\{4\\},\\{1,2,3\\}$； - $\\{1,2\\},\\{3,4\\}$； - $\\{1,3\\},\\{2,4\\}$； - $\\{1,4\\},\\{2,3\\}$。 7 除以 3 余 1。 ### 数据范围及约定 - 对于 $20\\%$ 的数据，$n \\le 8，k \\le 8$。 - 对于 $60\\%$ 的数据，$n \\le 100，k \\le 100$。 - 对于 $100\\%$ 的数据，$n \\le 10000，k \\le 1000$。 保证所有数据 $n \\ge k$，且答案在 $64$ 位整型范围内。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:跳舞 题目描述 小明今天得到一个跳舞毯游戏程序Dance。游戏每次连续出N个移动的“箭头”，箭头依次标号为1到N，并且的相应的分数S[1..N]。如果你能“踏中”第i号箭头，你将获得相应的分数S[i]；否则将被扣除相应的分数。 另外，游戏还有一个累计奖励机制：如果踏准次数累计达到T，并且是在踏中第i个箭头达到的，则将得到B[i]的奖励分数,累计也将清零，重新开始。 例如：N＝6，T=3，相应的S和B分别为{1,2,3,4,5,6}、{0,0,4,7,9,10},如果小明踏中所有箭头，则得分为：(1+2+3+4)+(4+5+6+10)＝35 小明是个Dance高手，可以踏中他想踏中的任意一个箭头。但他发现，根据给定的N，T，S，B，踏中所有的箭头不一定能得最高分，小明很想知道最高能得多少分，你能帮助小明计算一下最多可得多少分吗？ 输入输出格式 输入格式 第一行两个整数N和T。 第二行N个整数，为S的相应分数。 第三行也有N个整数，为B的相应分数。 输出格式 一个整数，可得到的最高分数。 输入输出样例 输入样例 #1 6 3 1 2 3 4 5 6 1 1 1 20 1 1 输出样例 #1 39 说明 【样例解释】 跳过第一个，扣1分，连踩3个，得9分，并获得附加分20分，之后再连踩2个，共39分。 【数据范围】 对于20%的数据0≤N,T≤100； 对于100%的数据0≤N,T≤5000； S和B各有N个数，所有分数为[0，10000]之间的整数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:遥控车 题目描述 平平带着韵韵来到了游乐园，看到了n辆漂亮的遥控车，每辆车上都有一个唯一的名字name[i]。韵韵早就迫不及待地想玩名字是s的遥控车。可是韵韵毕竟还小，她想象的名字可能是一辆车名字的前缀（也就是说能确定一个i，使s是name[i]的前缀），这时她就能玩第i辆车；或者是一个无中生有的名字，即s不是任何一辆车名字的前缀，这时候她什么也不能玩。 你需要完成下面的任务： 1.韵韵想了m个她想要的名字，请告诉她能玩多少次。 2.由于管理员粗心的操作，导致每辆车的摆放位置都可能出现微小的差错，原来第i辆车现在的位置可能是i-1、i、i+1中的任意一个（第1辆车的位置不可能是0，第n辆车的位置不可能是n+1）。请你计算出共有多少种可能的排列。 注：数据保证当s是name[i]的前缀时，i是唯一确定的。一辆车可以玩多次。 输入输出格式 输入格式 第一行是2个正整数n、m。 接下来n行，每行1个字符串name[i]，表示第i辆车的名字。接下来m行，每行1个字符串s，表示韵韵想要的名字。 输出格式 第一行输出韵韵能玩的次数。第二行输出共有多少种可能的排列。 输入输出样例 输入样例 #1 4 4 Abcd DeF AAa aBccc Ab AA AbC aBcc 输出样例 #1 3 5 说明 【注意】 对于题目涉及到的字符串严格区分大小写，且长度小于255。 【数据范围】 对于20％的数据 n≤10,m≤10； 对于40％的数据 n≤1000，m≤1000； 对于100％的数据 n≤10000，m≤10000。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 现在有一个字符串，你可以对这个字符串进行拆分，如 `abcvsdaas` 可以拆分为 `abc|vs|d|aas`，现在再给你一个字典，要求分割成的每一个子串必须要有包含其中的任意一个单词。那么最多可以分为几个子串呢？ 输入输出格式 输入格式 第一行，一行字符串 第二行一个正整数 N，表示字典中字符串的数量 接下来 N 行，每行一个字符串 $A_i$，表示字典中的一个字符串。 输出格式 一个整数，表示最多的分割数。 输入输出样例 输入样例 #1 asdsd  3  as  sd  ds 输出样例 #1 2 说明 特殊情况： 如果原字符串不能被分割，请输出 0。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:扫描 题目描述 有一个 $1 \\times n$ 的矩阵，有 n 个整数。 现在给你一个可以盖住连续 k 个数的木板。 一开始木板盖住了矩阵的第 $1 \\sim k$ 个数，每次将木板向右移动一个单位，直到右端与第 n 个数重合。 每次移动前输出被覆盖住的数字中最大的数是多少。 输入输出格式 输入格式 第一行两个整数 $n,k$，表示共有 n 个数，木板可以盖住 k 个数。 第二行 n 个整数，表示矩阵中的元素。   输出格式 共 $n - k + 1$ 行，每行一个整数。 第 i 行表示第 $i \\sim i + k - 1$ 个数中最大值是多少。   输入输出样例 输入样例 #1 5 3 1 5 3 4 2 输出样例 #1 5 5 4 说明 对于 $20\\%$ 的数据，$1 \\leq k \\leq n \\leq 10^3$。 对于 $50\\%$ 的数据，$1 \\leq k \\leq n \\leq 10^4$。 对于 $100\\%$ 的数据，$1 \\leq k \\leq n \\leq 2 \\times 10^6$，矩阵中的元素大小不超过 $10^4$ 并且均为正整数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Chessboard Dance 题目描述 在棋盘上跳舞是件有意思的事情。现在给你一张国际象棋棋盘和棋盘上的一些子以及你的初始位置和方向。求按一定操作后，棋盘的状态。 操作有四种，描述如下： move n        n是非负整数，表示你按目前所在方向前进n步，如果即将走出棋盘，则停止。如果面前有棋子，则将其向前推一步。 turn left    向左转90度 turn right    向右转90度 turn back    向后转 输入输出格式 输入格式 输入前8行，每行8个字符，给出棋盘状态。“.”表示该格为空，字母表示棋子，不同字母表示不同的棋子。你所在位置用“^”、“<”、“>”、“v”四个字母中一个表示，分别表示你的方向上、左、右、下。 接下来有若干行，每行一个操作。以“#”结束。操作数不超过1000个。 输出格式 输出8行，每行8个字符，表示经过一系列操作后棋盘和你的状态。表示方法同输入。 输入输出样例 输入样例 #1 ......bA  .....^..  ........  ........  ........  ........  ........  ........  move 2  turn right  move 1  #  输出样例 #1 ......>b  ........  ........  ........  ........  ........  ........  ........"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:选择数字 题目描述 给定一行 n 个非负整数 $a_1 \\cdots a_n$。现在你可以选择其中若干个数，但不能有超过 k 个连续的数字被选择。你的任务是使得选出的数字的和最大。 输入输出格式 输入格式 第一行两个整数 n，k。 以下 n 行，每行一个整数表示 $a_i$。 输出格式 输出一个值表示答案。 输入输出样例 输入样例 #1 5 2 1 2 3 4 5  输出样例 #1 12 说明 对于 $20\\%$ 的数据，$n \\le 10$。 对于另外 $20\\%$ 的数据，$k=1$。 对于 $60\\%$ 的数据，$n \\le 1000$。 对于 $100\\%$ 的数据，$1 \\le n \\le 100000，1 \\le k \\le n，0 \\le $ 数字大小 $ \\le 1,000,000,000$。 时间限制 $500$ ms。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO08JAN] iCow B 题目描述 被无止境的农活压榨得筋疲力尽后，FarmerJohn 打算用他在 MP3 播放器市场新买的 iCow 来听些音乐，放松一下。FJ 的 iCow 里存了 $N(1 \\le N \\le 1{,}000)$ 首曲子，按 $1..N$ 依次编号。至于曲子播放的顺序，则是按一个 FarmerJohn 自己设计的算法来决定： - 第 i 首曲子有一个初始权值 $R_i\\ (1 \\le R_i \\le 10{,}000)$。 -  当一首曲子播放完毕，接下来播放的将是所有曲子中权值最大的那首（如果有两首或多首曲子的权值相同，那么这些曲子中编号最小的那首会被选中）。 - 一首曲子在播放结束后，它的权值会被平均地分给其他 $N-1$ 首曲子，它本身的权值清零。 - 如果一首曲子的权值无法被平均分配（也就是说，无法被 $N-1$ 整除），那么被 $N-1$ 除的余数部分将会以 1 为单位，顺次分配给排名靠前的曲子（也就是说，顺序为曲目 1 、曲目 $2 \\cdots $ 依次下去。当然，刚播放过的那首曲子需要被跳过），直到多出的部分被分配完。 在选定的下一首曲子播放完毕后，这个算法再次被执行，调整曲子的权值，并选出再接下来播放的曲目。 请你计算一下，按 FJ 的算法，最先播放的 $T\\ (1 \\le T \\le 1000)$ 首曲子分别是哪些。 输入输出格式 输入格式 第 1 行有两个用空格隔开的整数：N 和 T。 第 2 至第 $N+1$ 行，第 $i+1$ 行为 1 个整数 $R_i$。 输出格式 输出共 T 行，第 i 行输出一个整数，表示 iCow 播放的第 i 首曲子。 输入输出样例 输入样例 #1 3 4 10 8 11 输出样例 #1 3 1 2 3 说明 每一首曲子播放前，三首曲子的权值分别为： - $[10,8,11]$。播放 $\\#3，11/2 = 5$，权值余量为 1。 - $[16,13,0]$。播放 $\\#1，16/2 = 8$。 - $[0,21,8]$。播放 $\\#2，21/2 = 10$，权值余量为 1。 - $[11,0,18]$。播放 $\\#3$，……"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:电话号码 题目描述 一串由长长的数字组成的电话号码通常很难记忆。为了方便记忆，有种方法是用单词来方便记忆。例如用“Three Tens”来记忆电话3-10-10-10。 电话号码的标准形式是七位数字，中间用连字号分成前三个和后四个数字（例如：888-1200）。电话号码可以用字母来表示。以下是字母与数字的对应： A，B和C对应2 D，E和F对应3 G，H和I对应4 J，K和L对应5 M，N和O对应6 P，R和S对应7 T，U和V对应8 W，X和Y对应9 你会发现其中没有字母Q和Z。电话中的连字号是可以忽略。例如TUT-GLOP的标准形式是888-4567，310-GINO的标准形式是310-4466，3-10-10-10的标准形式是310-1010。 如果两个电话号码的标准形式是一样的，那么这两个电话号码就是一样的。 现在有一本电话簿，请从中找出哪些电话号码是重复的。 输入输出格式 输入格式 第一行一个正整数N，表示有多少个电话号码。 以下N行，每行一个电话号码，电话号码由数字、大写字母（除Q、Z）和连字符组成。电话号码长度不会超过1000。所有电话号码都合法。 输出格式 将所有重复的电话号码按字典序以标准形式输出，并且在每个电话号码后跟一个整数，表示该电话号码共出现了多少次，电话号码和整数间用一个空格隔开。不要输出多余空行。 如果没有重复的电话号码，则输出：No duplicates. 输入输出样例 输入样例 #1 3  TUT-GLOP  3-10-10-10  310-1010  输出样例 #1 310-1010 2 说明 【数据范围】 对于30%的数据，N<=20。 对于50%的数据，N<=10000。 对于100%的数据，N<=100000。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 无线网络发射器选址 题目描述 随着智能手机的日益普及，人们对无线网的需求日益增大。某城市决定对城市内的公共场所覆盖无线网。 假设该城市的布局为由严格平行的 $129$ 条东西向街道和 $129$ 条南北向街道所形成的网格状，并且相邻的平行街道之间的距离都是恒定值 1。东西向街道从北到南依次编号为 $0,1,2 \\dots 128$，南北向街道从西到东依次编号为 $0,1,2 \\dots 128$。 东西向街道和南北向街道相交形成路口，规定编号为 x 的南北向街道和编号为 y 的东西向街道形成的路口的坐标是 $(x, y)$。在某些路口存在一定数量的公共场所。 由于政府财政问题，只能安装一个大型无线网络发射器。该无线网络发射器的传播范围是一个以该点为中心，边长为 $2d$ 的正方形。传播范围包括正方形边界。 现在政府有关部门准备安装一个传播参数为 d 的无线网络发射器，希望你帮助他们在城市内找出合适的路口作为安装地点，使得覆盖的公共场所最多。 输入输出格式 输入格式 第一行包含一个整数 d，表示无线网络发射器的传播距离。 第二行包含一个整数 n，表示有公共场所的路口数目。 接下来 n 行，每行给出三个整数 $x, y, k$，中间用一个空格隔开，分别代表路口的坐标 $(x, y)$ 以及该路口公共场所的数量。同一坐标只会给出一次。 输出格式 输出一行，包含两个整数，用一个空格隔开，分别表示能覆盖最多公共场所的安装地点方案数，以及能覆盖的最多公共场所的数量。 输入输出样例 输入样例 #1 1   2   4 4 10   6 6 20     输出样例 #1 1 30 说明 对于100%的数据，$1 \\leq d \\leq 20, 1 \\leq n \\leq 20, 0 \\leq x \\leq 128, 0 \\leq y \\leq 128, 0 < k \\leq 1000000$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[AHOI2009] 跳棋 题目描述 在一个 1 行 N 列（N 是奇数）的棋盘上，有 K 个格子是红色的。这种情况下，你有一个跳棋在最左端的格子上。你的目标是将它移动到最右边的格子，在开始移动之间，你可以在棋盘的任意空位上放棋子。在游戏开始后 你只可以随时在一个红色格子上放棋子。棋子的移动规则是：每次只可以选择一个棋子，跳过与之相邻的棋子走到后面的空格上，被它跳过的棋子被吃掉，即从棋盘上移走，如相邻棋子的另一侧有棋子，则不能跳。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2005] 维护数列 题目描述 请写一个程序，要求维护一个数列，支持以下 6 种操作： | 编号 | 名称 | 格式 | 说明 | | :-----------: | :-----------: | :-----------: | :----------- | | 1 | 插入 | $\\operatorname{INSERT}\\ posi \\ tot \\ c_1 \\ c_2 \\cdots c_{tot}$ | 在当前数列的第 $posi$ 个数字后插入 $tot$ 个数字：$c_1, c_2 \\cdots c_{tot}$；若在数列首插入，则 $posi$ 为 0 | | 2 | 删除 | $\\operatorname{DELETE} \\ posi \\ tot$ | 从当前数列的第 $posi$ 个数字开始连续删除 $tot$ 个数字 | | 3 | 修改 | $\\operatorname{MAKE-SAME} \\ posi \\ tot \\ c$ | 从当前数列的第 $posi$ 个数字开始的连续 $tot$ 个数字统一修改为 c | | 4 | 翻转 | $\\operatorname{REVERSE} \\ posi \\ tot$ | 取出从当前数列的第 $posi$ 个数字开始的 $tot$ 个数字，翻转后放入原来的位置 | | 5 | 求和 | $\\operatorname{GET-SUM} \\ posi \\ tot$ | 计算从当前数列的第 $posi$ 个数字开始的 $tot$ 个数字的和并输出 | | 6 | 求最大子列和 | $\\operatorname{MAX-SUM}$ | 求出当前数列中和最大的一段子列，并输出最大和 | 输入输出格式 输入格式 第一行包含两个整数 N 和 M，N 表示初始时数列中数的个数，M 表示要进行的操作数目。 第二行包含 N 个数字，描述初始时的数列。以下 M 行，每行一条命令，格式参见问题描述中的表格。 输出格式 对于输入数据中的 $\\operatorname{GET-SUM}$ 和 $\\operatorname{MAX-SUM}$ 操作，向输出文件依次打印结果，每个答案（数字）占一行。 输入输出样例 输入样例 #1 9 8  2 -6 3 5 1 -5 -3 6 3  GET-SUM 5 4 MAX-SUM INSERT 8 3 -5 7 2 DELETE 12 1 MAKE-SAME 3 3 2 REVERSE 3 6 GET-SUM 5 4 MAX-SUM 输出样例 #1 -1 10 1 10 说明 #### 数据规模与约定 - 你可以认为在任何时刻，数列中至少有 1 个数。 - 输入数据一定是正确的，即指定位置的数在数列中一定存在。 - 对于 $50\\%$ 的数据，任何时刻数列中最多含有 $3 \\times 10^4$ 个数。 - 对于 $100\\%$ 的数据，任何时刻数列中最多含有 $5 \\times 10^5$ 个数，任何时刻数列中任何一个数字均在 $[-10^3, 10^3]$ 内，$1 \\le M \\le 2 \\times 10^4$，插入的数字总数不超过 $4 \\times 10^6$。 题面由 @syksykCCC 提供。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:质因子分解 题目描述 对 $N!$ 进行质因子分解。 输入输出格式 输入格式 输入数据仅有一行包含一个正整数 N，$N \\leq 10000$。 输出格式 输出数据包含若干行，每行两个正整数 $p,a$，中间用一个空格隔开。表示 $N!$ 包含 a 个质因子 p，要求按 p 的值从小到大输出。 输入输出样例 输入样例 #1 10 输出样例 #1 2 8 3 4 5 2 7 1 说明 $10! = 3628800 = (2^8) \\times (3^4) \\times (5^2) \\times 7$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2012] 随机数生成器 题目描述 栋栋最近迷上了随机算法，而随机数是生成随机算法的基础。栋栋准备使用线性同余法（Linear Congruential Method）来生成一个随机数列，这种方法需要设置四个非负整数参数 $m,a,c,X_0$，按照下面的公式生成出一系列随机数 $\\{X_n\\}$： $$X_{n+1}=(aX_n +c)\\bmod m$$ 其中 $\\bmod m$ 表示前面的数除以 m 的余数。从这个式子可以看出，这个序列的下一个数总是由上一个数生成的。 用这种方法生成的序列具有随机序列的性质，因此这种方法被广泛地使用，包括常用的 C++ 和 Pascal 的产生随机数的库函数使用的也是这种方法。 栋栋知道这样产生的序列具有良好的随机性，不过心急的他仍然想尽快知道 $X_n$ 是多少。由于栋栋需要的随机数是 $0,1,\\dots,g-1$ 之间的，他需要将 $X_n$ 除以 g 取余得到他想要的数，即 $X_n \\bmod g$，你只需要告诉栋栋他想要的数 $X_n \\bmod g$ 是多少就可以了。 输入输出格式 输入格式 一行 6 个用空格分割的整数 $m,a,c,X_0,n$ 和 g，其中 $a,c,X_0$ 是非负整数，$m,n,g$ 是正整数。 输出格式 输出一个数，即 $X_n \\bmod g$。 输入输出样例 输入样例 #1 11 8 7 1 5 3 输出样例 #1 2 说明 计算得 $X_n=X_5=8$，故$(X_n \\bmod g) = (8 \\bmod 3) = 2$。 对于 $100\\%$ 的数据，$n,m,a,c,X_0\\leq 10^{18}，1\\leq g\\leq 10^8，n,m\\geq 1，a,c,X_0\\geq 0$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:方格取数加强版 题目描述 给出一个 $n\\times n$ 的矩阵,每一格有一个非负整数 $A_{i,j}（A_{i,j} \\le 10^3$），现在从 $(1,1)$ 出发，可以往右或者往下走，最后到达 $(n,n)$，每达到一格，把该格子的数取出来，该格子的数就变成 0，这样一共走 K 次，现在要求 K 次所达到的方格的数的和最大。 输入输出格式 输入格式 第一行两个数 $n,K（1 \\le n \\le 50，0 \\le K \\le 10$）。 接下来 n 行，每行 n 个数，分别表示矩阵的每个格子的数。 输出格式 一个数，为最大和。 输入输出样例 输入样例 #1 3 1 1 2 3 0 2 1 1 4 2 输出样例 #1 11 说明 每个格子中的数不超过 $1000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:魔术棋子 题目描述 在一个M\\*N的魔术棋盘中，每个格子中均有一个整数，当棋子走进这个格子中，则此棋子上的数会被乘以此格子中的数。一个棋子从左上角走到右下角，只能向右或向下行动，请问此棋子走到右下角后，模（mod）K可以为几？ 如以下2\\*3棋盘： ``` 3    4    4 5    6    6 ``` 棋子初始数为1，开始从左上角进入棋盘，走到右下角，上图中，最后棋子上的数可能为288,432或540。所以当K = 5时，可求得最后的结果为：0,2,3。 输入输出格式 输入格式 第一行为三个数，分别为M,N,K (1 ≤ M,N,K ≤ 100)以下M行，每行N个数，分别为此方阵中的数。 输出格式 第一行为可能的结果个数 第二行为所有可能的结果(按升序输出) 输入输出样例 输入样例 #1 2 3 5 3 4 4 5 6 6 输出样例 #1 3 0 2 3"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2012] 美食节 题目描述 CZ 市为了欢迎全国各地的同学，特地举办了一场盛大的美食节。 作为一个喜欢尝鲜的美食客，小 M 自然不愿意错过这场盛宴。他很快就尝遍了美食节所有的美食。然而，尝鲜的欲望是难以满足的。尽管所有的菜品都很可口，厨师做菜的速度也很快，小 M 仍然觉得自己桌上没有已经摆在别人餐桌上的美食是一件无法忍受的事情。于是小 M 开始研究起了做菜顺序的问题，即安排一个做菜的顺序使得同学们的等待时间最短。 小 M 发现，美食节共有 n 种不同的菜品。每次点餐，每个同学可以选择其中的**一个菜品**。总共有 m 个厨师来制作这些菜品。当所有的同学点餐结束后，菜品的制作任务就会分配给每个厨师。然后每个厨师就会同时开始做菜。**厨师们会按照要求的顺序进行制作，并且每次只能制作一人份**。 此外，小 M 还发现了另一件有意思的事情——虽然这 m 个厨师都会制作全部的 n 种菜品，但**对于同一菜品，不同厨师的制作时间未必相同**。他将菜品用 $1, 2, \\ldots, n$ 依次编号，厨师用 $1, 2, \\ldots, m$ 依次编号，将第 j 个厨师制作第 i 种菜品的时间记为 $t_{i,j}$。 小 M 认为：每个同学的等待时间为**所有厨师开始做菜起，到自己那份菜品完成为止**的时间总长度。换句话说，如果一个同学点的菜是某个厨师做的第 k 道菜，则他的等待时间就是这个厨师制作前 k 道菜的时间之和。而**总等待时间**为**所有同学的等待时间之和**。 现在，小 M 找到了所有同学的点菜信息——有 $p_i$ 个同学点了第 i 种菜品（$i=1, 2, \\ldots, n$）。他想知道的是最小的总等待时间是多少。 输入输出格式 输入格式 输入文件的第 1 行包含两个正整数 n 和 m，表示菜品的种数和厨师的数量。 第 2 行包含 n 个正整数，其中第 i 个数为 $p_i$，表示点第 i 种菜品的人数。 接下来有 n 行，每行包含 m 个非负整数，这 n 行中的第 i 行的第 j 个数为 $t_{i,j}$，表示第 j 个厨师制作第 i 种菜品所需的时间。 输入文件中每行相邻的两个数之间均由一个空格隔开，行末均没有多余空格。 输出格式 输出仅一行包含一个整数，为总等待时间的最小值。 输入输出样例 输入样例 #1 3 2  3 1 1  5 7  3 6  8 9 输出样例 #1 47 说明 厨师 1 先制作 1 份菜品 2，再制作 2 份菜品 1。点这 3 道菜的 3 个同学的等待时间分别为 3，$3+5=8，3+5+5=13$。 厨师 2 先制作 1 份菜品 1，再制作 1 份菜品 3。点这 2 道菜的 2 个同学的等待时间分别为 7，$7+9=16$。 总等待时间为 $3+8+13+7+16=47$。 虽然菜品 1 和菜品 3 由厨师 1 制作更快，如果这些菜品都由厨师 1 制作，总等待时间反而更长。如果按上述的做法，将 1 份菜品 1 和 1 份菜品 3 调整到厨师 2 制作，这样厨师 2 不会闲着，总等待时间更短。 可以证明，没有更优的点餐方案。 每组数据的 $n,m$ 和 p 值如下：   |测试点编号| n| m| p|    |:------:|:----:|:----:|:----:|     |1|$n = 5$| $m = 5$| $p = 10$|    |2| $n = 40$| $m = 1$ |$p = 400$ |   |3| $n = 40$| $m = 2$ |$p = 300$ | |4| $n = 40$| $m = 40$| $p = 40$ | |5| $n = 5$| $m = 40$| $p = 100$ | |6| $n = 10$| $m = 50$| $p = 200$ | |7| $n = 20$| $m = 60$| $p = 400$ | |8| $n = 40$| $m = 80$| $p = 600$ | |9| $n = 40$| $m = 100$| $p = 800$ | |$10$| $n = 40$| $m = 100$| $p = 800$ |"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[AHOI2009] 中国象棋 题目描述 这次小可可想解决的难题和中国象棋有关，在一个 n 行 m 列的棋盘上，让你放若干个炮（可以是 0 个），使得没有一个炮可以攻击到另一个炮，请问有多少种放置方法。大家肯定很清楚，在中国象棋中炮的行走方式是：一个炮攻击到另一个炮，当且仅当它们在同一行或同一列中，且它们之间恰好 有一个棋子。你也来和小可可一起锻炼一下思维吧！ 输入输出格式 输入格式 一行包含两个整数 $n,m$，之间由一个空格隔开。 输出格式 总共的方案数，由于该值可能很大，只需给出方案数模 $9999973$ 的结果。 输入输出样例 输入样例 #1 1 3 输出样例 #1 7 说明 **样例说明** 除了 3 个格子里都塞满了炮以外，其它方案都是可行的，所以一共有 $2 \\times 2 \\times 2-1=7$ 种方案。 **数据规模与约定** - 对于 $30\\%$ 的数据，n 和 m 均不超过 6。 - 对于 $50\\%$ 的数据，n 和 m 至少有一个数不超过 8。 - 对于 $100\\%$ 的数据，$1 \\leq n,m \\leq 100$。 题面修改：@syksykCCC。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SCOI2007] 修车 题目描述 同一时刻有 N 位车主带着他们的爱车来到了汽车维修中心。 维修中心共有 M 位技术人员，不同的技术人员对不同的车进行维修所用的时间是不同的。 现在需要安排这 M 位技术人员所维修的车及顺序，使得顾客平均等待的时间最小。 说明：顾客的等待时间是指从他把车送至维修中心到维修完毕所用的时间。 输入输出格式 输入格式 第一行有两个数 $M,N$，表示技术人员数与顾客数。 接下来 N 行，每行 M 个整数。第 $i+1$ 行第 j 个数表示第 j 位技术人员维修第 i 辆车需要用的时间 $T_{i,j}$。 输出格式 最小平均等待时间，答案精确到小数点后 2 位。 输入输出样例 输入样例 #1 2 2 3 2 1 4 输出样例 #1 1.50 说明 对于 $100\\%$ 的数据，$2\\le M\\le 9，1\\le N\\le 60，1\\le T\\le 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[ZJOI2009] 假期的宿舍 题目描述 学校放假了……有些同学回家了，而有些同学则有以前的好朋友来探访，那么住宿就是一个问题。 比如 A 和 B 都是学校的学生，A 要回家，而 C 来看B，C 与 A 不认识。我们假设每个人只能睡和自己直接认识的人的床。那么一个解决方案就是 B 睡 A 的床而 C 睡 B 的床。而实际情况可能非常复杂，有的人可能认识好多在校学生，在校学生之间也不一定都互相认识。 我们已知一共有 n 个人，并且知道其中每个人是不是本校学生，也知道每个本校学生是否回家。问是否存在一个方案使得所有不回家的本校学生和来看他们的其他人都有地方住。 输入输出格式 输入格式 第一行一个数 T 表示数据组数。接下来 T 组数据，每组数据第一行一个数 n 表示涉及到的总人数。 接下来一行 n 个数，第 i 个数表示第 i 个人是否是在校学生 (0 表示不是，1 表示是)。再接下来一行 n 个数，第 i 个数表示第 i 个人是否回家 (0 表示不回家，1 表示回家，注意如果第 i 个人不是在校学生，那么这个位置上的数是一个随机的数，你应该在读入以后忽略它)。 接下来 n 行每行 n 个数，第 i 行第 j 个数表示 i 和 j 是否认识 (1 表示认识，0 表示不认识，第 i 行 i 个的值为 0，但是显然自己还是可以睡自己的床)，认识的关系是相互的。 输出格式 对于每组数据，如果存在一个方案则输出 `^_^`，否则输出`T_T`。（注意输出的都是半角字符，即三个符号的 ASCII 码分别为 $94,84,95$） 输入输出样例 输入样例 #1 1 3 1 1 0 0 1 0 0 1 1 1 0 0 1 0 0 输出样例 #1 ^_^ 说明 对于 $30\\%$ 的数据满足 $1 \\le n \\le 12$。 对于 $100\\%$ 的数据满足 $1 \\le n \\le 50，1 \\le T \\le 20$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[ZJOI2007] 捉迷藏 题目描述 Jiajia 和 Wind 是一对恩爱的夫妻，并且他们有很多孩子。某天，Jiajia、Wind 和孩子们决定在家里玩捉迷藏游戏。他们的家很大且构造很奇特，由 N 个屋子和 $N-1$ 条双向走廊组成，这 $N-1$ 条走廊的分布使得任意两个屋子都互相可达。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SHOI2007] 善意的投票 / [JLOI2010] 冠军调查 题目描述 幼儿园里有 n 个小朋友打算通过投票来决定睡不睡午觉。 对他们来说，这个问题并不是很重要，于是他们决定发扬谦让精神。 虽然每个人都有自己的主见，但是为了照顾一下自己朋友的想法，他们也可以投和自己本来意愿相反的票。 我们定义一次投票的冲突数为好朋友之间发生冲突的总数加上和所有和自己本来意愿发生冲突的人数。 我们的问题就是，每位小朋友应该怎样投票，才能使冲突数最小？ 输入输出格式 输入格式 第一行两个整数 $n,m$。其中 n 代表总人数，m 代表好朋友的对数。 第二行 n 个整数，第 i 个整数代表第 i 个小朋友的意愿：当它为 1 时表示同意睡觉，当它为 0 时表示反对睡觉。 接下来 m 行，每行有两个整数 $i,j$，表示 $i,j$ 是一对好朋友，我们保证任何两对 $i,j$ 不会重复。 输出格式 一行一个整数，即可能的最小冲突数。 输入输出样例 输入样例 #1 3 3 1 0 0 1 2 1 3 3 2 输出样例 #1 1 说明 对于 $100\\%$ 的数据，$2\\le n\\le300，1\\le m \\le \\frac{n(n-1)}2$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:NOIP2016 普及组 T3 题目描述 小 K 是一个海港的海关工作人员，每天都有许多船只到达海港，船上通常有很多来自不同国家的乘客。 小 K 对这些到达海港的船只非常感兴趣，他按照时间记录下了到达海港的每一艘船只情况；对于第 i 艘到达的船，他记录了这艘船到达的时间 $t_i$ (单位：秒)，船上的乘客数 $k_i$，以及每名乘客的国籍 $x_{i,1}, x_{i,2},\\dots,x_{i,k}$。 小K统计了 n 艘船的信息，希望你帮忙计算出以每一艘船到达时间为止的 $24$ 小时（$24$ 小时 $=86400$ 秒）内所有乘船到达的乘客来自多少个不同的国家。 形式化地讲，你需要计算 n 条信息。对于输出的第 i 条信息，你需要统计满足 $t_i-86400<t_p \\le t_i$ 的船只 p，在所有的 $x_{p,j}$ 中，总共有多少个不同的数。 输入输出格式 输入格式 第一行输入一个正整数 n，表示小 K 统计了 n 艘船的信息。 接下来 n 行，每行描述一艘船的信息：前两个整数 $t_i$ 和 $k_i$ 分别表示这艘船到达海港的时间和船上的乘客数量，接下来 $k_i$ 个整数 $x_{i,j}$ 表示船上乘客的国籍。 保证输入的 $t_i$ 是递增的，单位是秒；表示从小K第一次上班开始计时，这艘船在第 $t_i$ 秒到达海港。 保证 $1 \\le n \\le 10^5，\\sum{k_i} \\le 3\\times 10^5 $ ，$1\\le x_{i,j} \\le 10^5$， $1 \\le t_{i-1}\\le  t_i    \\le  10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[JLOI2013] 卡牌游戏 题目描述 N个人坐成一圈玩游戏。一开始我们把所有玩家按顺时针从1到N编号。首先第一回合是玩家1作为庄家。每个回合庄家都会随机（即按相等的概率）从卡牌堆里选择一张卡片，假设卡片上的数字为X，则庄家首先把卡片上的数字向所有玩家展示，然后按顺时针从庄家位置数第X个人将被处决即退出游戏。然后卡片将会被放回卡牌堆里并重新洗牌。被处决的人按顺时针的下一个人将会作为下一轮的庄家。那么经过N-1轮后最后只会剩下一个人，即为本次游戏的胜者。现在你预先知道了总共有M张卡片，也知道每张卡片上的数字。现在你需要确定每个玩家胜出的概率。 这里有一个简单的例子： 例如一共有4个玩家，有四张卡片分别写着3,4,5,6. 第一回合，庄家是玩家1，假设他选择了一张写着数字5的卡片。那么按顺时针数1,2,3,4,1，最后玩家1被踢出游戏。 第二回合，庄家就是玩家1的下一个人，即玩家2.假设玩家2这次选择了一张数字6，那么2,3,4,2,3,4，玩家4被踢出游戏。 第三回合，玩家2再一次成为庄家。如果这一次玩家2再次选了6，则玩家3被踢出游戏，最后的胜者就是玩家2. 输入输出格式 输入格式 第一行包括两个整数N,M分别表示玩家个数和卡牌总数。 接下来一行是包含M个整数，分别给出每张卡片上写的数字。 输出格式 输出一行包含N个百分比形式给出的实数，四舍五入到两位小数。分别给出从玩家1到玩家N的胜出概率，每个概率之间用空格隔开，最后不要有空格。 输入输出样例 输入样例 #1 5 5 2 3 5 7 11 输出样例 #1 22.72% 17.12% 15.36% 25.44% 19.36% 输入样例 #2 4 4 3 4 5 6 输出样例 #2 25.00% 25.00% 25.00% 25.00% 说明 对于30%的数据，有1<=N<=10 对于50%的数据，有1<=N<=30 对于100%的数据，有1<=N<=50 1<=M<=50 1<=每张卡片上的数字<=50"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:感谢@klzz 提供的翻译 题目描述 Farmer John has taken his cows on a trip to the city! As the sun sets, the cows gaze at the city horizon and observe the beautiful silhouettes formed by the rectangular buildings. The entire horizon is represented by a number line with N (1 ≤ N ≤ 40,000) buildings. Building i's silhouette has a base that spans locations Ai through Bi along the horizon (1 ≤ Ai < Bi ≤ 1,000,000,000) and has height Hi (1 ≤ Hi ≤ 1,000,000,000). Determine the area, in square units, of the aggregate silhouette formed by all N buildings. 有一个数列，初始值均为0，他进行N次操作，每次将数列[ai,bi)这个区间中所有比Hi小的数改为Hi，他想知道N次操作后数列中所有元素的和。 输入输出格式 输入格式 第一行一个整数N，然后有N行，每行三个正整数ai、bi、Hi。 输出格式 一个数，数列中所有元素的和。 输入输出样例 输入样例 #1 4 2 5 1 9 10 4 6 8 2 4 6 3 输出样例 #1 16 说明 N<=40000 , a、b、k<=10^9 。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:分队问题 题目描述 给定n个选手，将他们分成若干只队伍。其中第i个选手要求自己所属的队伍的人数大等于a[i]人。 在满足所有选手的要求的前提下，最大化队伍的总数。 注：每个选手属于且仅属于一支队伍。 输入输出格式 输入格式 第一行一个整数n，表示人数。 以下n行，每行一个整数表示a[i]。 输出格式 输出队伍总数的最大值。数据保证有解。 输入输出样例 输入样例 #1 5  2  1  2  2  3   输出样例 #1 2 说明 对于20%的数据，n <= 10 对于40%的数据，n <= 1000 对于60%的数据，n <= 10000 对于100%的数据，1 <= n <= 10^6"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:奇妙的汽车 题目描述 你有着一辆奇妙的汽车，这辆汽车有着自动加速的功能。打个比方吧，第1天你驾驶着它可以行驶a路程，那么第2天你可以让它所走的路程增加到第1天的2~9倍（必须是其中一个整数），也就是2a~9a，第3天它所行驶的路程就将达到第2天的2~9倍……也就是说，这辆车在第i天所走的路程一定是第i-1天的2~9倍，而且还必须是它的整数倍。 现在你迫不及待地开着这辆车要从A城市出发到B城市旅游，顺便在路上展示一下这辆旷世奇车。你已经知道你需要行驶的里程S，现在请你合理安排第1天的里程和接下来每天需要增加路程的倍数，好让你能够在最短的天数内，恰好到达B城市。 不过，因为你想要好好展示一下你的车，而且也是为了交通安全，你被要求至少要花2天时间，如果不能找到这样的方案请输出-1。 输入输出格式 输入格式 一个正整数S，代表A城市到B城市的里程。 输出格式 一个数，代表最少需要行驶的天数，如果无解输出-1。 输入输出样例 输入样例 #1 15121 输出样例 #1 -1 输入样例 #2 571 输出样例 #2 5 说明 数据规模 对于30%数据，有 $S\\leqslant 100$； 对于70%数据，有 $S\\leqslant 10^7$； 对于100%数据，有 $9<S\\leqslant 10^8$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[TJOI2011] 卡片 题目描述 桌子上有 m 张蓝色卡片与 n 张红色卡片，每张卡片上有一个大于 1 的整数。现在你要从桌子上拿走一些卡片，分若干次拿。每次只能拿走一组卡片：这组卡片颜色不同，并且两张卡片上面的数字的最大公约数大于 1。问：最多可以从桌上拿走多少组卡片。 输入输出格式 输入格式 每个输入文件中包含多组测试数据，每个文件中测试数据的数目不超过 $100$。 文件的第一行读入一个整数 T，为数据组数。 每组数据的格式如下： ``` m n b1 b2 … bm r1 r2 … rn ``` 第二行给出每张蓝色卡片上面的数字，第三行给出每张红色卡片上的数字。 输出格式 对每组测试数据，输出最多可以拿走多少组卡片。 输入输出样例 输入样例 #1 7 4 3 2 6 6 15 2 3 5 2 3 4 9 8 16 32 4 2 4 9 11 13 5 7 5 5 2 3 5 1001 1001 7 11 13 30 30 10 10 2 3 5 7 9 11 13 15 17 29 4 6 10 14 18 22 26 30 34 38 20 20 195 144 903 63 137 513 44 626 75 473 876 421 568 519 755 840 374 368 570 872 363 650 155 265 64 26 426 391 15 421 373 984 564 54 823 477 565 866 879 638 100 100 195 144 903 63 137 513 44 626 75 473 876 421 568 519 755 840 374 368 570 872 363 650 155 265 64 26 426 391 15 421 373 984 564 54 823 477 565 866 879 638 117 755 835 683 52 369 302 424 513 870 75 874 299 228 140 361 30 342 750 819 761 123 804 325 952 405 578 517 49 457 932 941 988 767 624 41 912 702 241 426 351 92 300 648 318 216 785 347 556 535 166 318 434 746 419 386 928 996 680 975 231 390 916 220 933 319 37 846 797 54 272 924 145 348 350 239 563 135 362 119 446 305 213 879 51 631 43 755 405 499 509 412 887 203 408 821 298 443 445 96 274 715 796 417 839 147 654 402 280 17 298 725 98 287 382 923 694 201 679 99 699 188 288 364 389 694 185 464 138 406 558 188 897 354 603 737 277 35 139 556 826 213 59 922 499 217 846 193 416 525 69 115 489 355 256 654 49 439 118 961 输出样例 #1 3 1 0 4 9 18 85 说明 对 $100 \\%$ 的数据：$1 \\le T \\le 100，1 \\le m, n \\le 500$，卡片上的数字大于 1，小于 ${10}^7$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:机器分配 题目描述 总公司拥有高效设备 M 台，准备分给下属的 N 个分公司。各分公司若获得这些设备，可以为国家提供一定的盈利。问：如何分配这 M 台设备才能使国家得到的盈利最大？求出最大盈利值。其中 $M \\le 15，N \\le 10$。分配原则：每个公司有权获得任意数目的设备，但总台数不超过设备数 M。 输入输出格式 输入格式 第一行有两个数，第一个数是分公司数 N，第二个数是设备台数 M。 接下来是一个 $N \\times M$ 的矩阵，表明了第 i 个公司分配 j 台机器的盈利。 输出格式 第一行为最大盈利值。 接下来 N 行为第 i 分公司分 x 台。 P.S. 要求答案的字典序最小。 输入输出样例 输入样例 #1 3 3 30 40 50 20 30 50 20 25 30 输出样例 #1 70 1 1 2 1 3 1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 给出图形（十字架可以视为x轴和y轴），请计算出函数解析式。 输入输出格式 输入格式 第一行，一个正整数n，表示该图形大小是n\\*n； 接下来n行，每行n个字符，1表示坐标轴，x表示石子，0表示空地。 横行的1是x轴，竖列的1是y轴。 上下两行，左右两列的距离恒为1。 输出格式 输出一行，即y=kx+b，或y=kx，y=b，x=b；（k,b为常数） 常数始终保留四位小数 输入输出样例 输入样例 #1 3 010 111 x1x 输出样例 #1 y=-1.0000 说明 切记要分类 数据不需判错 100%的数据，3<=n<=16（够水吧） 没学过函数的自己百度"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:统计和 题目描述 给定一个长度为 $n(n\\leq 100000)$，初始值都为 0 的序列，$x(x\\leq 100000)$ 次的修改某些位置上的数字，每次加上一个数，然后提出 $y(y\\leq 100000)$ 个问题，求每段区间的和。 输入输出格式 输入格式 第一行 1 个整数，表示序列的长度 n。 第二行 1 个整数，表示操作的次数 w。 后面依次是 w 行，分别表示加入和询问操作。 其中，加入用 `x` 表示，询问用 `y` 表示。 x的格式为 `x a b` 表示在序列上第 a 个数加上 b。保证 $1 \\leq a \\leq n，1 \\leq b \\leq 10^9$。 y 的格式为 `y a b` 表示询问 a 到 b 区间的加和。保证 $1 \\leq a \\leq b \\leq n$。 输出格式 每行一个正整数，分别是每次询问的结果 输入输出样例 输入样例 #1 5 4 x 3 8 y 1 3 x 4 9 y 3 4 输出样例 #1 8 17"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:松鼠吃果子 题目描述 有 n 个一种松鼠喜欢吃的果子由下向上串排成一列，并标号 $1\\sim n$。一只松鼠从最下果子开始向上跳，并且第 i 次跳可以一次跳过 $(i^3 \\bmod 5 + 1)$ 个果子，并把脚下的果子吃了，如果上面有果子，在重力作用下，都将向下掉下一格。如第 1 次跳从第一个果子上跳过 $(1^3 \\bmod 5 + 1 = ) 2$ 个果子，可跳到第 3 个果子上，并把第 3 个果子吃了；第 2 次从第 4 个果子上(落在原来第三个果子位置)跳过 $(2^3\\bmod 5 + 1 = ) 4$ 个到第 8 个果子上，并把第 8 个吃了；如此反复。 当然，总有一次松鼠会跳出这串果子的最前面，设为每 k 次，它吃不到任何果子了。这时它回到最下面的果子上，重做它的第 k 次跳，以求吃到果子。如此，问它吃的第 m 只果子(即第 m 跳吃到的果子)的标号是什么？ 输入输出格式 输入格式 一共两行，分别为 n 和 m（$1\\le m\\le n\\le 200$，并且满足能够跳到第 m 次）。 输出格式 一个数，即它吃的第 m 只果子的标号。 输入输出样例 输入样例 #1 10   4  输出样例 #1 9 说明 注：吃掉的果子依次为 3，8，4（回到下面重做第 3 跳），9（回到下面重做第 4 跳）。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:刷墙 题目描述 Farmer John已经设计了一种方法来装饰谷仓旁边的长栅栏（把栅栏认为是一根一维的线）。他把一只画刷绑在他最喜爱的奶牛Bessie身上，之后就去喝一杯冰水，而Bessie隔着栅栏来回走，当她走过某个地方，这里的一段栅栏就被刷上了涂料。 Bessie从栅栏上的位置0开始，并且遵循着一个N次移动的次序(1 <= N <= 100,000)。例如“10 L”表示Bessie向左移动了10个单位长度，“15 R”表示Bessie向右移动了15个单位长度。现给出Bessie所有移动的列表，Farmer John想要知道哪些区域的栅栏至少涂了两层涂料（只涂一层涂料的区域可能在大雨中被洗掉）。Bessie在她的行走中最远到达距起始点1,000,000,000个单位长度。 输入输出格式 输入格式 第1行：一个整型数N。 第2..N+1行：每行描述了Bessie的N次移动中的一次，例如“15 L”。 输出格式 1行：被至少涂了两层涂料的区域总数。 输入输出样例 输入样例 #1 6  2 R  6 L  1 R  8 L  1 R  2 R 输出样例 #1 6 说明 【样例解释】 Bessie从位置0开始，向右移动2个单位长度，向左移动6个单位长度，向右移动1个单位长度，向左移动8个单位长度，最后向右移动3个单位长度。 6个单位区域至少被涂了两层涂料，是 [-11,-8], [-4,-3], [0,2]这些区域。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 已知车上有 N 排座位，有 $2N$ 个人参加省赛，每排座位只能坐两人，且每个人都有自己想坐的排数，问最多使多少人坐到自己想坐的位置。 输入输出格式 输入格式 第一行，一个正整数 N。 第二行至第 $2N+1$ 行，每行两个正整数 $S_{i, 1},S_{i, 2}$，为每个人想坐的排数。 输出格式 一个非负整数，为最多使得多少人满意。 输入输出样例 输入样例 #1 4 1 2 1 3 1 2 1 3 1 3 2 4 1 3 2 3 输出样例 #1 7 说明 对于 $10\\%$ 的数据，$n \\le 10$； 对于 $30\\%$ 的数据，$n \\le 50$； 对于 $60\\%$ 的数据，$n \\le 200$； 对于 $100\\%$ 的数据，$n \\le 2000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 已知一个地方有M种宗教(编号为1—M)，有N个教徒(编号为1—N)，每个教徒信且只信一种宗教。现在要按顺序把这N个教徒分成一些集体，每个集体的危险值定义为这个集体中的宗教种数，且一个集体的宗教种类不能超过K种，否则就会无限危险， 问： 1.这N个教徒至少要分为几个集体， 2.这些集体的危险值总和至少为多少。 输入输出格式 输入格式 第一行三个正整数N  M  K，以空格隔开 第二行N个正整数，为每个教徒信的宗教编号 输出格式 第一行 一个正整数，为最少集体数 第二行 一个正整数，为最小危险值。 输入输出样例 输入样例 #1 10 4 3  1 2 3 4 3 4 3 2 1 2  输出样例 #1 3  6  说明 【样例解释】 最少集体数：1  2  3 // 4  3  4  3  2 // 1  2  共3个集体 最小危险值：1  2 // 3  4  3  4  3 // 2  1  2   2+2+2=6"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 这些花都很漂亮，每朵花有一个美丽值 W，价格为 C。 小明一开始有一个空的花束，他不断地向里面添加花。他有以下几种操作： - $1\\ W\\ C$：添加一朵美丽值为 W，价格为 C 的花。   **如果此时花束中已经有了相等价格的花，那么这朵花不能加入花束。** - 2：删除当前花束里最贵的一朵花。 - 3：删除当前花束里最便宜的一朵花。 - $-1$：完成添加与删除，开始包装花束。 **当花束为空时，忽略操作 2 和 3。** 请你写一个程序，计算出开始包装花束时，花束中所有花的美丽值的总和，以及小明需要为花束付出的总价格。 输入输出格式 输入格式 若干行，每行一个操作，以 $-1$ 结束。 输出格式 一行，两个空格隔开的正整数表示开始包装花束时，花束中所有花的美丽值的总和。以及小明需要为花束付出的总价格。 输入输出样例 输入样例 #1 1 1 1 1 2 5 2 1 3 3 3 1 5 2 -1 输出样例 #1 8 5 说明 设操作数为 m。 - 对于 $20\\%$ 数据，$m \\le 100，1\\le W,C\\le 10^3$。 - 对于全部数据，$m \\le 10^5，1\\le W,C\\le 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:红绿灯 题目描述 在一个城市，有一条笔直的公路，在这条公路上有 N 个十字路口，每个路口都设有一个红绿灯，已知相邻的两个路口距离为 $A_i$ 千米 $(1\\le i < N)$，每个路口的红灯时间为 $R_i$，绿灯时间为 $G_i$，没有黄灯，现在有一辆车从距离 1 号十字路口 M 千米的位置出发，且此时所有路口的红绿灯刚好从红灯跳到绿灯，问这辆车通过每个路口的时间(不能闯红灯，这辆车的速度为 1 千米每分钟)。 输入输出格式 输入格式 第一行两个正整数 N 和 M 第二行 $N-1$ 个正整数 $A_i$ 第三行 N 个正整数 $R_i$，为红灯时间（分钟） 第四行 N 个正整数 $G_i$，为绿灯时间（分钟） 输出格式 共 N 行，每行一个正整数，为这辆车通过每个十字路口的最早时间。 输入输出样例 输入样例 #1 5 3 2 4 3 2 3 4 3 4 3 2 3 2 3 1 输出样例 #1 5 7 11 14 16 说明 对于 $50\\%$ 的数据   $N\\le 1000$； 对于 $100\\%$ 的数据   $N\\le 10^5，M,A_i\\le 10，R_i，G_i\\le 5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小明在 A 公司工作，小红在 B 公司工作。 题目描述 这两个公司的员工有一个特点：一个公司的员工都是同性。 A 公司有 N 名员工，其中有 P 对朋友关系。B 公司有 M 名员工，其中有 Q 对朋友关系。朋友的朋友一定还是朋友。 每对朋友关系用两个整数 $(X_i,Y_i)$ 组成，表示朋友的编号分别为 $X_i,Y_i$。男人的编号是正数，女人的编号是负数。小明的编号是 1，小红的编号是 $-1$。 大家都知道，小明和小红是朋友，那么，请你写一个程序求出两公司之间，通过小明和小红认识的人最多一共能配成多少对情侣（包括他们自己）。 输入输出格式 输入格式 输入的第一行，包含 4 个空格隔开的正整数 $N,M,P,Q$。 之后 P 行，每行两个正整数 $X_i,Y_i$。 之后 Q 行，每行两个负整数 $X_i,Y_i$。 输出格式 输出一行一个正整数，表示通过小明和小红认识的人最多一共能配成多少对情侣（包括他们自己）。 输入输出样例 输入样例 #1 4 3 4 2 1 1 1 2 2 3 1 3 -1 -2 -3 -3 输出样例 #1 2 说明 对于 $30 \\%$ 的数据，$N,M \\le 100，P,Q \\le 200$； 对于 $80 \\%$ 的数据，$N,M \\le 4 \\times 10^3，P,Q \\le 10^4$； 对于 $100 \\%$ 的数据，$N,M \\le 10^4，P,Q \\le 2 \\times 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 小红说：“小明，你点菜吧。”小明看到菜单上有N道菜，每道菜的价格是Ci。小明对每道菜的喜爱程度是Xi，小红对每道菜的喜爱程度是Yi。（喜爱程度可能为负数）（小明：以我对她的了解，我给你的数据不会错的） 小明带了V元钱，他点的菜的总价格不能超过V（小明：当然得我请客啦，显得我大方。） 小明希望让小红吃得开心，所以当然要让她的总喜爱程度尽量大。当然，小明也要考虑自己的感受，点的所有菜的总喜爱程度需要大于等于0。（小明：要是我吃得不好，她看见我会难过的） 请你帮小明写一个程序，计算出他的总喜爱程度大于等于0的前提下，小红的喜爱程度的最大值。（小明：你的程序一定要靠谱啊，我得给她一个好印象） 输入输出格式 输入格式 第1行，两个正整数N，V。 之后N行，每行3个空格隔开的正整数Ci，整数Xi，Yi。 输出格式 一行，一个正整数，表示他的总喜爱程度大于等于0的前提下，小红的喜爱程度的最大值。如果这个最大值小于0，输出-1. 输入输出样例 输入样例 #1 4 10 5 -1 3 2 2 2 11 -5 100 3 -3 10 输出样例 #1 5 说明 对于10%数据，N<=10,V<=50。 对于30%数据，Xi，Yi>=0. 对于全部数据，N<=100,V<=500，|Xi|<=5，|Yi|<=1000."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 他们对对方分别有一个好感值。定义两人的亲密程度为两人的好感值之和。 如果他们的亲密程度达到 v，则他们将走到一起。他们以后的生活将取决于两人的好感值之差的绝对值，这个值越小，他们的生活将越幸福。 现在，他们对对方的好感值都为 0，小明有 n 件事可以干，每件事可以增加他对小红的好感 $a_i$ 点，并且增加小红对他的好感 $b_i$ 点。（可能为负数） 小明可以任选一些事做，请你帮小明求出怎样才能让他们的生活更加幸福（求出两人在一起的前提下，好感值之差的最小绝对值即可）。 输入输出格式 输入格式 第一行，两个正整数 $n,v$。 之后 n 行，每行两个空格隔开的整数 $a_i,b_i$。 输出格式"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2012] 迷失游乐园 题目描述 放假了，小 Z 觉得呆在家里特别无聊，于是决定一个人去游乐园玩。 进入游乐园后，小 Z 看了看游乐园的地图，发现可以将游乐园抽象成有 n 个景点、m 条道路的无向连通图，且该图中至多有一个环（即 m 只可能等于 n 或者 $n-1$）。 小 Z 现在所在的大门也正好是一个景点。小 Z 不知道什么好玩，于是他决定，从当前位置出发，每次随机去一个和当前景点有道路相连的景点，并且同一个景点不去两次（包括起始景点）。贪玩的小 Z 会一直游玩，直到当前景点的相邻景点都已经访问过为止。 小 Z 所有经过的景点按顺序构成一条非重复路径，他想知道这条路径的期望长度是多少？ 小 Z 把游乐园的抽象地图画下来带回了家，可是忘了标哪个点是大门，他只好假设每个景点都可能是大门（即每个景点作为起始点的概率是一样的）。同时，他每次在选择下一个景点时会等概率地随机选择一个还没去过的相邻景点。 输入输出格式 输入格式 第一行是两个整数 n 和 m ，分别表示景点数和道路数。 接下来 m 行，每行三个整数 $X_i, Y_i, W_i$，分别表示第 i 条路径的两个景点为 $X_i, Y_i$，路径长 $W_i$。所有景点的编号从 1 至 n，两个景点之间至多只有一条道路。 输出格式 共一行，包含一个实数，即路径的期望长度，保留五位小数。 输入输出样例 输入样例 #1 4 3 1 2 3 2 3 1 3 4 4 输出样例 #1 6.00000000 说明 ### 样例解释 样例数据中共有 6 条不同的路径： |路径|长度|概率| |:-:|:-:|:-:|  |$1\\rightarrow 4|8|\\frac{1}{4}$|  |$2\\rightarrow 1|3|\\frac{1}{8}$|  |$2\\rightarrow 4|5|\\frac{1}{8}$| |$3\\rightarrow 1|4|\\frac{1}{8}$| |$3\\rightarrow 4|4|\\frac{1}{8}$| |$4\\rightarrow 1|8|\\frac{1}{4}$| 因此期望长度 $= \\frac{8}{4} + \\frac{3}{8} + \\frac{5}{8} +\\frac{4}{8} + \\frac{4}{8} +\\frac{8}{4} = 6.00$ ### 评分方法 本题没有部分分，你程序的输出只有和标准答案的差距不超过 $0.01$ 时，才能获得该测试点的满分，否则不得分。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:区间覆盖（加强版） 题目描述 已知有 N 个区间，每个区间的范围是 $[s_i,t_i]$，请求出区间覆盖后的总长。 输入输出格式 输入格式 第一行一个正整数 N，表示区间个数。 接下来 N 行，每行两个正整数，表示 $s_i$ 和 $t_i$。 输出格式 共一行，一个正整数，为覆盖后的区间总长。 输入输出样例 输入样例 #1 3  1 100000  200001 1000000  100000000 100000001 输出样例 #1 900002 说明 对于 $40 \\%$ 的数据，$N \\le 1000，1 \\le s_i < t_i \\le 10000$。 对于 $100 \\%$ 的数据 ，$N \\le 10^5，1 \\le s_i < t_i \\le 10^{17}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:找人 题目描述 小明要到他的同学家玩，可他只知道他住在某一单元，却不知住在哪个房间。那个单元有 n 层（$1,2,\\ldots,n$），每层有 m（$1,2,\\ldots,m$）个房间。 小明会从第一层的某个房间开始找，他找的方式也很特别，每次到了一个房间，如果不是他的同学，他就会询问这个人，然后他就会去那人告诉他的房间号，如果还不是，他就会继续按这个方法找下去，直到找到。当然，他也有可能找不到同学。他的体力也是有限的，他每爬一层楼梯就会消耗 v 体力值。你的任务就是求找到同学耗费的最少体力值，如果找不到，就输出 `impossible` 。 输入输出格式 输入格式 第一行有五个整数，分别代表 n，m，v，x，y（x，y 表示同学只在 x 层 y 房间）。 $2\\sim n+1$ 行，每行 $m\\times 2$ 个数字，第 $i+1$ 行 $j\\times2-1$ 个数 $a_k$ 和第 $j\\times2$ 个数 $a_{k+1} $表示住在 i 层 j 房间的人提供的信息是 $a_k$ 层和 $a_{k+1}$ 房间。（同学的信息就是自己的房间号。） 输出格式 一个数，即答案。 输入输出样例 输入样例 #1 3 3 2 2 3 1 3 3 3 2 1 2 3 1 1 2 3 1 1 1 2 2 3 输出样例 #1 2 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，$1 \\leq n\\le1000，1 \\leq m\\le100，1 \\leq v\\le50$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:无 题目描述 今天小明学会了进制转换，比如（10101）2 ，那么它的十进制表示的式子就是 : 1\\*2^4+0\\*2^3+1\\*2^2+0\\*2^1+1\\*2^0， 那么请你编程实现，将一个M进制的数N转换成十进制表示的式子。 注意：当系数为0时，该单项式要省略。 输入输出格式 输入格式 两个数，M和N，中间用空格隔开。 输出格式 共一行，一个十进制表示的式子。 输入输出样例 输入样例 #1 2 10101 输出样例 #1 1*2^4+1*2^2+1*2^0 说明 对于100%的数据，1<M<10，N的位数不超过1000。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:最小函数值 题目描述 有 n 个函数，分别为 $F_1,F_2,\\dots,F_n$。定义 $F_i(x)=A_ix^2+B_ix+C_i(x\\in\\mathbb N*)$。给定这些 $A_i、B_i$ 和 $C_i$，请求出所有函数的所有函数值中最小的 m 个（如有重复的要输出多个）。 输入输出格式 输入格式 第一行输入两个正整数 n 和 m。   以下 n 行每行三个正整数，其中第 i 行的三个数分别为 $A_i、B_i$ 和 $C_i$。 输出格式 输出将这 n 个函数所有可以生成的函数值排序后的前 m 个元素。这 m 个数应该输出到一行，用空格隔开。 输入输出样例 输入样例 #1 3 10 4 5 3 3 4 5 1 7 1 输出样例 #1 9 12 12 19 25 29 31 44 45 54 说明 #### 数据规模与约定 对于全部的测试点，保证 $1 \\leq n,m\\le10000，1 \\leq A_i\\le10,B_i\\le100,C_i\\le10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 GTY召唤了n个人来做实验，GTY家的房子很大，有m个房间一开始所有人都在1号房间里，GTY会命令某人去某个房间等待做实验，或者命令一段区间的房间开始实验，实验会获得一些实验信息点数，点数为房间里的人数，如果一个房间里的一群人已经做过实验了那么这些人将不会增加实验信息点数(不会增加是针对这一群人的，不是对这群人中的每个人，即1,2,3做了实验，1,2再做实验还会增加2点实验点数) 输入输出格式 输入格式 第一行两个整数n,m,q(n,m,q<=10^5)表示人数，房间数和操作数 接下来q行每行一个操作  C i j 表示让第i个人去房间j  W l r  表示让区间[l,r]的房间做实验 输出格式 对于每一个W操作，输出一个数，表示此次操作所获得的实验点数 输入输出样例 输入样例 #1 3 5 7  C 1 2  C 2 2  W 1 2  C 3 2  W 1 2  C 3 3  W 1 3 输出样例 #1 3  3  0 说明 善用STL"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:果汁店的难题 题目描述 炎热的夏天，来上一杯现榨的冰爽果汁想想都是一件惬意的事情！话说小王就看准了这一商机，在学校附近开了这么一家果汁店，但是最近他碰到了一个不大不小的难题：小王的果汁店里准备了 K 台榨汁机，当然每台榨汁机只能榨一种果汁，在某个时段内，一个客人点了某种果汁，如果恰好有某台果汁机榨过这种果汁，那么就直接给客人用这台果汁机接着榨就可以了，但是如果点的是一种新的果汁就需要找一台干净的果汁机来用，问题就出在这，如果这时候还有空的果汁机还好，如果没有的话小王就需要将某台刚才用过的拿去清洗，清洗的话呢就得浪费很多的时间和很多的水，小王是个很有经济头脑的人，他想知道在排队客人需求已知的情况下最少需要清洗多少次果汁机？假定开始时所有果汁机都是干净的，为了方便描述，我们将果汁编号为 1 （橙汁）, 2（苹果汁）， 3 （葡萄汁）...... [友情提示：本店不售卖混合果汁] 输入输出格式 输入格式 每组测试数据第一行包括两个整数$K,N$，其中，K 表示小王准备了 K 台干净的榨汁机，N 表示排队等待的有 N 个客人，接下来 N 行，每行一个整数表示一个客人点的果汁种类 $X_i$ 。 输出格式 输出在当前的请求序列下，小王最少需要清洗果汁机的次数。 输入输出样例 输入样例 #1 2 7 1 2 3 1 3 1 3 输出样例 #1 1 说明 $1\\le K\\le 10，1\\le N\\le 100$。 $1\\le x_i\\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 猪猪 Hanke 特别喜欢吃烤鸡（本是同畜牲，相煎何太急！）Hanke 吃鸡很特别，为什么特别呢？因为他有 $10$ 种配料（芥末、孜然等），每种配料可以放 1 到 3 克，任意烤鸡的美味程度为所有配料质量之和。 现在， Hanke 想要知道，如果给你一个美味程度 n ，请输出这 $10$ 种配料的所有搭配方案。 输入输出格式 输入格式 一个正整数 n，表示美味程度。 输出格式 第一行，方案总数。 第二行至结束，$10$ 个数，表示每种配料所放的质量，按字典序排列。 如果没有符合要求的方法，就只要在第一行输出一个 0。 输入输出样例 输入样例 #1 11 输出样例 #1 10 1 1 1 1 1 1 1 1 1 2  1 1 1 1 1 1 1 1 2 1  1 1 1 1 1 1 1 2 1 1  1 1 1 1 1 1 2 1 1 1  1 1 1 1 1 2 1 1 1 1  1 1 1 1 2 1 1 1 1 1  1 1 1 2 1 1 1 1 1 1  1 1 2 1 1 1 1 1 1 1  1 2 1 1 1 1 1 1 1 1  2 1 1 1 1 1 1 1 1 1  说明 对于 $100\\%$ 的数据，$n \\leq 5000$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数字对 题目描述 对于一个数字对(a, b)，我们可以通过一次操作将其变为新数字对(a+b, b)或(a, a+b)。 给定一正整数n，问最少需要多少次操作可将数字对(1, 1)变为一个数字对，该数字对至少有一个数字为n。 输入输出格式 输入格式 第一行一个正整数 n 输出格式 一个整数表示答案。 输入输出样例 输入样例 #1 5 输出样例 #1 3 说明 样例解释： (1,1)  →  (1,2)  →  (3,2)  →  (5,2) 对于30%的数据， 1 <= n <= 1000 对于60%的数据， 1 <= n <= 20000 对于100%的数据，1 <= n <= 10^6"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:排序 题目描述 小A有n个物件排成一排，每个物件有它的体积V和质量M。n个物件的体积在1~n内，且各不相同，但质量可能相同。 现在，小A需要把n个物件按体积从小到大重新排列。他的排序方式是：每次交换两个物件。这样会他会消耗的体力值为两个物件的质量和。 小A想知道，为了将物件排序，他消耗的最少体力值是多少？ 输入输出格式 输入格式 第一行，一个正整数n，表示物件的数量。 第二行n个正整数，第i个数表示从左到右第i个物品的体积。 第三行n个正整数，第i个数表示从左到右第i个物品的质量 输出格式 一个数，表示小A消耗的最小体力值 输入输出样例 输入样例 #1 3 1 3 2 2 2 3 输出样例 #1 5 说明 测试点编号 1~2    $n=2000，m=1$ 3    $n=2000，m \\le 10$ 4    $n=2000，m \\le 10000000$ 5~7    $n=200000，m=1$ 8    $n=200000，m \\le 10$ 9~10    $n=200000，m \\le 10000000$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数字游戏 题目描述 KC 邀请他的两个小弟 K 和 C 玩起了数字游戏。游戏是 K 和 C 轮流操作进行的，K 为先手。KC 会先给定一个数字 Q，每次操作玩家必须写出当前数字的一个因数来代替当前数字，但是这个因数不能是 1 和它本身。例如当前数字为 6，那么可以用 $2, 3$ 来代替，但是 1 和 6 就不行。现在规定第一个没有数字可以写出的玩家为胜者。K 在已知 Q 的情况，想知道自己作为先手能不能胜利，若能胜利，那么第一次写出的可以制胜的最小数字是多少呢？整个游戏过程我们认为 K 和C用的都是最优策略。 输入输出格式 输入格式 仅一行，一个正整数 Q。 输出格式 第一行是 1 或 2，1 表示 K 能胜利，2 表示 C 能胜利。 若 K 能胜利，则在第二行输出第一次写出的可以制胜的最小数字。 若是第一次就无法写出数字，则认为第一次写出的可以制胜的最小数字为 0。 输入输出样例 输入样例 #1 6 输出样例 #1 2 输入样例 #2 30 输出样例 #2 1 6 说明 对于 $30 \\%$ 的数据，$Q \\le 50$；   对于 $100 \\%$ 的数据，$2 \\le Q \\le {10}^{13}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 平面上有 n 个点。现在有 m 次询问，每次给定一个点 $(px, py)$ 和一个整数 k，输出 n 个点中离 $(px, py)$ 的距离第 k 大的点的标号。如果有两个(或多个)点距离 $(px, py)$ 相同，那么认为标号较小的点距离较大。 输入输出格式 输入格式 第一行，一个整数 n，表示点的个数。 下面 n 行，每行两个整数 $x_i,y_i$，表示 n 个点的坐标。点的标号按照输入顺序，分别为 $1\\ldots n$。 下面一行，一个整数 m，表示询问个数。 下面 m 行，每行三个整数 $px_i,py_i,k_i$，表示一个询问。 输出格式 m 行，每行一个整数，表示相应的询问的答案。 输入输出样例 输入样例 #1 3 0 0 0 1 0 2 3 1 1 2 0 0 3 0 1 1 输出样例 #1 3 1 1 说明 #### 数据规模与约定 - $50\\%$ 的数据中，n 个点的坐标在某范围内随机分布。 - $100\\%$ 的数据中，$1\\le n\\le 10^5，1\\le m\\le 10^4，1\\le k\\le 20，-10^9\\le x_i,y_i,px_i,py_i\\le 10^9，n$ 个点中任意两点坐标不同，m 个询问的点的坐标在某范围内随机分布。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:运输 题目描述 现在已知 N 件商品，和搬运它们其中每一件的费用。现在搬家公司老板 Mr.sb 决定让我们每次任意选取 2 件商品。然后这 2 件商品只算一件商品的费用。但是这个商品的搬运费用是将选出的 2 个商品的费用之和除以 k 的运算结果。如此反复。直到只收一件商品的钱。这个就是商店要付的费用。掌柜的想尽可能的少付钱，以便将更多的钱捐给希望工程。所以请你帮他计算一下最少只用付多少钱。 输入输出格式 输入格式 第一行两个整数 $n,k$。 第二行 n 个整数 $w_1,w_2,\\ldots,w_n$，表示每一件物品搬运费。 输出格式 一行一个整数表示最少付多少钱。 输入输出样例 输入样例 #1 5 2 1 2 3 4 5 输出样例 #1 1 说明 $n,k,w_i$ 均为非负数。 $n,k\\le 10^4$。 --- $\\text{upd 2022.7.24}$：新增加一组 Hack 数据。题目是否存在该数据范围下的正确解法有争议。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:营养膳食 题目描述 Mr.L 正在完成自己的增肥计划。 为了增肥，Mr.L 希望吃到更多的脂肪。然而也不能只吃高脂肪食品，那样的话就会导致缺少其他营养。 Mr.L 通过研究发现：真正的营养膳食规定某类食品不宜一次性吃超过若干份。比如就一顿饭来说，肉类不宜吃超过 1 份，鱼类不宜吃超过 1 份，蛋类不宜吃超过 1 份，蔬菜类不宜吃超过 2 份。 Mr.L 想要在营养膳食的情况下吃到更多的脂肪，当然 Mr.L 的食量也是有限的。 输入输出格式 输入格式 第一行包含三个正整数 $n,m$ 和 k。表示 Mr.L 每顿饭最多可以吃 m 份食品，同时有 n 种食品供 Mr.L 选择，而这 n 种食品分为 k 类。 第二行包含 k 个不超过 $10$ 的正整数，表示可以吃 1 到 k 类食品的最大份数。 接下来 n 行每行包括 2 个正整数，分别表示该食品的脂肪指数 $a_i$ 和所属的类别 $b_i$。 输出格式 包括一个数字即 Mr.L 可以吃到的最大脂肪指数和。 输入输出样例 输入样例 #1 6 6 3 3 3 2 15 1 15 2 10 2 15 2 10 2 5 3 输出样例 #1 60 说明 对于 $100\\%$ 的数据，$1\\leq n\\leq 200，1\\leq m\\leq 100，1\\leq k\\leq 100，1\\leq a_i\\leq 100，1\\leq b_i\\leq k$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:资料分发1 题目描述 有一些电脑，一部分电脑有双向数据线连接。如果一个电脑得到数据，它可以传送到的电脑都可以得到数据。现在，你有这个数据，问你至少将其输入几台电脑，才能使所有电脑得到数据。 输入输出格式 输入格式 第一行两个数n，m。n是点数，m是边数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数据范围：$1\\leq N,M \\leq 1000$,$1 \\leq K \\leq 10$。 题目描述 Every year, Farmer John brings his N cows to compete for  best in show  at the state fair. His arch-rival, Farmer Paul, brings his M cows to compete as well ($1 \\leq N \\leq 1000, 1 \\leq M \\leq 1000$). Each of the $N + M$ cows at the event receive an individual integer score. However, the final competition this year will be determined based on teams of K cows ($1 \\leq K \\leq 10$), as follows: Farmer John and Farmer Paul both select teams of K of their respective cows to compete. The cows on these two teams are then paired off: the highest-scoring cow on FJ's team is paired with the highest-scoring cow on FP's team, the second-highest-scoring cow on FJ's team is paired with the second-highest-scoring cow on FP's team, and so on. FJ wins if in each of these pairs, his cow has the higher score. Please help FJ count the number of different ways he and FP can choose their teams such that FJ will win the contest. That is, each distinct pair (set of K cows for FJ, set of K cows for FP) where FJ wins should be counted. Print your answer modulo 1,000,000,009. 输入输出格式 输入格式 The first line of input contains N, M, and K. The value of K will be no larger than N or M. The next line contains the N scores of FJ's cows. The final line contains the M scores of FP's cows. 输出格式 Print the number of ways FJ and FP can pick teams such that FJ wins, modulo 1,000,000,009. 输入输出样例 输入样例 #1 10 10 3 1 2 2 6 6 7 8 9 14 17 1 3 8 10 10 16 16 18 19 19 输出样例 #1 382"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 我军截获的情报显示，敌军正在集结兵力试图向我军重要的军械研究所发起进攻。由于我军正处于多线作战的状态，无法抽调大批兵力前去支援，指挥部决定通过有效的战前部署来提高胜率，减少伤亡和损失。 该军械研究所的平面图可以看作是一个 $N\\times M$ 的矩阵，每个$1\\times 1$ 的格子都表示一个区域，每个区域只与它上下左右的四个区域相邻。每个区域的用途可分为以下3 种之一： 1． 该区域被用于军事研究（用字母 `O` 表示）； 2． 该区域内驻扎有一个机械化中队（用 `#` 表示）； 3． 该区域是空地（用`.`表示）。 由于空间有限，任一个 $1\\times 1$ 的格子内都无法驻扎两队以上的机械化中队（包括两队），否则会大大降低战斗时的机动性。 遗憾的是，由于战前估计不足，我军的防御部署显得十分分散，这很容易让敌军所擅长的偷袭战术得逞。为了确保万无一失，我军决定利用为数不多的防御部队以最少的移动步骤将所有重要研究区域都包围起来。所谓的“包围”即从该矩阵边界侵入的敌军找不到任意一条路，使得他们不遭受任何机械化中队的反抗就能到达某研究区域。 由于军队内部的传令权限的限制，每个单位时间指挥部只能向所有中队中的一个中队下达指令（朝上/下/左/右移动 1 格）。由于时间紧迫，指挥部希望能够尽快完成部署，这个任务就交给你来完成。 注意：在部署的过程中军队可以进入研究区域，而在最终的部署结果中军队不可以在研究区域中。另外，在任何时刻，两个军队都不可以在同一个方格中。 输入输出格式 输入格式 该题为提交答案型题目。 对于每个数据： 第一行 2 个整数 N,M，接下来 N 行，每行包括 M 个字符（`.`, `O`或 `#`）。 输出格式 每个输出文件的第一行，包括你的答案所花费的时间 T。 接下来 T 行，按顺序输出每条命令，每行包括 4 个整数 $x1, y1, x2, y2$，表示将位于 $(x1,y1)$ 的部队移向 $(x2,y2)$。 输入输出样例 输入样例 #1 5 5 ..##. #...# #OOO# #..O# .###. 输出样例 #1 1 2 1 2 2 说明 如果选手的输出方案不合法（方案执行过程中出现军队重叠，军队移出矩形边界，最终方案有军队和研究所在同一区域，军队没有包围研究所等），则得零分，否则设选手输出的方案耗时为ans ，则得分按如下计算： $$score= \\begin{cases} \\ 10&ans \\leq A_i\\\\ \\ 1+\\left\\lfloor\\dfrac{ans-B_i}{A_i-B_i}\\right\\rfloor \\times 9&A_i<ans \\leq B_i\\\\ \\ 1&B_i<ans\\\\ \\end{cases} $$   对于每个数据，都有两个评分参数 $A_i$ 与 $B_i$，其中保证 $A_i<B_i$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:凌乱的地下室 题目描述 小Z家的地下室里并排放n个小方块（小Z是一位MC狂热爱好者，喜欢用小方块装饰他家的地下室），并且每个方块都不一样（小Z喜欢各不相同的东西），比如有草方块、大理石、黑曜石等。 小Z喜欢以一种特殊的顺序摆放这些小方块，比如：草方块、大理石、黑曜石。一天，小D帮助小Z整理地下室，可是智商捉急的小D将所有小方块搬出来后忘记了它们原来的具体位置，凭着模糊的印象，他可能把原来放在第i个位置上的小方块放到第（i-1）、i、（i+1）个位置中的任意一个上（当然，第1个不可能放到第0个位置上，第n个不可能放到第（n+1）个位置上），比如（对应上面那个例子）：大理石、草方块、黑曜石。 小Z是一个心胸宽广的人，他希望计算一下小D一共会有几种可能的摆放结果，并不追究小D的责任（追究了只会更乱……）。由于他自己的智商也比较捉急，所以如果答案很大的话他只想看到最后的8位（前导零就不要给他看了）。 输入输出格式 输入格式 一行，一个正整数n，代表小Z家的地下室一共有n个小方块。 输出格式 一行，一个正整数，表示小D一共有几种可能的摆放结果，只输出后8位，前导零不输出。 输入输出样例 输入样例 #1 3 输出样例 #1 3 输入样例 #2 987 输出样例 #2 223731 说明 【样例解释1】 接着题目中的例子，一共有3种：（草方块，大理石，黑曜石）、（大理石，草方块，黑曜石）、（草方块，黑曜石，大理石）。 【样例解释2】 一共有……00223731种摆放结果，由于前导零不输出，因此输出223731。 【数据规模】 一共有50个测试点。 其中第1~15个：1<n<=10^6 其中第16~25个：10^6<n<=10^16 其中第26~50个：10^16<n<=10^1000 【时空限制】 0.2s/64MB"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:命运石之门的选择 题目描述 在某一条不知名世界线的冈伦今天突然接到了一条dmail，上面说世界线将会发生巨大变动，未来的他无论如何都无法扭转这种变动回到原来的世界线。而世界线变动的原因是现在的他不久后错过了与助手的约会。他约好要和助手去约会，但是在去约会之前，由于一直拖欠房租，房东大叔要求他帮忙完成一幅画的上色，然而他没有以最快的速度完成这个任务，导致他错过了与助手的约会，从而导致世界线的剧变。现在到了拯救世界的时候，由于冈伦并不擅长画画，于是他找到了同样不擅长画画的你来帮他解决这个问题（这是命运石之门的选择）。不管怎样现在拯救世界的重任交到了你的手上，而你虽然不擅长画画，但是你可以使用编程来帮助你解决这个问题。 一幅画由 N 个宽度为 1 高度为 $H_i$ 的矩形组成，矩形并排排列，相邻的矩形间没有空隙，初始情况下每个矩形都是没有颜色的。你有一个宽度为 1 的刷子，可以竖直或水平的刷，每次使用刷子，刷子都必须保证一直全部处于矩形中，即不能刷到矩形以外的地方去，当然每次刷的时候也不能拐弯。每刷一次，要花费 1 的时间，这和刷的长度无关，比如你可以从最左边刷到最右边（当然是不经过矩形以外的部分），这也只花费 1 的时间。你的目的是将全部的矩形都涂满颜色。请你计算并输出这个最短的时间。 输入输出格式 输入格式 第 1 行：一个正整数 N，表示矩形的个数。 接下来 N 个正整数 $H_i$，表示第 i 个矩形的高度。 输出格式 一个整数，表示最少花费的时间。 输入输出样例 输入样例 #1 5 2 2 1 2 1 输出样例 #1 3 说明 对于 $30\\%$ 数据，$N\\leq20, H_i\\leq100$ 对于 $60\\%$ 数据，$N\\leq100, H_i\\leq1000$ 对于 $100\\%$ 数据，$N\\le5000, H_i\\leq10^9$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:地砖铺设 题目描述 在游戏厅大赚了一笔的小Z终于赢到了他想要的家具。乘此机会，他想把自己的房间好好整理一下。 在百货公司，可以买到各种各样正方形的地砖，为了美观起见，小Z不希望同样颜色的正方形地砖相邻。所以他找到了小C来帮忙解决这件事情。 小C很快解决了这个任务。然而，出于某种强迫症，她希望在地上按照长宽划分成网格后，逐行逐列每一块的颜色组成的序列的字典序最小。她希望你帮忙验证一下她的方案。 输入输出格式 输入格式 第一行，包含两个整数 N 和 M ，表示房间的长和宽。 输出格式 N 行，每行 M 列，表示地砖铺设的方案，需要这个方案是字典序最小的合法方案。（可以认为，输出的方案去掉回车后形成的字符串字典序最小） 输入输出样例 输入样例 #1 4 3 输出样例 #1 AAA AAA AAA BCB 说明 【数据规模】 对于50%的数据，保证 N、M≤5 对于100%的数据，保证 1≤N、M≤100。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:道路值守 题目描述 Z-Kingdom 有着四通八达的现代化交通。时值独立庆典之际，随着来自周边国家旅客的日益增多，犯罪行为也悄无声息开始滋长起来。 特别任务支援科的警察们从总部收到了关于调查伪装在游客中的犯罪分子的请求。通过调查，他们得到了一张地图，记载了 Z-Kingdom 内每一条道路的长度。 显然，为了减少犯罪行为被发现的可能性，犯罪分子总是会选择最短的路径来行动。为了方便安排人手和推测犯罪分子采取的路线，他们希望得知任意两个地点之间，有多少条犯罪分子可能会选择的道路。 输入输出格式 输入格式 第一行，包含两个整数 $N,M$，表示 Z-Kingdom 内的地点数和道路数。 接下来 N 行，每行包含三个整数 $x,y,z$，表示道路连接的两个不同地点的标号，以及道路的长度。道路是双向的。 两个不同地点之间不会有超过一条道路。 输出格式 输出一行，包含 $\\dfrac{N(N-1)}{2}$ 个整数  $C_{1,2},C_{1,3},\\cdots,C_{1,N},C_{2,3},C_{2,4},\\cdots,C_{2,N},\\cdots,C_{N-1,N}$。 其中 $C_{x, y}$ 表示 x 号地点到 y 号地点之间有多少条犯罪分子可能会选择的道路。 输入输出样例 输入样例 #1 5 6 1 2 1 2 3 1 3 4 1 4 1 1 2 4 2 4 5 4 输出样例 #1 1 4 1 2 1 5 6 1 2 1 说明 【数据规模】 - 对于 $30\\%$ 的数据，保证 $N \\le 50$； - 对于 $60\\%$ 的数据，保证 $N \\le 100$； - 对于 $100\\%$ 的数据，保证 $N \\le 500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:二进制 题目描述 小Z最近学会了二进制数，他觉得太小的二进制数太没意思，于是他想对一个巨大二进制数做以下 4 种基础运算： 运算 1：将整个二进制数加 1 运算 2：将整个二进制数减 1 运算 3：将整个二进制数乘 2 运算 4：将整个二进制数整除 2 小Z很想知道运算后的结果，他只好向你求助。 （Ps：为了简化问题，数据保证+，-操作不会导致最高位的进位与退位） 输入输出格式 输入格式 第一行两个正整数 n，m，表示原二进制数的长度以及运算数。 接下来一行 n 个字符，分别为‘0’或‘1’表示这个二进制数。 第三行 m 个字符，分别为‘+’，‘-’，‘\\*’，‘/’，对应运算 1，2，3，4。 输出格式 一行若干个字符，表示经过运算后的二进制数。 输入输出样例 输入样例 #1 4 10 1101 */-*-*-/*/ 输出样例 #1 10110 说明 【数据规模和约定】 对于 30%的数据，1 ≤ n，m ≤ 1000。 对于 60%的数据，1 ≤ n，m ≤ 10^5。 对于 100%的数据，1 ≤ n，m ≤ 5\\*10^6。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:K皇后 题目描述 小 Z 最近捡到了一个棋盘，他想在棋盘上摆放 K 个皇后。他想知道在他摆完这 K 个皇后之后，棋盘上还有多少个格子是不会被攻击到的。 **注意：一个皇后会攻击到这个皇后所在的那一行，那一列，以及两条对角线。** 输入输出格式 输入格式 第一行三个正整数 $n,m,K$，表示棋盘的行列，以及小 Z 摆放的皇后的个数。 接下来 K 行，每行两个正整数 $x,y$，表示这个皇后被摆在了第 x行，第 y 列，数据保证任何两个皇后都不会被摆在同一个格子里。 输出格式 仅一个整数，表示棋盘上还有多少个格子是不会被攻击到的。 输入输出样例 输入样例 #1 12 13 6 10 4 12 10 1 1 2 3 3 2 2 6 输出样例 #1 25 说明 - 对于 $30\\%$ 的数据，$1\\le n,m\\le 5\\times10^3，1\\le K\\le 500$； - 对于另外 $10\\%$ 的数据，$K=1$； - 对于 $100\\%$ 的数据，$1\\le n,m\\le 2\\times 10^4，1\\le K\\le 500$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Sam数 题目描述 小Z最近发现了一种非常有趣的数，他将这种数称之为 Sam 数。Sam 数具有以下特征：相邻两位的数字之差不超过 2。小Z还将 Sam 数按位数进行了分类，他将一个 k 位 Sam 数称之为 k 阶 Sam 数。但不幸的是小Z发现他数不清第 k 阶的 Sam 数一共有多少个，这个时候机智的他想到了向你求助。 输入输出格式 输入格式 第一行为一个整数 k，含义见题面。 输出格式 一行一个整数 ans，表示 k 阶的 Sam 数的个数。 由于第 k 阶 Sam 数非常多，你只需要输出 ans mod 1000000007。 输入输出样例 输入样例 #1 4 输出样例 #1 867 说明 【数据规模和约定】 对于 30%的数据，1 ≤ k ≤ 10^6。 对于 60%的数据，1 ≤ k ≤ 10^12。 对于 100%的数据，1 ≤ k ≤ 10^18。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小Z的AK计划 题目描述 在小Z的家乡，有机房一条街，街上有很多机房。每个机房里都有一万个人在切题。小Z刚刷完CodeChef，准备出来逛逛。 机房一条街有 n 个机房，第 i 个机房的坐标为 xi ，小Z的家坐标为 0。小Z在街上移动的速度为1，即从 x1 到 x2 所耗费的时间为 |x1 − x2|。 每个机房的学生数量不同，ACM 题目水平也良莠不齐。小Z到达第 i 个机房后，可以花 ti 的时间想题，然后瞬间 AK；当然，也可以过机房而不入。 小Z现在只有 m 个单位时间，之后他就该赶着去打 Codeforces 了。现在他想知道自己最多能在多少个机房 AK，希望你帮帮他。 输入输出格式 输入格式 第一行包含两个整数 n，m。 接下来 n 行，每行包含两个整数 xi，ti 。 输出格式 第一行包含一个整数，表示小Z最多能 AK 的机房数量。 输入输出样例 输入样例 #1 2 10 1 100 5 5 输出样例 #1 1 说明 【数据规模】 对于 30% 的数据，n ≤ 20。 对于 60% 的数据，n ≤ 1000。 对于 100% 的数据，1 ≤ n ≤ 10^5，0 ≤ m，xi ≤ 10^18，0 ≤ ti ≤ 10^9。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:学英语 题目描述 为了适应紧张的大学学习生活，小 Z 发愤图强开始复习巩固英语。 由于小 Z 对数学比较有好感，他首先复习了数词。小 Z 花了一整天的时间，终于把关于基数词的知识都搞懂了。于是小 Z 非常兴奋，决定出一些题目考考已经过了英语四级、人称英语帝的小 G。考法很简单：小 Z 给出某个整数 x 的英文写法，要求小 D 用阿拉伯数字写出 x。 小 Z 会保证以下几点： 1. $-999,999,999 \\leq  x \\leq 999,999,999$ 2. 题目中只会用到以下这些英文单词： `negative, zero, one, two, three, four, five, six, seven, eight, nine, ten` `eleven, twelve, thirteen, fourteen, fifteen, sixteen, seventeen, eighteen, nineteen, twenty` `thirty, forty, fifty, sixty, seventy, eighty, ninety, hundred, thousand, million` 3. 若 x 为负数，题目中第一个单词是 `negative`，否则任何时候都不会出现 `negative` 这个词。 4. 由于小 Z 很牛 B，他不知道像 $103$ 这样的数字要写成 `one hundred and three` 而是直接写成了 `one hundred three`，就是说小 Z 的所有题目中都没有写 `and` 这个词（尽管本应该是要写的），请你谅解。 5. 除了第 4 点， 其他还是基本符合英语的语法规则的， 比如 $1500$ 他会写成 `one thousand five hundred` 而不会写成 `fifteen hundred`。 小 D 拿到题目后不屑地说了一句：水题！写个程序么好了…… 但是小 D 要出去玩（此时应该已经在千里之外爽玩了） ，这个任务就交给你了。 输入输出格式 输入格式 一行，题目描述中所说的 x 的英文写法。 输出格式 一行， x 的阿拉伯数字写法。 输入输出样例 输入样例 #1 six 输出样例 #1 6 输入样例 #2 negative seven hundred twenty nine 输出样例 #2 -729 输入样例 #3 one million one hundred one 输出样例 #3 1000101 输入样例 #4 eight hundred fourteen thousand twenty two 输出样例 #4 814022 说明 对于 $100\\%$ 的数据，$-999,999,999 ≤ x ≤ 999,999,999$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:欢总喊楼记 题目描述 诗经有云： 关关雎鸠，在河之洲。窈窕淑女，君子好逑。 又是一个被风吹过的夏天……一日欢总在图书馆中自习，抬起头来，只见一翩跹女子从面前飘过，真是回眸一笑百媚生，六宫粉黛无颜色！一阵诗情涌上欢总心头，他顺手写下那诗句： 啊，你是爱，是暖，是希望，你是人间四月天！ 任时光匆匆而过，欢总一直没能忘记那女子。人言单思苦，欢总偏单思。夜夜难入梦，此心淑可知。偶然一次机会，欢总得知了那女孩的信息。一日，欢总终于鼓起了勇气，他向她表白！ 那晚的夜色格外美丽，欢总在楼下慷慨激昂，气氛浪漫而感人。女孩有点心动了，但是直接答应是不是有点太不矜持了呢？于是，她想难难欢总，看看他到底有多少诚意。 女孩给出了两个整数 L 和 R，她要欢总数出到底有多少个这样的 X：L <= X <= R，且 X 的最高位与最低位相等（十进制下）。比如，2、101、329873可以是这样的 X，而23、4567就不是。 孩子们，欢总下辈子的幸福生活就靠你们帮忙了！ 输入输出格式 输入格式 一行，这一行包括两个整数 L 和 R。 输出格式 一行，这一行包括一个整数，即满足所述性质的 X 的个数。 输入输出样例 输入样例 #1 2 47 输出样例 #1 12 说明 【数据规模】 50% 1<=L<=R<=10^6 100% 1<=L<=R<=10^18"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 英语考试结束了，打完铃，她就主动来找小明说话，一来就要借英语卷子对答案。小明是公认的英语大神，二话不说就把卷子借给了她。小红对了一遍答案，简直是千差万别，她不禁冒出了冷汗。这时，小明走过来，安慰她：“没事，我又不是标准答案，不一定全对。” 已知小明答案的准确率是A%，一共有N道题，给出小红对答案的结果S（一个长为N的01串，其中1表示两人答案一样，0表示不一样）。为了简化问题，所有题目都是判断题。 请你帮小红写一个程序，计算出她对Q题及以上的概率。 （P.S.小明后来把那张卷子送给了小红，别想多了，不是定情信物） 输入输出格式 输入格式 第1行，三个正整数N，A，Q。 第2行，一个01字符串S。 输出格式 一行，一个实数，表示她对Q题及以上的概率。（保留3位小数） 输入输出样例 输入样例 #1 3 90 2 100 输出样例 #1 0.172 说明 对于90%数据，N<=50,N-5<=Q<=N。 对于剩下的10%数据，N<=10000,Q=0."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 他一共写了N个单词，为了美观，要把N个单词分成K行。单词的相对顺序不能变化。为了简化问题，无需考虑单词间的空格。 小红会喜欢整齐的情书，小明想赢得小红的芳心，所以，他找到你，想让你帮他写一个程序，帮他排版，使得每行字母数的方差最小。请你求出最小的方差。 输入输出格式 输入格式 第1行，两个正整数N，K。 第2行，N个空格隔开的单词。 输出格式 一行，一个1位小数表示每行字母数的最小方差。 输入输出样例 输入样例 #1 4 2 xxx xxxxx xxxx xx （输入的本来是一封情书，被和谐了……） 输出样例 #1 1.0 说明 【样例说明】 xxx xxxxx xxxx xx 1/2\\*((8-7)^2+(6-7)^2)=1 【数据范围】 对于30%数据，N<=100,K<=3。 对于全部数据，N<=1000,K<=100.单词长度<=20."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 本届世界杯共有 n 支球队，m 场比赛。男球迷小明喜欢看比赛，女球迷小红喜欢看帅哥。每支球队在小明眼里的实力值为 $a_i$，在小红眼里的帅哥数量为 $b_i$。 每场比赛有两个球队对抗，它们的编号分别是 $p_i$ 和 $q_i$。小明认为一场比赛的精彩度等于两队实力的乘积，小红则认为是两队帅哥数量之和。 由于体力的限制，他们最多只能看 k 场比赛。当然，只要看比赛，两个人一定会一起看。小明作为男生，理应迁就一下女生，所以，请你写一个程序，求出小红看到比赛的精彩度总和不小于 c 的情况下，小明看到比赛的精彩度的最大总和。 输入输出格式 输入格式 第一行包含四个正整数 $n,m,k,c$。 第二行有 n 个用空格隔开的正整数 $a_i$。 第三行有 n 个用空格隔开的正整数 $b_i$。 接下来 m 行，每行两个正整数 $p_i,q_i$。 输出格式 一行，一个正整数表示小明看到比赛的精彩度的最大总和。如果无论如何都无法满足小红的要求，输出 `-1`。 输入输出样例 输入样例 #1 4 3 2 5 2 2 1 3 1 1 1 2 1 2 2 3 3 4 输出样例 #1 7 说明 #### 数据范围与约定 - 对于 $20\\%$ 数据，$1 \\le n,m,k \\le 5$。 - 对于 $100\\%$ 数据，$1 \\le n \\le 100，1 \\le k \\le m \\le 100，1 \\le a_i,b_i \\le 10，1 \\le c \\le 10^3$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO14MAR] Sabotage G 题目描述 Farmer John's arch-nemesis, Farmer Paul, has decided to sabotage Farmer John's milking equipment! The milking equipment consists of a row of N (3 <= N <= 100,000) milking machines, where the ith machine produces M\\_i units of milk (1 <= M\\_i <= 10,000).  Farmer Paul plans to disconnect a contiguous block of these machines -- from the ith machine up to the jth machine (2 <= i <= j <= N-1); note that Farmer Paul does not want to disconnect either the first or the last machine, since this will make his plot too easy to discover.  Farmer Paul's goal is to minimize the average milk production of the remaining machines.  Farmer Paul plans to remove at least 1 cow, even if it would be better for him to avoid sabotage entirely. Fortunately, Farmer John has learned of Farmer Paul's evil plot, and he is wondering how bad his milk production will suffer if the plot succeeds.  Please help Farmer John figure out the minimum average milk production of the remaining machines if Farmer Paul does succeed. 农夫约翰的头号敌人保罗决定破坏农民约翰的挤奶设备。挤奶设备排成一行，共N（3<= N <=100000）台挤奶机，其中第i个台挤奶机生产M\\_i单位（1 <= M\\_i<=10,000）的牛奶。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:城墙 题目描述 有一次，一个贪婪的国王命令他的骑士在他的城堡外修建一堵围墙，要求围墙离城堡的最近距离不能少于 L。 城堡是一个 n 边形，国王非常吝啬，不愿意多花建一米的围墙，多建的话他会杀掉负责修建的骑士。 请你帮助这个倒霉的骑士，帮他求出最少需要修建多长的围墙。 输入输出格式 输入格式 第一行两个整数 n，L 表示多边形的边数和最小距离。 接下里 n 行，每行两个整数，表示多边形上的点的坐标。 输出格式 一行一个整数，即最小的围墙长度，四舍五入到整数。 输入输出样例 输入样例 #1 9 100 200 400 300 400 300 300 400 300 400 400 500 400 500 200 350 200 200 200 输出样例 #1 1628 说明 #### 数据规模与约定 - 对于 $100\\%$ 的数据，保证 $3\\le n\\le1000，1\\le L\\le1000，-10^4\\leq x_i,y_i\\leq 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小Z的矩阵 题目描述 小 Z 最近迷上了矩阵，他定义了一个对于一种特殊矩阵的特征函数 G。对于 $N\\times N$ 的矩阵 A，A 的所有元素均为 0 或 1，则 $\\displaystyle G(A) = \\left(\\sum_{i = 1}^n\\sum_{j = 1}^n A_{i, j}\\cdot A_{j, i}\\right) \\bmod 2$。举一个例子： $$ \\begin{pmatrix} 1 & 1 & 1\\\\ 0 & 1 & 1\\\\ 1 & 0 & 0\\\\ \\end{pmatrix} $$ 对于上面这个 $3\\times 3$ 矩阵 A，$G(A)=(1\\times 1+1\\times 0+1\\times 1+0\\times 1+1\\times 1+1\\times 0+1\\times 1+ 0\\times 1+0\\times 0) \\bmod 2 = 0$。 当然询问一个矩阵的 G 值实在是太简单了。小Z在给出一个 $N\\times N$ 矩阵的同时将给你 Q 个操作，操作描述如下： - 操作 1：形如 `1 x`，表示将第 x 行的元素全部“翻转”。 - 操作 2：形如 `2 x`，表示将第 x 列的元素全部“翻转”。 - 操作 3：形如一个整数`3`，表示询问当前矩阵的特征值 G。 “翻转”的定义为将 1 变成 0，将 0 变成 1。 输入输出格式 输入格式 第一行：两个正整数 $N,Q。N$ 表示矩阵的行数（列数），Q 表示询问的次数。 接下来 N 行：一个 $N\\times N$ 的矩阵 A，$0\\le A_{i, j}\\le 1$。 接下来 Q 行：Q 个操作。 输出格式 一行若干个数，中间没有空格，分别表示每个操作的结果（操作 1 和操作 2 不需要输出）。 输入输出样例 输入样例 #1 3 12 1 1 1 0 1 1 1 0 0 3 2 3 3 2 2 2 2 1 3 3 3 1 2 2 1 1 1 3 输出样例 #1 01001 说明 【数据规模】 - 对于 $30\\%$ 的数据，$N\\le 100，Q\\le 10^5$。 - 对于 $100\\%$ 的数据，$N\\le 1,000，Q \\le 5\\times 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:NOIP2014普及组 第二题 题目描述 在社交媒体上，经常会看到针对某一个观点同意与否的民意调查以及结果。例如，对某一观点表示支持的有 $1498$ 人，反对的有 $902$ 人，那么赞同与反对的比例可以简单的记为 $1498:902$。 不过，如果把调查结果就以这种方式呈现出来，大多数人肯定不会满意。因为这个比例的数值太大，难以一眼看出它们的关系。对于上面这个例子，如果把比例记为 $5:3$，虽然与真实结果有一定的误差，但依然能够较为准确地反映调查结果，同时也显得比较直观。 现给出支持人数 A，反对人数 B，以及一个上限 L，请你将 A 比 B 化简为 $A'$ 比 $B'$，要求在 $A'$ 和 $B'$ 均不大于 L 且 $A'$ 和 $B'$ 互质（两个整数的最大公约数是 1）的前提下，$\\dfrac{A'}{B'} \\ge  \\dfrac{A}{B}$ 且 $\\dfrac{A'}{B'} - \\dfrac{A}{B}$ 的值尽可能小。 输入输出格式 输入格式 共一行，包含三个整数$A,B,L$，每两个整数之间用一个空格隔开，分别表示支持人数、反对人数以及上限。 输出格式 共一行，包含两个整数A’，B’，中间用一个空格隔开，表示化简后的比例。 输入输出样例 输入样例 #1 1498 902 10 输出样例 #1 5 3 说明 对于 $100\\%$ 的数据，$1 \\le A \\le 10^6,1 \\le B \\le 10^6,1 \\le L \\le 100,\\dfrac{A}{B} \\le L$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[ZJOI2007] 仓库建设 题目描述 L 公司有 n 个工厂，由高到低分布在一座山上，工厂 1 在山顶，工厂 n 在山脚。 由于这座山处于高原内陆地区（干燥少雨），L公司一般把产品直接堆放在露天，以节省费用。突然有一天，L 公司的总裁 L 先生接到气象部门的电话，被告知三天之后将有一场暴雨，于是 L 先生决定紧急在某些工厂建立一些仓库以免产品被淋坏。 由于地形的不同，在不同工厂建立仓库的费用可能是不同的。第 i 个工厂目前已有成品 $p_i$ 件，在第 i 个工厂位置建立仓库的费用是 $c_i$。 对于没有建立仓库的工厂，其产品应被运往其他的仓库进行储藏，而由于 L 公司产品的对外销售处设置在山脚的工厂 n，故产品只能往山下运（即**只能运往编号更大的工厂的仓库**），当然运送产品也是需要费用的，一件产品运送一个单位距离的费用是 1。 假设建立的仓库容量都都是足够大的，可以容下所有的产品。你将得到以下数据： - 工厂 i 距离工厂 1 的距离 $x_i$（其中 $x_1=0$）。 - 工厂 i 目前已有成品数量 $p_i$。 - 在工厂 i 建立仓库的费用 $c_i$。 请你帮助 L 公司寻找一个仓库建设的方案，使得总的费用（建造费用 + 运输费用）最小。 输入输出格式 输入格式 输入的第一行是一个整数 n，代表工厂的个数。 第 2 到 $(n + 1)$ 行，每行有三个用空格隔开的整数，第 $(i + 1)$ 行的整数依次代表 $x_i,~p_i,~c_i$。 输出格式 仅输出一行一个整数，代表最优方案的费用。 输入输出样例 输入样例 #1 3 0 5 10 5 3 100 9 6 10 输出样例 #1 32 说明 #### 样例输入输出 1 解释 在工厂 1 和工厂 3 建立仓库，建立费用为 $10+10=20$ ，运输费用为 $(9-5) \\times 3 = 12$，总费用 $32$。 #### 数据范围与约定 对于 $20\\%$ 的数据，保证 $n \\leq 500$。 对于 $40\\%$ 的数据，保证 $n \\leq 10^4$。 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 10^6，0 \\leq x_i,p_i,c_i < 2^{31}$。 对于任意的 $1 \\leq i < n$，保证 $x_i < x_{i + 1}$。 设答案为 $ans$，保证 $ans + \\sum\\limits_{i = 1}^{n} p_ix_i < 2^{63}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 会场上有 n 个关键区域，不同的关键区域由 m 条无向地毯彼此连接。每条地毯可由三个整数 u、v、w 表示，其中 u 和 v 为地毯连接的两个关键区域编号，w 为这条地毯的美丽度。 由于颁奖典礼已经结束，铺过的地毯不得不拆除。为了贯彻勤俭节约的原则，组织者被要求只能保留 K 条地毯，且保留的地毯构成的图中，任意可互相到达的两点间只能有一种方式互相到达。换言之，组织者要求新图中不能有环。现在组织者求助你，想请你帮忙算出这 K 条地毯的美丽度之和最大为多少。 输入输出格式 输入格式 第一行包含三个正整数 n、m、K。 接下来 m 行中每行包含三个正整数 u、v、w。 输出格式 只包含一个正整数，表示这 K 条地毯的美丽度之和的最大值。 输入输出样例 输入样例 #1 5 4 3 1 2 10 1 3 9 2 3 7 4 5 3 输出样例 #1 22 说明 选择第 1、2、4 条地毯，美丽度之和为 10 + 9 + 3 = 22。 若选择第 1、2、3 条地毯，虽然美丽度之和可以达到 10 + 9 + 7 = 26，但这将导致关键区域 1、2、3 构成一个环，这是题目中不允许的。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 在接受借教室请求的 n 天中，第 i 天剩余的教室为 $a_i$个。作为大学借教室服 务的负责人，你需要完成如下三种操作共 m 次： ① 第 l 天到第 r 天，每天被归还 d 个教室。 ② 询问第 l 天到第 r 天教室个数的平均数。 ③ 询问第 l 天到第 r 天教室个数的方差。 输入输出格式 输入格式 第一行包括两个正整数 n 和 m，其中 n 为借教室的天数，m 为操作次数。 接下来一行，共包含 n 个整数，第i个整数表示第 i 天剩余教室数目为 $a_i$个。 接下来 m 行，每行的第一个整数为操作编号（只能为 1 或 2 或 3），接下来： 包含两个正整数 l 和 r，若操作编号为 1，则接下来再包含一个正整数 d。 输出格式 对于每个操作 2 和操作 3，输出一个既约分数（分子与分母互质）表示询问的答案（详见样例）。若答案为 0，请输出“0/1”（不含引号）。 输入输出样例 输入样例 #1 5 4 1 2 3 4 5 1 1 2 3 2 2 4 3 2 4 3 1 5 输出样例 #1 4/1 2/3 14/25 说明 对于全部测试数据满足：$1 \\leq l \\leq r \\leq n \\leq 10^5, m\\leq 10^5，0 \\leq a_i \\leq 10，1 \\leq d \\leq 3$，操作 1 的数量不超过 $10\\%$。 注意：$a_i$和 d 的范围很小及操作 1 数量很少的原因是为了保证答案的分子不会很大，以防止答案的分子溢出 $64$ 位整数的范围，这与题目做法无关。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 图书馆有n个书架，第1个书架后面是第2个书架，第2个书架后面是第3个书架……第n-1个书架后面是第n个书架，第n个书架后面是第1个书架，第i个书架上有b[i]本书。现在，为了让图书馆更美观，WZF神牛让蒟蒻SY搬动书架上的书，使每个书架上的书一样多。由于搬动的书可能会很多，所以蒟蒻SY只能将一个书架上的书搬到与其相邻的两个书架上。那么蒟蒻SY最少搬动几本书呢？ 输入输出格式 输入格式 共2行，第1行1个正整数n，第2行n个非负整数，第i个为b[i]。 输出格式 共n+1行，第1行1个正整数m，表示蒟蒻SY最少搬动m本书，之后n行（即第2行至第n+1行）每行2个整数，第i行有两个整数af[i]和ab[i]，分别表示蒟蒻SY要将第i个书架上的af[i]本书和ab[i]本书分别搬到它前面的一个书架上和它后面的一个书架上。 输入输出样例 输入样例 #1 5 15 7 11 3 14 输出样例 #1 12 2 3 -3 0 0 1 -1 -6 6 -2 说明 n<=5000001（为保证有唯一解，n必为奇数），b[i]<= 21474803648（蒟蒻SY：俺当初一看到这儿就想哭。） 若af[i]为负数，则说明蒟蒻SY要把第i个书架前面的那个书架上的-af[i]本书搬到第i个书架上。 同理，若ab[i]为负数，则说明蒟蒻SY要把第i个书架后面的那个书架上的-ab[i]本书搬到第i个书架上。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 mzc 家很有钱（开玩笑），他家有 n 个男家丁，现在 mzc 要将她们全都聚集起来（干什么就不知道了）。现在知道 mzc 与男家丁们互相之间通信的时间，请算出把他们每个人叫到需要的总时间（要重复的哦）。保证能把他们每个人叫到。 输入输出格式 输入格式 第一行有一个数 n，表示有 n 个男家丁。第二行一个数 m 表示有 m 条通信路线。之后 m 行，每行三个数 $a_i,b_i,c_i$，表示第 $a_i$个男家丁（或 mzx）和第 $b_i$ 个男家丁（或 mzc）通信需要时间（双向）。$a_i\\left(\\text{或}b_i\\right)=0$ 表示 mzc。 输出格式 一行，一个数 $sum$，表示把他们每个人叫到需要的总时间。 输入输出样例 输入样例 #1 5 12 0 2 15 2 3 20 3 5 13 1 3 29 0 1 30 2 4 21 0 3 23 5 1 48 0 4 17 0 5 27 1 2 43 2 5 41 输出样例 #1 94 说明 $n\\leq2300,m\\leq4\\times10^5$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:序列排序 题目描述 小C有一个N个数的整数序列，这个序列的中的数两两不同。小C每次可以交换序列中的任意两个数，代价为这两个数之和。小C希望将整个序列升序排序，问小C需要的最小代价是多少？ 输入输出格式 输入格式 第一行，一个整数N。 第二行，N个整数，表示小C的序列。 输出格式 一行，一个整数，表示小C需要的最小代价。 输入输出样例 输入样例 #1 6 8 4 5 3 2 7 输出样例 #1 34 说明 数据范围： 对于30%的数据，1<=N<=10； 对于全部的数据，1<=N<=100000，输入数据中的其他整数均为正整数且不超过 $10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:赤壁之战 题目描述 赤壁之战，黄盖率舰满载薪草膏油诈降曹军。 受庞统所授的连环计，曹军战船之间由铁索相连，没有两艘战船在同一位置，也没有铁索两两相交或穿过战船。每艘船都有其一定的战略价值。 为了保证达到破坏效果，黄盖需要保证被点燃的曹军船只两两之间都有铁索连接。他希望找到一种方案点燃总价值尽可能大的战船。 输入输出格式 输入格式 第一行包含数字 N，M ，表示战船的数量和铁索的数量。 接下来包含 N 行，每 i 行包含 1 个数字 $V_i$，表示第 i 艘战船的战略价值。 接下来包含 M 行，每 i 行包含 2 个数字 $S_i，T_i$ ，表示铁索连接的两艘船只。 数据保证这是一个可行的舰队安排。 输出格式 输出一个数字，表示最多摧毁总价值多少的战船。 输入输出样例 输入样例 #1 4 6 100 5000 1000 2000 1 2 1 3 1 4 2 3 2 4 3 4 输出样例 #1 8100 输入样例 #2 6 8 1500 1000 100 2000 500 300 1 2 1 3 1 4 2 4 3 5 4 5 4 6 5 6 输出样例 #2 4500 说明 #### 【数据规模】 对于 $50\\%$ 的数据，保证 N，$M \\le 10$。 对于 $100\\%$ 数据，保证 $N \\le 450，M \\le 900，V_i \\le 6000$。 #### 【注意】 题目中的每句话（除了第一段）都有作用。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 这一次，L 国决定军队分成 n 组，分布在各地，若以 L 国为原点，可以看作在一个直角坐标系内。但是他们都受统一的指挥，指令部共发出 m 个命令。命令有移动、上下转移和左右转移，但是由于某些奇奇怪怪的原因，军队收到命令总是有延迟，为了方便，军方已经写好一个栈，所以你要处理的顺序，应该是从后往前。 输入输出格式 输入格式 输入包括 $n+m+1$ 行。 第一行两个整数 $n,m$。 接下来 n 行，第 $i+1$ 行两个整数 $x_i,y_i$ 表示第 i 支军队的位置。 接下来 m 行，每行首先是一个字符 c。 - 若 c 为 `m`，则后面再输入两个整数 $p,q$，表示把每支军队的位置从 $(x_i,y_i)$ 移到 $(x_i+p,y_i+q)$。 - 若 c 为 `x`，则表示把每支军队的位置从 $(x_i,y_i)$ 移到 $(-x_i,y_i)$。 - 若 c 为 `y`，则表示把每支军队的位置从 $(x_i,y_i)$ 移到 $(x_i,-y_i)$。 输出格式 输出包含 n 行，第 i 行有两个整数 $x_i',y_i'$，表示第 i 支军队移动后的位置。 输入输出样例 输入样例 #1 3 3 0 0 4 -3 6 7 x m -1 2 y 输出样例 #1 1 2 -3 5 -5 -5 说明 对于 $30\\%$ 的数据，$1\\leqslant n,m\\leqslant 1000$。 对于 $100\\%$ 的数据，$1\\leqslant n,m\\leqslant 5\\times 10^5，x_i,y_i$ 在 `int` 范围内。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 Wzf从（1,1）开始，每秒可以向上下左右某一方向走2的次方步，问至少多久可以到达作业？ 输入输出格式 输入格式 第一行，两个整数，n，m。 接下来n行，每行m个字符，`$`或者`.`代表可走的空地，`X`表示障碍，`#`表示作业，（保证只有一个作业） 输出格式 Wzf到达作业最短耗时。如果没有解输出 `-1`。 输入输出样例 输入样例 #1 2 2 $$ .# 输出样例 #1 2 说明 1<n,m<1000"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:彩球树 题目描述 小Z是一个聪明的小学生，他用塑料管和橡皮泥搭成了一棵树，每个橡皮泥上都连接着一个向下的塑料管，有的连接着两根向上的塑料管，有的则连接着一些彩球。 然而，这个工艺品很快因为不平衡倒了下来。于是，小Z请教了和他在同一个班上的妹子小C。在百科全书上看到天平平衡原理的小C知道，如果任何一块橡皮泥向上连接的两根管子的载重量之差超过一个彩球的重量，工艺品就会不平衡倒下来。由于彩球比较重，橡皮泥和塑料管的重量可以忽略不计。 由于移动彩球需要花时间拆卸和固定，小C希望移动最少次数彩球让这个工艺品平衡起来。你能帮助她吗？ 输入输出格式 输入格式 一行，以中序遍历的方式描述了这棵树，B 表示彩球。 输出格式 输出一个数字，表示最少移动多少个彩球就能使它平衡，或输出”impossible”，表示如何移动多少个都无法平衡。 输入输出样例 输入样例 #1 ((B)()) 输出样例 #1 0 输入样例 #2 ((((B)(B))((B)()))(B)) 输出样例 #2 impossible 输入样例 #3 (()(((B)(B))(B))) 输出样例 #3 1 说明 【图解】 [PIC=1259] 【数据规模】 对于 15% 的数据，保证输入文件不超过 25 字节。 对于 50% 的数据，保证输入文件不超过 250 字节。 对于 100% 的数据，保证输入文件不超过 5000 字节。 （PS：1字节≈1字符） 【时空限制】 0.1s/128M"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 在小明的学校中，一共有若干个女生。小明认为每个女生的特征可以抽象为一个6位的数字串其中不重复地包含1~6这6个数码。 在小明心中，有一个理想的女生，她的特征数字串为A。如果串Y是串X交换两个连续的数码所得，那么我们认为特征数字串X和Y相似。首先，小明找到了他的同桌，她的特征数字串为S。每次，小明会寻找一个特征数字串和当前串相似的女生，直到寻找到适合他的（即特征数字串和A相同或相似的）。定义每个女生的合适程度为找到此人至少需要找女生的数量（包括他的同桌和此人自己）。显然，合适程度数值越小的女生越适合小明。 然而，小明觉得老天不会轻易地让他找到，所以他认为合适程度第二小的才是他最合适的伴侣（也就是小红）。那么，请你帮他写一个程序，求出对于小明，小红的合适程度是多少。 输入输出格式 输入格式 第1行，一个特征数字串A。 第2行，一个特征数字串S。 输出格式 一行，一个正整数表示小红的合适程度。 输入输出样例 输入样例 #1 123654 123456 输出样例 #1 3 说明 对于全部数据，保证串A和S合法，且保证能找到。 数据比较弱。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:（小明：小红，感谢你 $2$ 场大考时默默的支持，$100$ 个日夜的陪伴；感谢你照亮我 $100$ 个美好的日子，给我留下无数美好的回忆……在这个美好的日子里，我准备带你去旅行。） 题目描述 小明和小红还剩下 n 天的假期，小明可以安排旅行的计划。如果连续 x 天旅游，小明需要花旅行费用  $p \\times x \\times x$ 元；如果连续 x 天不旅游，小明需要请小红吃饭，花费为 $q \\times x$ 元（ $p,q$ 都是输入的常数）。 请你帮小明写一个程序，计算出假期里他至少需要花费多少元。 输入输出格式 输入格式 输入只有一行，包含三个空格隔开的正整数 $n,p,q$。 输出格式 一行，一个正整数表示小明至少需要花费多少元。 输入输出样例 输入样例 #1 6 1 7 输出样例 #1 20 说明 #### 数据规模与约定 - 对于 $20\\%$ 数据，$1 \\le n \\le 20$。 - 对于 $90\\%$ 数据，$1 \\le n \\le 10^3，1 \\le p \\le 2 \\times 10^3，1 \\le q \\le 10^4$。 - 对于 $100\\%$ 数据，$1 \\le n \\le 2 \\times 10^5，1 \\le q \\le p \\le 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:方块消除 题目描述 Jimmy 最近迷上了一款叫做方块消除的游戏。游戏规则如下：n 个带颜色方格排成一列，相同颜色的方块连成一个区域（如果两个相邻方块颜色相同，则这两个方块属于同一区域）。为简化题目，将连起来的同一颜色方块的数目用一个数表示。 例如，`9 122233331` 表示为 ```plain 4 1 2 3 1 1 3 4 1 ``` 游戏时，你可以任选一个区域消去。设这个区域包含的方块数为 x，则将得到 $x^2$ 个分值。方块消去之后，其余的方块就会竖直落到底部或其他方块上。而且当有一列方块被完全消去时，其右边的所有方块就会向左移一格。Jimmy 希望你能找出得最高分的最佳方案，你能帮助他吗？ 输入输出格式 输入格式 第一行包含一个整数 m（$1 \\le m \\le 50$），表示同颜色方块区域的数目。   第二行包含 m 个数，表示每个区域的颜色（1 到 m 之间的整数）。   第三行包含 m 个数，表示每个区域包含的方块数（1 到 $20$ 之间的整数）。 输出格式 仅一个整数，即最高可能得分。 输入输出样例 输入样例 #1 4  1 2 3 1  1 3 4 1  输出样例 #1 29"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:我是源点，你是终点。我们之间有负权环。 ——小明 题目描述 在小明和小红的生活中，有 N 个关键的节点。有 M 个事件，记为一个三元组 $(S_i,T_i,W_i)$，表示从节点 $S_i$ 有一个事件可以转移到 $T_i$，事件的效果就是使他们之间的距离减少 $W_i$。 这些节点构成了一个网络，其中节点 1 和 N 是特殊的，节点 1 代表小明，节点 N 代表小红，其他代表进展的阶段。所有事件可以自由选择是否进行，但每次只能进行当前节点邻接的。请你帮他们写一个程序，计算出他们之间可能的最短距离。 输入输出格式 输入格式 第一行，两个正整数 $N,M$。 之后 M 行，每行 3 个空格隔开的整数 $S_i,T_i,W_i$。 输出格式 一行，一个整数表示他们之间可能的最短距离。如果这个距离可以无限缩小，输出``Forever love``。 输入输出样例 输入样例 #1 3 3 1 2 3 2 3 -1 3 1 -10 输出样例 #1 -2 说明 对于 $20\\%$ 数据，$N \\le 10，M \\le 50$。 对于 $50\\%$ 数据，$N \\le 300，M \\le 5000$。 对于 $100\\%$ 数据，$1\\le N \\le 10^3，1\\le M \\le 10^4，|W_i|\\le 100$，保证从节点 1 到 $2 \\dots N$ 有路径，从节点 N 到 $1 \\dots N - 1$ 有路径。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小Z的关系距离 题目描述 小Z学习了辩证唯物主义，知道了联系具有普遍性。他看着草稿纸上的字符串，就想挖掘它们之间的关系。 小Z认为，对于两个字符串 a、b，如果它们各自删除不超过其自身长度一半的字符能够相等，则称a、b 有距离为 1 的关系。而如果存在另一个字符串 c，它和 a 有距离为 1 的关系，和 b 有距离为 n 的关系，则称 a、b 有距离为 n + 1 的关系。 现在小Z随机挑选出了两个小写字母字符串 a、b，想知道它们之间关系的最小距离，希望你帮帮他。 输入输出格式 输入格式 第一行包含一个字符串 a。 第二行包含一个字符串 b。 输出格式 第一行包含一个整数，表示 a、b 之间关系的最小距离。 输入输出样例 输入样例 #1 abcdef axcyd 输出样例 #1 1 输入样例 #2 a b 输出样例 #2 2 输入样例 #3 abb baa 输出样例 #3 2 说明 【数据规模】 对于 30% 的数据，a、b 由同一字母构成。 对于 100% 的数据，1≤|a|,|b|≤100。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小Z的电力管制 题目描述 小 Z 在供电公司找到了一份工作，刚上班就遇到了一个棘手的任务。 小 Z 所在的城市可以看成一个 $n \\times m$ 的网格，第 i 行第 j 列的格子有电力需求 $a_{i,j}$ 。然而，供电公司能够供应的电力 u 小于每格的电力需求之和。为此，供电公司不得不将城市划分成若干个区域，每个区域轮流断电，使得断电后剩余区域的电力需求之和不超过供电公司能够供应的电力。 为了方便起见，划分区域的方式很简单，每次将大区域横向或纵向划分成两个小区域，递归进行。 供电公司想尽可能减少市民的不满，因此需要小 Z 计算出最多能划分成多少个区域以及在此前提下能够剩余的最多电力（一种划分的剩余电力为每次断电后剩余电力的最小值），希望你帮帮他。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:高精度减法 题目描述 高精度减法。 输入输出格式 输入格式 两个整数 $a,b$（第二个可能比第一个大）。 输出格式 结果（是负数要输出负号）。 输入输出样例 输入样例 #1 2 1 输出样例 #1 1 说明 - $20\\%$ 数据 $a,b$ 在 long long 范围内； - $100\\%$ 数据 $0<a,b\\le 10^{10086}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[JSOI2010] 巨额奖金 题目描述  NJ 市的快速发展得益于其便捷的交通。可是，随着经济的发展，大量的人进入 NJ 市， NJ 市的交通也承受着巨大的压力。现在， NJ 市正在筹划建设一个新型的交通枢纽，从而减轻交通的压力。  NJ 市包含 n 个区，有些区之间有双向的干道存在。新型交通枢纽建设在这些干道的基础上，将其中的部分干道改进为新型干道。改进后，干道能承受的压力可以比原来增加几十倍。为了和谐发展，在新型的交通枢纽建成后，要求任何两个区之间都可以只通过新型干道（直接或间接地）连接。政府已经预测出每条干道改进为新型干道的费用。政府希望建设新型交通枢纽的总费用最小，并以巨额奖金向市民征集方案。政府很快发现费用最小的方案不一定唯一，所以决定将奖金平分给每一种方案的第一个设计者，即如果一个人设计的费用是最小的而且前面没人和他设计出一模一样的方案，则他可获奖。  Js08 被奖金深深的吸引，准备设计一种方案。可是，他发现方案可能会很多，如果最后获奖者太多，巨额的资金分到每个人头上的也不会太多。所以他决定先算一下可行的方案数是多少。 输入输出格式 输入格式 输入共 $m + 1$ 行。 输入的第一行包含两个数 $n, m$，分别表示该市有多少个区和有多少条干道。 接下来 m 行，每行三个数 $a_i、b_i、c_i$，表示 $a_i$ 区和 $b_i$ 区之间有一条干道，如果改进需要 $c_i$ 的费用。 输出格式 输出费用最小的方案有多少种。由于答案可能很大，你只要输出方案数除以 $31011$ 的模即可。 输入输出样例 输入样例 #1 4 6  1 2 1  1 3 1  1 4 1  2 3 2  2 4 1  3 4 1  输出样例 #1 8 说明 ### 数据规模与约定 对于 $100\\%$ 的数据，保证 $1 \\leq n \\leq 100，1 \\leq m \\leq 1000，1 \\leq a _ i, b _ i \\leq n，1 \\leq c _ i \\leq 10 ^ 9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SDOI2008] 洞穴勘测 题目描述 辉辉热衷于洞穴勘测。 某天，他按照地图来到了一片被标记为JSZX的洞穴群地区。经过初步勘测，辉辉发现这片区域由n个洞穴（分别编号为1到n）以及若干通道组成，并且每条通道连接了恰好两个洞穴。假如两个洞穴可以通过一条或者多条通道按一定顺序连接起来，那么这两个洞穴就是连通的，按顺序连接在一起的这些通道则被称之为这两个洞穴之间的一条路径。 洞穴都十分坚固无法破坏，然而通道不太稳定，时常因为外界影响而发生改变，比如，根据有关仪器的监测结果，123号洞穴和127号洞穴之间有时会出现一条通道，有时这条通道又会因为某种稀奇古怪的原因被毁。 辉辉有一台监测仪器可以实时将通道的每一次改变状况在辉辉手边的终端机上显示： 如果监测到洞穴u和洞穴v之间出现了一条通道，终端机上会显示一条指令 `Connect u v` 如果监测到洞穴u和洞穴v之间的通道被毁，终端机上会显示一条指令 `Destroy u v` 经过长期的艰苦卓绝的手工推算，辉辉发现一个奇怪的现象：无论通道怎么改变，任意时刻任意两个洞穴之间至多只有一条路径。 因而，辉辉坚信这是由于某种本质规律的支配导致的。因而，辉辉更加夜以继日地坚守在终端机之前，试图通过通道的改变情况来研究这条本质规律。 然而，终于有一天，辉辉在堆积成山的演算纸中崩溃了……他把终端机往地面一砸（终端机也足够坚固无法破坏），转而求助于你，说道：“你老兄把这程序写写吧”。 辉辉希望能随时通过终端机发出指令 `Query u v`，向监测仪询问此时洞穴u和洞穴v是否连通。现在你要为他编写程序回答每一次询问。 已知在第一条指令显示之前，JSZX洞穴群中没有任何通道存在。 输入输出格式 输入格式 第一行为两个正整数n和m，分别表示洞穴的个数和终端机上出现过的指令的个数。 以下m行，依次表示终端机上出现的各条指令。每行开头是一个表示指令种类的字符串s（ Connect”、”Destroy”或者”Query”，区分大小写），之后有两个整数u和v (1≤u, v≤n) 分别表示两个洞穴的编号。 输出格式 对每个Query指令，输出洞穴u和洞穴v是否互相连通：是输出”Yes”，否则输出”No”。（不含双引号） 输入输出样例 输入样例 #1 200 5 Query 123 127 Connect 123 127 Query 123 127 Destroy 127 123 Query 123 127 输出样例 #1 No Yes No 输入样例 #2 3 5 Connect 1 2 Connect 3 1 Query 2 3 Destroy 1 3 Query 2 3 输出样例 #2 Yes No 说明 数据说明"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SDOI2009] E&D 题目描述 小 E 与小 W 进行一项名为 `E&D` 游戏。 游戏的规则如下：桌子上有 $2n$ 堆石子，编号为 $1 \\sim 2n$。其中，为了方便起见，我们将第 $2k-1$ 堆与第 $2k$ 堆（$1 \\le k \\le n$）视为同一组。第 i 堆的石子个数用一个正整数 $S_i$ 表示。 一次分割操作指的是，从桌子上任取一堆石子，将其移走。然后分割它同一组的另一堆石子，从中取出若干个石子放在被移走的位置，组成新的一堆。操作完成后，所有堆的石子数必须保证大于 0。显然，被分割的一堆的石子数至少要为 2。两个人轮流进行分割操作。如果轮到某人进行操作时，所有堆的石子数均为 1，则此时没有石子可以操作，判此人输掉比赛。 小 E 进行第一次分割。他想知道，是否存在某种策略使得他一定能战胜小 W。因此，他求助于小 F，也就是你，请你告诉他是否存在必胜策略。例如，假设初始时桌子上有 4 堆石子，数量分别为 $1,2,3,1$。小 E 可以选择移走第 1 堆，然后将第 2 堆分割（只能分出 1 个石子）。接下来，小 W 只能选择移走第 4 堆，然后将第 3 堆分割为 1 和 2。最后轮到小 E，他只能移走后两堆中数量为 1 的一堆，将另一堆分割为 1 和 1。这样，轮到小 W 时，所有堆的数量均为 1，则他输掉了比赛。故小 E 存在必胜策略。 输入输出格式 输入格式 **本题有多组数据。** 第一行一个整数 T，表示数据组数。 对于每组数据： 第一行一个整数 N，表示桌子上共有 N 堆石子，这里的 N 即为题目描述中的 $2n$。 第二行 N 个整数 $S_{1 \\dots N}$。 输出格式 对于每组数据，如果小 E 必胜，则一行一个字符串 `YES`，否则一行一个字符串 `NO`。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SDOI2009] Elaxia的路线 题目描述 最近，Elaxia 和 w** 的关系特别好，他们很想整天在一起，但是大学的学习太紧张了，他们必须合理地安排两个人在一起的时间。 Elaxia 和 w** 每天都要奔波于宿舍和实验室之间，他们 希望在节约时间的前提下，一起走的时间尽可能的长。 现在已知的是 Elaxia 和 w** 所在的宿舍和实验室的编号以及学校的地图：   地图上有 n 个路口，m 条路，经过每条路都需要一定的时间。 具体地说，就是要求无向图中，两对点间最短路的最长公共路径。 输入输出格式 输入格式 第一行两个正整数 $n,m$，表示点数和边数。    第二行四个正整数 $x_1,y_1,x_2,y_2$，分别表示 Elaxia 的宿舍和实验室及 w** 的宿舍和实验室的标号。 接下来 m 行，每行三个整数 $u,v,w$，表示 $u,v$之间有一条边，需要 w 的时间经过。 输出格式 一行一个整数表示答案。（即最长公共路径的长度） 输入输出样例 输入样例 #1 9 10 1 6 7 8 1 2 1 2 5 2 2 3 3 3 4 2 3 9 5 4 5 3 4 6 4 4 7 2 5 8 1 7 9 1 输出样例 #1 3 说明 【数据范围】     对于 $30\\%$ 的数据，$1\\le n \\le 100$；    对于 $60\\%$ 的数据，$1\\le n \\le 1000$；    对于 $100\\%$ 的数据，$1\\le n \\le 1500，1 \\leq m \\leq 3 \\times 10^5，1\\le w \\le 10^4$，输入数据保证没有重边和自环。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2015] 寿司晚宴 题目描述 为了庆祝 NOI 的成功开幕，主办方为大家准备了一场寿司晚宴。小 G 和小 W 作为参加 NOI 的选手，也被邀请参加了寿司晚宴。 在晚宴上，主办方为大家提供了 $n−1$ 种不同的寿司，编号 $1,2,3,\\ldots,n-1$，其中第 i 种寿司的美味度为 $i+1$。（即寿司的美味度为从 2 到 n） 现在小 G 和小 W 希望每人选一些寿司种类来品尝，他们规定一种品尝方案为不和谐的当且仅当：小 G 品尝的寿司种类中存在一种美味度为 x 的寿司，小 W 品尝的寿司中存在一种美味度为 y 的寿司，而 x 与 y 不互质。 现在小 G 和小 W 希望统计一共有多少种和谐的品尝寿司的方案（对给定的正整数 p 取模）。注意一个人可以不吃任何寿司。 输入输出格式 输入格式 输入文件的第 1 行包含 2 个正整数 $n, p$ 中间用单个空格隔开，表示共有 n 种寿司，最终和谐的方案数要对 p 取模。 输出格式 输出一行包含 1 个整数，表示所求的方案模 p 的结果。 输入输出样例 输入样例 #1 3 10000 输出样例 #1 9 输入样例 #2 4 10000 输出样例 #2 21 输入样例 #3 100 100000000 输出样例 #3 3107203 说明 【数据范围】"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SDOI2009] HH去散步 题目描述 HH有个一成不变的习惯，喜欢饭后百步走。所谓百步走，就是散步，就是在一定的时间 内，走过一定的距离。 但是同时HH又是个喜欢变化的人，所以他不会立刻沿着刚刚走来的路走回。 又因为HH是个喜欢变化的人，所以他每天走过的路径都不完全一样，他想知道他究竟有多 少种散步的方法。 现在给你学校的地图（假设每条路的长度都是一样的都是1），问长度为t，从给定地 点A走到给定地点B共有多少条符合条件的路径 输入输出格式 输入格式 第一行：五个整数N，M，t，A，B。其中N表示学校里的路口的个数，M表示学校里的 路的条数，t表示HH想要散步的距离，A表示散步的出发点，而B则表示散步的终点。 接下来M行，每行一组Ai，Bi，表示从路口Ai到路口Bi有一条路。数据保证Ai != Bi，但 不保证任意两个路口之间至多只有一条路相连接。 路口编号从0到N − 1。 同一行内所有数据均由一个空格隔开，行首行尾没有多余空格。没有多余空行。 答案模45989。 输出格式 一行，表示答案。 输入输出样例 输入样例 #1 4 5 3 0 0 0 1 0 2 0 3 2 1 3 2 输出样例 #1 4 说明 对于30%的数据，N ≤ 4，M ≤ 10，t ≤ 10。 对于100%的数据，N ≤ 50，M ≤ 60，t ≤ 2^30，0 ≤ A,B"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SDOI2009] SuperGCD 题目描述 Sheng bill 有着惊人的心算能力，甚至能用大脑计算出两个巨大的数的最大公约数！因此他经常和别人比赛计算最大公约数。有一天Sheng bill很嚣张地找到了你，并要求和你比赛，但是输给 Sheng bill 岂不是很丢脸！所以你决定写一个程序来教训他。 输入输出格式 输入格式 共两行，第一行一个整数 a，第二行一个整数 b。 输出格式 一行，表示 a 和 b 的最大公约数。 输入输出样例 输入样例 #1 12 54 输出样例 #1 6 说明 #### 数据规模与约定 - 对于 $20\\%$ 的数据，有 $0<a,b\\le 10^{18}$。 - 对于 $100\\%$ 的数据，有 $0<a,b\\le 10^{10000}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SDOI2009] 晨跑 题目描述 Elaxia 最近迷恋上了空手道，他为自己设定了一套健身计划，比如俯卧撑、仰卧起坐等等，不过到目前为止，他坚持下来的只有晨跑。  现在给出一张学校附近的地图，这张地图中包含 N 个十字路口和 M 条街道，Elaxia 只能从 一个十字路口跑向另外一个十字路口，街道之间只在十字路口处相交。 Elaxia 每天从寝室出发跑到学校，保证寝室编号为 1，学校编号为 N。  Elaxia 的晨跑计划是按周期（包含若干天）进行的，由于他不喜欢走重复的路线，所以在一个周期内，每天的晨跑路线都不会相交（在十字路口处），寝室和学校不算十字路口。 Elaxia 耐力不太好，他希望在一个周期内跑的路程尽量短，但是又希望训练周期包含的天数尽量长。 除了练空手道，Elaxia 其他时间都花在了学习和找 MM 上面，所有他想请你帮忙为他设计 一套满足他要求的晨跑计划。 存在 $1\\rightarrow n$ 的边存在。这种情况下，这条边只能走一次。 输入输出格式 输入格式 第一行两个整数 $N,M$，表示十字路口数和街道数。  接下来 M 行，每行 3 个数 $a,b,c$，表示路口 a 和路口 b 之间有条长度为 c 的街道（单向）。 输出格式 一行两个整数，最长周期的天数和满足最长天数的条件下最短的路程度。 输入输出样例 输入样例 #1 7 10 1 2 1 1 3 1 2 4 1 3 4 1 4 5 1 4 6 1 2 5 5 3 6 6 5 7 1 6 7 1 输出样例 #1 2 11 说明 - 对于 $30\\%$ 的数据，$N\\le 20，M \\le 120$。 - 对于 $100\\%$ 的数据，$N\\le 200，M\\le 2\\times 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SDOI2008] 沙拉公主的困惑 题目描述 大富翁国因为通货膨胀，以及假钞泛滥，政府决定推出一项新的政策：现有钞票编号范围为 1 到 N 的阶乘，但是，政府只发行编号与 $M!$ 互质的钞票。房地产第一大户沙拉公主决定预测一下大富翁国现在所有真钞票的数量。现在，请你帮助沙拉公主解决这个问题，由于数量可能非常大，你只需计算出答案对 R 取模后的结果即可。  输入输出格式 输入格式 第一行为两个整数 T 和 R，其中 T 为该组中测试数据数目，R 为模数。 接下来 T 行，每行一对整数 N 和 M，具体意义见题目描述。  输出格式 共 T 行，对于每一对 N 和 M，输出 $[1, N!]$ 中与 $M!$ 互质的数的数量对 R 取模后的值。   输入输出样例 输入样例 #1 1 11 4 2 输出样例 #1 1 说明 对于 $100\\% $ 的数据，$1\\leq M\\leq N\\leq 10^7，1\\leq T\\leq 10^4，2\\leq R\\leq 10^9+10$ 且 R 为质数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SDOI2009] 细胞探索 题目描述 生物课上，老师开始为同学们介绍细胞。为了加深同学们的印象，老师在一张N×M的矩阵中定义了一种细胞，矩阵中仅有井号“#”和点“.”： 细胞由细胞核、细胞质及细胞膜构成。细胞核是一个4连通（上下左右相连）的全为“#”的连通块，它必须实心，即不能存在一个4连通的“.”连通块被其完全包围（所谓完全包围指的是，这个“.”连通块不能位于矩阵边界相邻，且它的4相邻格子均属于包含它的“#”连通块）。细胞膜是一个8连通（上下左右，以及4个对角方向）的全为“#”的非实心连通块。细胞膜仅包围一个4连通的区域，且这个区域内有且仅有一个细胞核，这个区域剩下的位置全为“.”。 所有连通块必须极大化，即一个8连通块周围不能找到一个“#”与这个连通块的任意一个“#”8连通；同样，对于一个4连通块周围不能找到一个“#”与这个连通块的任意一个“#”4连通。 现在，老师画了一幅图画，并让小E回答图画中一共有几个细胞，并把图画中不属于任何一个细胞的“#”改成“.”。 输入输出格式 输入格式 输入文件explore.in的第一行包含两个用空格分隔的正整数N和M，表示矩阵的高和长。 接下来一个N行M列的矩阵，矩阵中仅含井号“#”和点“.”，保证没有多余字符。 输出格式 输出文件explore.out第一行包含一个整数，表示输入的矩阵中的细胞数。 接下来一个N行M列的矩阵，矩阵中仅含井号“#”和点“.”，表示更改后的图画。 输入输出样例 输入样例 #1 12 13  .###..#####..  #...#.#....#.  #.#.#.#..#.#.  #...#..#...#.  .###.#..###..  ....#..##...#  ..........###  ##########..#  #...........#  #.###...###.#  #...........#  #############  输出样例 #1 1  ......#####..  ......#....#.  ......#..#.#.  .......#...#.  ........###..  .......##....  .............  .............  .............  .............  .............  .............  输入样例 #2 9 14  #########.....  #.......#....#  #.#####.#...#.  #.#...#.#..#..  #.#.#.#.#.#..#  #.#...#.#..#..  #.#####.#...#.  #.......#....#  #########.....  输出样例 #2 1  ..............  ..............  ..#####.......  ..#...#.......  ..#.#.#.......  ..#...#.......  ..#####.......  ..............  ..............  输入样例 #3 7 15  #######.#######  #.....#.#.....#  #.###.#.#.###.#  #.#.#.#.#.#...#  #.###.#.#.###.#  #.....#.#.....#  #######.#######  输出样例 #3 1  ........#######  ........#.....#  ........#.###.#  ........#.#...#  ........#.###.#  ........#.....#  ........#######  说明 对于20%的数据，满足1 ≤ N, M ≤ 20。 另有20%的数据，满足所有“#”都属于某一个正确的细胞。 对于100%的数据，满足1 ≤ N, M ≤ 1,000。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SDOI2009] 学校食堂 题目描述 小F 的学校在城市的一个偏僻角落，所有学生都只好在学校吃饭。学校有一个食堂，虽然简陋，但食堂大厨总能做出让同学们满意的菜肴。当然，不同的人口味也不一定相同，但每个人的口味都可以用一个非负整数表示。 由于人手不够，食堂每次只能为一个人做菜。做每道菜所需的时间是和前一道菜有关的，若前一道菜的对应的口味是a，这一道为b，则做这道菜所需的时间为（a or b）-（a and b），而做第一道菜是不需要计算时间的。其中，or 和and 表示整数逐位或运算及逐位与运算，C语言中对应的运算符为“|”和“&”。 学生数目相对于这个学校还是比较多的，吃饭做菜往往就会花去不少时间。因此，学校食堂偶尔会不按照大家的排队顺序做菜，以缩短总的进餐时间。 虽然同学们能够理解学校食堂的这种做法，不过每个同学还是有一定容忍度的。也就是说，队伍中的第i 个同学，最多允许紧跟他身后的Bi 个人先拿到饭菜。一旦在此之后的任意同学比当前同学先拿到饭，当前同学将会十分愤怒。因此，食堂做菜还得照顾到同学们的情绪。 现在，小F 想知道在满足所有人的容忍度这一前提下，自己的学校食堂做完这些菜最少需要多少时间。 输入输出格式 输入格式 第一行包含一个正整数C，表示测试点的数据组数。 每组数据的第一行包含一个正整数N，表示同学数。 每组数据的第二行起共N行，每行包含两个用空格分隔的非负整数Ti和Bi，表示按队伍顺序从前往后的每个同学所需的菜的口味和这个同学的忍受度。 每组数据之间没有多余空行。 输出格式 包含C行，每行一个整数，表示对应数据中食堂完成所有菜所需的最少时间。 输入输出样例 输入样例 #1 2 5 5 2 4 1 12 0 3 3 2 2 2 5 0 4 0 输出样例 #1 16 1 说明 对于第一组数据： 同学1允许同学2或同学3在他之前拿到菜；同学2允许同学3在他之前拿到菜；同学3比较小气，他必须比他后面的同学先拿菜…… 一种最优的方案是按同学3、同学2、同学1、同学4、同学5做菜，每道菜所需的时间分别是0、8、1、6及1。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SHOI2009] 舞会 题目描述 OItown要举办了一年一度的超级舞会了，作为主办方的Constantine为了使今年的舞会规模空前，他邀请了许多他的好友和同学去。舞会那天，恰好来了n个男生n个女生。Constantine发现，一般情况下，舞伴之间，总是男伴总是比女伴长得高，不过，偶尔也是有特殊情况的。所以，Constantine现在想知道，如果把这2n个人恰好配成n对舞伴，有多少种搭配方法，而且他要求最多只有k对舞伴之间女伴比男伴高。现在，Constantine需要参加SHTSC的你帮助他算出这个答案，当然啦，他会先告诉你这2n个同学的身高。 输入输出格式 输入格式 第一行：两个整数n、k，含义如问题中所示。 第2行到第n+1行：n个整数，表示n个男生的身高。 第n+2行到第2n+1行：n个整数，表示n个女生的身高。 表示身高的正整数，都不超过 。 输出格式 输出文件只有一个，即满足n对舞伴中最多只有k对舞伴之间女伴比男伴高的男女搭配方案数。 输入输出样例 输入样例 #1 3 0 178 188 176 168 178 170 输出样例 #1 4 说明 评分 如果你的输出文件与标准答案完全相符，你将获得该测试点的全部分数，否则得零分。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SHOI2007] 书柜的尺寸 题目描述 Tom 不喜欢那种一字长龙式的大书架，他只想要一个小书柜来存放他的系列工具书。Tom 打算把书柜放在桌子的后面，这样需要查书的时候就可以不用起身离开了。 显然，这种书柜不能太大，Tom 希望它的体积越小越好。另外，出于他的审美要求，他只想要一个三层的书柜。为了物尽其用，Tom 规定每层必须至少放一本书。现在的问题是，Tom 怎么分配他的工具书，才能让木匠造出最小的书柜来呢？  Tom很快意识到这是一个数学问题。每本书都有自己的高度 $h_i$ 和厚度 $t_i$。我们需要求的是一个分配方案，也就是要求把所有的书分配在 $S_1、S_2$ 和 $S_3$ **三个非空集合**里面的一个，不重复也不遗漏，那么，很明显，书柜正面表面积（S）的计算公式就是：   $$S=\\left(\\sum_{j=1}^3 \\max_{i \\in S_j} h_i\\right) \\times \\left(\\max_{j=1}^3 \\sum_{i \\in S_j} t_i\\right) $$ 由于书柜的深度是固定的（显然，它应该等于那本最宽的书的长度），所以要求书柜的体积最小就是**要求 S 最小**。Tom 离答案只有一步之遥了。不过很遗憾，Tom 并不擅长于编程，于是他邀请你来帮助他解决这个问题。 输入输出格式 输入格式 第一行一个整数 n，代表书本的个数。 接下来 n 行每行有两个整数 $h_i$ 和 $t_i$，代表每本书的高度和厚度。 输出格式 只有一行，即输出最小的 S。 输入输出样例 输入样例 #1 4 220 29 195 20 200 9 180 30 输出样例 #1 18000 说明 对于全部数据，$3 \\leq n \\leq 70，150 \\leq h_i \\leq 300，5 \\leq t_i \\leq 30$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:对于 `A` 操作，每次还需输出删掉的元素个数。 题目描述 PP 大厦有一间空的礼堂，可以为企业或者单位提供会议场地。 这些会议中的大多数都需要连续几天的时间（个别的可能只需要一天），不过场地只有一个，所以不同的会议的时间申请不能够冲突。也就是说，前一个会议的结束日期必须在后一个会议的开始日期之前。所以，如果要接受一个新的场地预约申请，就必须拒绝掉与这个申请相冲突的预约。 一般来说，如果 PP 大厦方面事先已经接受了一个会场预约（例如从 $10$ 日到 $15$ 日），就不会再接受与之相冲突的预约（例如从 $12$ 日到 $17$ 日）。 不过，有时出于经济利益，PP 大厦方面有时会为了接受一个新的会场预约，而拒绝掉一个甚至几个之前预订的预约。 于是，礼堂管理员 QQ 的笔记本上经常记录着这样的信息：（本题中为方便起见，所有的日期都用一个整数表示）例如，如果一个为期 $10$ 天的会议从 $90$ 日开始到 $99$ 日，那么下一个会议最早只能在 $100$ 日开始。（此处前后矛盾，若无法理解请参考形式化描述。） 最近，这个业务的工作量与日俱增，礼堂的管理员 QQ 希望参加 SHTSC 的你替他设计一套计算机系统，方便他的工作。这个系统应当能执行下面两个操作： `A` 操作：有一个新的预约是从 $start$ 日到 $end$ 日，并且拒绝掉所有与它相冲突的预约。执行这个操作的时候，你的系统应当返回为了这个新预约而拒绝掉的预约个数，以方便 QQ 与自己的记录相校对。 `B` 操作：请你的系统返回当前的仍然有效的预约的总数。 输入输出格式 输入格式 第一行一个正整数 n，表示操作个数。   接下来 n 行，每行表示一个操作，都是上面两种中的一个。 输出格式 输出 n 行，每行一个整数，表示对应操作的答案。 输入输出样例 输入样例 #1 6 A 10 15 A 17 19 A 12 17 A 90 99 A 11 12 B 输出样例 #1 0 0 2 0 1 2 说明 【数据范围】   对于 $100\\%$ 的数据，$1\\le n \\le 2\\times 10^5，1\\le l \\le r \\le 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:“陛下息怒，干我们的这行经常莫名其妙地被问到和 OI 有关的题目，我也是为了预防万一啊！” 王者的尊严受到了伤害，这是不可容忍的。 题目描述 看来一般的难题是难不倒这位园丁的，国王最后打算用车轮战来消耗他的实力： “年轻人，在我的花园里有 n 棵树，每一棵树可以用一个整数坐标来表示，一会儿，我的 m 个骑士们会来轮番询问你某一个矩阵内有多少树，如果你不能立即答对，你就准备走人吧！”说完，国王气呼呼地先走了。 这下轮到园丁傻眼了，他没有准备过这样的问题。所幸的是，作为“全国园丁保护联盟”的会长——你，可以成为他的最后一根救命稻草。 输入输出格式 输入格式 第一行有两个整数 $n, m$，分别表示树木个数和询问次数。 接下来 n 行，每行两个整数 $x, y$，表示存在一棵坐标为 $(x, y)$ 的树。有可能存在两棵树位于同一坐标。 接下来 m 行，每行四个整数 $a, b, c, d$，表示查询以 $(a, b)$ 为左下角，$(c, d)$ 为右上角的矩形内部（包括边界）有多少棵树。 输出格式 对于每个查询，输出一行一个整数表示答案。 输入输出样例 输入样例 #1 3 1 0 0  0 1 1 0 0 0 1 1 输出样例 #1 3 说明 #### 数据规模与约定 - 对于 $30\\%$ 的数据，保证 $n, m \\leq 10$。 - 对于 $100\\%$ 的数据，保证 $0 \\leq n \\leq 5 \\times 10^5，1 \\leq m \\leq 5 \\times 10^5，0 \\leq x, y, a, b, c, d \\leq 10^7，a \\leq c，b \\leq d$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SHOI2007] 交通网络 题目描述 著名的城市交通规划师L.Serenade为OItown的各个城堡之间设计了一套的地铁交通网络。每一条地铁线路都用来双向连通两个城堡。因为是建在地下的不同深度，所以这些地铁线路是可以“交叉”的。 OItown的居民们的生活和工作都在不同的城堡中进行，于是，每个OItown的居民都要在每天早晨从家出发，乘地铁去工作，当然地铁换乘是允许的。不过每个居民都会选择换乘次数最少的乘车方式。如果有多种乘车方式，这些乘车方式所需要的换乘次数一样，那么居民每天都会等概率的随机选择其中一种。 现在L.Serenade想请你为他计算出，每天每条地铁线路在早晨的平均客流量。他会告诉你，每个居民的家和工作地址，还有他设计的地铁交通网络的全部信息。 当然L.Serenade保证，交通网络能把城市连为一体，而且任意两个城堡之间的最优乘车方式（即换成次数最少的）不超过2^63-1种。 输入输出格式 输入格式 输入文件的第一行有两个整数n、m，分别表示OItown里的城堡数（这些城堡用1.2.3...n标号）和地铁线路的数量。 接下去m行，每行包含两个整数，x、y，表示这两个城堡之间有一条地铁线路。注意，两个城堡之间最多只有一条地铁线路，且每条地铁线路只被输入文件描述一次。 最后的n行，每行有n个整数。 第i行的第j个非负整数Ci，j表示每天早晨有Ci，j个OItown的居民要从i城堡去j城堡。输入数据保证Ci，i=0。 输出格式 输出文件有m行，每行依次表示每条地铁线路每天早晨的平均客流。精确到小数点后一位。整数也应输出一位小数，例如1应输出为1.0。 输入输出样例 输入样例 #1 6 7 1 2 1 3 2 4 2 5 3 5 4 6 5 6 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 输出样例 #1 0.7 0.3 0.3 0.3 0.3 0.3 0.7 说明 样例说明：从城堡1到城堡六的使得换乘次数最少的乘车方式共有3种：1-2-4-6；1-2-5-6；1-3-5-6。所以每个人都有1/3的概率选择这其中的每一种。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[SDOI2009] Bill的挑战 题目描述 Sheng_bill 不仅有惊人的心算能力，还可以轻松地完成各种统计。在昨天的比赛中，你凭借优秀的程序与他打成了平局，这导致 Sheng_bill  极度的不满。于是他再次挑战你。这次你可不能输。 这次，比赛规则是这样的： 给出 N 个长度相同的字符串（由小写英文字母和 `?` 组成），$S_1,S_2,\\dots,S_N$，求与这 N 个串中的刚好 K 个串匹配的字符串 T 的个数，答案对 $1000003$ 取模。 若字符串 $S_x(1\\le x\\le N)$ 和 T 匹配，满足以下条件： 1. $|S_x|=|T|$。 2. 对于任意的 $1\\le i\\le|S_x|$，满足 $S_x[i]= \\texttt{?}$ 或者 $S_x[i]=T[i]$。 其中 T 只包含小写英文字母。 输入输出格式 输入格式 **本题包含多组数据**。 第一行一个整数 T，表示数据组数。  对于每组数据，第一行两个整数，N 和 K。  接下来 N 行，每行一个字符串 $S_i$。 输出格式 每组数据输出一行一个整数，表示答案。 输入输出样例 输入样例 #1 5 3 3 ???r??? ??????? ??????? 3 4 ??????? ?????a? ??????? 3 3 ??????? ?a??j?? ????aa? 3 2 a?????? ??????? ??????? 3 2 ??????? ???a??? ????a?? 输出样例 #1 914852 0 0 871234 67018 说明 ### 数据规模与约定 - 对于 $30\\%$ 的数据，$N\\le5，|S_i|\\le20$； - 对于 $70\\%$ 的数据，$N\\le13，|S_i|\\le30$； - 对于 $100\\%$ 的数据，$1\\le T\\le 5，1\\le N \\le15，1\\le|S_i|\\le50$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:> 追逐影子的人，自己就是影子 —— 荷马 题目描述 Allison 最近迷上了文学。她喜欢在一个慵懒的午后，细细地品上一杯卡布奇诺，静静地阅读她爱不释手的《荷马史诗》。但是由《奥德赛》和《伊利亚特》 组成的鸿篇巨制《荷马史诗》实在是太长了，Allison 想通过一种编码方式使得它变得短一些。 一部《荷马史诗》中有 n 种不同的单词，从 1 到 n 进行编号。其中第 i 种单词出现的总次数为 $w_i$。Allison 想要用 k 进制串 $s_i$ 来替换第 i 种单词，使得其满足如下要求： 对于任意的 $1\\leq i, j\\leq n$ ，$i\\ne j$ ，都有：$s_i$ 不是 $s_j$ 的前缀。 现在 Allison 想要知道，如何选择 $s_i$，才能使替换以后得到的新的《荷马史诗》长度最小。在确保总长度最小的情况下，Allison 还想知道最长的 $s_i$ 的最短长度是多少？ 一个字符串被称为 k 进制字符串，当且仅当它的每个字符是 0 到 $k-1$ 之间（包括 0 和 $k-1$ ）的整数。 字符串 $str1$ 被称为字符串 $str2$ 的前缀，当且仅当：存在 $1 \\leq t\\leq m$ ，使得 $str1 = str2[1..t]$。其中，m 是字符串 $str2$ 的长度，$str2[1..t]$ 表示 $str2$ 的前 t 个字符组成的字符串。 输入输出格式 输入格式 输入的第 1 行包含 2 个正整数 $n, k$ ，中间用单个空格隔开，表示共有 n 种单词，需要使用 k 进制字符串进行替换。 接下来 n 行，第 $i + 1$ 行包含 1 个非负整数 $w_i$，表示第 i 种单词的出现次数。 输出格式 输出包括 2 行。 第 1 行输出 1 个整数，为《荷马史诗》经过重新编码以后的最短长度。 第 2 行输出 1 个整数，为保证最短总长度的情况下，最长字符串 $s_i$ 的最短长度。 输入输出样例 输入样例 #1 4 2 1 1 2 2 输出样例 #1 12 2 输入样例 #2 6 3 1 1 3 3 9 9 输出样例 #2 36 3 说明 #### 【样例解释】 #### 样例 1 解释 用 $X(k)$ 表示 X 是以 k 进制表示的字符串。 一种最优方案：令 $00(2)$ 替换第 1 种单词， $01(2)$ 替换第 2 种单词， $10(2)$ 替换第 3 种单词，$11(2)$ 替换第 4 种单词。在这种方案下，编码以后的最短长度为： $1 × 2 + 1 × 2 + 2 × 2 + 2 × 2 = 12$ 最长字符串 $s_i$ 的长度为 2 。 一种非最优方案：令 $000(2)$ 替换第 1 种单词，$001(2)$ 替换第 2 种单词，$01(2)$ 替换第 3 种单词，$1(2)$ 替换第 4 种单词。在这种方案下，编码以后的最短长度为： $1 × 3 + 1 × 3 + 2 × 2 + 2 × 1 = 12$ 最长字符串 $s_i$ 的长度为 3 。与最优方案相比，文章的长度相同，但是最长字符串的长度更长一些。 #### 样例 2 解释 一种最优方案：令 $000(3)$ 替换第 1 种单词，$001(3)$ 替换第 2 种单词，$01(3)$ 替换第 3 种单词， $02(3)$ 替换第 4 种单词， $1(3)$ 替换第 5 种单词， $2(3)$ 替换第 6 种单词。 #### 【数据规模与约定】 所有测试数据的范围和特点如下表所示（所有数据均满足 $0 < w_i \\leq 10^{11}$）： | 测试点编号 |  n 的规模  | k 的规模 |            备注            | | :--------: | :----------: | :--------: | :------------------------: | |    1     |    $n=3$     |   $k=2$    |                            | |    2     |    $n=5$     |   $k=2$    |                            | |    3     |    $n=16$    |   $k=2$    |     所有 $w_i$ 均相等      | |    4     |  $n=1\\,000$  |   $k=2$    | $w_i$ 在取值范围内均匀随机 | |    5     |  $n=1\\,000$  |   $k=2$    |                            | |    6     | $n=100\\,000$ |   $k=2$    |                            | |    7     | $n=100\\,000$ |   $k=2$    |     所有 $w_i$ 均相等      | |    8     | $n=100\\,000$ |   $k=2$    |                            | |    9     |    $n=7$     |   $k=3$    |                            | |    $10$    |    $n=16$    |   $k=3$    |     所有 $w_i$ 均相等      | |    $11$    |  $n=1\\,001$  |   $k=3$    |     所有 $w_i$ 均相等      | |    $12$    | $n=99\\,999$  |   $k=4$    |     所有 $w_i$ 均相等      | |    $13$    | $n=100\\,000$ |   $k=4$    |                            | |    $14$    | $n=100\\,000$ |   $k=4$    |                            | |    $15$    |  $n=1\\,000$  |   $k=5$    |                            | |    $16$    | $n=100\\,000$ |   $k=7$    | $w_i$ 在取值范围内均匀随机 | |    $17$    | $n=100\\,000$ |   $k=7$    |                            | |    $18$    | $n=100\\,000$ |   $k=8$    | $w_i$ 在取值范围内均匀随机 | |    $19$    | $n=100\\,000$ |   $k=9$    |                            | |    $20$    | $n=100\\,000$ |   $k=9$    |                            | #### 【提示】 选手请注意使用 64 位整数进行输入输出、存储和计算。 #### 【评分方式】 对于每个测试点： - 若输出文件的第 1 行正确，得到该测试点 $40\\%$ 的分数； - 若输出文件完全正确，得到该测试点 $100\\%$ 的分数。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 在Internet网络中的每台电脑并不是直接一对一连通的，而是某些电脑之间存在单向的网络连接，也就是说存在A到B的连接不一定存在B到A的连接，并且有些连接传输速度很快，有些则很慢，所以不同连接传输所花的时间是有大有小的。另外，如果存在A到B的连接的同时也存在B到A的连接的话，那么A和B实际上处于同一局域网内，可以通过本地传输，这样花费的传输时间为0。 现在小Z告诉你整个网络的构成情况，他希望知道从他的电脑（编号为1），到小X的电脑（编号为n）所需要的最短传输时间。 输入输出格式 输入格式 第一行两个整数n, m， 表示有n台电脑，m个连接关系。 接下来m行，每行三个整数u,v,w；表示从电脑u到电脑v传输信息的时间为w。 输出格式 输出文件仅一行为最短传输时间。 输入输出样例 输入样例 #1 3 2 1 2 1 2 3 1 输出样例 #1 2 输入样例 #2 5 5 1 2 1 2 3 6 3 4 1 4 2 1 3 5 2 输出样例 #2 3 说明 对于  $40\\%$ 的数据， $1\\leq n\\leq 10^3$, $1\\leq m\\leq 10^4$。 对于  $70\\%$ 的数据， $1\\leq n\\leq 5 \\times 10^3$， $1\\leq m\\leq 10^5$。 对于  $100\\%$ 的数据， $1\\leq n\\leq 2 \\times 10^5$， $1\\leq m\\leq 10^6$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:选学霸 题目描述 老师想从 n 名学生中选 m 人当学霸，但有 k 对人实力相当，如果实力相当的人中，一部分被选上，另一部分没有，同学们就会抗议。所以老师想请你帮他求出他该选多少学霸，才能既不让同学们抗议，又与原来的 m 尽可能接近。 输入输出格式 输入格式 第一行，三个正整数 $n,m,k$。 接下来 k 行，每行 2 个数，表示一对实力相当的人的编号（编号为 $1,2,\\cdots n$）。 输出格式 共一行，表示既不让同学们抗议，又与原来的 m 尽可能接近的选出学霸的数目。 如果有两种方案与 m 的差的绝对值相等，选较小的一种。 输入输出样例 输入样例 #1 4 3 2 1 2 3 4 输出样例 #1 2 说明 对于 $100\\%$ 的数据，满足 $1 \\le n,m \\le 2 \\times 10^4$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 这天，Hz大大心血来潮，吐了n个不同的泡泡玩（保证没有重复的泡泡）。因为他还要写作业，所以他请你帮他把这些泡泡排序成树（左子树<=根<右子树）。输出它的后序遍历。 输入输出格式 输入格式 共2行。 第一行，1个整数n。(1<=n<=300000) 第二行，n个数，代表泡泡的大小。 输出格式 共2行。 第一行，输出树的深度。 第二行，输出数的后序遍历。 详见样例输出。 输入输出样例 输入样例 #1 8 1 4 3 9 10 35 2 7 输出样例 #1 deep=5 2 3 7 35 10 9 4 1 说明 水题一道。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:lanzerb 的部落在 A 国的上部，他们不满天寒地冻的环境，于是准备向A国的下部征战来获得更大的领土。 题目描述 A 国是一个 $M\\times N$ 的矩阵，其中某些地方是城镇，某些地方是高山深涧无人居住。lanzerb 把自己的部落分成若干支军队，他们约定： 每支军队可以从任意一个城镇出发，并只能从上往向下征战，不能回头。途中只能经过城镇，不能经过高山深涧。 如果某个城镇被某支军队到过，则其他军队不能再去那个城镇了。 每支军队都可以在任意一个城镇停止征战。 所有军队都很奇怪，他们走的方法有点像国际象棋中的马。不过马每次只能走 $1\\times2$ 的路线，而他们只能走 $R\\times C$ 的路线。 lanzerb 的野心使得他的目标是统一全国，但是兵力的限制使得他们在配备人手时力不从心。假设他们每支军队都能顺利占领这支军队经过的所有城镇，请你帮 lanzerb 算算至少要多少支军队才能完成统一全国的大业。 输入输出格式 输入格式 第一行包含 4 个整数 $M,N,R,C$，意义见问题描述。接下来 M 行每行一个长度为 N 的字符串。如果某个字符是 `.` 表示这个地方是城镇；如果这个字符是 `x` 则表示这个地方是高山深涧。 输出格式 输出一个整数，表示最少的军队个数。 输入输出样例 输入样例 #1 3 3 1 2 ... .x. ... 输出样例 #1 4 输入样例 #2 5 4 1 1 .... ..x. ...x .... x... 输出样例 #2 5 说明 #### 数据规模与约定 对于 $100\\%$ 的数据，$1\\le M,N\\le 50,1\\le R,C\\le 10$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小Z最近在研究数列，他需要知道在他所研究的数列中，最大的数是多少（Max），最小的数是多少（Min），最大的数的最小的数次幂是多少（Max^Min），所有数的乘积是多少。要知道，这样的问题是肯定难不倒小Z的。但是，最近小Z突发奇想，想要研究下这个数列的更深层的性质，所以他决定不断的从这个数列中删去一些数，每次删除后都研究下当前数列。由于数列项数很大，这给小Z带来了很大的麻烦，于是小Z请你帮他写一个程序，来完成下列操作。 题目描述 你需要维护一个可重集，支持五种操作： - `D x` 表示删除 x，保证 x 一定存在。若有多个只用删除一个。 - `B` 询问集合中最大值。 - `S` 询问集合中最小值。 - `M` 设集合中最大值为 a，最小值为 b，询问 $a^b \\bmod 317847191$。 - `T` 询问数列中所有数的乘积，对 $317847191$ 取模。 对于所有询问保证集合非空。 输入输出格式 输入格式 第一行两个正整数 $n,m$，表示初始集合大小和操作数。     第二行 n 个正整数 $a_i$，表示初始集合。   接下来 m 行，每行表示一个操作。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小Z的游戏分队 题目描述 小Z受不了寂寞，准备举办一次DOTA比赛，为了能让ACM班全部都参加比赛，他还特制了一张DOTA地图能够支持任意多人打任意多人。 现在问题来了，怎么把这么多人分成两队？小Z的想法是，每个人报上自己愿意同队的同学，接着小Z会按如下要求将所有人分为两队： 对任意同学甲，和同学甲同队的人，必须都是同学甲愿意同队的同学。 小Z希望两队的人数差尽量小，如果这种分组不存在，那么输出No solution。 输入输出格式 输入格式 第1行为N，表示一共有多少个学生。 之后2~N+1行，每行表示这个学生信任的同学的名单，以0结束。 输出格式 1行，如果解存在，输出两队的人数，将人数比较小的那队放在前面；如果解不存在，输出No solution。 输入输出样例 输入样例 #1 5 3 4 5 0 1 3 5 0 2 1 4 5 0 2 3 5 0 1 2 3 4 0 输出样例 #1 No solution 输入样例 #2 5 2 3 5 0 1 4 5 3 0 1 2 5 0 1 2 3 0 4 3 2 1 0 输出样例 #2 2 3 说明 【数据规模】 对于 30% 的数据，N<=10； 对于 100% 的数据，N<=2000。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO11DEC] RoadBlock S / [USACO14FEB]Roadblock G/S 题目描述 每天早晨，FJ从家中穿过农场走到牛棚。农场由 N 块农田组成，农田通过 M 条双向道路连接，每条路有一定长度。FJ 的房子在 1 号田，牛棚在 N 号田。没有两块田被多条道路连接，以适当的路径顺序总是能在农场任意一对田间行走。当FJ从一块田走到另一块时，总是以总路长最短的道路顺序来走。 FJ 的牛呢，总是不安好心，决定干扰他每天早晨的计划。它们在 M 条路的某一条上安放一叠稻草堆，使这条路的长度加倍。牛希望选择一条路干扰使得FJ 从家到牛棚的路长增加最多。它们请你设计并告诉它们最大增量是多少。 输入输出格式 输入格式 第 1 行：两个整数 N, M。 第 2 到 M+1 行：第 i+1 行包含三个整数 A\\_i, B\\_i, L\\_i，A\\_i 和 B\\_i 表示道路 i 连接的田的编号，L\\_i 表示路长。 输出格式 第 1 行：一个整数，表示通过使某条路加倍而得到的最大增量。 输入输出样例 输入样例 #1 5 7 2 1 5 1 3 1 3 2 8 3 5 7 3 4 3 2 4 7 4 5 2 输出样例 #1 2 说明 【样例说明】 若使 3 和 4 之间的道路长加倍，最短路将由 1-3-4-5 变为 1-3-5。 【数据规模和约定】 对于 30%的数据，N <= 70，M <= 1,500。 对于 100%的数据，1 <= N <= 100，1 <= M <= 5,000，1 <= L\\_i <= 1,000,000。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 我们伟大的 KK 最近一段时间突然迷上了电影，但是他从来不去电影院，因为他口袋里没有一分钱，更因为没人陪他去！但是 KK 不是这么容易就会屈服于命远的，他从爸爸那里“偷”来了电脑，没日没夜的进入了疯狂刷电影状态。 显然我们的 KK 在任何情况下都会出现问题的：KK 习惯于用“百度影音”这个神奇的软件。众所周知，这个软件具备一个牛犇的功能，他可以一边看一边下载，然后，KK 每次都不会在线观看，而是连着 wifi（哇\\~\\~还说没钱！）看，然后的然后KK发现电脑开始变得卡起来了，为了在爸爸突击检查时能够准确准时的将电脑关闭归位，KK 不得不干起了电脑修理师的工作。 KK 翻查了注册表（这都懂？！牛~），发现罪魁祸首竟是存在于一个内存区域中的一个正方形方阵。现在我们的 KK 简单的称呼这种方阵为“内存杀手”，他对于这个“内存杀手”的定义是边长大于 1，且在旋转了 $180\\degree$ 之后方阵仍与原来保持不变，如： $$ \\begin{bmatrix} 0 & 0 \\\\ 0 & 0 \\end{bmatrix}, \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}, \\begin{bmatrix} 1 & 0 & 1 \\\\  1 & 1 & 1 \\\\ 1 & 0 & 1 \\end{bmatrix} $$ 当然，一个内存区域中“内存杀手”可能不止一个的，现在我们的 KK 想找出这个方阵中最大的“内存杀手”的边长。 输入输出格式 输入格式 共 $N+1$ 行，第一行两个整数 $N,M$，表示内存矩阵的大小。第 $2 \\sim N+1$ 行，每行 M 个字符表示内存矩阵。 输出格式 共一行，即最大的内存杀手边长；若不存在，则输出 $-1$。 输入输出样例 输入样例 #1 3 6 101010 111001 101001 输出样例 #1 3 说明 ### 数据范围及约定 - 对于 $30\\%$ 的数据 $0<N，M \\le 100$； - 对于 $60\\%$ 的数据 $0<N，M \\le 200$； - 对于 $100\\%$ 的数据 $0<N，M \\le 300$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[NOI2012] 骑行川藏 题目描述 蛋蛋非常热衷于挑战自我，今年暑假他准备沿川藏线骑着自行车从成都前往拉萨。 川藏线的沿途有着非常美丽的风景，但在这一路上也有着很多的艰难险阻，路况变化多端，而蛋蛋的体力十分有限,因此在每天的骑行前设定好目的地，同时合理分配好自己的体力是一件非常重要的事情。 由于蛋蛋装备了一辆非常好的自行车，因此在骑行过程中可以认为他仅在克服风阻做功（不受自行车本身摩擦力以及自行车与地面的摩擦力影响）。 某一天他打算骑 n 段路，每一段内的路况可视为相同：对于第 i 段路,我们给出有关这段路况的 3 个参数 $s_i,k_i,v_i'$，其中 $s_i$ 表示这段路的长度，$k_i$ 表示这段路的风阻系数，$v_i'$ 表示这段路上的风速（$v_i'\\gt 0$ 表示在这段路上他遇到了顺风，反之则意味着他将受逆风影响）。 若某一时刻在这段路上骑车速度为 v，则他受到的风阻 大小为 $F=k_i(v-v_i')^2$（这样若在长度为 s 的路程内保持骑行速度 v 不变,则他消耗能量（做功）$E=k_i(v-v_i')^2s$ ）。 设蛋蛋在这天开始时的体能值是 $E_U$，请帮助他设计一种行车方案,使他在有限的体力内用最短的时间到达目的地。请告诉他最短的时间 T 是多少。 输入输出格式 输入格式 第一行包含一个正整数 n 和一个实数 $E_U$，分别表示路段的数量以及蛋蛋的体能值。 接下来 n 行分别描述 n 个路段，每行有 3 个实数 $s_i,k_i,v_i'$ 分别表示第 i 段路的长度，风阻系数以及风速。 输出格式 输出一个实数 T，表示蛋蛋到达目的地消耗的最短时间，要求至少保留到小数点后 6 位。 输入输出样例 输入样例 #1 3 10000 10000 10 5 20000 15 8 50000 5 6 输出样例 #1 12531.34496464 说明 ### 样例说明 一种可能的方案是：蛋蛋在三段路上都采用匀速骑行的方式,其速度依次为 $5.12939919,8.03515481,6.17837967$。 ### 评分方法 本题没有部分分,你程序的输出只有和标准答案的差距不超过 $10^{-6}$ 时，才能获得该测试点的满分，否则不得分。 ### 数据规模与约定 对于 $10\\%$  的数据，$n=1$。 对于 $40\\%$  的数据，$n\\le2$。 对于 $60\\%$  的数据，$n\\le100$。 对于 $80\\%$  的数据，$n\\le 1000$。 对于 $100\\%$  的数据，$n\\le 10^4，E_U\\le 10^8，s_i\\in(0,10^5]，k_i\\in(0,15]，v_i'\\in(-100,100)$。 数据保证最终的答案不会超过 $10^5$。 ### 提示 必然存在一种最优的体力方案满足：蛋蛋在每段路上都采用匀速骑行的方式。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 我们伟大的KK在N条水平线与M条竖直线构成的网格中（KK的自创坐标系），放K枚石子，每个石子都只能放在网格的交叉点上。现在KK想知道在最优的摆放方式下，最多可以找到多少四边平行于坐标轴的长方形，而且KK要求它的四个角上都恰好放着一枚石子。 输入输出格式 输入格式 一行输入三个正整数 N，M，K。 输出格式 一行输出一个正整数，表示最多的满足条件的长方形数量。 输入输出样例 输入样例 #1 3 3 8 输出样例 #1 5 说明 50%的数据    0<N，M≤30； 100%的数据   0<N，M≤30000  K≤N\\*M。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:翻硬币 题目描述 小Z离开家的时候忘记带走了钱包，掉下的硬币在桌子上排成了一列。正在等着哥哥回来的小D坐在桌子旁边，无聊地翻着桌子上的硬币。 出于某种爱好，小D一次一定会同时翻转 M 枚硬币。由于小D是一个爱动脑的小学生，这样进行了若干次之后她很快想到了一个问题：有多少种方法能够在 K 次翻转后把硬币由原来的状态变成现在这样呢？ 因为小D是个好学的小学生，她只需要你告诉她方案数对 1000000007 取模的值以方便她进行验算就可以了。 输入输出格式 输入格式 第一行，包含三个字符 N，K，M ，表示硬币的数量，翻转的次数和每次翻转的硬币数量。 第 2~3 行，包含 N 个字母，表示硬币在一开始的状态和最终要变成的状态。1 表示正面而 0 表示背面。 输出格式 一行包含一个整数，表示方案数对 1000000007 取模的值。 输入输出样例 输入样例 #1 3 2 1 100 001 输出样例 #1 2 说明 【样例解释】 100→101→001 100→000→001 【数据规模】 对于 30% 的数据，N ≤ 4，0 ≤ K ≤ 5； 对于 60% 的数据，N ≤ 10； 对于 100% 的数据，1 ≤ N ≤ 100，0 ≤ K ≤ 100，0 ≤ M ≤ N 。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:一年一度的圣诞节快要来到了。每年的圣诞节小 E 都会收到许多礼物，当然他也会送出许多礼物。不同的人物在小 E 心目中的重要性不同，在小 E 心中分量越重的人，收到的礼物会越多。 题目描述 小 E 从商店中购买了 n 件礼物，打算送给 m 个人，其中送给第 i 个人礼物数量为 $w_i$。请你帮忙计算出送礼物的方案数（两个方案被认为是不同的，当且仅当存在某个人在这两种方案中收到的礼物不同）。由于方案数可能会很大，你只需要输出模 P 后的结果。 输入输出格式 输入格式 输入的第一行包含一个整数 P，表示模数。   第二行包含两个整数 n 和 m，分别表示小 E 从商店购买的礼物数和接受礼物的人数。   第 3 到第 $(m + 2)$ 行，每行一个整数，第 $(i + 2)$ 行的整数 $w_i$ 表示送给第 i 个人的礼物数量。 输出格式 若不存在可行方案，则输出 `Impossible`，否则输出一个整数，表示模 P 后的方案数。 输入输出样例 输入样例 #1 100 4 2 1 2 输出样例 #1 12 输入样例 #2 100 2 2 1 2 输出样例 #2 Impossible 说明 ### 样例 1 解释 以 `/` 分割，`/` 前后分别表示送给第一个人和第二个人的礼物编号。$12$ 种方案详情如下： ```plain 1/23 1/24 1/34 2/13 2/14 2/34 3/12 3/14 3/24 4/12 4/13 4/23 ``` ### 数据规模与约定 设 $P= \\prod_{i=1}^t p_i^{c_i}，p_i$ 为质数。 对于 $15\\%$ 的数据，$n\\leq 15，m\\leq 5，p_i^{c_i}\\leq 10^5$。 在剩下的 $85\\%$ 数据中，约有 $60\\%$ 的数据满足 $t\\leq 2，c_i=1，p_i\\leq 10^5$，约有 $30\\%$ 的数据满足 $p_i\\leq 200$。 对于 $100\\%$ 的数据，$1\\leq n\\leq 10^9，1\\leq m\\leq 5，1\\leq p_i^{c_i}\\leq 10^5，1\\leq w_i \\leq P\\leq 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:面对蚂蚁们的疯狂进攻，小 FF 的 Tower defence 宣告失败……人类被蚂蚁们逼到了 Greed Island 上的一个海湾。现在，小 FF 的后方是一望无际的大海，前方是变异了的超级蚂蚁。小 FF 还有大好前程，他可不想命丧于此， 于是他派遣手下最后一批改造 SCV 布置地雷以阻挡蚂蚁们的进攻。 题目描述 小 FF 最后一道防线是一条长度为 n 的战壕，小 FF 拥有无数多种地雷，而 SCV 每次可以在 $[L, R]$ 区间埋放同一种不同于之前已经埋放的地雷。由于情况已经十万火急，小 FF 在某些时候可能会询问你在 $[L',R']$ 区间内有多少种不同的地雷，他希望你能尽快的给予答复。 输入输出格式 输入格式 第一行为两个整数 n 和 m，n 表示防线长度，m 表示 SCV 布雷次数及小 FF 询问的次数总和。 接下来有 m 行，每行三个整数 $q,l,r$： - 若 $q=1$，则表示 SCV 在 $[l, r]$ 这段区间布上一种地雷； - 若 $q=2$，则表示小 FF 询问当前 $[l, r]$ 区间总共有多少种地雷。 输出格式 对于小 FF 的每次询问，输出一个答案（单独一行），表示当前区间地雷总数。 输入输出样例 输入样例 #1 5 4 1 1 3 2 2 5 1 2 4 2 3 5 输出样例 #1 1 2 说明 ### 数据规模与约定 - 对于 $30\\%$ 的数据，$0 \\le n，m \\le 1000$。 - 对于 $100\\%$ 的数据，$0 \\le n，m \\le 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:公路通行税 题目描述 在PALMIA国家内，有N个城市由公路相连（每条公路恰好双向连接两个城市）。经由一条公路或多条公路，从任一城市出发可以到达其余各个城市。直到今年，公路上才要征收公路通行税。在每条公路的中间，有一征税员，从每一辆经由此路的车收取 1 PALMIA COIN（1PC）。 政府官员决定减少收税员而推行公路印花。如果一辆车欲进入一条公路，就必须将这张印花贴在窗上。 政府官员决定：一年的公路印花的价值相当于在两个最远城市之间进行100次旅行所需的费用。两个城市之间的距离是从一个城市到达第二个城市所需经过的最少数目的公路数。 你的任务是编写一个程序计算出公路印花的价值。 输入输出格式 输入格式 输入文件中包含几组数据。每组的第一行包括整数N和M（中间被一个空格隔开），N是该国家中城市的数目，M是公路的数目（1≦N≦1000，1≦M≦25000）。城市由整数进行编号，从1到N。接下来的M行，每行均包含一对整数A，B（1≦A，B≦N），中间由一空格隔开，代表在城市A与B之间有一条公路。在最后一组数后仅有一行，是两个0，中间被一空格隔开。 输出格式 对输入文件中的各组数据，输出文件中包含一行，表示公路印花的价值。 输入输出样例 输入样例 #1 4 4 1 2 2 3 4 2 3 4 0 0 输出样例 #1 200"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小 Z 的栈函数 题目描述 小 Z 最近发现了一个神奇的机器，这个机器的所有操作都是通过维护一个栈来完成的，它支持如下 11 个操作： - $\\texttt{NUM} ~x$：栈顶放入 x。 - $\\texttt{POP}$：抛弃栈顶元素。 - $\\texttt{INV}$：将栈顶元素取出，然后放入它的相反数。 - $\\texttt{DUP}$：再放入一个和栈顶元素相同的数。 - $\\texttt{SWP}$：交换栈顶的两个元素。 - $\\texttt{ADD}$：取出栈顶的两个元素，两元素相加，所得结果放入栈内。 - $\\texttt{SUB}$：取出栈顶的两个元素，第二个元素减去第一个元素，所得结果放入栈内。 - $\\texttt{MUL}$：取出栈顶的两个元素，两元素相乘，所得结果放入栈内。 - $\\texttt{DIV}$：取出栈顶的两个元素，第二个元素整除以第一个元素，所得结果放入栈内。 - $\\texttt{MOD}$：取出栈顶的两个元素，第二个元素取模以第一个元素，所得结果放入栈内。 - $\\texttt{END}$：结束这个程序。 然后，小 Z 用上面的 11 种操作写了一个一元函数 $f(x)。x$ 就是放入栈里面第一个初始元素。然后经过这个函数的一系列操作，当函数结束的时候，正常情况下，栈里面会有唯一的一个元素。剩下的这个元素就作为函数 $f(x)$ 的返回值。 小 Z 有 n 个询问，询问每个值 x 经过上述函数所映射出的 $f(x)$ 是多少。但是这个由于机器太老了，跑起东西来太慢了，小 Z 又是一个急性子，所以请你们写一个程序，来帮助小 Z 计算他查询的 $f(x)$。 还有，由于这台机器太破了，所以如果运算过程中有数字的绝对值大于 $1000000000$，机器将产生故障。 输入输出格式 输入格式 输入首先有若干行，仅包含上述 11 个操作，用来描述函数 $f(x)$ 的操作，函数的结束保证以 $\\texttt{END}$ 结尾. 接下来有一个整数，表示询问的个数 n。 接下来 n 行，每行一个整数 x，表示询问 $f(x)$ 的值。 **输入数据不保证合法**。 输出格式 输出 n 行，每行表示一个询问的结果。按如下规则输出： - 如果最后栈内不是一个元素，输出 `ERROR`。 - 如果运算过程中有数字的绝对值大于 $1000000000$，输出 `ERROR`。 - 如果输入数据不合法，导致中途退出，输出 `ERROR`。 - 否则输出对应的 $f(x)$。 输入输出样例 输入样例 #1 NUM 600000000 ADD END 3 0 600000000 1 输出样例 #1 600000000 ERROR 600000001 说明 ### 数据规模与约定 对于全部测试点，保证函数的操作步数不超过 $2000，1 \\leq n \\leq 2000，|x| \\leq 10^{9}$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 由于没有好好听课，小Z的笔记全都记的杂乱无章，出现了好多错误的地方。小Z的笔记是如此的糟糕，以至于他只记了一句例句，而且自己还不知道是什么意思……然后在老师讲语法的时候，小Z又零星的记了几个字母对，老师说，这几个字母对是绝对不能相邻的，而且相邻是不关心字母的顺序的，比如老师说，“ab”不能相邻，那么相同的，“ba”也不能相邻。 现在小Z到家了，打开了上课的笔记，然后他发现笔记有很多自相矛盾的地方：为什么下面的不能相邻的字母对会出现在上面的例句里面呢？纠结再三，小Z觉得下面的东西相对比较简单，所以记错的概率比较小……他决定在上面的例句里面擦掉几个字母，使得句子变得合法。 但是小Z还有其他作业要做呢，来不及整理笔记了，就把这个艰巨的任务留给了大家，请问大家，小Z最少要擦掉几个字母，才能使得上面的例句合法？ 输入输出格式 输入格式 第一行：一个整数N。 第二行：一个长度为N的字符串，只包含小写字母，代表小Z记下的例句。 第三行：一个整数M，代表不能相邻的字母对的个数。 接下来M行：每行两个小写字母，代表不能相邻的字母对，因为小Z太不认真了，所以可能有重复。 输出格式 一行，一个整数，最少要擦除的字母数。 输入输出样例 输入样例 #1 4 noip 2 ip mo 输出样例 #1 1 说明 【数据规模】 对于10%的数据，M=0； 对于另外30%的数据，N<=1000； 对于100%的数据，N<=100000，M<=400。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小Z的 k 紧凑数 题目描述 小 Z 在草稿纸上列出了很多数，他觉得相邻两位数字差的绝对值不超过 k 的整数特别奇特，称其为 k 紧凑数。 现在小 Z 想知道 [l，r] 内有多少个 k 紧凑数，希望你帮帮他。 输入输出格式 输入格式 第一行包含三个整数 l，r，k。 输出格式 第一行包含一个整数，表示 [l，r] 内 k 紧凑数的个数。 输入输出样例 输入样例 #1 1 13 1 输出样例 #1 12 说明 【数据规模】 对于 30% 的数据，r − l ≤ 10^5； 对于另外 30% 的数据，l = 1，r 为 10 的倍数； 对于 100% 的数据，1 ≤ l ≤ r ≤ 10^18，0 ≤ k ≤ 8。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小Z的传感器 题目描述 众所周知，小 Z 家是个豪宅，有 n 个房间，并通过 m 条通道相连（家当然是连通的）。 有一天，小 Y 想趁小 Z 不在偷偷光顾他家，并决定到他家的每个房间至少逛一次。不幸的是，小 X 家有 k 个房间装了传感器，该传感器会在第一次有人到访的时候返回信息。 当小 Z 回到家时，就发现小 Y 来过了，小 Y 也如实地告诉了小 Z 自己到每个房间至少逛了一次。 然而，小 Z 仔细研究了传感器返回信息的先后顺序，怀疑个别传感器可能返回信息有延迟。 为了验证自己的推断，连同这一次在内，他一共让小 Y 到他家来了 q 次。他想判断每次传感器返回信息的先后顺序是否可能出现，希望你帮帮他。 输入输出格式 输入格式 第一行包含四个整数 n，m，k，q。 接下来 m 行，每行包含两个整数 x，y，表示房间 x 和房间 y 有一条双向通道相连。 接下来 q 行，每行包含 k 个整数，表示每次按先后顺序返回信息的传感器所在房间的编号。 输出格式 q 行，每行包含一个字符串“Yes”或“No”，表示每次传感器返回信息的先后顺序是否可能出现。 输入输出样例 输入样例 #1 5 5 3 2 1 2 2 3 3 1 1 4 4 5 4 2 1 4 1 2 输出样例 #1 No Yes 说明 【数据规模】 对于 $10\\%$ 的数据，$n \\le 2$； 对于 $30\\%$ 的数据，$n \\le 3$； 对于 $60\\%$ 的数据，$n \\le 10000，m \\le 20000，k \\le 10$； 对于 $100\\%$ 的数据，$1 \\le k \\le n \\le 10^5,1 \\le m \\le 2 \\times 10^5,1 \\le q \\le 5,x \\neq y$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:小Z的车厢 题目描述 小 Z 的家乡有一列在环形铁轨上行驶的火车，共停靠 n 个站（1 号站到 n 号站顺时针排列）。 众所周知，春运是一件非常可怕的事情。不幸的是，小 Z 是铁路公司的员工，现在他收到了 m 条除夕凌晨的订票申请，每个申请 $(x, y, z)$ 表示有 z 个人要从 x 号站顺时针坐到 y 号站，同时，当火车停靠到 x 号站时，所有要在 x 站上车的人都会上车，所有要在 x 号站下车的人都会下车。 由于始发站不确定，现在小 Z 想知道至少需要分配给这列火车多少节车厢（每节车厢可容纳 $36$ 人）才能顺利完成该铁路运输，希望你帮帮他。 输入输出格式 输入格式 第一行包含两个整数 $n, m$。 接下来 m 行，每行包含三个整数 $x, y, z$。 输出格式 第一行包含一个整数，表示至少需要分配给这列火车的车厢数。 输入输出样例 输入样例 #1 3 2 1 2 36 2 3 36 输出样例 #1 1 输入样例 #2 4 2 1 2 36 4 3 36 输出样例 #2 2 说明 **【数据规模】** 对于 $30 \\%$ 的数据，$n \\le 1000，m \\le 10000$； 对于 $100 \\%$ 的数据，$1 \\le n, m \\le 10^6，x \\ne y，1 \\le z \\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 虽然小Z谨小慎微，但是还是被狡猾的小D给发现了其中的玄机。作为一个大方的人，小D自然要把这个秘密拿出来给大家共享啦~小Z开始有两张N\\*N大小的纸一张是透明的、一张是有字的。然后小Z把透明的纸上有些格子涂黑了。接着把这两张纸一起给他的妹纸，妹纸事先和小Z约定好了，按照如下方法阅读：首先先把透明的纸盖在另一张纸上，然后把露出来的字母从上到下从左到右写下来，然后转个90度，再读一遍……这样子一共读四遍……详见样例。 小D不知从哪把情书弄来了，请大家一起来欣赏，顺便请大家把内容打出来看看。 输入输出格式 输入格式 第1行，一个整数N； 第2到第N+1行，每行N个字符，代表skj的透明纸，“O”没有涂黑的地方，“#”代表被涂黑的地方； 第N+2到第2N+1行，每行N个字符，仅包含大写字母，如描述中所示，是另一张纸。 输出格式 一行，情书的内容。 输入输出样例 输入样例 #1 4 ##O# #O#O #### ###O ARAO PCEM LEEN TURC 输出样例 #1 ACMCENTRALEUROPE 说明 【数据规模】 1<=N<=1000"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:HXY玩卡片 题目描述 HXY得到了一些卡片，这些卡片上标有数字 0 或 5 。现在她可以选择其中一些卡片排成一列，使得排出的一列数字组成的数最大，且满足被 $90$ 整除这个条件。同时，这个数必须为合法的某个非负整数，即不能含有前导 0 ，即 0 不能作为这串数的首位。但是特殊地，整数 0 满足条件。如果不能排出这样的数，输出“$-1$”。 输入输出格式 输入格式 第一行，卡片的个数 n 。 第二行，分别给出了这 n 个数（只能为数字 5 或 0 ）。 输出格式 仅一行，如果可以排出，则输出这个数。否则输出`-1`。 输入输出样例 输入样例 #1 4 5 0 5 0 输出样例 #1 0 输入样例 #2 11 5 5 5 5 5 5 5 5 0 5 5 输出样例 #2 5555555550 输入样例 #3 2 5 5 输出样例 #3 -1 说明 数据范围： 对于 $30\\%$ 的数据，$n\\le 10$ ； 对于 $20\\%$ 的数据，仅含数字 5 ； 对于 $100\\%$ 的数据，$n\\le 1000$ 。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:HXY和序列 题目描述 HXY突发奇想，她想要找到一个正整数序列，满足序列中所有的数不超过n，序列长度为p，且除了第一个数外，所有的数都能被前一个数整除（即是前一个数的倍数）。很快她找到了一个这样的序列。可是她觉得还不够，想要知道这样的序列有多少个，可她被惊人的数据范围吓怕了。现在她找到了你，请你来帮助她解决这个问题。（因为结果可能会很大，请输出对1e9+7取模后的值） 输入输出格式 输入格式 第一行，两个正整数n，p。 输出格式 仅一行，一个正整数，表示满足条件序列的个数对1e9+7取模后的值。 输入输出样例 输入样例 #1 3 2 输出样例 #1 5 输入样例 #2 6 4 输出样例 #2 39 说明 数据范围： 对于10%的数据，p=1； 对于30%的数据，1<=n，p<=10； 对于60%的数据，1<=n，p<=500; 对于100%的数据，1<=n，p<=2000。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:HXY烧情侣 题目描述 众所周知，HXY 已经加入了 FFF 团。现在她要开始喜（sang）闻（xin）乐（bing）见（kuang）地烧情侣了。 这里有 n 座电影院，n 对情侣分别在每座电影院里，然后电影院里都有汽油，但是要使用它需要一定的费用。m 条单向通道连接相邻的两对情侣所在电影院。 HXY 有个绝技，如果她能从一个点开始烧，最后回到这个点，那么烧这条回路上的情侣的费用只需要该点的汽油费即可。并且每对情侣只需烧一遍，电影院可以重复去。然后她想花尽可能少的费用烧掉所有的情侣。 问：最少需要多少费用，并且当费用最少时的方案数是多少？由于方案数可能过大，所以请输出方案数对 $10^9+7$ 取模的结果。 （注：这里 HXY 每次可以从任何一个点开始走回路。就是说一个回路走完了，下一个开始位置可以任选。所以说不存在烧不了所有情侣的情况，即使图不连通，HXY 自行选择顶点进行烧情侣行动。且走过的道路可以重复走。） 输入输出格式 输入格式 第一行一个正整数 n。    第二行 n 个正整数，表示每个点的汽油费 $w_i$。   第三行一个正整数 m。   接下来 m 行，每行两个正整数 $x_i,y_i$，表示一条 $x_i \\to y_i$ 的单向道路。 输出格式 输出一行两个整数，分别表示最小花费，和花费最小时的方案数。 输入输出样例 输入样例 #1 3 1 2 3 3 1 2 2 3 3 2 输出样例 #1 3 1 输入样例 #2 3 10 20 10 4 1 2 1 3 3 1 2 1 输出样例 #2 10 2 说明 对于 $30\\%$ 的数据，$1\\le n,m \\le 20$；   对于另外 $10\\%$ 的数据，保证不存在回路；   对于 $100\\%$ 的数据，$1\\le n \\le 10^5，1\\le m \\le 3\\times 10^5，0\\le w_i \\le 10^9$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:HXY造公园 题目描述 现在有一个现成的公园，有 n 个休息点和 m 条双向边连接两个休息点。众所周知，HXY 是一个 SXBK 的强迫症患者，所以她打算施展魔法来改造公园并即时了解改造情况。她可以进行以下两种操作： 1. 对某个休息点 x，查询公园中可以与该点互相到达的休息点组成的路径中的最长路径。 2. 对于两个休息点 $x,y$，如果 $x,y$ 已经可以互相到达则忽略此次操作。否则，在 x 可到达的所有休息点和 y 可到达的所有休息点（包括 $x,y$ 自身）分别选择一个休息点，然后在这两个休息点之间连一条边，并且这个选择应该满足对于连接后的公园，x 和 y 所在的区域（即 $x,y$ 可达到的所有休息点和边组成的集合）中的最长路径的长度最小。 HXY打算进行 q 个操作，请你回答她的对于公园情况的询问（操作 1）或者执行她的操作（操作 2）。 注：所有边的长度皆为 1。保证不存在环。最长路径定义为：对于点 $v_1,v_2\\cdots v_k$，如果对于其中任意的 $v_i$ 和 $v_{i+1}\\quad (1\\le i\\le k-1)$，都有边相连接，那么 $v_j\\quad(1\\le j\\le k)$ 所在区域的最长路径就是 $k-1$。 输入输出格式 输入格式 - 第一行，三个正整数，分别为 $n,m,q$。 - 接下来的 m 行，每一行有两个正整数 $x_i,y_i$，表示 $x_i$ 和 $y_i$ 有一条双向边相连。 - 再接下来的 q 行，每一行表示一个操作。   - 若该行第一个数为 1，则表示操作 1，之后还有一个正整数 $x_i$，表示要查询的休息点。   - 若该行第一个数为 2，则表示操作 2，之后还有两个正整数 $x_i,y_i$，表示需要执行操作的两个休息点。 输出格式 输出行数为操作 1 的个数。 每行输出对于操作 1 询问的回答。 输入输出样例 输入样例 #1 6 0 6 2 1 2 2 3 4 2 5 6 2 3 2 2 5 3 1 1 输出样例 #1 4 说明 ### 数据范围及约定 - 对于 $10\\%$ 的数据，只存在操作 1。 - 对于 $30\\%$ 的数据，$1\\le m<n\\le 20，1\\le q\\le5$。 - 对于 $60\\%$ 的数据，$1\\le m<n \\le 2000，1\\le q\\le 1000$。 - 对于 $100\\%$ 的数据，$1 \\le m<n \\le 3\\times 10^5，1\\le q\\le 3\\times 10^5$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 挖地雷 题目描述 在一个地图上有 $N\\ (N \\le 20)$ 个地窖，每个地窖中埋有一定数量的地雷。同时，给出地窖之间的连接路径。当地窖及其连接的数据给出之后，某人可以从任一处开始挖地雷，然后可以沿着指出的连接往下挖（仅能选择一条路径），当无连接时挖地雷工作结束。设计一个挖地雷的方案，使某人能挖到最多的地雷。 输入输出格式 输入格式 有若干行。 第 1 行只有一个数字，表示地窖的个数 N。 第 2 行有 N 个数，分别表示每个地窖中的地雷个数。 第 3 行至第 $N+1$ 行表示地窖之间的连接情况： 第 3 行有 $n-1$ 个数（0 或 1），表示第一个地窖至第 2 个、第 3 个、…、第 n 个地窖有否路径连接。如第 3 行为 $11000\\cdots 0$，则表示第 1 个地窖至第 2 个地窖有路径，至第 3 个地窖有路径，至第 4 个地窖、第 5 个、…、第 n 个地窖没有路径。 第 4 行有 $n-2$ 个数，表示第二个地窖至第 3 个、第 4 个、…、第 n 个地窖有否路径连接。 …… 第 $n+1$ 行有 1 个数，表示第 $n-1$ 个地窖至第 n 个地窖有否路径连接。（为 0 表示没有路径，为 1 表示有路径）。 输出格式 第一行表示挖得最多地雷时的挖地雷的顺序，各地窖序号间以一个空格分隔，不得有多余的空格。 第二行只有一个数，表示能挖到的最多地雷数。 输入输出样例 输入样例 #1 5 10 8 4 7 6 1 1 1 0 0 0 0 1 1 1 输出样例 #1 1 3 4 5 27 说明 **【题目来源】** NOIP 1996 提高组第三题"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:【模板】nim 游戏 题目描述 甲，乙两个人玩 nim 取石子游戏。 nim 游戏的规则是这样的：地上有 n 堆石子（每堆石子数量小于 $10^4$），每人每次可从任意一堆石子里取出任意多枚石子扔掉，可以取完，不能不取。每次只能从一堆里取。最后没石子可取的人就输了。假如甲是先手，且告诉你这 n 堆石子的数量，他想知道是否存在先手必胜的策略。 输入输出格式 输入格式 **本题有多组测试数据。** 第一行一个整数 T （$T\\le10$），表示有 T 组数据 接下来每两行是一组数据，第一行一个整数 n，表示有 n 堆石子，$n\\le10^4$。 第二行有 n 个数，表示每一堆石子的数量. 输出格式 共 T 行，每行表示如果对于这组数据存在先手必胜策略则输出 `Yes`，否则输出 `No`。 输入输出样例 输入样例 #1 2 2 1 1 2 1 0 输出样例 #1 No Yes"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 经过小FF的研究，他发现蚂蚁们每次都走同一条长度为n个单位的路线进攻， 且蚂蚁们的经过一个单位长度所需的时间为T秒。也就是说，只要小FF在条路线上布防且给蚂蚁造成沉痛伤害就能阻止蚂蚁的进军。 SCV擅长制造的防御塔有三种，分别是激光塔，放射塔和干扰塔， 他们可以在一个单位长度内修建一座防御塔。三种防御塔的作用如下： 激光塔： 使用高能激光，当蚂蚁从塔前经过时每秒对蚂蚁造成r点伤害。 放射塔： 释放放射性元素， 当蚂蚁经过这座塔后，每一秒受到g点伤害。 干扰塔： 干扰塔负责干扰蚂蚁们的信息素，使得蚂蚁在经过这座塔后，经过之后每一个单位长度的时间变成T+b。 当然， 放射塔和干扰塔的效果是可以叠加的， 也就是说如果敌人经过x座放射塔，那么敌人每秒钟会受到x\\*g点伤害； 同理，如果敌人经过y座干扰塔， 那么敌人经过一个单位长度的时间将变为T+y\\*b。 现在距离蚂蚁的下一轮进攻还有足够长的时间，你这个“NewBe\\_One”计划的首席工程师现在被任命为战略总参谋长， 因此你必须设计一个给蚂蚁们造成最大伤害的布塔方案。 输入输出格式 输入格式 输入数据仅一行， 5个整数 n, r, g, b, T中间用一个空格隔开。 它们分别表示你可以布防的总长度， 激光塔的效果、 放射塔的效果和干扰塔的效果。 对于30%的数据：    1<=n<=20; 对于60%的数据：   1<=n<=1024;                           0<=r, g, b<=65536;                             0<=T<=3; 对于另外40%的数据：                 1<=n<=400;                 0<=r, g, b<=2^31-1; 0<=t<=1000. 输出格式 输出仅一个整数， 代表你的方案给敌人带来的最大伤害值。 输入输出样例 输入样例 #1 5 4 3 2 1 输出样例 #1 82 说明 输出样例解释： 第1号位置为放射塔， 第2，3号位置建造干扰塔，第4，5号位置建造激光塔。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称: 题目描述 哈利的视力非常好，他能从迷宫的一端沿直线看到迷宫的另一端（但他只能看八个方向——东北，东，东南，南，西南……），而且他跑得非常快，跑一步（向上、下、左、右移动一格）只需要 $1\\text{s}$。但迷宫是不透光的，而且，要烧掉迷宫的墙也不容易，所以哈利决定绕到一个能够看到奖杯的地方。现在，哈利希望你能帮他确定最短需要多长时间才能拿到奖杯。 输入输出格式 输入格式 第一行为 2 个数 $N,M$ 表示迷宫的规模（N 为高，M 为宽） 接下来是 $N \\times M$ 的迷宫，$\\texttt{O}$ 表示空地，$\\texttt{X}$ 表示墙。 最后是多对数据，分别是奖杯坐标及哈利的坐标（显然不可能在墙上），每对占一行，0 为结束标志。 输出格式 根据每对数据，计算哈利拿到奖杯的最短时间，每对一行。如果魔法部有意难为选手，用墙将奖杯包围了起来，输出 $\\texttt{Poor Harry}$。 输入输出样例 输入样例 #1 3 4 OXXO XXOO XOOO 3 2 2 4 3 3 1 1 0 0 0 0 输出样例 #1 1 Poor Harry 说明 对于 $30\\%$ 的数据，有 $N\\times M\\le100$； 对于 $60\\%$ 的数据，有 $N\\times M\\le1600$； 对于 $100\\%$ 的数据，有 $N\\times M\\le16384$。 询问数据对数不超过 $512$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:炉石collection 题目描述 小Z最近沉迷于一个叫做炉石 collection 的游戏。在游戏中，你需要使用排在 N × N 的矩阵内的卡牌来击败你的敌人。 在这个游戏中，排兵布阵是游戏的一个重要内容，例如“日怒保卫者”和“上古看守者”放在一起可以起到更好的效果。为了游戏的平衡性，同样种类的卡牌最多只能出战 2 张。 在一次激烈的战斗之后，小Z想要重新编排他的队伍。在游戏中，小Z可以支付 A 枚金币让你任意横向交换卡牌，支付 B 枚金币让你任意纵向交换卡牌。 你只需要支付一次金币就可以进行某种类型的交换任意次，直到你停下并进行另一种类型的交换，此时需要支付另一种类型交换的费用。例如，横向交换 -横向交换 -纵向交换 -纵向交换 -纵向交换 -横向 交换 -纵向交换总共要支付 2A + 2B 枚金币。 小Z想要知道，他最少要支付多少金币把他目前的布置变换成他想要的布置。 输入输出格式 输入格式 第一行包含三个数字 N 、A、B，分别表示矩阵的大小，横向交换的费用，纵向交换的费用。 接下来 N 行每行包含 N 个整数，表示开始交换前矩阵内每个位置卡牌的类型。 接下来 N 行每行包含 N 个整数，表示目标矩阵内每个位置卡牌的类型。 输出格式 输出最少需要支付多少金币能够把目前的布置变换成他想要的布置。如果不能变换成功，输出“Fail”（不包含引号）。 输入输出样例 输入样例 #1 3 16 9 2 5 6 1 1 3 7 8 3 2 5 1 3 3 6 7 8 1 输出样例 #1 34 输入样例 #2 2 193 43 1 2 2 1 1 2 2 3 输出样例 #2 Fail 输入样例 #3 3 10 20 1 2 3 4 5 4 3 2 1 2 1 2 1 5 3 4 3 4 输出样例 #3 30 说明 【数据规模】 对于 68% 的数据，答案最多只需要支付 1 次费用。 对于 86% 的数据，答案最多只需要支付 2 次费用。 对于 100% 的数据，1 ≤ n ≤ 300; 1 ≤ A，B ≤ 1000000; 1 ≤ 卡牌类型的标号 ≤ 100000。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:数列编辑器 题目描述 小 Z 是一个爱好数学的小学生。最近，他在研究一些关于整数数列的性质。 为了方便他的研究，小Z希望实现一个叫做“Open Continuous Lines Processor”的数列编辑器。 一开始，数列编辑器里没有数字，只有一个光标。这个数列编辑器需要支持五种操作。 - `I x` 在当前光标前插入数字 x。 - `D` 删除当前光标前的数字。 - `L` 光标向前移动一个数字。 - `R` 光标向后移动一个数字。 - `Q k` 设光标之前的数列是 $\\{a_1,a_2,\\cdots,a_n\\}$，输出第 k 位及之前最大的前缀和，保证 $k\\leqslant n$。 输入输出格式 输入格式 第一行包含一个数字 N，表示操作的个数。 接下来包含 N 行，每行包含一条命令。 输出格式 对于每个 `Q k` 命令，输出一个整数表示这个操作的答案。 输入输出样例 输入样例 #1 8 I 2 I -1 I 1 Q 3 L D R Q 2 输出样例 #1 2 3 说明 ### 数据范围 对于 $50\\%$ 的数据，$N\\leqslant1000$； 对于 $80\\%$ 的数据，$N\\leqslant10^5$； 对于 $100\\%$ 的数据，$N\\leqslant10^6$，插入的数字绝对值大小不会超过 $1000$。 题目保证不会在数列编辑器为空时进行 `D` 操作。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO13JAN] Square Overlap S 题目描述 Farmer John is planning to build N (2 <= N <= 50,000) square fenced-in pastures on his farm, each of size exactly K x K (1 <= K <= 1,000,000). Pasture i is centered at point (x\\_i, y\\_i) with integer coordinates in the range -1,000,000...1,000,000.  However, in his haste to complete his plans, FJ realizes that he may have accidentally placed two pastures in locations that overlap (by overlap, this means the two pastures share a positive area in common).  No two pastures share the exact same center point. Given the locations of each of the planned square pastures, please help FJ compute the area shared by the two overlapping pastures.  Output zero if no two squares overlap, and -1 if overlap occurs between more than a single pair of pastures. 在一个直角坐标系中，有N个边长为K的正方形。 给出每一个正方形的中心，请判断所有的正方形是否有重叠。 输入数据保证每一个正方形的中心不重合 输入输出格式 输入格式 \\* 第1行 ：两个正整数： N , K 其中：2 <= N <= 50 000 ，1 <= K <= 1 000 000 ，K保证是偶数 \\*第2 .. i+1行：每行有两个整数xi，yi，描述了第i个正方形的中心。 其中：xi，yi均在[-1 000 000，1 000 000]内 输出格式 只输出一行： 如果没有正方形重叠，输出“0”；如果有且只有一对正方形重叠，输出它们重叠的面积；如果有两对及以上的正方形重合，输出 -1 ; 注意：在输出答案后一定要输换行符！ 输入输出样例 输入样例 #1 4 6 0 0 8 4 -2 1 0 7 输出样例 #1 20"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Blink 题目描述 Farmer John 对于农场里昏暗的灯光很不满，于是他刚刚装上一个装饰精美的新吊灯。 这个吊灯由 $N(3 \\le N \\le 16)$ 个灯组成，并排成一个**圆圈**。 奶牛们对于这个新的发光装置很有兴趣。他们喜欢玩这样的一个游戏： 在时刻 T 时，对于每一盏灯 i， 如果在时刻 $T-1$ 时，i 左边的灯 $(1<i\\le n$ 时为 $i-1，i=1$ 时，为 $n)$ 是开的，那么将它关掉，否则不做操作。 他们会在 $B(1 \\le B \\le 10^{15})$ 个单位的时间里一直进行这样的操作。 **请注意，B 可能会超过一般的 $32$ 位整数的范围。** 现在已知每一个灯的初始状态，请计算出在经过 B 个单位的时间后，每一个灯的状态。 输入输出格式 输入格式 第 1 行是两个整数，N 和 B。 第 $2 \\sim 1+N$ 中，第 $i+1$ 行描述了灯的初始状态，用 0 (关) 与 1 (开) 表示。 输出格式 N 行，第 i 行应输出一个整数，描述灯的最终状态，用 0 (关) 与 1 (开) 表示。 输入输出样例 输入样例 #1 5 6  1  0  0  0  0 输出样例 #1 1  1  1  0  1 说明 样例输出解释： 下面是样例输出的模拟 ```cpp Time T=0: 1 0 0 0 0 Time T=1: 1 1 0 0 0 Time T=2: 1 0 1 0 0 Time T=3: 1 1 1 1 0 Time T=4: 1 0 0 0 1 Time T=5: 0 1 0 0 1 Time T=6: 1 1 1 0 1"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO13JAN] Painting the Fence S 题目描述 Farmer John has devised a brilliant method to paint the long fence next to his barn (think of the fence as a one-dimensional number line).  He simply attaches a paint brush to his favorite cow Bessie, and then retires to drink a cold glass of water as Bessie walks back and forth across the fence, applying paint to any segment of the fence that she walks past. Bessie starts at position 0 on the fence and follows a sequence of N moves (1 <= N <= 100,000).  Example moves might be  10 L , meaning Bessie moves 10 units to the left, or  15 R , meaning Bessie moves 15 units to the right.  Given a list of all of Bessie's moves, FJ would like to know what area of the fence gets painted with at least K coats of paint.  Bessie will move at most 1,000,000,000 units away from the origin during her walk."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:Photo 题目描述 Farmer John 打算给他的 n 头奶牛照相。 他们排成一条线，并且依次取 $1\\sim n$ 作为编号。 每一张照片可以拍摄到这列奶牛中一个连续的区间中的奶牛。 对于每一头奶牛，FJ 都想要让 Ta 至少出现在一张照片里。 不幸的是，有 k 对关系不好的奶牛，他们拒绝出现在同一张照片里。 已知所有关系不好的奶牛所在的位置，请计算出 FJ 需要的最小需要拍摄的照片数量。 输入输出格式 输入格式 第一行：两个整数:n，k。 第 $2\\ldots k+1$ 行中，第 $i+1$ 行有两个整数，记为 $a_i$ 与 $b_i$。它们代表着处在队列中第 $a_i$ 头奶牛与第 $b_i$ 头奶牛是关系不好的，它们不能出现在同一张照片里。 输出格式 一个整数，代表 FJ 需要的最小需要拍摄的照片数量。 输入输出样例 输入样例 #1 7 3 1 3 2 4 5 6 输出样例 #1 3 说明 #### 样例输入输出 1 解释 FJ 可以只拍三张照片：$[1,2]，[3,5]，[6,7]$。 --- #### 数据规模与约定 对于 $100\\%$ 的数据，保证 $2\\le n\\le10^9，1\\le k\\le1000，1 \\leq a_i, b_i \\leq n$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO13OPEN] What's Up With Gravity S 题目描述 Captain Bovidian is on an adventure to rescue her crew member, Doctor Beefalo.  Like all great adventures, this story plays out in a two dimensional N by M grid (1 <= N, M <= 500), representing a side view of the captain's world.  Some grid cells are empty while others are blocked and cannot be traversed. Unfortunately, Captain Bovidian cannot jump.  She must obey the following rules of physics while traversing her world. 1) If there is no cell directly underneath Captain Bovidian (that is, if she is at the edge of the grid), then she flies out into space and fails her mission. 2) If the cell directly underneath Captain Bovidian is empty, then she falls into that cell. 3) Otherwise: a) Captain Bovidian may move left or right if the corresponding cell exists and is empty. b) Or, Captain Bovidian may flip the direction of gravity. When Captain Bovidian changes the direction of gravity, the cell that's 'underneath' her (as mentioned in rules 1 and 2) toggles between the cell with one higher row index and the cell with one lower row index (the first row in the input has index 1, and the last row has index N). Initially, the cells with one higher row index are underneath Captain Bovidian. Doctor Beefalo is lost somewhere in this world.  Help Captain Bovidian arrive at her cell using the least number of gravity flips as possible.  If it is impossible to reach Doctor Beefalo, please output -1."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO13OPEN] Fuel Economy S 题目描述 Farmer John has decided to take a cross-country vacation. Not wanting his cows to feel left out, however, he has decided to rent a large truck and to bring the cows with him as well! The truck has a large tank that can hold up to G units of fuel (1 <= G <= 1,000,000).  Unfortunately, it gets very poor mileage: it consumes one unit of fuel for every unit of distance traveled, and FJ has a total of D units of distance to travel along his route (1 <= D <= 1,000,000,000). Since FJ knows he will probably need to stop to refill his tank several times along his trip, he makes a list of all the N fuel stations along his route (1 <= N <= 50,000).  For each station i, he records its distance X\\_i from the start of the route (0 <= X\\_i <= D), as well as the price Y\\_i per unit of fuel it sells (1 <= Y\\_i <= 1,000,000). Given this information, and the fact that FJ starts his journey with exactly B units of fuel (0 <= B <= D), please determine the minimum amount of money FJ will need to pay for fuel in order to reach his destination. If it is impossible for him to reach the destination, please output -1. Note that the answer to this problem may not fit into a standard 32-bit integer."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO14MAR] The Lazy Cow S 题目描述 It's a hot summer day, and Bessie the cow is feeling quite lazy.  She wants to locate herself at a position in her field so that she can reach as much delicious grass as possible within only a short distance."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[USACO14MAR] Mooo Moo S 题目描述 Farmer John has completely forgotten how many cows he owns!  He is too embarrassed to go to his fields to count the cows, since he doesn't want the cows to realize his mental lapse.  Instead, he decides to count his cows secretly by planting microphones in the fields in which his cows tend to gather, figuring that he can determine the number of cows from the total volume of all the mooing he hears. FJ's N fields (1 <= N <= 100) are all arranged in a line along a long straight road.  Each field might contain several types of cows; FJ owns cows that come from B different breeds (1 <= B <= 20), and a cow of breed i moos at a volume of V(i) (1 <= V(i) <= 100).  Moreover, there is a strong wind blowing down the road, which carries the sound of mooing in one direction from left to right: if the volume of mooing in some field is X, then in the next field this will contribute X-1 to the total mooing volume (and X-2 in the field after that, etc.). Otherwise stated, the mooing volume in a field is the sum of the contribution due to cows in that field, plus X-1, where X is the total mooing volume in the preceding field. Given the volume of mooing that FJ records in each field, please compute the minimum possible number of cows FJ might own. The volume FJ records in any field is at most 100,000. ### 题目背景 农夫约翰完全忘了他有多少头牛了！他不好意思到牧场里去数牛，因为他不想让牛意识到他的健忘。取而代之的是，他决定在奶牛聚集的牧场里安装麦克风，秘密计算出他能从中听到的所有牛叫声的总音量，以便以此确定奶牛的数量。 ### 题目描述 $FJ$ 的 $N(1\\le N\\le 100)$ 个牧场都是沿着一条笔直的道路分布的。每一个牧场可能有许多种品种的奶牛； $FJ$ 拥有 $B(1\\le B\\le 20)$ 个不同品种的奶牛，而第 i 种奶牛的叫声音量为 $V_i(1\\le V_i \\le 100)$ 。此外，有一股强风沿着道路吹来，将牛的叫声从左往右传递，如果某个牧场的总音量是 x ，那么它将传递 $x-1$ 的音量到右边的下一个牧场。这就意味着，一个牧场里的总音量是处在该牧场的奶牛所发出的音量加上左边前一个牧场的总音量 $-1$ 。数据保证，每一个牧场内由该牧场所有奶牛所发出的总音量最多为$10^5$。 ### 输入格式 第 1 行：两个用空格分隔的整数 N 和 B。       第 $2...B+1$ 行：第 $i+1$ 行包含整数 $V_i$ 。         第 $B+2...B+N+1$ 行：第 $B+i+1$ 行表示在第 i 个牧场内所能监听到的总音量。 ### 输出格式 共一行，即 $FJ$ 拥有的最小奶牛数量。 如果 FJ 不可能拥有一种牧场配置满足给出的条件，输出 `-1`。 ### 说明/提示 #### 输入说明： $FJ$ 拥有 5 个牧场，每个牧场总音量从左到右分别为为$0、17、16、20、19$。 $FJ$ 有两种不同品种的奶牛；第一种奶牛的叫声音量是 5，第二种奶牛的叫声音量是 7 。 #### 输出说明： 2 号牧场场有  2 头 1 号品种的奶牛， 1 头 2 号品种奶牛；还有一头牛在 4 号牧场，共 4 头奶牛。 输入输出格式 输入格式 \\* Line 1: The integers N and B."}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[HAOI2007] 上升序列 题目描述 对于一个给定的 $S=\\{a_1,a_2,a_3,…,a_n\\}$ , 若有 $P=\\{a_{x_1},a_{x_2},a_{x_3},…,a_{x_m}\\}$ , 满足 $(x_1<x_2<…<x_m)$  且 $(a_{x_1}<a_{x_2}<…<a_{x_m})$ 。那么就称 P 为 S 的一个上升序列。如果有多个 P 满足条件，那么我们想求字典序最小的那个。 任务： 给出 S 序列，给出若干询问。对于第 i 个询问，求出长度为 $L_i$ 的上升序列，如有多个，求出字典序最小的那个（即首先 $x_1$ 最小，如果不唯一，再看 $x_2$ 最小……），如果不存在长度为 $L_i$ 的上升序列，则打印 `Impossible`。 输入输出格式 输入格式 第一行一个 N，表示序列一共有 N 个元素。 第二行 N 个数，为 $a_1, a_2 , \\cdots , a_n$。 第三行一个 M，表示询问次数。下面接 M 行每行一个数 L，表示要询问长度为 L 的上升序列。 输出格式 对于每个询问，如果对应的序列存在，则输出，否则打印 `Impossible`。 输入输出样例 输入样例 #1 6 3 4 1 2 3 6 3 6 4 5 输出样例 #1 Impossible 1 2 3 6 Impossible 输入样例 #2 6 6 7 1 2 3 4 1 2 输出样例 #2 6 7 说明 $N \\le 10000，M \\le 1000$，保证数据随机。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[HAOI2007] 理想的正方形 题目描述 有一个 $a \\times b$ 的整数组成的矩阵，现请你从中找出一个 $n \\times n$ 的正方形区域，使得该区域所有数中的最大值和最小值的差最小。 输入输出格式 输入格式 第一行为 3 个整数，分别表示 $a,b,n$ 的值。 第二行至第 $a+1$ 行每行为 b 个非负整数，表示矩阵中相应位置上的数。每行相邻两数之间用一空格分隔。 输出格式 仅一个整数，为 $a \\times b$ 矩阵中所有“ $n \\times n$ 正方形区域中的最大整数和最小整数的差值”的最小值。 输入输出样例 输入样例 #1 5 4 2 1 2 5 6 0 17 16 0 16 17 2 1 2 10 2 1 1 2 2 2 输出样例 #1 1 说明 问题规模。 矩阵中的所有数都不超过 $1,000,000,000$。 $20\\%$ 的数据 $2 \\le a,b \\le 100,n \\le a,n \\le b,n \\le 10$。 $100\\%$ 的数据 $2 \\le a,b \\le 1000,n \\le a,n \\le b,n \\le 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[HAOI2007] 分割矩阵 题目描述 将一个a\\*b的数字矩阵进行如下分割：将原矩阵沿某一条直线分割成两个矩阵，再将生成的两个矩阵继续如此分割（当然也可以只分割其中的一个），这样分割了（n-1)次后，原矩阵被分割成了n个矩阵。（每次分割都只能沿着数字间的缝隙进行） 原矩阵中每一位置上有一个分值，一个矩阵的总分为其所含各位置上分值之和。现在需要把矩阵按上述规则分割成n个矩阵，并使各矩阵总分的均方差最小。 请编程对给出的矩阵及n，求出均方差的最小值。 输入输出格式 输入格式 第一行为3个整数，表示a,b,n(1<a,b<=10,1<n<=10）的值。 第二行至第n+1行每行为b个小于100的非负整数，表示矩阵中相应位置上的分值。每行相邻两数之间用一个空格分开。 输出格式 仅一个数，为均方差的最小值（四舍五入精确到小数点后2位） 输入输出样例 输入样例 #1 5 4 4  2 3 4 6  5 7 5 1  10 4 0 5  2 0 2 3  4 1 1 1  输出样例 #1 0.50"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[HAOI2007] 覆盖问题 题目描述 某人在山上种了 N 棵小树苗。冬天来了，温度急速下降，小树苗脆弱得不堪一击，于是树主人想用一些塑料薄膜把这些小树遮盖起来，经过一番长久的思考，他决定 用 3 个 $L \\times L$ 的正方形塑料薄膜将小树遮起来。我们不妨将山建立一个平面直角坐标系，设第 i 棵小树的坐标为 $(X_i,Y_i)$ ，3 个 $L \\times L$ 的正方形的边要求平行于坐标轴，一个点如果在正方形的边界上，也算作被覆盖。当然，我们希望塑料薄膜面积越小越好，即求 L 最小值。 输入输出格式 输入格式 接下来有 N 行，第 $i+1$ 行有 2 个整数 $X_i,Y_i$，表示第 i 棵树的坐标，保证不会有 2 个树的坐标相同。 输出格式 一行，输出最小的 L 值。 输入输出样例 输入样例 #1 4  0 1  0 -1  1 0  -1 0  输出样例 #1 1 说明 对于 $100\\%$ 的数据，$-1,000,000,000 \\le X_i,Y_i \\le 1,000,000,000。$ 对于 $30\\%$ 的数据，$N \\le 100。$ 对于 $50\\%$ 的数据，$N \\le 2000。$ 对于 $100\\%$ 的数据，$N \\le 20000。$"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[HAOI2007] 修筑绿化带 题目描述 为了增添公园的景致，现在需要在公园中修筑一个花坛，同时在花坛四周修建一片绿化带，让花坛被绿化带围起来。 如果把公园看成一个 $M\\times N$ 的矩形，那么花坛可以看成一个 $C\\times D$ 的矩形，绿化带和花坛一起可以看成一个 $A\\times B$ 的矩形。 如果将花园中的每一块土地的“肥沃度”定义为该块土地上每一个小块肥沃度之和，那么，绿化带的肥沃度为 $A\\times B$ 块的肥沃度减去 $C\\times D$ 块的肥沃度。 为了使得绿化带的生长得旺盛，我们希望绿化带的肥沃度最大。 输入输出格式 输入格式 第一行有六个正整数 $M,N,A,B,C,D$。 接下来一个 $M\\times N$ 的数字矩阵，其中矩阵的第 i 行 j 列元素为一个整数 $x_{i,j}$，表示该花园的第 i 行第 j 列的土地 “肥沃度”。 输出格式 一个正整数，表示绿化带的最大肥沃程度。 输入输出样例 输入样例 #1 4 5 4 4 2 2 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 输出样例 #1 132 说明 对于 $30\\%$ 的数据，$1\\leq M,N\\leq 50$。 对于 $100\\%$ 的数据，$1\\leq M,N\\leq 1000，1\\leq A\\leq M，1\\leq B\\leq N，1\\leq C\\leq A-2，1\\leq D\\leq B-2，1\\leq x_{i,j}\\leq 100$。"}
{"content": "请出一道编程算法题目，只出题干，不包括解题过程,格式一致","summary": "题目名称:[HAOI2012] 容易题 题目描述 为了使得大家高兴，小Q特意出个自认为的简单题（easy）来满足大家，这道简单题是描述如下： 有一个数列A已知对于所有的A[i]都是1~n的自然数，并且知道对于一些A[i]不能取哪些值，我们定义一个数列的积为该数列所有元素的乘积，要求你求出所有可能的数列的积的和 mod 1000000007的值，是不是很简单呢？呵呵！ 输入输出格式 输入格式 第一行三个整数n,m,k分别表示数列元素的取值范围，数列元素个数，以及已知的限制条数。 接下来k行，每行两个正整数x,y表示A[x]的值不能是y。 输出格式 一行一个整数表示所有可能的数列的积的和对1000000007取模后的结果。如果一个合法的数列都没有，答案输出0。 输入输出样例 输入样例 #1 3 4 5  1 1  1 1  2 2  2 3  4 3  输出样例 #1 90 说明 样例解释 A[1]不能取1 A[2]不能去2、3 A[4]不能取3 所以可能的数列有以下12种 数列      积 2 1 1 1     2 2 1 1 2     4 2 1 2 1     4 2 1 2 2     8 2 1 3 1     6 2 1 3 2     12 3 1 1 1     3 3 1 1 2     6 3 1 2 1     6 3 1 2 2     12 3 1 3 1     9 3 1 3 2     18"}
